package citizenfx
func (_client) Absf(value float64) float64 {
	return 0.0
}

func (_client) Absi(value float64) float64 {
	return 0.0
}

func (_client) Acos(p0 float64) float64 {
	return 0.0
}

func (_client) ActivateAudioSlowmoMode(p0 string) {}
func (_client) N_0xd01005d2ba2eb778(p0 string) {}

func (_client) ActivateDamageTrackerOnNetworkId(netID float64, toggle bool) {}

func (_client) ActivateDamageTrackerOnPlayer(player float64, toggle bool) {}
func (_client) N_0xbec0816ff5acbcda(player float64, toggle bool) {}

/**
 * Does stuff like this:\
 * gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617\
 * Example:\
 * int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");\
 * ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);\
 * BOOL p1 is a toggle to define the game in pause.\
 * int p2 is unknown but -1 always works, not sure why though.\
 * \[30/03/2017] ins1de :\
 * the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.\
 * Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);\
 * Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.
 * Below is a list of all known Frontend Menu Hashes.
 * *   FE_MENU_VERSION_SP_PAUSE
 * *   FE_MENU_VERSION_MP_PAUSE
 * *   FE_MENU_VERSION_CREATOR_PAUSE
 * *   FE_MENU_VERSION_CUTSCENE_PAUSE
 * *   FE_MENU_VERSION_SAVEGAME
 * *   FE_MENU_VERSION_PRE_LOBBY
 * *   FE_MENU_VERSION_LOBBY
 * *   FE_MENU_VERSION_MP_CHARACTER_SELECT
 * *   FE_MENU_VERSION_MP_CHARACTER_CREATION
 * *   FE_MENU_VERSION_EMPTY
 * *   FE_MENU_VERSION_EMPTY_NO_BACKGROUND
 * *   FE_MENU_VERSION_TEXT_SELECTION
 * *   FE_MENU_VERSION_CORONA
 * *   FE_MENU_VERSION_CORONA_LOBBY
 * *   FE_MENU_VERSION_CORONA_JOINED_PLAYERS
 * *   FE_MENU_VERSION_CORONA_INVITE_PLAYERS
 * *   FE_MENU_VERSION_CORONA_INVITE_FRIENDS
 * *   FE_MENU_VERSION_CORONA_INVITE_CREWS
 * *   FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
 * *   FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
 * *   FE_MENU_VERSION_CORONA_RACE
 * *   FE_MENU_VERSION_CORONA_BETTING
 * *   FE_MENU_VERSION_JOINING_SCREEN
 * *   FE_MENU_VERSION_LANDING_MENU
 * *   FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
 */
func (_client) ActivateFrontendMenu(menuhash interface{}, togglePause bool, component float64) {}

/**
 * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
 */
func (_client) ActivateInteriorEntitySet(interior float64, entitySetName string) {}
/**
 * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
 */
func (_client) N_0x55e86af2712b36a1(interior float64, entitySetName string) {}
/**
 * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
 */
func (_client) EnableInteriorProp(interior float64, entitySetName string) {}

func (_client) ActivatePhysics(entity float64) {}

/**
 * Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 */
func (_client) ActivateRockstarEditor() {}
/**
 * Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 */
func (_client) N_0x49da8145672b2725() {}

func (_client) AddAmmoToPed(ped float64, weaponHash interface{}, ammo float64) {}

func (_client) AddAmmoToPedByType(ped float64, ammoType interface{}, ammo float64) {}
func (_client) N_0x2472622ce1f2d45f(ped float64, ammoType interface{}, ammo float64) {}
func (_client) AddPedAmmo(ped float64, ammoType interface{}, ammo float64) {}

/**
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
 */
func (_client) AddArmourToPed(ped float64, amount float64) {}

/**
 * Adds an output for the specified audio submix.
 * @param submixId The input submix.
 * @param outputSubmixId The output submix. Use `0` for the master game submix.
 */
func (_client) AddAudioSubmixOutput(submixId float64, outputSubmixId float64) {}

/**
 * Adds a rectangular blip for the specified coordinates/area.
 * It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
 * By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.
 * Example image:
 * ![minimap](https://w.wew.wtf/pdcjig.png)
 * ![big map](https://w.wew.wtf/zgcjcm.png)
 * (Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
 * @param x The X coordinate of the center of the blip.
 * @param y The Y coordinate of the center of the blip.
 * @param z The Z coordinate of the center of the blip.
 * @param width The width of the blip.
 * @param height The height of the blip.
 * @return A handle to the blip.
 */
func (_client) AddBlipForArea(x float64, y float64, z float64, width float64, height float64) float64 {
	return 0.0
}
/**
 * Adds a rectangular blip for the specified coordinates/area.
 * It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
 * By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.
 * Example image:
 * ![minimap](https://w.wew.wtf/pdcjig.png)
 * ![big map](https://w.wew.wtf/zgcjcm.png)
 * (Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
 * @param x The X coordinate of the center of the blip.
 * @param y The Y coordinate of the center of the blip.
 * @param z The Z coordinate of the center of the blip.
 * @param width The width of the blip.
 * @param height The height of the blip.
 * @return A handle to the blip.
 */
func (_client) N_0xce5d0e5e315db238(x float64, y float64, z float64, width float64, height float64) float64 {
	return 0.0
}

/**
 * Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
 * @param x The X coordinate to create the blip on.
 * @param y The Y coordinate.
 * @param z The Z coordinate.
 * @return A blip handle.
 */
func (_client) AddBlipForCoord(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * Returns red ( default ) blip attached to entity.
 * Example:
 * Blip blip; //Put this outside your case or option
 * blip = HUD::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);
 * HUD::SET_BLIP_AS_FRIENDLY(blip, true);
 */
func (_client) AddBlipForEntity(entity float64) float64 {
	return 0.0
}

func (_client) AddBlipForPickup(pickup float64) float64 {
	return 0.0
}

func (_client) AddBlipForRadius(posX float64, posY float64, posZ float64, radius float64) float64 {
	return 0.0
}

/**
 * I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
 * p8 big values ~100 will slow down the camera movement before reaching this node
 * p9 != 0 seems to override the rotation/pitch (bool?)
 */
func (_client) AddCamSplineNode(camera float64, x float64, y float64, z float64, xRot float64, yRot float64, zRot float64, length float64, p8 float64, transitionType float64) {}

func (_client) AddCamSplineNodeUsingCamera(cam float64, cam2 float64, p2 float64, p3 float64) {}
func (_client) N_0x0fb82563989cf4fb(cam float64, cam2 float64, p2 float64, p3 float64) {}

func (_client) AddCamSplineNodeUsingCameraFrame(cam float64, cam2 float64, p2 float64, p3 float64) {}
func (_client) N_0x0a9f2a468b328e74(cam float64, cam2 float64, p2 float64, p3 float64) {}

func (_client) AddCamSplineNodeUsingGameplayFrame(cam float64, p1 float64, p2 float64) {}
func (_client) N_0x609278246a29ca34(cam float64, p1 float64, p2 float64) {}

func (_client) AddCoverBlockingArea(playerX float64, playerY float64, playerZ float64, radiusX float64, radiusY float64, radiusZ float64, p6 bool, p7 bool, p8 bool, p9 bool) {}

func (_client) AddCoverPoint(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 bool) float64 {
	return 0.0
}

/**
 * Most likely ADD_CURRENT_*
 */
func (_client) AddCurrentRise(xLow float64, yLow float64, xHigh float64, yHigh float64, height float64) float64 {
	return 0.0
}
/**
 * Most likely ADD_CURRENT_*
 */
func (_client) N_0xfdbf4cdbc07e1706(xLow float64, yLow float64, xHigh float64, yHigh float64, height float64) float64 {
	return 0.0
}

/**
 * decal types:
 * public enum DecalTypes
 * {
 * splatters_blood = 1010,
 * splatters_blood_dir = 1015,
 * splatters_blood_mist = 1017,
 * splatters_mud = 1020,
 * splatters_paint = 1030,
 * splatters_water = 1040,
 * splatters_water_hydrant = 1050,
 * splatters_blood2 = 1110,
 * weapImpact_metal = 4010,
 * weapImpact_concrete = 4020,
 * weapImpact_mattress = 4030,
 * weapImpact_mud = 4032,
 * weapImpact_wood = 4050,
 * weapImpact_sand = 4053,
 * weapImpact_cardboard = 4040,
 * weapImpact_melee_glass = 4100,
 * weapImpact_glass_blood = 4102,
 * weapImpact_glass_blood2 = 4104,
 * weapImpact_shotgun_paper = 4200,
 * weapImpact_shotgun_mattress,
 * weapImpact_shotgun_metal,
 * weapImpact_shotgun_wood,
 * weapImpact_shotgun_dirt,
 * weapImpact_shotgun_tvscreen,
 * weapImpact_shotgun_tvscreen2,
 * weapImpact_shotgun_tvscreen3,
 * weapImpact_melee_concrete = 4310,
 * weapImpact_melee_wood = 4312,
 * weapImpact_melee_metal = 4314,
 * burn1 = 4421,
 * burn2,
 * burn3,
 * burn4,
 * burn5,
 * bang_concrete_bang = 5000,
 * bang_concrete_bang2,
 * bang_bullet_bang,
 * bang_bullet_bang2 = 5004,
 * bang_glass = 5031,
 * bang_glass2,
 * solidPool_water = 9000,
 * solidPool_blood,
 * solidPool_oil,
 * solidPool_petrol,
 * solidPool_mud,
 * porousPool_water,
 * porousPool_blood,
 * porousPool_oil,
 * porousPool_petrol,
 * porousPool_mud,
 * porousPool_water_ped_drip,
 * liquidTrail_water = 9050
 * }
 */
func (_client) AddDecal(decalType float64, posX float64, posY float64, posZ float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, width float64, height float64, rCoef float64, gCoef float64, bCoef float64, opacity float64, timeout float64, p17 bool, p18 bool, p19 bool) float64 {
	return 0.0
}

/**
 * To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#\_0x264AC28B01B353A5).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) AddDispatchSpawnBlockingAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) float64 {
	return 0.0
}
/**
 * To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#\_0x264AC28B01B353A5).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) N_0x918c7b2d2ff3928b(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) float64 {
	return 0.0
}

func (_client) AddDispatchSpawnBlockingArea(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}
func (_client) N_0x2d4259f1feb81da9(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}

/**
 * p5 only set to true in single player native scripts. Door hashes normally look like `PROP_[int]_DOOR_[int]` for interior doors and `PROP_BUILDING_[int]_DOOR_[int]` exterior doors but you can just make up your own hash if you want.
 * If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
 * A simple "localized" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53), [DOOR_SYSTEM_SET_OPEN_RATIO](#\_0xB6E6FBA95C7324AC), [DOOR_SYSTEM_SET_HOLD_OPEN](#\_0xD9B71952F78A2640), etc.
 * @param doorHash A (unique) door system identifier
 * @param modelHash Entity model hash
 * @param x The X coordinate of the door object
 * @param y The Y coordinate of the door object
 * @param z The Z coordinate of the door object
 * @param scriptDoor false; relies upon getNetworkGameScriptHandler.
 * @param isLocal On true disables the creation `CRequestDoorEvent's` in [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53).
 */
func (_client) AddDoorToSystem(doorHash interface{}, modelHash interface{}, x float64, y float64, z float64, p5 bool, scriptDoor bool, isLocal bool) {}

/**
 * Example:
 * GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");
 * I tried this and nothing happened...
 */
func (_client) AddEntityIcon(entity float64, icon string) float64 {
	return 0.0
}

/**
 * All found occurrences in b678d:
 * pastebin.com/ceu67jz8
 */
func (_client) AddEntityToAudioMixGroup(entity float64, groupName string, p2 float64) {}
/**
 * All found occurrences in b678d:
 * pastebin.com/ceu67jz8
 */
func (_client) N_0x153973ab99fe8980(entity float64, groupName string, p2 float64) {}
/**
 * All found occurrences in b678d:
 * pastebin.com/ceu67jz8
 */
func (_client) DynamicMixerRelatedFn(entity float64, groupName string, p2 float64) {}

/**
 * NativeDB Added Parameter 9: BOOL noDamage
 * ```
 * ```
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 * BOOL noDamage = false: damage || nodamage = true: no damage
 * ```
 * ```cpp
 * enum class eExplosionTag : uint32_t
 * {
 * DONTCARE = 0xFFFFFFFF,
 * GRENADE = 0,
 * GRENADELAUNCHER = 1,
 * STICKYBOMB = 2,
 * MOLOTOV = 3,
 * ROCKET = 4,
 * TANKSHELL = 5,
 * HI_OCTANE = 6,
 * CAR = 7,
 * PLANE = 8,
 * PETROL_PUMP = 9,
 * BIKE = 10,
 * DIR_STEAM = 11,
 * DIR_FLAME = 12,
 * DIR_WATER_HYDRANT = 13,
 * DIR_GAS_CANISTER = 14,
 * BOAT = 15,
 * SHIP_DESTROY = 16,
 * TRUCK = 17,
 * BULLET = 18,
 * SMOKEGRENADELAUNCHER = 19,
 * SMOKEGRENADE = 20,
 * BZGAS = 21,
 * FLARE = 22,
 * GAS_CANISTER = 23,
 * EXTINGUISHER = 24,
 * _0x988620B8 = 25,
 * EXP_TAG_TRAIN = 26,
 * EXP_TAG_BARREL = 27,
 * EXP_TAG_PROPANE = 28,
 * EXP_TAG_BLIMP = 29,
 * EXP_TAG_DIR_FLAME_EXPLODE = 30,
 * EXP_TAG_TANKER = 31,
 * PLANE_ROCKET = 32,
 * EXP_TAG_VEHICLE_BULLET = 33,
 * EXP_TAG_GAS_TANK = 34,
 * EXP_TAG_BIRD_CRAP = 35,
 * EXP_TAG_RAILGUN = 36,
 * EXP_TAG_BLIMP2 = 37,
 * EXP_TAG_FIREWORK = 38,
 * EXP_TAG_SNOWBALL = 39,
 * EXP_TAG_PROXMINE = 40,
 * EXP_TAG_VALKYRIE_CANNON = 41,
 * EXP_TAG_AIR_DEFENCE = 42,
 * EXP_TAG_PIPEBOMB = 43,
 * EXP_TAG_VEHICLEMINE = 44,
 * EXP_TAG_EXPLOSIVEAMMO = 45,
 * EXP_TAG_APCSHELL = 46,
 * EXP_TAG_BOMB_CLUSTER = 47,
 * EXP_TAG_BOMB_GAS = 48,
 * EXP_TAG_BOMB_INCENDIARY = 49,
 * EXP_TAG_BOMB_STANDARD = 50,
 * EXP_TAG_TORPEDO = 51,
 * EXP_TAG_TORPEDO_UNDERWATER = 52,
 * EXP_TAG_BOMBUSHKA_CANNON = 53,
 * EXP_TAG_BOMB_CLUSTER_SECONDARY = 54,
 * EXP_TAG_HUNTER_BARRAGE = 55,
 * EXP_TAG_HUNTER_CANNON = 56,
 * EXP_TAG_ROGUE_CANNON = 57,
 * EXP_TAG_MINE_UNDERWATER = 58,
 * EXP_TAG_ORBITAL_CANNON = 59,
 * EXP_TAG_BOMB_STANDARD_WIDE = 60,
 * EXP_TAG_EXPLOSIVEAMMO_SHOTGUN = 61,
 * EXP_TAG_OPPRESSOR2_CANNON = 62,
 * EXP_TAG_MORTAR_KINETIC = 63,
 * EXP_TAG_VEHICLEMINE_KINETIC = 64,
 * EXP_TAG_VEHICLEMINE_EMP = 65,
 * EXP_TAG_VEHICLEMINE_SPIKE = 66,
 * EXP_TAG_VEHICLEMINE_SLICK = 67,
 * EXP_TAG_VEHICLEMINE_TAR = 68,
 * EXP_TAG_SCRIPT_DRONE = 69,
 * EXP_TAG_RAYGUN = 70,
 * EXP_TAG_BURIEDMINE = 71,
 * EXP_TAG_SCRIPT_MISSILE = 72,
 * EXP_TAG_RCTANK_ROCKET = 73,
 * EXP_TAG_BOMB_WATER = 74,
 * EXP_TAG_BOMB_WATER_SECONDARY = 75,
 * _0xF728C4A9 = 76,
 * _0xBAEC056F = 77,
 * EXP_TAG_FLASHGRENADE = 78,
 * EXP_TAG_STUNGRENADE = 79,
 * _0x763D3B3B = 80,
 * EXP_TAG_SCRIPT_MISSILE_LARGE = 81,
 * EXP_TAG_SUBMARINE_BIG = 82,
 * };
 */
func (_client) AddExplosion(x float64, y float64, z float64, explosionType float64, damageScale float64, isAudible bool, isInvisible bool, cameraShake float64) {}

func (_client) AddExplosionWithUserVfx(x float64, y float64, z float64, explosionType float64, explosionFx interface{}, damageScale float64, isAudible bool, isInvisible bool, cameraShake float64) {}
func (_client) AddSpecfxExplosion(x float64, y float64, z float64, explosionType float64, explosionFx interface{}, damageScale float64, isAudible bool, isInvisible bool, cameraShake float64) {}

/**
 * Returns the index of the newly created hospital spawn point.
 * p3 might be radius?
 */
func (_client) AddHospitalRestart(x float64, y float64, z float64, p3 float64, p4 float64) float64 {
	return 0.0
}

/**
 * NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
 * _GET_TEXT_SUBSTRING and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if it's 'z'. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.
 * p0 is -1, 0 - 35
 * p1 is a char or string (whatever you wanna call it)
 * p2 is Global 10597 + i * 6. 'i' is a while(i < 70) loop
 * p3 is again -1, 0 - 35
 * p4 is again -1, 0 - 35
 * p5 is either 0 or 1 (bool ?)
 * p6 is either 0 or 1 (The func to determine this is bool)
 * p7 is either 0 or 1 (The func to determine this is bool)
 * p8 is either 0 or 1 (The func to determine this is bool)
 * p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
 * p10 is either 0 or 1 (The func to determine this is bool)
 * p11 is either 0 or 1 (The func to determine this is bool)
 * p12 is unknown as in TU27 X360 scripts it only goes to p11.
 */
func (_client) AddLineToConversation(index float64, p1 string, p2 string, p3 float64, p4 float64, p5 bool, p6 bool, p7 bool, p8 bool, p9 float64, p10 bool, p11 bool, p12 bool) {}

/**
 * Loads a minimap overlay from a GFx file in the current resource.
 * @param name The path to a `.gfx` file in the current resource. It has to be specified as a `file`.
 * @return A minimap overlay ID.
 */
func (_client) AddMinimapOverlay(name string) float64 {
	return 0.0
}

func (_client) AddModelToCreatorBudget(modelHash interface{}) bool;
func (_client) N_0x0bc3144deb678666(modelHash interface{}) bool;

/**
 * Creates a navmesh blocking object, vehicles will avoid driving through this area.
 * Only 32 blocking objects may exist at a given time and must be manually managed. See [`REMOVE_NAVMESH_BLOCKING_OBJECT`](#\_0x46399A7895957C0E) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/)
 * @param x The x coordinate to create the block on.
 * @param y The y coordinate.
 * @param z The z coordinate.
 * @param width The width of the block.
 * @param length The length of the block.
 * @param height The height of the block.
 * @param heading The heading of object in degrees.
 * @param p7 Usually false.
 * @param p8 A bitfield; usually 7.
 */
func (_client) AddNavmeshBlockingObject(x float64, y float64, z float64, width float64, length float64, height float64, heading float64, p7 bool, p8 float64) float64 {
	return 0.0
}

func (_client) AddNavmeshRequiredRegion(x float64, y float64, radius float64) {}

func (_client) AddNextMessageToPreviousBriefs(p0 bool) {}

func (_client) AddOwnedExplosion(ped float64, x float64, y float64, z float64, explosionType float64, damageScale float64, isAudible bool, isInvisible bool, cameraShake float64) {}

func (_client) AddPatrolRouteLink(p0 float64, p1 float64) {}

/**
 * Example:
 * TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);
 * p0 is between 0 and 4 in the scripts.
 * p1 is "WORLD_HUMAN_GUARD_STAND" or "StandGuard".
 * p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates.
 * Examples:
 * TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_739[7 -- [[3]] ], 0.0, 0.0, 0.0, 0);
 * TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_B0[17 -- [[44]] ]._f3, l_B0[17 -- [[44]] ]._f3, 2000);
 * p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.
 * p8 is an int, often random set to for example: MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000).
 */
func (_client) AddPatrolRouteNode(p0 float64, p1 string, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p8 float64) {}

/**
 * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
 * collection - PedDecorationCollection filename hash
 * overlay - Item name hash
 * Example:
 * Entry inside "mpbeach_overlays.xml" -
 * <Item>
 * <uvPos x="0.500000" y="0.500000" />
 * <scale x="0.600000" y="0.500000" />
 * <rotation value="0.000000" />
 * <nameHash>FM_Hair_Fuzz</nameHash>
 * <txdHash>mp_hair_fuzz</txdHash>
 * <txtHash>mp_hair_fuzz</txtHash>
 * <zone>ZONE_HEAD</zone>
 * <type>TYPE_TATTOO</type>
 * <faction>FM</faction>
 * <garment>All</garment>
 * <gender>GENDER_DONTCARE</gender>
 * <award />
 * <awardLevel />
 * </Item>
 * Code:
 * PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
 */
func (_client) AddPedDecorationFromHashes(ped float64, collection interface{}, overlay interface{}) {}
/**
 * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
 * collection - PedDecorationCollection filename hash
 * overlay - Item name hash
 * Example:
 * Entry inside "mpbeach_overlays.xml" -
 * <Item>
 * <uvPos x="0.500000" y="0.500000" />
 * <scale x="0.600000" y="0.500000" />
 * <rotation value="0.000000" />
 * <nameHash>FM_Hair_Fuzz</nameHash>
 * <txdHash>mp_hair_fuzz</txdHash>
 * <txtHash>mp_hair_fuzz</txtHash>
 * <zone>ZONE_HEAD</zone>
 * <type>TYPE_TATTOO</type>
 * <faction>FM</faction>
 * <garment>All</garment>
 * <gender>GENDER_DONTCARE</gender>
 * <award />
 * <awardLevel />
 * </Item>
 * Code:
 * PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
 */
func (_client) ApplyPedOverlay(ped float64, collection interface{}, overlay interface{}) {}
/**
 * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
 * collection - PedDecorationCollection filename hash
 * overlay - Item name hash
 * Example:
 * Entry inside "mpbeach_overlays.xml" -
 * <Item>
 * <uvPos x="0.500000" y="0.500000" />
 * <scale x="0.600000" y="0.500000" />
 * <rotation value="0.000000" />
 * <nameHash>FM_Hair_Fuzz</nameHash>
 * <txdHash>mp_hair_fuzz</txdHash>
 * <txtHash>mp_hair_fuzz</txtHash>
 * <zone>ZONE_HEAD</zone>
 * <type>TYPE_TATTOO</type>
 * <faction>FM</faction>
 * <garment>All</garment>
 * <gender>GENDER_DONTCARE</gender>
 * <award />
 * <awardLevel />
 * </Item>
 * Code:
 * PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
 */
func (_client) SetPedDecoration(ped float64, collection interface{}, overlay interface{}) {}

func (_client) AddPedDecorationFromHashesInCorona(ped float64, collection interface{}, overlay interface{}) {}
func (_client) N_0x5619bfa07cfd7833(ped float64, collection interface{}, overlay interface{}) {}
func (_client) SetPedFacialDecoration(ped float64, collection interface{}, overlay interface{}) {}

/**
 * 4 calls in the b617d scripts. The only one with p0 and p2 in clear text:
 * AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, "DINAPOLI");
 * =================================================
 * One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
 */
func (_client) AddPedToConversation(index float64, ped float64, p2 string) {}

func (_client) AddPetrolDecal(x float64, y float64, z float64, groundLvl float64, width float64, transparency float64) float64 {
	return 0.0
}

func (_client) AddPetrolTrailDecalInfo(x float64, y float64, z float64, p3 float64) {}
func (_client) N_0x967278682cb6967a(x float64, y float64, z float64, p3 float64) {}

func (_client) AddPickupToInteriorRoomByName(pickup float64, roomName string) {}

func (_client) AddPointToGpsCustomRoute(x float64, y float64, z float64) {}
func (_client) N_0x311438a071dd9b1a(x float64, y float64, z float64) {}

func (_client) AddPointToGpsMultiRoute(x float64, y float64, z float64) {}
func (_client) N_0xa905192a6781c41b(x float64, y float64, z float64) {}

func (_client) AddPoliceRestart(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 10: BOOL p9
 */
func (_client) AddPopMultiplierArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p6 float64, p7 float64, p8 bool) float64 {
	return 0.0
}
/**
 * NativeDB Added Parameter 10: BOOL p9
 */
func (_client) N_0x67f6413d3220e18d(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p6 float64, p7 float64, p8 bool) float64 {
	return 0.0
}

/**
 * This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
 */
func (_client) AddPopMultiplierSphere(x float64, y float64, z float64, radius float64, pedMultiplier float64, vehicleMultiplier float64, p6 bool, p7 bool) float64 {
	return 0.0
}
/**
 * This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
 */
func (_client) N_0x32c7a7e8c43a1f80(x float64, y float64, z float64, radius float64, pedMultiplier float64, vehicleMultiplier float64, p6 bool, p7 bool) float64 {
	return 0.0
}

/**
 * Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
 */
func (_client) AddRelationshipGroup(name string, groupHash float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Experimental natives, please do not use in a live environment.
 */
func (_client) AddReplaceTexture(origTxd string, origTxn string, newTxd string, newTxn string) {}

func (_client) AddReplayStatValue(value float64) {}
func (_client) N_0x69fe6dc87bd2a5e9(value float64) {}

func (_client) AddRoadNodeSpeedZone(x float64, y float64, z float64, radius float64, speed float64, p5 bool) float64 {
	return 0.0
}
func (_client) N_0x2ce544c68fb812a0(x float64, y float64, z float64, radius float64, speed float64, p5 bool) float64 {
	return 0.0
}
func (_client) AddSpeedZoneForCoord(x float64, y float64, z float64, radius float64, speed float64, p5 bool) float64 {
	return 0.0
}

/**
 * Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
 * __
 * Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
 * Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
 * @param x Spawn coordinate X component.
 * @param y Spawn coordinate Y component.
 * @param z Spawn coordinate Z component.
 * @param rotX Rotation X component.
 * @param rotY Rotation Y component.
 * @param rotZ Rotation Z component.
 * @param maxLength The maximum length the rope can droop.
 * @param ropeType 1 to 4 are thick ropes. 5 and up are thin ropes. Ropes types defined in ropedata.xml. An invalid rope type such as 0 will crash the game.
 * @param initLength The initial length of the rope.
 * @param minLength The minimum length the rope can be.
 * @param lengthChangeRate The speed in which the rope will wind if winding is started.
 * @param collisionOn Whether the rope should have collision. In original scripts this is followed by a LoadRopeData call when set.
 * @param lockFromFront If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
 * @param timeMultiplier The speed as which physics should run at. 1.0f is normal, 2.0f is twice as fast, -1.0f is time going backwards. This can affect gravity, etc.
 * @param breakable Whether shooting the rope will break it.
 * @param unkPtr Unknown pointer, always 0 in original scrips.
 * @return A script handle for the rope
 */
func (_client) AddRope(x float64, y float64, z float64, rotX float64, rotY float64, rotZ float64, maxLength float64, ropeType float64, initLength float64, minLength float64, lengthChangeRate float64, onlyPPU bool, collisionOn bool, lockFromFront bool, timeMultiplier float64, breakable bool, unkPtr float64) (float64, float64) { return 0.0, 0.0 };

func (_client) AddScenarioBlockingArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p6 bool, p7 bool, p8 bool, p9 bool) float64 {
	return 0.0
}

/**
 * BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);
 * - Nacorpio
 * -----
 * Hardcoded to not work in Multiplayer.
 */
func (_client) AddScriptToRandomPed(name string, model interface{}, p2 float64, p3 float64) {}

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 */
func (_client) AddShockingEventAtPosition(eventType float64, x float64, y float64, z float64, duration float64) float64 {
	return 0.0
}

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 */
func (_client) AddShockingEventForEntity(eventType float64, entity float64, duration float64) float64 {
	return 0.0
}

/**
 * Adds a handler for changes to a state bag.
 * The function called expects to match the following signature:
 * ```ts
 * function StateBagChangeHandler(bagName string, key string, value: any, reserved float64, replicated bool);
 * ```
 * *   **bagName**: The internal bag ID for the state bag which changed. This is usually `player:Source`, `entity:NetID`
 * or `localEntity:Handle`.
 * *   **key**: The changed key.
 * *   **value**: The new value stored at key. The old value is still stored in the state bag at the time this callback executes.
 * *   **reserved**: Currently unused.
 * *   **replicated**: Whether the set is meant to be replicated.
 * At this time, the change handler can't opt to reject changes.
 * @param keyFilter The key to check for, or null.
 * @param bagFilter The bag ID to check for, or null.
 * @param handler The handler function.
 * @return A cookie to remove the change handler.
 */
func (_client) AddStateBagChangeHandler(keyFilter string, bagFilter string,handler js.Func) float64 {
	return 0.0
}

/**
 * See description of [`ADD_STUNT_JUMP_ANGLED`](#\_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
 * @param x1 Jump entry left far bottom corner coordinate X.
 * @param y1 Jump entry left far bottom corner coordinate Y.
 * @param z1 Jump entry left far bottom corner coordinate Z.
 * @param x2 Jump entry right near top corner coordinate X.
 * @param y2 Jump entry right near top corner coordinate Y.
 * @param z2 Jump entry right near top corner coordinate Z.
 * @param x3 Landing zone end coordinate X.
 * @param y3 Landing zone end coordinate Y.
 * @param z3 Landing zone end coordinate Z.
 * @param x4 Landing zone start coordinate X.
 * @param y4 Landing zone start coordinate Y.
 * @param z4 Landing zone start coordinate Z.
 * @param camX Stuntcam (cinematic) coordinate x.
 * @param camY Stuntcam (cinematic) coordinate y.
 * @param camZ Stuntcam (cinematic) coordinate z.
 * @param unk1 Unknown, always 150.
 * @param unk2 Unknown, always 0.
 * @param unk3 Unknown, always 0.
 * @return The ID of the stunt jump that was added.
 */
func (_client) AddStuntJump(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64, x4 float64, y4 float64, z4 float64, camX float64, camY float64, camZ float64, unk1 float64, unk2 float64, unk3 float64) float64 {
	return 0.0
}

/**
 * Creates a new stunt jump.
 * The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP\_**ANGLED**.
 * Info about the specific 'parameter sections':
 * **x1, y1, z1, x2, y2, z2 and radius1:**
 * First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
 * **x3, y3, z3, x4, y4, z4 and radius2:**
 * Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
 * **camX, camY and camZ:**
 * The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
 * **unk1, unk2 and unk3:**
 * Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
 * Visualized example in-game:
 * ![](https://d.fivem.dev/2019-03-15\_18-24\_c7802\_846.png)
 * Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
 * @param x1 Entry zone bottom left corner x.
 * @param y1 Entry zone bottom left corner y.
 * @param z1 Entry zone bottom left corner z.
 * @param x2 Entry zone top right corner x.
 * @param y2 Entry zone top right corner y.
 * @param z2 Entry zone top right corner z.
 * @param radius1 Probably a "feather" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.
 * @param x3 Landing zone start corner coordinate x.
 * @param y3 Landing zone start corner coordinate y.
 * @param z3 Landing zone start corner coordinate z.
 * @param x4 Landing zone end corner coordinate x.
 * @param y4 Landing zone end corner coordinate y.
 * @param z4 Landing zone end corner coordinate z.
 * @param radius2 Probably a "feather" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.
 * @param camX Stunt (cinematic) camera x position.
 * @param camY Stunt (cinematic) camera y position.
 * @param camZ Stunt (cinematic) camera z position.
 * @param unk1 always 150
 * @param unk2 always 0
 * @param unk3 always 0
 * @return The ID of the stuntjump that was created.
 */
func (_client) AddStuntJumpAngled(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius1 float64, x3 float64, y3 float64, z3 float64, x4 float64, y4 float64, z4 float64, radius2 float64, camX float64, camY float64, camZ float64, unk1 float64, unk2 float64, unk3 float64) float64 {
	return 0.0
}

/**
 * Adds a point related to CTacticalAnalysis
 */
func (_client) AddTacticalAnalysisPoint(x float64, y float64, z float64) {}
/**
 * Adds a point related to CTacticalAnalysis
 */
func (_client) N_0xb8721407ee9c3ff6(x float64, y float64, z float64) {}

func (_client) AddTcmodifierOverride(modifierName1 string, modifierName2 string) {}
func (_client) N_0x1a8e2c8b9cf4549c(modifierName1 string, modifierName2 string) {}

/**
 * Adds a float to a text component placeholder, replacing `~1~` in the current text command's text label.
 * ![Example output](https://i.imgur.com/jvuQ0II.png)
 * @param value The number to substitute in the label.
 * @param decimalPlaces How many decimal places to add
 */
func (_client) AddTextComponentFloat(value float64, decimalPlaces float64) {}

func (_client) AddTextComponentFormattedInteger(value float64, commaSeparated bool) {}
func (_client) N_0x0e4c749ff9de9cc4(value float64, commaSeparated bool) {}

func (_client) AddTextComponentInteger(value float64) {}

func (_client) AddTextComponentSubstringBlipName(blip float64) {}
func (_client) N_0x80ead8e2e1d5d52e(blip float64) {}

func (_client) AddTextComponentSubstringKeyboardDisplay(_string string) {}
func (_client) AddTextComponentString3(_string string) {}
func (_client) AddTextComponentScaleform(_string string) {}

/**
 * p1 was always -1
 */
func (_client) AddTextComponentSubstringPhoneNumber(p0 string, p1 float64) {}
/**
 * p1 was always -1
 */
func (_client) N_0x761b77454205a61d(p0 string, p1 float64) {}
/**
 * p1 was always -1
 */
func (_client) AddTextComponentAppTitle(p0 string, p1 float64) {}

/**
 * Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
 * See the documentation on text formatting for more information.
 * @param text A string to add of up to 99 characters. This can contain additional `~` formatting directives.
 */
func (_client) AddTextComponentSubstringPlayerName(text string) {}
/**
 * Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
 * See the documentation on text formatting for more information.
 * @param text A string to add of up to 99 characters. This can contain additional `~` formatting directives.
 */
func (_client) AddTextComponentString(text string) {}

func (_client) AddTextComponentSubstringTextLabel(labelName string) {}
func (_client) AddTextComponentItemString(labelName string) {}

/**
 * It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
 */
func (_client) AddTextComponentSubstringTextLabelHashKey(gxtEntryHash interface{}) {}
/**
 * It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
 */
func (_client) N_0x17299b63c7683a2b(gxtEntryHash interface{}) {}

/**
 * Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
 */
func (_client) AddTextComponentSubstringTime(timestamp float64, flags float64) {}

/**
 * This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
 */
func (_client) AddTextComponentSubstringWebsite(website string) {}
/**
 * This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
 */
func (_client) AddTextComponentString2(website string) {}

func (_client) AddTextEntry(entryKey string, entryText string) {}

func (_client) AddTextEntryByHash(entryKey interface{}, entryText string) {}

func (_client) AddToClockTime(hours float64, minutes float64, seconds float64) {}

func (_client) AddToItemset(p0 float64, p1 float64) bool;

func (_client) AddVehicleCombatAngledAvoidanceArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}
func (_client) N_0x54b0f614960f4a5f(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}
func (_client) AddVehicleCombatAvoidanceArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}

/**
 * boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
 */
func (_client) AddVehicleCrewEmblem(vehicle float64, ped float64, boneIndex float64, x1 float64, x2 float64, x3 float64, y1 float64, y2 float64, y3 float64, z1 float64, z2 float64, z3 float64, scale float64, p13 float64, alpha float64) bool;
/**
 * boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
 */
func (_client) AddClanDecalToVehicle(vehicle float64, ped float64, boneIndex float64, x1 float64, x2 float64, x3 float64, y1 float64, y2 float64, y3 float64, z1 float64, z2 float64, z3 float64, scale float64, p13 float64, alpha float64) bool;

func (_client) AddVehiclePhoneExplosiveDevice(vehicle float64) {}
func (_client) N_0x99ad4cccb128cbc9(vehicle float64) {}

func (_client) AddVehicleStuckCheckWithWarp(p0 float64, p1 float64, p2 float64, p3 bool, p4 bool, p5 bool, p6 float64) {}

/**
 * x, y, z: offset in world coords from some entity.
 */
func (_client) AddVehicleSubtaskAttackCoord(ped float64, x float64, y float64, z float64) {}

func (_client) AddVehicleSubtaskAttackPed(ped float64, ped2 float64) {}

func (_client) AddVehicleUpsidedownCheck(vehicle float64) {}

func (_client) AdvanceClockTimeTo(hour float64, minute float64, second float64) {}

func (_client) AllowMissionCreatorWarp(toggle bool) {}
func (_client) N_0xdea36202fc3382df(toggle bool) {}

/**
 * Allows opening the pause menu this frame, when the player is dead.
 */
func (_client) AllowPauseMenuWhenDeadThisFrame() {}
/**
 * Allows opening the pause menu this frame, when the player is dead.
 */
func (_client) N_0xcc3fdded67bcfc63() {}

func (_client) AllowPlayerSwitchAscent() {}
func (_client) N_0x8e2a065abdae6994() {}

func (_client) AllowPlayerSwitchDescent() {}
func (_client) N_0xad5fdf34b81bfe79() {}

func (_client) AllowPlayerSwitchOutro() {}
func (_client) N_0x74de2e8739086740() {}

func (_client) AllowPlayerSwitchPan() {}
func (_client) N_0x43d1680c6d19a8e9() {}

func (_client) AllowSonarBlips(toggle bool) {}
func (_client) N_0x60734cc207c9833c(toggle bool) {}

/**
 * Seems to animate the gameplay camera zoom.
 * Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);
 * will animate the camera zooming in from 1000 meters away.
 * Game scripts use it like this:
 * // Setting this to 1 prevents V key from changing zoom
 * PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);
 * // These restrict how far you can move cam up/down left/right
 * CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);
 * CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);
 * CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);
 */
func (_client) AnimateGameplayCamZoom(p0 float64, distance float64) {}

/**
 * Example from michael2 script.
 * CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);
 */
func (_client) AnimatedShakeCam(cam float64, p1 string, p2 string, p3 string, amplitude float64) {}

/**
 * CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);
 */
func (_client) AnimatedShakeScriptGlobal(p0 string, p1 string, p2 string, p3 float64) {}
/**
 * CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);
 */
func (_client) N_0xc2eae3fb8cdbed31(p0 string, p1 string, p2 string, p3 float64) {}

/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724)
 */
func (_client) AnimpostfxGetUnk(effectName string) float64 {
	return 0.0
}
/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724)
 */
func (_client) N_0xe35b38a27e8e7179(effectName string) float64 {
	return 0.0
}

/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 * @return Whether the specified effect is active
 */
func (_client) AnimpostfxIsRunning(effectName string) bool;
/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 * @return Whether the specified effect is active
 */
func (_client) GetScreenEffectIsActive(effectName string) bool;

/**
 * duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
 * if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
 */
func (_client) AnimpostfxPlay(effectName string, duration float64, looped bool) {}
/**
 * duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
 * if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
 */
func (_client) StartScreenEffect(effectName string, duration float64, looped bool) {}

/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 */
func (_client) AnimpostfxStop(effectName string) {}
/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 */
func (_client) StopScreenEffect(effectName string) {}

func (_client) AnimpostfxStopAll() {}
func (_client) StopAllScreenEffects() {}

/**
 * Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 */
func (_client) AnimpostfxStopAndDoUnk(effectName string) {}
/**
 * Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 */
func (_client) N_0xd2209be128b5418c(effectName string) {}

func (_client) AppClearBlock() {}

func (_client) AppCloseApp() {}

func (_client) AppCloseBlock() {}

func (_client) AppDataValid() bool;

func (_client) AppDeleteAppData(appName string) bool;

func (_client) AppGetDeletedFileStatus() float64 {
	return 0.0
}

func (_client) AppGetFloat(property string) float64 {
	return 0.0
}

func (_client) AppGetInt(property string) float64 {
	return 0.0
}

func (_client) AppGetString(property string) string;

func (_client) AppHasLinkedSocialClubAccount() bool;

func (_client) AppHasSyncedData(appName string) bool;

func (_client) AppSaveData() {}

/**
 * Called in the gamescripts like:
 * APP::APP_SET_APP("car");
 * APP::APP_SET_APP("dog");
 */
func (_client) AppSetApp(appName string) {}

func (_client) AppSetBlock(blockName string) {}

func (_client) AppSetFloat(property string, value float64) {}

func (_client) AppSetInt(property string, value float64) {}

func (_client) AppSetString(property string, value string) {}

/**
 * damages a ped with the given amount
 * ----
 * armorFirst means it will damage/lower the armor first before damaging the player.
 * setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) ApplyDamageToPed(ped float64, damageAmount float64, armorFirst bool) {}

/**
 * Applies a force to the specified entity.
 * **List of force types (p1)**:
 * ```
 * public enum ForceType
 * {
 * MinForce = 0,
 * MaxForceRot = 1,
 * MinForce2 = 2,
 * MaxForceRot2 = 3,
 * ForceNoRot = 4,
 * ForceRotPlusForce = 5
 * }
 * ```
 * Research/documentation on the gtaforums can be found [here](https://gtaforums.com/topic/885669-precisely-define-object-physics/) and [here](https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/).
 * @param entity The entity you want to apply a force on
 * @param forceType See native description above for a list of commonly used values
 * @param x Force amount (X)
 * @param y Force amount (Y)
 * @param z Force amount (Z)
 * @param offX Rotation/offset force (X)
 * @param offY Rotation/offset force (Y)
 * @param offZ Rotation/offset force (Z)
 * @param boneIndex (Often 0) Entity bone index
 * @param isDirectionRel (Usually false) Vector defined in local (body-fixed) coordinate frame
 * @param ignoreUpVec (Usually true)
 * @param isForceRel (Usually true) When true, force gets multiplied with the objects mass and different objects will have the same acceleration
 * @param p12 (Usually false)
 * @param p13 (Usually true)
 */
func (_client) ApplyForceToEntity(entity float64, forceType float64, x float64, y float64, z float64, offX float64, offY float64, offZ float64, boneIndex float64, isDirectionRel bool, ignoreUpVec bool, isForceRel bool, p12 bool, p13 bool) {}

/**
 * Applies a force to the specified entity.
 * **List of force types (p1)**:
 * public enum ForceType
 * {
 * MinForce = 0,
 * MaxForceRot = 1,
 * MinForce2 = 2,
 * MaxForceRot2 = 3,
 * ForceNoRot = 4,
 * ForceRotPlusForce = 5
 * }
 * Research/documentation on the gtaforums can be found here https://gtaforums.com/topic/885669-precisely-define-object-physics/) and here https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/.
 * p6/relative - makes the xyz force not relative to world coords, but to something else
 * p7/highForce - setting false will make the force really low
 */
func (_client) ApplyForceToEntityCenterOfMass(entity float64, forceType float64, x float64, y float64, z float64, p5 bool, isDirectionRel bool, isForceRel bool, p8 bool) {}

func (_client) ApplyImpulseToCloth(posX float64, posY float64, posZ float64, vecX float64, vecY float64, vecZ float64, impulse float64) {}

/**
 * Found one occurence in re_crashrescue.c4
 * PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");
 */
func (_client) ApplyPedBlood(ped float64, boneIndex float64, xRot float64, yRot float64, zRot float64, woundType string) {}

func (_client) ApplyPedBloodByZone(ped float64, p1 float64, p2 float64, p3 float64, p4 float64) float64 {
	return 0.0
}
func (_client) N_0x3311e47b91edcbbc(ped float64, p1 float64, p2 float64, p3 float64, p4 float64) float64 {
	return 0.0
}

func (_client) ApplyPedBloodDamageByZone(ped float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
func (_client) N_0x816f6981c60bf53b(ped float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) ApplyPedBloodSpecific(ped float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) float64 {
	return 0.0
}
func (_client) N_0xef0d582cbf2d9b0f(ped float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) float64 {
	return 0.0
}

/**
 * enum eDamageZone
 * {
 * DZ_Torso = 0,
 * DZ_Head,
 * DZ_LeftArm,
 * DZ_RightArm,
 * DZ_LeftLeg,
 * DZ_RightLeg,
 * };
 * Decal Names:
 * scar
 * blushing
 * cs_flush_anger
 * cs_flush_anger_face
 * bruise
 * bruise_large
 * herpes
 * ArmorBullet
 * basic_dirt_cloth
 * basic_dirt_skin
 * cs_trev1_dirt
 * APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
 */
func (_client) ApplyPedDamageDecal(ped float64, damageZone float64, xOffset float64, yOffset float64, heading float64, scale float64, alpha float64, variation float64, fadeIn bool, decalName string) {}

/**
 * Damage Packs:
 * "SCR_TrevorTreeBang"
 * "HOSPITAL_0"
 * "HOSPITAL_1"
 * "HOSPITAL_2"
 * "HOSPITAL_3"
 * "HOSPITAL_4"
 * "HOSPITAL_5"
 * "HOSPITAL_6"
 * "HOSPITAL_7"
 * "HOSPITAL_8"
 * "HOSPITAL_9"
 * "SCR_Dumpster"
 * "BigHitByVehicle"
 * "SCR_Finale_Michael_Face"
 * "SCR_Franklin_finb"
 * "SCR_Finale_Michael"
 * "SCR_Franklin_finb2"
 * "Explosion_Med"
 * "SCR_Torture"
 * "SCR_TracySplash"
 * "Skin_Melee_0"
 * Additional damage packs:
 * gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
 */
func (_client) ApplyPedDamagePack(ped float64, damagePack string, damage float64, mult float64) {}

func (_client) AreAllNavmeshRegionsLoaded() bool;

/**
 * Appears to return false if any window is broken.
 */
func (_client) AreAllVehicleWindowsIntact(vehicle float64) bool;
/**
 * Appears to return false if any window is broken.
 */
func (_client) AreAllVehicleWindowsIntact(vehicle float64) bool;

/**
 * Returns false if every seat is occupied.
 */
func (_client) AreAnyVehicleSeatsFree(vehicle float64) bool;
/**
 * Returns false if every seat is occupied.
 */
func (_client) IsAnyVehicleSeatEmpty(vehicle float64) bool;

/**
 * Returns true when the bomb bay doors of this plane are open. False if they're closed.
 * @param aircraft The vehicle to check the bomb bay doors on.
 * @return A bool indicating the state of the doors (true = open, false = closed).
 */
func (_client) AreBombBayDoorsOpen(aircraft float64) bool;
/**
 * Returns true when the bomb bay doors of this plane are open. False if they're closed.
 * @param aircraft The vehicle to check the bomb bay doors on.
 * @return A bool indicating the state of the doors (true = open, false = closed).
 */
func (_client) N_0xd0917a423314bba8(aircraft float64) bool;
/**
 * Returns true when the bomb bay doors of this plane are open. False if they're closed.
 * @param aircraft The vehicle to check the bomb bay doors on.
 * @return A bool indicating the state of the doors (true = open, false = closed).
 */
func (_client) GetAreBombBayDoorsOpen(aircraft float64) bool;

func (_client) AreEntitiesEntirelyInsideGarage(garageHash interface{}, p1 bool, p2 bool, p3 bool, p4 float64) bool;
func (_client) N_0x85b6c850546fdde2(garageHash interface{}, p1 bool, p2 bool, p3 bool, p4 float64) bool;

/**
 * Only used with the "akula" in the decompiled native scripts.
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) AreHeliStubWingsDeployed(vehicle float64) bool;
/**
 * Only used with the "akula" in the decompiled native scripts.
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) N_0xaef12960fa943792(vehicle float64) bool;

func (_client) AreNodesLoadedForArea(x1 float64, y1 float64, x2 float64, y2 float64) bool;
func (_client) N_0xf7b79a50b905a30d(x1 float64, y1 float64, x2 float64, y2 float64) bool;
func (_client) ArePathNodesLoadedInArea(x1 float64, y1 float64, x2 float64, y2 float64) bool;

/**
 * Returns whether the outrigger legs are deployed for the vehicle.
 * The Chernobog is one of the few vehicles with outrigger legs.
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @return The deployment state of the vehicle's outrigger legs
 */
func (_client) AreOutriggerLegsDeployed(vehicle float64) bool;
/**
 * Returns whether the outrigger legs are deployed for the vehicle.
 * The Chernobog is one of the few vehicles with outrigger legs.
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @return The deployment state of the vehicle's outrigger legs
 */
func (_client) N_0x3a9128352eac9e85(vehicle float64) bool;

func (_client) ArePlanePropellersIntact(plane float64) bool;
func (_client) N_0x755d6d5267cbbd7e(plane float64) bool;
func (_client) ArePropellersUndamaged(plane float64) bool;

func (_client) ArePlaneWingsIntact(plane float64) bool;
func (_client) N_0x5991a01434ce9677(plane float64) bool;
func (_client) AddAMarkerOverVehicle(plane float64) bool;
func (_client) AreVehicleWingsIntact(plane float64) bool;

func (_client) ArePlayerFlashingStarsAboutToDrop(player float64) bool;

func (_client) ArePlayerStarsGreyedOut(player float64) bool;

func (_client) AreProfileSettingsValid() bool;
func (_client) N_0x5aa3befa29f03ad4() bool;

func (_client) AreStringsEqual(string1 string, string2 string) bool;

func (_client) Asin(p0 float64) float64 {
	return 0.0
}

func (_client) AssistedMovementCloseRoute() {}

func (_client) AssistedMovementFlushRoute() {}

func (_client) AssistedMovementIsRouteLoaded(route string) bool;

func (_client) AssistedMovementOverrideLoadDistanceThisFrame(dist float64) {}

func (_client) AssistedMovementRemoveRoute(route string) {}

/**
 * Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
 */
func (_client) AssistedMovementRequestRoute(route string) {}

func (_client) AssistedMovementSetRouteProperties(route string, props float64) {}

func (_client) Atan(p0 float64) float64 {
	return 0.0
}

func (_client) Atan2(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * Last param determines if its relative to the Entity
 */
func (_client) AttachCamToEntity(cam float64, entity float64, xOffset float64, yOffset float64, zOffset float64, isRelative bool) {}

func (_client) AttachCamToPedBone(cam float64, ped float64, boneIndex float64, x float64, y float64, z float64, heading bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) AttachCamToPedBone_2(cam float64, ped float64, boneIndex float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 bool) {}

/**
 * This native works with vehicles only.
 * Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA).
 * @param cam The camera handle.
 * @param vehicle The vehicle handle.
 * @param relativeRotation Whether or not the camera rotation will relative the vehicle rotation.
 * @param rotX The X rotation.
 * @param rotY The Y rotation.
 * @param rotZ The Z rotation.
 * @param offX The X offset direction.
 * @param offY The Y offset direction.
 * @param offZ The Z offset direction.
 * @param fixedDirection Whether or not the camera direction will relative to the vehicle direction.
 */
func (_client) AttachCamToVehicleBone(cam float64, vehicle float64, boneIndex float64, relativeRotation bool, rotX float64, rotY float64, rotZ float64, offX float64, offY float64, offZ float64, fixedDirection bool) {}
/**
 * This native works with vehicles only.
 * Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA).
 * @param cam The camera handle.
 * @param vehicle The vehicle handle.
 * @param relativeRotation Whether or not the camera rotation will relative the vehicle rotation.
 * @param rotX The X rotation.
 * @param rotY The Y rotation.
 * @param rotZ The Z rotation.
 * @param offX The X offset direction.
 * @param offY The Y offset direction.
 * @param offZ The Z offset direction.
 * @param fixedDirection Whether or not the camera direction will relative to the vehicle direction.
 */
func (_client) N_0x8db3f12a02caef72(cam float64, vehicle float64, boneIndex float64, relativeRotation bool, rotX float64, rotY float64, rotZ float64, offX float64, offY float64, offZ float64, fixedDirection bool) {}

func (_client) AttachContainerToHandlerFrame(handler float64, container float64) {}

/**
 * Attaches entity 1 to entity 2.
 */
func (_client) AttachEntitiesToRope(ropeId float64, ent1 float64, ent2 float64, ent1_x float64, ent1_y float64, ent1_z float64, ent2_x float64, ent2_y float64, ent2_z float64, length float64, p10 bool, p11 bool, boneName1 string, boneName2 string) {}

func (_client) AttachEntityBoneToEntityBone(entity1 float64, entity2 float64, entityBone float64, entityBone2 float64, p4 bool, p5 bool) {}
func (_client) N_0x5c48b75732c8456c(entity1 float64, entity2 float64, entityBone float64, entityBone2 float64, p4 bool, p5 bool) {}

func (_client) AttachEntityBoneToEntityBonePhysically(entity1 float64, entity2 float64, entityBone float64, entityBone2 float64, p4 bool, p5 bool) {}
func (_client) N_0xfd1695c5d3b05439(entity1 float64, entity2 float64, entityBone float64, entityBone2 float64, p4 bool, p5 bool) {}

func (_client) AttachEntityToCargobob(vehicle float64, entity float64, p2 float64, x float64, y float64, z float64) {}
func (_client) N_0xa1dd82f3ccf9a01e(vehicle float64, entity float64, p2 float64, x float64, y float64, z float64) {}

/**
 * Attaches entity1 to bone (boneIndex) of entity2.
 * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
 * useSoftPinning - if set to false attached entity will not detach when fixed
 * collision - controls collision between the two entities (FALSE disables collision).
 * isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
 * vertexIndex - position of vertex
 * fixedRot - if false it ignores entity vector
 * @param rotationOrder The order in which the rotation is applied. See [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
 */
func (_client) AttachEntityToEntity(entity1 float64, entity2 float64, boneIndex float64, xPos float64, yPos float64, zPos float64, xRot float64, yRot float64, zRot float64, p9 bool, useSoftPinning bool, collision bool, isPed bool, rotationOrder float64, fixedRot bool) {}

/**
 * breakForce is the amount of force required to break the bond.
 * p14 - is always 1 in scripts
 * p15 - is 1 or 0 in scripts - unknown what it does
 * p16 - controls collision between the two entities (FALSE disables collision).
 * p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
 * p18 - is always 2 in scripts.
 */
func (_client) AttachEntityToEntityPhysically(entity1 float64, entity2 float64, boneIndex1 float64, boneIndex2 float64, xPos1 float64, yPos1 float64, zPos1 float64, xPos2 float64, yPos2 float64, zPos2 float64, xRot float64, yRot float64, zRot float64, breakForce float64, fixedRot bool, p15 bool, collision bool, teleport bool, p18 float64) {}

func (_client) AttachPortablePickupToPed(pickupObject float64, ped float64) {}

/**
 * The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
 */
func (_client) AttachRopeToEntity(ropeId float64, entity float64, x float64, y float64, z float64, p5 bool) {}

func (_client) AttachSynchronizedSceneToEntity(sceneID float64, entity float64, boneIndex float64) {}

/**
 * Might be more appropriate in AUDIO?
 */
func (_client) AttachTvAudioToEntity(entity float64) {}

func (_client) AttachVehicleOnToTrailer(vehicle float64, trailer float64, offsetX float64, offsetY float64, offsetZ float64, coordsX float64, coordsY float64, coordsZ float64, rotationX float64, rotationY float64, rotationZ float64, disableColls float64) {}
func (_client) N_0x16b5e274bde402f8(vehicle float64, trailer float64, offsetX float64, offsetY float64, offsetZ float64, coordsX float64, coordsY float64, coordsZ float64, rotationX float64, rotationY float64, rotationZ float64, disableColls float64) {}

/**
 * p2 is unknown and is always -1 in the script natives.
 * @param vehicle The vehicle which should be attached
 * @param cargobob The cargobob
 */
func (_client) AttachVehicleToCargobob(vehicle float64, cargobob float64, p2 float64, x float64, y float64, z float64) {}

/**
 * HookOffset defines where the hook is attached. leave at 0 for default attachment.
 */
func (_client) AttachVehicleToTowTruck(towTruck float64, vehicle float64, rear bool, hookOffsetX float64, hookOffsetY float64, hookOffsetZ float64) {}

func (_client) AttachVehicleToTrailer(vehicle float64, trailer float64, radius float64) {}

func (_client) AudioIsScriptedMusicPlaying() bool;
func (_client) N_0x3d120012440e6683() bool;

func (_client) BadSportPlayerLeftDetected(event float64, amountReceived float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xec5e3af5289dca81(event float64, amountReceived float64)  (bool, float64){
	return false,0.0
}

func (_client) BeginReplayStats(p0 float64, p1 float64) {}

/**
 * Push a function from the Scaleform onto the stack
 */
func (_client) BeginScaleformMovieMethod(scaleform float64, methodName string) bool;
/**
 * Push a function from the Scaleform onto the stack
 */
func (_client) PushScaleformMovieFunction(scaleform float64, methodName string) bool;

/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
 * @param functionName The function name of the scaleform to call.
 */
func (_client) BeginScaleformMovieMethodOnFrontend(functionName string) bool;
/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
 * @param functionName The function name of the scaleform to call.
 */
func (_client) N_0xab58c27c2e6123c6(functionName string) bool;
/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
 * @param functionName The function name of the scaleform to call.
 */
func (_client) PushScaleformMovieFunctionN(functionName string) bool;
/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
 * @param functionName The function name of the scaleform to call.
 */
func (_client) BeginScaleformMovieMethodN(functionName string) bool;

/**
 * Starts frontend (pause menu) scaleform movie methods for header options.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
 * @param functionName Scaleform function name.
 */
func (_client) BeginScaleformMovieMethodOnFrontendHeader(functionName string) bool;
/**
 * Starts frontend (pause menu) scaleform movie methods for header options.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
 * @param functionName Scaleform function name.
 */
func (_client) N_0xb9449845f73f5e9c(functionName string) bool;
/**
 * Starts frontend (pause menu) scaleform movie methods for header options.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
 * @param functionName Scaleform function name.
 */
func (_client) BeginScaleformMovieMethodV(functionName string) bool;

/**
 * Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
 * Known components:
 * 19 - MP_RANK_BAR
 * 20 - HUD_DIRECTOR_MODE
 * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
 */
func (_client) BeginScaleformScriptHudMovieMethod(hudComponent float64, methodName string) bool;
/**
 * Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
 * Known components:
 * 19 - MP_RANK_BAR
 * 20 - HUD_DIRECTOR_MODE
 * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
 */
func (_client) PushScaleformMovieFunctionFromHudComponent(hudComponent float64, methodName string) bool;
/**
 * Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
 * Known components:
 * 19 - MP_RANK_BAR
 * 20 - HUD_DIRECTOR_MODE
 * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
 */
func (_client) BeginScaleformMovieMethodHudComponent(hudComponent float64, methodName string) bool;

func (_client) BeginSrl() {}

func (_client) BeginTakeHighQualityPhoto() bool;
func (_client) N_0xa67c35c56eb1bd9d() bool;

func (_client) BeginTakeMissionCreatorPhoto() bool;
func (_client) N_0x1dd2139a9a20dce8() bool;

/**
 * Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
 * BEGIN_TEXT_COMMAND_PRINT
 * e.g
 * void StartLoadingMessage(char *text, int spinnerType = 3)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * }
 *  -- [[OR]] 
 * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * WAIT(timeMs);
 * _REMOVE_LOADING_PROMPT();
 * }
 * These are some localized strings used in the loading spinner.
 * "PM_WAIT"                   = Please Wait
 * "CELEB_WPLYRS"              = Waiting For Players.
 * "CELL_SPINNER2"             = Scanning storage.
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
 * "FM_COR_AUTOD"                        = Just spinner no text
 * "FM_IHELP_WAT2"                        = Waiting for other players
 * "FM_JIP_WAITO"                            = Game options are being set
 * "FMMC_DOWNLOAD"                    = Downloading
 * "FMMC_PLYLOAD"                         = Loading
 * "FMMC_STARTTRAN"                    = Launching session
 * "HUD_QUITTING"                           =  Quiting session
 * "KILL_STRIP_IDM"                         = Waiting for to accept
 * "MP_SPINLOADING"                      = Loading
 */
func (_client) BeginTextCommandBusyspinnerOn(_string string) {}
/**
 * Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
 * BEGIN_TEXT_COMMAND_PRINT
 * e.g
 * void StartLoadingMessage(char *text, int spinnerType = 3)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * }
 *  -- [[OR]] 
 * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * WAIT(timeMs);
 * _REMOVE_LOADING_PROMPT();
 * }
 * These are some localized strings used in the loading spinner.
 * "PM_WAIT"                   = Please Wait
 * "CELEB_WPLYRS"              = Waiting For Players.
 * "CELL_SPINNER2"             = Scanning storage.
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
 * "FM_COR_AUTOD"                        = Just spinner no text
 * "FM_IHELP_WAT2"                        = Waiting for other players
 * "FM_JIP_WAITO"                            = Game options are being set
 * "FMMC_DOWNLOAD"                    = Downloading
 * "FMMC_PLYLOAD"                         = Loading
 * "FMMC_STARTTRAN"                    = Launching session
 * "HUD_QUITTING"                           =  Quiting session
 * "KILL_STRIP_IDM"                         = Waiting for to accept
 * "MP_SPINLOADING"                      = Loading
 */
func (_client) N_0xaba17d7ce615adbf(_string string) {}
/**
 * Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
 * BEGIN_TEXT_COMMAND_PRINT
 * e.g
 * void StartLoadingMessage(char *text, int spinnerType = 3)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * }
 *  -- [[OR]] 
 * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * WAIT(timeMs);
 * _REMOVE_LOADING_PROMPT();
 * }
 * These are some localized strings used in the loading spinner.
 * "PM_WAIT"                   = Please Wait
 * "CELEB_WPLYRS"              = Waiting For Players.
 * "CELL_SPINNER2"             = Scanning storage.
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
 * "FM_COR_AUTOD"                        = Just spinner no text
 * "FM_IHELP_WAT2"                        = Waiting for other players
 * "FM_JIP_WAITO"                            = Game options are being set
 * "FMMC_DOWNLOAD"                    = Downloading
 * "FMMC_PLYLOAD"                         = Loading
 * "FMMC_STARTTRAN"                    = Launching session
 * "HUD_QUITTING"                           =  Quiting session
 * "KILL_STRIP_IDM"                         = Waiting for to accept
 * "MP_SPINLOADING"                      = Loading
 */
func (_client) SetLoadingPromptTextEntry(_string string) {}
/**
 * Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
 * BEGIN_TEXT_COMMAND_PRINT
 * e.g
 * void StartLoadingMessage(char *text, int spinnerType = 3)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * }
 *  -- [[OR]] 
 * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * WAIT(timeMs);
 * _REMOVE_LOADING_PROMPT();
 * }
 * These are some localized strings used in the loading spinner.
 * "PM_WAIT"                   = Please Wait
 * "CELEB_WPLYRS"              = Waiting For Players.
 * "CELL_SPINNER2"             = Scanning storage.
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
 * "FM_COR_AUTOD"                        = Just spinner no text
 * "FM_IHELP_WAT2"                        = Waiting for other players
 * "FM_JIP_WAITO"                            = Game options are being set
 * "FMMC_DOWNLOAD"                    = Downloading
 * "FMMC_PLYLOAD"                         = Loading
 * "FMMC_STARTTRAN"                    = Launching session
 * "HUD_QUITTING"                           =  Quiting session
 * "KILL_STRIP_IDM"                         = Waiting for to accept
 * "MP_SPINLOADING"                      = Loading
 */
func (_client) BeginTextCommandBusyString(_string string) {}

/**
 * clears a print text command with this text
 */
func (_client) BeginTextCommandClearPrint(text string) {}
/**
 * clears a print text command with this text
 */
func (_client) N_0xe124fa80a759019c(text string) {}

/**
 * Used to be known as _SET_TEXT_COMPONENT_FORMAT
 */
func (_client) BeginTextCommandDisplayHelp(inputType string) {}
/**
 * Used to be known as _SET_TEXT_COMPONENT_FORMAT
 */
func (_client) SetTextComponentFormat(inputType string) {}

/**
 * The following were found in the decompiled script files:
 * STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
 * ESDOLLA
 * ESMINDOLLA - cash (negative)
 * Used to be known as _SET_TEXT_ENTRY
 */
func (_client) BeginTextCommandDisplayText(text string) {}
/**
 * The following were found in the decompiled script files:
 * STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
 * ESDOLLA
 * ESMINDOLLA - cash (negative)
 * Used to be known as _SET_TEXT_ENTRY
 */
func (_client) SetTextEntry(text string) {}

/**
 * BEGIN_TEXT_COMMAND_*
 * Example:
 * _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
 * ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
 * float width = _END_TEXT_COMMAND_GET_WIDTH(1);
 */
func (_client) BeginTextCommandGetWidth(text string) {}
/**
 * BEGIN_TEXT_COMMAND_*
 * Example:
 * _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
 * ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
 * float width = _END_TEXT_COMMAND_GET_WIDTH(1);
 */
func (_client) SetTextEntryForWidth(text string) {}
/**
 * BEGIN_TEXT_COMMAND_*
 * Example:
 * _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
 * ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
 * float width = _END_TEXT_COMMAND_GET_WIDTH(1);
 */
func (_client) BeginTextCommandWidth(text string) {}

/**
 * nothin doin.
 * BOOL Message(char* text)
 * {
 * BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
 * }
 */
func (_client) BeginTextCommandIsMessageDisplayed(text string) {}
/**
 * nothin doin.
 * BOOL Message(char* text)
 * {
 * BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
 * }
 */
func (_client) N_0x853648fd1063a213(text string) {}

/**
 * BOOL IsContextActive(char *ctx)
 * {
 * BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
 * return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
 * }
 */
func (_client) BeginTextCommandIsThisHelpMessageBeingDisplayed(labelName string) {}
/**
 * BOOL IsContextActive(char *ctx)
 * {
 * BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
 * return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
 * }
 */
func (_client) N_0x0a24da3a41b718f5(labelName string) {}

/**
 * get's line count
 * int GetLineCount(char *text, float x, float y)
 * {
 * _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
 * }
 */
func (_client) BeginTextCommandLineCount(entry string) {}
/**
 * get's line count
 * int GetLineCount(char *text, float x, float y)
 * {
 * _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
 * }
 */
func (_client) SetTextGxtEntry(entry string) {}

func (_client) BeginTextCommandObjective(p0 string) {}
func (_client) N_0x23d69e0465570028(p0 string) {}

func (_client) BeginTextCommandOverrideButtonText(gxtEntry string) {}
func (_client) N_0x8f9ee5687f8eeccd(gxtEntry string) {}
func (_client) BeginTextCommandTimer(gxtEntry string) {}

/**
 * Used to be known as _SET_TEXT_ENTRY_2
 * void ShowSubtitle(char *text)
 * {
 * BEGIN_TEXT_COMMAND_PRINT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_PRINT(2000, 1);
 * }
 */
func (_client) BeginTextCommandPrint(GxtEntry string) {}
/**
 * Used to be known as _SET_TEXT_ENTRY_2
 * void ShowSubtitle(char *text)
 * {
 * BEGIN_TEXT_COMMAND_PRINT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_PRINT(2000, 1);
 * }
 */
func (_client) SetTextEntry_2(GxtEntry string) {}

/**
 * Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
 * Examples:
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
 * HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
 * HUD::_ADD_TEXT_COMPONENT_STRING(a_2);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
 * HUD::_0x17299B63C7683A2B(v_3);
 * HUD::_0x17299B63C7683A2B(v_4);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
 * HUD::_0x17299B63C7683A2B(v_3);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 */
func (_client) BeginTextCommandScaleformString(componentType string) {}
/**
 * Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
 * Examples:
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
 * HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
 * HUD::_ADD_TEXT_COMPONENT_STRING(a_2);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
 * HUD::_0x17299B63C7683A2B(v_3);
 * HUD::_0x17299B63C7683A2B(v_4);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
 * HUD::_0x17299B63C7683A2B(v_3);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 */
func (_client) BeginTextComponent(componentType string) {}

/**
 * Starts a text command to change the name of a blip displayed in the pause menu.
 * This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xBC38B49BCB83BC9B), once adding all required text components.
 * @param textLabel The text label to set.
 */
func (_client) BeginTextCommandSetBlipName(textLabel string) {}

/**
 * Declares the entry type of a notification, for example "STRING".
 * int ShowNotification(char \*text)
 * {
 * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return \_DRAW_NOTIFICATION(1, 1);
 * }
 * @param text The text label to use.
 */
func (_client) BeginTextCommandThefeedPost(text string) {}
/**
 * Declares the entry type of a notification, for example "STRING".
 * int ShowNotification(char \*text)
 * {
 * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return \_DRAW_NOTIFICATION(1, 1);
 * }
 * @param text The text label to use.
 */
func (_client) SetNotificationTextEntry(text string) {}

/**
 * Deletes the given context from the background scripts context map.
 * NativeDB Introduced: v323
 */
func (_client) BgEndContext(contextName string) {}

/**
 * Hashed version of 0xDC2BACD920D0A0DD.
 * NativeDB Introduced: v323
 */
func (_client) BgEndContextHash(contextHash interface{}) {}

/**
 * Inserts the given context into the background scripts context map.
 * NativeDB Introduced: v323
 */
func (_client) BgStartContext(contextName string) {}

/**
 * Hashed version of 0x9D5A25BADB742ACD.
 * NativeDB Introduced: v323
 */
func (_client) BgStartContextHash(contextHash interface{}) {}

/**
 * Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
 * Only works on vehicles with a police siren.
 */
func (_client) BlipSiren(vehicle float64) {}

func (_client) BlockDeathJingle(toggle bool) {}
func (_client) N_0xf154b8d1775b2dec(toggle bool) {}

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * This is limited to 4 blocked events at a time.
 */
func (_client) BlockDecisionMakerEvent(name interface{}, eventType float64) {}

func (_client) BlockDispatchServiceResourceCreation(dispatchService float64, toggle bool) {}
func (_client) N_0x9b2bd3773123ea2f(dispatchService float64, toggle bool) {}

func (_client) BlockPedDeadBodyShockingEvents(ped float64, toggle bool) {}
func (_client) N_0xe43a13c9e4cccbcf(ped float64, toggle bool) {}

func (_client) BreakEntityGlass(entity float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 bool) {}

func (_client) BreakObjectFragmentChild(p0 float64, p1 float64, p2 bool) {}
func (_client) N_0xe7e4c198b0185900(p0 float64, p1 float64, p2 bool) {}

/**
 * This native makes the vehicle stop immediately, as happens when we enter a MP garage.
 * . distance defines how far it will travel until stopping. Garage doors use 3.0.
 * . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
 */
func (_client) BringVehicleToHalt(vehicle float64, distance float64, duration float64, unknown bool) {}
/**
 * This native makes the vehicle stop immediately, as happens when we enter a MP garage.
 * . distance defines how far it will travel until stopping. Garage doors use 3.0.
 * . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
 */
func (_client) N_0x260be8f09e326a20(vehicle float64, distance float64, duration float64, unknown bool) {}
/**
 * This native makes the vehicle stop immediately, as happens when we enter a MP garage.
 * . distance defines how far it will travel until stopping. Garage doors use 3.0.
 * . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
 */
func (_client) SetVehicleHalt(vehicle float64, distance float64, duration float64, unknown bool) {}

func (_client) BusyspinnerIsDisplaying() bool;
func (_client) N_0xb2a592b04648a9cb() bool;

func (_client) BusyspinnerIsOn() bool;
func (_client) N_0xd422fcc5f239a915() bool;
func (_client) IsLoadingPromptBeingDisplayed() bool;

/**
 * Removes the loading prompt at the bottom right of the screen.
 */
func (_client) BusyspinnerOff() {}
/**
 * Removes the loading prompt at the bottom right of the screen.
 */
func (_client) N_0x10d373323e5b9c0d() {}
/**
 * Removes the loading prompt at the bottom right of the screen.
 */
func (_client) RemoveLoadingPrompt() {}

/**
 * Calculates the travel distance between a set of points.
 * Doesn't seem to correlate with distance on gps sometimes.
 * This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
 */
func (_client) CalculateTravelDistanceBetweenPoints(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) float64 {
	return 0.0
}

/**
 * This is similar to the PushScaleformMovieFunction natives, except it calls in the `TIMELINE` of a minimap overlay.
 * @param miniMap The minimap overlay ID.
 * @param fnName A function in the overlay's TIMELINE.
 */
func (_client) CallMinimapScaleformFunction(miniMap float64, fnName string) bool;

/**
 * Calls the Scaleform function.
 */
func (_client) CallScaleformMovieMethod(scaleform float64, method string) {}
/**
 * Calls the Scaleform function.
 */
func (_client) CallScaleformMovieFunctionVoid(scaleform float64, method string) {}

/**
 * Calls the Scaleform function and passes the parameters as floats.
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
 */
func (_client) CallScaleformMovieMethodWithNumber(scaleform float64, methodName string, param1 float64, param2 float64, param3 float64, param4 float64, param5 float64) {}
/**
 * Calls the Scaleform function and passes the parameters as floats.
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
 */
func (_client) CallScaleformMovieFunctionFloatParams(scaleform float64, methodName string, param1 float64, param2 float64, param3 float64, param4 float64, param5 float64) {}

/**
 * Calls the Scaleform function and passes both float and string parameters (in their respective order).
 * The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
 * NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
 * Examples:
 * // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
 * GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);
 * // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
 * GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);
 */
func (_client) CallScaleformMovieMethodWithNumberAndString(scaleform float64, methodName string, floatParam1 float64, floatParam2 float64, floatParam3 float64, floatParam4 float64, floatParam5 float64, stringParam1 string, stringParam2 string, stringParam3 string, stringParam4 string, stringParam5 string) {}
/**
 * Calls the Scaleform function and passes both float and string parameters (in their respective order).
 * The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
 * NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
 * Examples:
 * // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
 * GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);
 * // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
 * GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);
 */
func (_client) CallScaleformMovieFunctionMixedParams(scaleform float64, methodName string, floatParam1 float64, floatParam2 float64, floatParam3 float64, floatParam4 float64, floatParam5 float64, stringParam1 string, stringParam2 string, stringParam3 string, stringParam4 string, stringParam5 string) {}

/**
 * Calls the Scaleform function and passes the parameters as strings.
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
 */
func (_client) CallScaleformMovieMethodWithString(scaleform float64, methodName string, param1 string, param2 string, param3 string, param4 string, param5 string) {}
/**
 * Calls the Scaleform function and passes the parameters as strings.
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
 */
func (_client) CallScaleformMovieFunctionStringParams(scaleform float64, methodName string, param1 string, param2 string, param3 string, param4 string, param5 string) {}

func (_client) CanAnchorBoatHere(vehicle float64) bool;
func (_client) N_0x2467a2d807d37ca3(vehicle float64) bool;
func (_client) GetBoatAnchor(vehicle float64) bool;
func (_client) CanBoatBeAnchored(vehicle float64) bool;

/**
 * Differs from 0x26C10ECBDA5D043B in that 0x140EFCC10 (1604 retail) is called with a2 = true.
 * NativeDB Introduced: v678
 */
func (_client) CanAnchorBoatHere_2(vehicle float64) bool;
/**
 * Differs from 0x26C10ECBDA5D043B in that 0x140EFCC10 (1604 retail) is called with a2 = true.
 * NativeDB Introduced: v678
 */
func (_client) CanBoatBeAnchored_2(vehicle float64) bool;

func (_client) CanCreateRandomBikeRider() bool;

func (_client) CanCreateRandomCops() bool;

func (_client) CanCreateRandomDriver() bool;

func (_client) CanCreateRandomPed(unk bool) bool;

func (_client) CanKnockPedOffVehicle(ped float64) bool;

/**
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int amount
 * NativeDB Added Parameter 4: int* p3
 */
func (_client) CanPayGoon() bool;
/**
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int amount
 * NativeDB Added Parameter 4: int* p3
 */
func (_client) N_0x9777734dad16992f() bool;

func (_client) CanPedHearPlayer(player float64, ped float64) bool;

func (_client) CanPedInCombatSeeTarget(ped float64, target float64) bool;

/**
 * Prevents the ped from going limp.
 * [Example: Can prevent peds from falling when standing on moving vehicles.]
 */
func (_client) CanPedRagdoll(ped float64) bool;

func (_client) CanPedSeeHatedPed(ped1 float64, ped2 float64) bool;
func (_client) N_0x6cd5a433374d4cfb(ped1 float64, ped2 float64) bool;
func (_client) CanPedSeePed(ped1 float64, ped2 float64) bool;

/**
 * Checks if the ped can play the speech or has the speech file, last parameter is usually 0
 */
func (_client) CanPedSpeak(ped float64, speechName string, unk bool) bool;
/**
 * Checks if the ped can play the speech or has the speech file, last parameter is usually 0
 */
func (_client) N_0x49b99bf3fda89a7a(ped float64, speechName string, unk bool) bool;

/**
 * This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
 * I can confirm the above. This function is hard-coded to always return 1.
 */
func (_client) CanPhoneBeSeenOnScreen() bool;

func (_client) CanPlayerStartMission(player float64) bool;

func (_client) CanRegisterMissionEntities(ped_amt float64, vehicle_amt float64, object_amt float64, pickup_amt float64) bool;

func (_client) CanRegisterMissionObjects(amount float64) bool;

func (_client) CanRegisterMissionPeds(amount float64) bool;

func (_client) CanRegisterMissionPickups(amount float64) bool;

func (_client) CanRegisterMissionVehicles(amount float64) bool;

func (_client) CanRequestAssetsForCutsceneEntity() bool;
func (_client) N_0xb56bbbcc2955d9cb() bool;

/**
 * modelHash (p1) was always 0 in R* scripts
 */
func (_client) CanSetEnterStateForRegisteredEntity(cutsceneEntName string, modelHash interface{}) bool;

func (_client) CanSetExitStateForCamera(p0 bool) bool;

func (_client) CanSetExitStateForRegisteredEntity(cutsceneEntName string, modelHash interface{}) bool;

func (_client) CanShuffleSeat(vehicle float64, seatIndex float64) bool;

/**
 * this returns if you can use the weapon while using a parachute
 */
func (_client) CanUseWeaponOnParachute(weaponHash interface{}) bool;

func (_client) CancelCurrentPoliceReport() {}
func (_client) N_0xb4f90faf7670b16f() {}
func (_client) DisablePoliceReports() {}

/**
 * Cancels the currently executing event.
 */
func (_client) CancelEvent() {}

/**
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
 */
func (_client) CancelMusicEvent(eventName string) bool;

/**
 * DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
 * Use _FORCE_CLOSE_TEXT_INPUT_BOX instead.
 * CANCEL_*
 */
func (_client) CancelOnscreenKeyboard() {}
/**
 * DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
 * Use _FORCE_CLOSE_TEXT_INPUT_BOX instead.
 * CANCEL_*
 */
func (_client) N_0x58a39be597ce99cd() {}

func (_client) CancelStuntJump() {}

/**
 * Does something similar to INTERIOR::DISABLE_INTERIOR
 */
func (_client) CapInterior(interiorID float64, toggle bool) {}

func (_client) CascadeShadowsClearShadowSampleType() {}
func (_client) N_0x27cb772218215325() {}
func (_client) CascadeshadowsResetType() {}

/**
 * When this is set to ON, shadows only draw as you get nearer.
 * When OFF, they draw from a further distance.
 */
func (_client) CascadeShadowsEnableEntityTracker(toggle bool) {}
/**
 * When this is set to ON, shadows only draw as you get nearer.
 * When OFF, they draw from a further distance.
 */
func (_client) SetFarShadowsSuppressed(toggle bool) {}

func (_client) CascadeShadowsInitSession() {}
func (_client) N_0x03fc694ae06c5a20() {}

func (_client) CascadeShadowsSetAircraftMode(p0 bool) {}
func (_client) N_0x6ddbf9dffc4ac080(p0 bool) {}

func (_client) CascadeShadowsSetCascadeBounds(p0 float64, p1 bool, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 float64) {}
func (_client) N_0xd2936cab8b58fcbd(p0 float64, p1 bool, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 float64) {}

func (_client) CascadeShadowsSetCascadeBoundsScale(p0 float64) {}
func (_client) N_0x5f0f3f56635809ef(p0 float64) {}

func (_client) CascadeShadowsSetDynamicDepthMode(p0 bool) {}
func (_client) N_0xd39d13c9febf0511(p0 bool) {}

func (_client) CascadeShadowsSetDynamicDepthValue(p0 float64) {}
func (_client) N_0x02ac28f3a01fa04a(p0 float64) {}

func (_client) CascadeShadowsSetEntityTrackerScale(p0 float64) {}
func (_client) N_0x5e9daf5a20f15908(p0 float64) {}

/**
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_TWOTAP"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_DITHER4"
 * "CSM_ST_DITHER16"
 * "CSM_ST_SOFT16"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_CLOUDS_SIMPLE"
 * "CSM_ST_CLOUDS_LINEAR"
 * "CSM_ST_CLOUDS_TWOTAP"
 * "CSM_ST_CLOUDS_BOX3x3"
 * "CSM_ST_CLOUDS_BOX4x4"
 * "CSM_ST_CLOUDS_DITHER2_LINEAR"
 * "CSM_ST_CLOUDS_SOFT16"
 * "CSM_ST_CLOUDS_DITHER16_RPDB"
 * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
 */
func (_client) CascadeShadowsSetShadowSampleType(_type string) {}
/**
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_TWOTAP"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_DITHER4"
 * "CSM_ST_DITHER16"
 * "CSM_ST_SOFT16"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_CLOUDS_SIMPLE"
 * "CSM_ST_CLOUDS_LINEAR"
 * "CSM_ST_CLOUDS_TWOTAP"
 * "CSM_ST_CLOUDS_BOX3x3"
 * "CSM_ST_CLOUDS_BOX4x4"
 * "CSM_ST_CLOUDS_DITHER2_LINEAR"
 * "CSM_ST_CLOUDS_SOFT16"
 * "CSM_ST_CLOUDS_DITHER16_RPDB"
 * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
 */
func (_client) N_0xb11d94bc55f41932(_type string) {}
/**
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_TWOTAP"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_DITHER4"
 * "CSM_ST_DITHER16"
 * "CSM_ST_SOFT16"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_CLOUDS_SIMPLE"
 * "CSM_ST_CLOUDS_LINEAR"
 * "CSM_ST_CLOUDS_TWOTAP"
 * "CSM_ST_CLOUDS_BOX3x3"
 * "CSM_ST_CLOUDS_BOX4x4"
 * "CSM_ST_CLOUDS_DITHER2_LINEAR"
 * "CSM_ST_CLOUDS_SOFT16"
 * "CSM_ST_CLOUDS_DITHER16_RPDB"
 * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
 */
func (_client) CascadeshadowsSetType(_type string) {}

/**
 * I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
 */
func (_client) Ceil(value float64) float64 {
	return 0.0
}

func (_client) CellCamActivate(p0 bool, p1 bool) {}

/**
 * Disables the phone up-button, oddly enough.
 * i.e.: When the phone is out, and this method is called with false as it's parameter, the phone will not be able to scroll up. However, when you use the down arrow key, it's functionality still, works on the phone.
 * When the phone is not out, and this method is called with false as it's parameter, you will not be able to bring up the phone. Although the up arrow key still works for whatever functionality it's used for, just not for the phone.
 * This can be used for creating menu's when trying to disable the phone from being used.
 * You do not have to call the function again with false as a parameter, as soon as the function stops being called, the phone will again be usable.
 */
func (_client) CellCamDisableThisFrame(toggle bool) {}
/**
 * Disables the phone up-button, oddly enough.
 * i.e.: When the phone is out, and this method is called with false as it's parameter, the phone will not be able to scroll up. However, when you use the down arrow key, it's functionality still, works on the phone.
 * When the phone is not out, and this method is called with false as it's parameter, you will not be able to bring up the phone. Although the up arrow key still works for whatever functionality it's used for, just not for the phone.
 * This can be used for creating menu's when trying to disable the phone from being used.
 * You do not have to call the function again with false as a parameter, as soon as the function stops being called, the phone will again be usable.
 */
func (_client) N_0x015c49a93e3e086e(toggle bool) {}
/**
 * Disables the phone up-button, oddly enough.
 * i.e.: When the phone is out, and this method is called with false as it's parameter, the phone will not be able to scroll up. However, when you use the down arrow key, it's functionality still, works on the phone.
 * When the phone is not out, and this method is called with false as it's parameter, you will not be able to bring up the phone. Although the up arrow key still works for whatever functionality it's used for, just not for the phone.
 * This can be used for creating menu's when trying to disable the phone from being used.
 * You do not have to call the function again with false as a parameter, as soon as the function stops being called, the phone will again be usable.
 */
func (_client) DisablePhoneThisFrame(toggle bool) {}

func (_client) CellCamIsCharVisibleNoFaceCheck(entity float64) bool;

/**
 * For move the finger of player, the value of int goes 1 at 5.
 */
func (_client) CellCamMoveFinger(direction float64) {}
/**
 * For move the finger of player, the value of int goes 1 at 5.
 */
func (_client) MoveFinger(direction float64) {}

/**
 * if the bool "Toggle" is "true" so the phone is lean.
 * if the bool "Toggle" is "false" so the phone is not lean.
 */
func (_client) CellCamSetLean(toggle bool) {}
/**
 * if the bool "Toggle" is "true" so the phone is lean.
 * if the bool "Toggle" is "false" so the phone is not lean.
 */
func (_client) SetPhoneLean(toggle bool) {}

func (_client) ChangePlayerPed(player float64, ped float64, b2 bool, resetDamage bool) {}

/**
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 * Clamps the gameplay camera's current pitch.
 * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
 */
func (_client) ClampGameplayCamPitch(minimum float64, maximum float64) {}

/**
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 * Clamps the gameplay camera's current yaw.
 * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 */
func (_client) ClampGameplayCamYaw(minimum float64, maximum float64) {}

func (_client) CleanItemset(p0 float64) {}

func (_client) CleanupAsyncInstall() {}
func (_client) N_0xc79ae21974b01fb2() {}

func (_client) ClearAdditionalText(p0 float64, p1 bool) {}

/**
 * Clears all active blip routes that have been set with [`SetBlipRoute`](#\_0x3E160C90).
 */
func (_client) ClearAllBlipRoutes() {}
/**
 * Clears all active blip routes that have been set with [`SetBlipRoute`](#\_0x3E160C90).
 */
func (_client) N_0xd12882d3ff82bf11() {}

func (_client) ClearAllBrokenGlass() {}

func (_client) ClearAllHelpMessages() {}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) ClearAllPedProps(ped float64) {}

func (_client) ClearAllPedVehicleForcedSeatUsage(ped float64) {}
func (_client) N_0xe6ca85e7259ce16b(ped float64) {}

func (_client) ClearAmbientZoneListState(p1 bool) float64 {
	return 0.0
}

/**
 * This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, bool p1, Any p2);
 * Still needs more research.
 */
func (_client) ClearAmbientZoneState(zoneName string, p1 bool) {}

/**
 * NativeDB Added Parameter 13: Any p12
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) ClearAngledAreaOfVehicles(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, p7 bool, p8 bool, p9 bool, p10 bool, p11 bool) {}

/**
 * Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
 */
func (_client) ClearArea(X float64, Y float64, Z float64, radius float64, p4 bool, ignoreCopCars bool, ignoreObjects bool, p7 bool) {}

/**
 * MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
 */
func (_client) ClearAreaLeaveVehicleHealth(x float64, y float64, z float64, radius float64, p4 bool, p5 bool, p6 bool, p7 bool) {}
/**
 * MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
 */
func (_client) N_0x957838aaf91bd12d(x float64, y float64, z float64, radius float64, p4 bool, p5 bool, p6 bool, p7 bool) {}
/**
 * MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
 */
func (_client) ClearAreaOfEverything(x float64, y float64, z float64, radius float64, p4 bool, p5 bool, p6 bool, p7 bool) {}

/**
 * flags appears to always be 0
 */
func (_client) ClearAreaOfCops(x float64, y float64, z float64, radius float64, flags float64) {}

/**
 * I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
 */
func (_client) ClearAreaOfObjects(x float64, y float64, z float64, radius float64, flags float64) {}

/**
 * Example:       CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
 */
func (_client) ClearAreaOfPeds(x float64, y float64, z float64, radius float64, flags float64) {}

func (_client) ClearAreaOfProjectiles(x float64, y float64, z float64, radius float64, flags float64) {}

/**
 * Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);
 * ```
 * ```
 * NativeDB Added Parameter 10: BOOL p9
 */
func (_client) ClearAreaOfVehicles(x float64, y float64, z float64, radius float64, p4 bool, p5 bool, p6 bool, p7 bool, p8 bool) {}

/**
 * This sets bit [offset] of [address] to off.
 * Example:
 * MISC::CLEAR_BIT(&bitAddress, 1);
 * To check if this bit has been enabled:
 * MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
 */
func (_client) ClearBit(offset float64) float64 {
	return 0.0
}

func (_client) ClearBrief() {}

func (_client) ClearCloudHat() {}

/**
 * 3 calls in the b617d scripts, removed duplicate.
 * AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE");
 * AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK");
 */
func (_client) ClearCustomRadioTrackList(radioStation string) {}
/**
 * 3 calls in the b617d scripts, removed duplicate.
 * AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE");
 * AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK");
 */
func (_client) N_0x1654f24a88a8e3fe(radioStation string) {}

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 */
func (_client) ClearDecisionMakerEventResponse(name interface{}, eventType float64) {}

/**
 * Resets the screen's draw-origin which was changed by the function [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) back to `x=0, y=0`. See [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) for further information.
 */
func (_client) ClearDrawOrigin() {}

func (_client) ClearDrivebyTaskUnderneathDrivingTask(ped float64) {}

func (_client) ClearDynamicPauseMenuErrorMessage() {}
func (_client) N_0x7792424aa0eac32e() {}

func (_client) ClearEntityLastDamageEntity(entity float64) {}

func (_client) ClearEntityLastWeaponDamage(entity float64) {}

/**
 * Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#\_0x5096FD9CCB49056D)
 */
func (_client) ClearExtraTimecycleModifier() {}
/**
 * Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#\_0x5096FD9CCB49056D)
 */
func (_client) N_0x92ccc17a7a2285da() {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) ClearFacialClipsetOverride(ped float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x637822dc2afeebf8(ped float64) {}

func (_client) ClearFacialIdleAnimOverride(ped float64) {}

func (_client) ClearFloatingHelp(hudIndex float64, p1 bool) {}

func (_client) ClearFocus() {}

func (_client) ClearGarageArea(garageHash interface{}, isNetwork bool) {}
func (_client) N_0xda05194260cdcdf9(garageHash interface{}, isNetwork bool) {}

func (_client) ClearGpsCustomRoute() {}
func (_client) N_0xe6de0561d9232a64() {}

/**
 * Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
 * @param index Index of disabled zone.
 */
func (_client) ClearGpsDisabledZoneAtIndex(index float64) {}
/**
 * Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
 * @param index Index of disabled zone.
 */
func (_client) N_0x2801d0012266df07(index float64) {}
/**
 * Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
 * @param index Index of disabled zone.
 */
func (_client) ClearGpsDisabledZoneAtIndex(index float64) {}

/**
 * Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
 * Doesn't seem like the flags are actually read by the game at all.
 */
func (_client) ClearGpsFlags() {}

/**
 * Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](https://runtime.fivem.net/doc/reference.html#\_0x3DDA37128DD1ACA8)
 */
func (_client) ClearGpsMultiRoute() {}
/**
 * Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](https://runtime.fivem.net/doc/reference.html#\_0x3DDA37128DD1ACA8)
 */
func (_client) N_0x67eedea1b9bafd94() {}

func (_client) ClearGpsPlayerWaypoint() {}

/**
 * Does the same as SET_RACE_TRACK_RENDER(false);
 */
func (_client) ClearGpsRaceTrack() {}

func (_client) ClearHdArea() {}

func (_client) ClearHelp(toggle bool) {}

/**
 * Immediately removes entity from an interior. Like sets entity to `limbo` room.
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) ClearInteriorForEntity(entity float64) {}

func (_client) ClearLastDrivenVehicle() {}
func (_client) N_0xe01903c47c7ac89e() {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) ClearLaunchParams() {}
/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x966dd84fb6a46017() {}

func (_client) ClearObjectsInsideGarage(garageHash interface{}, vehicles bool, peds bool, objects bool, isNetwork bool) {}
func (_client) N_0x190428512b240692(garageHash interface{}, vehicles bool, peds bool, objects bool, isNetwork bool) {}

func (_client) ClearOverrideWeather() {}

func (_client) ClearPedAlternateMovementAnim(ped float64, stance float64, p2 float64) {}

func (_client) ClearPedAlternateWalkAnim(ped float64, p1 float64) {}

func (_client) ClearPedBloodDamage(ped float64) {}

/**
 * Somehow related to changing ped's clothes.
 */
func (_client) ClearPedBloodDamageByZone(ped float64, p1 float64) {}
/**
 * Somehow related to changing ped's clothes.
 */
func (_client) N_0x56e3b78c5408d9f4(ped float64, p1 float64) {}

/**
 * CLEAR_PED_*
 */
func (_client) ClearPedCoverClipsetOverride(ped float64) {}
/**
 * CLEAR_PED_*
 */
func (_client) N_0xc79196dcb36f6121(ped float64) {}

/**
 * p1: from 0 to 5 in the b617d scripts.
 * p2: "blushing" and "ALL" found in the b617d scripts.
 */
func (_client) ClearPedDamageDecalByZone(ped float64, p1 float64, p2 string) {}
/**
 * p1: from 0 to 5 in the b617d scripts.
 * p2: "blushing" and "ALL" found in the b617d scripts.
 */
func (_client) N_0x523c79aeefcc4a2a(ped float64, p1 float64, p2 string) {}

func (_client) ClearPedDecorations(ped float64) {}

func (_client) ClearPedDecorationsLeaveScars(ped float64) {}
func (_client) N_0xe3b27e70ceab9f0c(ped float64) {}
func (_client) ClearPedFacialDecorations(ped float64) {}

func (_client) ClearPedDriveByClipsetOverride(ped float64) {}

func (_client) ClearPedEnvDirt(ped float64) {}
func (_client) N_0x6585d955a68452a5(ped float64) {}

func (_client) ClearPedInPauseMenu() {}

func (_client) ClearPedLastDamageBone(ped float64) {}

/**
 * Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
 */
func (_client) ClearPedLastWeaponDamage(ped float64) {}

func (_client) ClearPedNonCreationArea() {}

func (_client) ClearPedParachutePackVariation(ped float64) {}
func (_client) N_0x1280804f7cfd2d6c(ped float64) {}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) ClearPedProp(ped float64, propId float64) {}

/**
 * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
 * @param ped The ped to remove the scuba gear from.
 */
func (_client) ClearPedScubaGearVariation(ped float64) {}
/**
 * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
 * @param ped The ped to remove the scuba gear from.
 */
func (_client) N_0xb50eb4ccb29704ac(ped float64) {}
/**
 * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
 * @param ped The ped to remove the scuba gear from.
 */
func (_client) RemovePedScubaGearNow(ped float64) {}

func (_client) ClearPedSecondaryTask(ped float64) {}

func (_client) ClearPedStoredHatProp(ped float64) {}
func (_client) N_0x687c0b594907d2e8(ped float64) {}

func (_client) ClearPedTasks(ped float64) {}

/**
 * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
 */
func (_client) ClearPedTasksImmediately(ped float64) {}

/**
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
 */
func (_client) ClearPedWetness(ped float64) {}

func (_client) ClearPlayerHasDamagedAtLeastOneNonAnimalPed(player float64) {}

func (_client) ClearPlayerHasDamagedAtLeastOnePed(player float64) {}

func (_client) ClearPlayerParachuteModelOverride(player float64) {}

func (_client) ClearPlayerParachutePackModelOverride(player float64) {}

func (_client) ClearPlayerParachuteVariationOverride(player float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) ClearPlayerReserveParachuteModelOverride(player float64) {}

/**
 * This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);
 * PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.
 */
func (_client) ClearPlayerWantedLevel(player float64) {}

/**
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
 * Modified example from "am_imp_exp.c4", line 6418:
 *  -- [[ popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
 * etc.
 * ]] 
 * STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);
 * ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);
 */
func (_client) ClearPopscheduleOverrideVehicleModel(scheduleId float64) {}

func (_client) ClearPrints() {}

func (_client) ClearRaceGalleryBlips() {}
func (_client) N_0x2708fc083123f9ff() {}

/**
 * There seem to be 26 flags
 */
func (_client) ClearRagdollBlockingFlags(ped float64, flags float64) {}
/**
 * There seem to be 26 flags
 */
func (_client) N_0xd86d101fcfd00a4b(ped float64, flags float64) {}
/**
 * There seem to be 26 flags
 */
func (_client) ResetPedRagdollBlockingFlags(ped float64, flags float64) {}

/**
 * Clears the relationship between two groups. This should be called twice (once for each group).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * (Credits: Inco)
 * Example:
 * PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
 * PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
 */
func (_client) ClearRelationshipBetweenGroups(relationship float64, group1 interface{}, group2 interface{}) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) ClearReminderMessage() {}
/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xb57d8dd645cfa2cf() {}

func (_client) ClearReplayStats() {}

func (_client) ClearRestartCustomPosition() {}
func (_client) N_0xa2716d40842eaf79() {}
func (_client) SetNextRespawnToCustom() {}

func (_client) ClearRoomForEntity(entity float64) {}

func (_client) ClearRoomForGameViewport() {}
func (_client) N_0x23b59d8912f94246() {}

func (_client) ClearSequenceTask(taskSequenceId float64) {}

func (_client) ClearSmallPrints() {}

func (_client) ClearTacticalAnalysisPoints() {}
func (_client) N_0xb3cd58cca6cda852() {}

/**
 * p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z
 */
func (_client) ClearThisPrint(p0 string) {}

func (_client) ClearTimecycleModifier() {}

func (_client) ClearTvChannelPlaylist(tvChannel float64) {}
func (_client) N_0xbeb3d46bb7f043c0(tvChannel float64) {}

func (_client) ClearVehicleCustomPrimaryColour(vehicle float64) {}

func (_client) ClearVehicleCustomSecondaryColour(vehicle float64) {}

func (_client) ClearVehiclePhoneExplosiveDevice() {}
func (_client) N_0xaa3f739abddcf21f() {}

func (_client) ClearVehicleRouteHistory(vehicle float64) {}
func (_client) N_0x6d6af961b72728ae(vehicle float64) {}

/**
 * CLEAR_*
 * NativeDB Introduced: v1290
 * @param vehicle The vehicle to have tasks cleared
 */
func (_client) ClearVehicleTasks(vehicle float64) {}
/**
 * CLEAR_*
 * NativeDB Introduced: v1290
 * @param vehicle The vehicle to have tasks cleared
 */
func (_client) N_0xdbbc7a2432524127(vehicle float64) {}

func (_client) ClearWeatherTypePersist() {}

/**
 * Creates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data.
 * @param ped The input ped.
 * @param isNetwork Whether or not the ped should be registered as a network object.
 * @param bScriptHostPed Script host flag.
 * @param copyHeadBlendFlag If true, head blend data is referenced, not copied.
 * @return A new ped handle representing the ped's copy.
 */
func (_client) ClonePed(ped float64, isNetwork bool, bScriptHostPed bool, copyHeadBlendFlag bool) float64 {
	return 0.0
}

/**
 * Used one time in fmmc_launcher.c instead of CLONE_PED because ?
 */
func (_client) ClonePedEx(ped float64, heading float64, isNetwork bool, bScriptHostPed bool, p4 float64) float64 {
	return 0.0
}
/**
 * Used one time in fmmc_launcher.c instead of CLONE_PED because ?
 */
func (_client) N_0x668fd40bcba5de48(ped float64, heading float64, isNetwork bool, bScriptHostPed bool, p4 float64) float64 {
	return 0.0
}
/**
 * Used one time in fmmc_launcher.c instead of CLONE_PED because ?
 */
func (_client) ClonePed_2(ped float64, heading float64, isNetwork bool, bScriptHostPed bool, p4 float64) float64 {
	return 0.0
}

/**
 * Copies ped's components and props to targetPed.
 */
func (_client) ClonePedToTarget(ped float64, targetPed float64) {}
/**
 * Copies ped's components and props to targetPed.
 */
func (_client) AssignPlayerToPed(ped float64, targetPed float64) {}

func (_client) ClonePedToTargetEx(ped float64, targetPed float64, p2 float64) {}
func (_client) N_0x148b08c2d2acb884(ped float64, targetPed float64, p2 float64) {}

func (_client) CloseBombBayDoors(vehicle float64) {}
func (_client) N_0x3556041742a0dc74(vehicle float64) {}

func (_client) CloseMultiplayerChat() {}
func (_client) AbortTextChat() {}

func (_client) ClosePatrolRoute() {}

func (_client) CloseSequenceTask(taskSequenceId float64) {}

func (_client) CloseSocialClubMenu() {}
func (_client) N_0xd2b32be3fc1626c6() {}

/**
 * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
 */
func (_client) CloudCheckAvailability() {}
/**
 * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
 */
func (_client) N_0x4f18196c8d38768d() {}
/**
 * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
 */
func (_client) DownloadCheck() {}

func (_client) CloudDeleteMemberFile(p0 string) float64 {
	return 0.0
}
func (_client) N_0xc64ded7ef0d2fe37(p0 string) float64 {
	return 0.0
}

func (_client) CloudDidRequestSucceed(handle float64) bool;
func (_client) N_0x3a3d5568af297cd5(handle float64) bool;

func (_client) CloudGetAvailabilityCheckResult() bool;
func (_client) NetworkEnableMotionDrugged() bool;
func (_client) N_0x0b0cc10720653f3b() bool;

func (_client) CloudHasRequestCompleted(handle float64) bool;
func (_client) N_0x4c61b39930d045da(handle float64) bool;

func (_client) CloudIsCheckingAvailability() bool;
func (_client) N_0xc7abac5de675ee3b() bool;

/**
 * Commits the backing pixels to the specified runtime texture.
 * @param tex The runtime texture handle.
 */
func (_client) CommitRuntimeTexture(tex float64) {}

/**
 * Compares two strings up to a specified number of characters.
 * Parameters:
 * str1 - String to be compared.
 * str2 - String to be compared.
 * matchCase - Comparison will be case-sensitive.
 * maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
 * Returns:
 * A value indicating the relationship between the strings:
 * <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
 * 0 - The contents of both strings are equal.
 * >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
 * Examples:
 * MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
 * MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
 * MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
 * MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
 * MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal
 * When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
 * MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
 * MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
 */
func (_client) CompareStrings(str1 string, str2 string, matchCase bool, maxLength float64) float64 {
	return 0.0
}

/**
 * Works for vehicles with a retractable landing gear
 * landing gear states:
 * 0: Deployed
 * 1: Closing
 * 2: Opening
 * 3: Retracted
 */
func (_client) ControlLandingGear(vehicle float64, state float64) {}
/**
 * Works for vehicles with a retractable landing gear
 * landing gear states:
 * 0: Deployed
 * 1: Closing
 * 2: Opening
 * 3: Retracted
 */
func (_client) SetVehicleLandingGear(vehicle float64, state float64) {}

/**
 * Forces the ped to use the mounted weapon.
 * Returns false if task is not possible.
 */
func (_client) ControlMountedWeapon(ped float64) bool;

/**
 * Takes the specified time and writes it to the structure specified in the second argument.
 * struct date_time
 * {
 * alignas(8) int year;
 * alignas(8) int month;
 * alignas(8) int day;
 * alignas(8) int hour;
 * alignas(8) int minute;
 * alignas(8) int second;
 * };
 */
func (_client) ConvertPosixTime(posixTime float64, timeStructure float64) float64 {
	return 0.0
}
/**
 * Takes the specified time and writes it to the structure specified in the second argument.
 * struct date_time
 * {
 * alignas(8) int year;
 * alignas(8) int month;
 * alignas(8) int day;
 * alignas(8) int hour;
 * alignas(8) int minute;
 * alignas(8) int second;
 * };
 */
func (_client) GetDateAndTimeFromUnixEpoch(posixTime float64, timeStructure float64) float64 {
	return 0.0
}

func (_client) CopyMemory(src float64, size float64) float64 {
	return 0.0
}
func (_client) N_0x213aeb2b90cba7ac(src float64, size float64) float64 {
	return 0.0
}

/**
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 * @param sourceVehicle The source to copy the vehicle damage.
 * @param targetVehicle The target to paste the vehicle damage.
 */
func (_client) CopyVehicleDamages(sourceVehicle float64, targetVehicle float64) {}
/**
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 * @param sourceVehicle The source to copy the vehicle damage.
 * @param targetVehicle The target to paste the vehicle damage.
 */
func (_client) N_0xe44a982368a4af23(sourceVehicle float64, targetVehicle float64) {}

/**
 * Returns the cosine of the given number.
 * @param value The number of degrees (in degrees, not radians)
 * @return The cosine of the given number
 */
func (_client) Cos(value float64) float64 {
	return 0.0
}

func (_client) CreateAirDefenseArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, weaponHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x9da58cdbf6bdbc08(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Both coordinates are from objects in the decompiled scripts.
 * Native related to [\_0xECDC202B25E5CF48](#\_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
 * @param x X coordinate
 * @param y Y coordinate
 * @param z Z coordinate
 * @param radius Unknown float 150.0 is used in freemode script.
 * @param p4 X coordinate
 * @param p5 Y coordinate
 * @param p6 Z coordinate
 * @param weaponHash weapon_air_defence_gun and 0 are used in the decompiled scripts.
 * @return Seems to be some sort of handle, result is += 1 any time this native is called.
 */
func (_client) CreateAirDefenseSphere(x float64, y float64, z float64, radius float64, p4 float64, p5 float64, p6 float64, weaponHash interface{}) float64 {
	return 0.0
}
/**
 * Both coordinates are from objects in the decompiled scripts.
 * Native related to [\_0xECDC202B25E5CF48](#\_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
 * @param x X coordinate
 * @param y Y coordinate
 * @param z Z coordinate
 * @param radius Unknown float 150.0 is used in freemode script.
 * @param p4 X coordinate
 * @param p5 Y coordinate
 * @param p6 Z coordinate
 * @param weaponHash weapon_air_defence_gun and 0 are used in the decompiled scripts.
 * @return Seems to be some sort of handle, result is += 1 any time this native is called.
 */
func (_client) N_0x91ef34584710be99(x float64, y float64, z float64, radius float64, p4 float64, p5 float64, p6 float64, weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Used for doing money drop
 * Pickup hashes: pastebin.com/8EuSv2r1
 */
func (_client) CreateAmbientPickup(pickupHash interface{}, posX float64, posY float64, posZ float64, flags float64, value float64, modelHash interface{}, returnHandle bool, p8 bool) float64 {
	return 0.0
}

/**
 * Creates an audio submix with the specified name, or gets the existing audio submix by that name.
 * @param name The audio submix name.
 * @return A submix ID, or -1 if the submix could not be created.
 */
func (_client) CreateAudioSubmix(name string) float64 {
	return 0.0
}

/**
 * "DEFAULT_SCRIPTED_CAMERA"
 * "DEFAULT_ANIMATED_CAMERA"
 * "DEFAULT_SPLINE_CAMERA"
 * "DEFAULT_SCRIPTED_FLY_CAMERA"
 * "TIMED_SPLINE_CAMERA"
 */
func (_client) CreateCam(camName string, p1 bool) float64 {
	return 0.0
}

/**
 * camName is always set to "DEFAULT_SCRIPTED_CAMERA" in Rockstar's scripts.
 * ------------
 * Camera names found in the b617d scripts:
 * "DEFAULT_ANIMATED_CAMERA"
 * "DEFAULT_SCRIPTED_CAMERA"
 * "DEFAULT_SCRIPTED_FLY_CAMERA"
 * "DEFAULT_SPLINE_CAMERA"
 * ------------
 * Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native. As well as the p9 since it's always 2 in scripts seems to represent what would be the last param within SET_CAM_ROT native which normally would be 2.
 */
func (_client) CreateCamWithParams(camName string, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, fov float64, p8 bool, p9 float64) float64 {
	return 0.0
}

func (_client) CreateCamera(camHash interface{}, p1 bool) float64 {
	return 0.0
}

/**
 * CAM::_GET_GAMEPLAY_CAM_COORDS can be used instead of posX,Y,Z
 * CAM::_GET_GAMEPLAY_CAM_ROT can be used instead of rotX,Y,Z
 * CAM::_80EC114669DAEFF4() can be used instead of p7 (Possible p7 is FOV parameter. )
 * p8 ???
 * p9 uses 2 by default
 */
func (_client) CreateCameraWithParams(camHash interface{}, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, fov float64, p8 bool, p9 float64) float64 {
	return 0.0
}

/**
 * ```
 * Creates a checkpoint. Returns the handle of the checkpoint.
 * 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
 * Parameters:
 * * type - The type of checkpoint to create. See below for a list of checkpoint types.
 * * pos1 - The position of the checkpoint.
 * * pos2 - The position of the next checkpoint to point to.
 * * diameter - The diameter of the checkpoint.
 * * color - The color of the checkpoint.
 * * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
 * Checkpoint types (prior to game build 2189):
 * 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
 * 39----------?
 * 40----------Ring: just a ring
 * 41----------?
 * 42-44-------Cylinder w/ number (uses 'reserved' parameter)
 * 45-47-------Cylinder no arrow or number
 * If using type 42-44, reserved sets number / number and shape to display
 * 0-99------------Just numbers (0-99)
 * 100-109-----------------Arrow (0-9)
 * 110-119------------Two arrows (0-9)
 * 120-129----------Three arrows (0-9)
 * 130-139----------------Circle (0-9)
 * 140-149------------CycleArrow (0-9)
 * 150-159----------------Circle (0-9)
 * 160-169----Circle  w/ pointer (0-9)
 * 170-179-------Perforated ring (0-9)
 * 180-189----------------Sphere (0-9)
 * ```
 * [Checkpoint Types](https://docs.fivem.net/docs/game-references/checkpoints/) as of game build 2189
 */
func (_client) CreateCheckpoint(_type float64, posX1 float64, posY1 float64, posZ1 float64, posX2 float64, posY2 float64, posZ2 float64, diameter float64, red float64, green float64, blue float64, alpha float64, reserved float64) float64 {
	return 0.0
}

func (_client) CreateCinematicShot(p0 float64, p1 float64, p2 float64, entity float64) {}

/**
 * Creates a DUI browser. This can be used to draw on a runtime texture using CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
 * @param url The initial URL to load in the browser.
 * @param width The width of the backing surface.
 * @param height The height of the backing surface.
 * @return A DUI object.
 */
func (_client) CreateDui(url string, width float64, height float64) float64 {
	return 0.0
}

/**
 * clanFlag: takes a number 0-5
 * @param clanFlag takes a number 0-5
 */
func (_client) CreateFakeMpGamerTag(ped float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64) float64 {
	return 0.0
}
/**
 * clanFlag: takes a number 0-5
 * @param clanFlag takes a number 0-5
 */
func (_client) N_0xbfefe3321a3f5015(ped float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64) float64 {
	return 0.0
}
/**
 * clanFlag: takes a number 0-5
 * @param clanFlag takes a number 0-5
 */
func (_client) CreateMpGamerTag(ped float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64) float64 {
	return 0.0
}

func (_client) CreateForcedObject(x float64, y float64, z float64, p3 float64, modelHash interface{}, p5 bool) {}

/**
 * Creates a new ped group.
 * Groups can contain up to 8 peds.
 * The parameter is unused.
 * Returns a handle to the created group, or 0 if a group couldn't be created.
 */
func (_client) CreateGroup(unused float64) float64 {
	return 0.0
}

/**
 * enum IncidentTypes
 * {
 * FireDepartment = 3,
 * Paramedics = 5,
 * Police = 7,
 * PedsInCavalcades = 11,
 * Merryweather = 14
 * };
 * As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
 * Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
 * Side Note 2: I say it breaks as if you call this proper,
 * if(CREATE_INCIDENT) etc it will return false if you do as I said above.
 * =====================================================
 * ```
 * ```
 * NativeDB Added Parameter 8: Any p7
 * NativeDB Added Parameter 9: Any p8
 */
func (_client) CreateIncident(dispatchService float64, x float64, y float64, z float64, numUnits float64, radius float64, outIncidentID float64)  (bool, float64){
	return false,0.0
}

/**
 * p0 could be type (valueused in scripts: 14, 7, 5, 3, 11)
 * p1 is a return from get_player_ped() in am_gang_call.c, but player_ped_id() in other (non am) scripts.
 * p3 is usually 0f or 3f
 * =====================================================
 * enum IncidentTypes
 * {
 * FireDepartment = 3,
 * Paramedics = 5,
 * Police = 7,
 * PedsInCavalcades = 11,
 * Merryweather = 14
 * };
 * As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
 * Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
 * Side Note 2: I say it breaks as if you call this proper,
 * if(CREATE_INCIDENT) etc it will return false if you do as I said above.
 * =====================================================
 * ```
 * ```
 * NativeDB Added Parameter 6: Any p5
 * NativeDB Added Parameter 7: Any p6
 */
func (_client) CreateIncidentWithEntity(dispatchService float64, ped float64, numUnits float64, radius float64, outIncidentID float64)  (bool, float64){
	return false,0.0
}

func (_client) CreateItemset(distri bool) float64 {
	return 0.0
}

/**
 * Train models must be [requested](#\_0x963D27A58DF860AC) before use. See trains.xml for freight and metro variations.
 * ```
 * NativeDB Added Parameter 6: Any p5
 * NativeDB Added Parameter 7: Any p6
 * ```
 * ### Train Models:
 * *   freight
 * *   freightcar
 * *   freightcar2 (Added v2372)
 * *   freightcont1
 * *   freightcont2
 * *   freightgrain
 * *   metrotrain
 * *   tankercar
 */
func (_client) CreateMissionTrain(variation float64, x float64, y float64, z float64, direction bool) float64 {
	return 0.0
}

/**
 * Creates a mobile phone of the specified type.
 * Possible phone types:
 * 0 - Default phone / Michael's phone
 * 1 - Trevor's phone
 * 2 - Franklin's phone
 * 4 - Prologue phone
 * These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.
 */
func (_client) CreateMobilePhone(phoneType float64) {}

/**
 * p5 = sets as true in scripts
 * Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
 * Network players do not see changes done with this.
 */
func (_client) CreateModelHide(x float64, y float64, z float64, radius float64, model interface{}, p5 bool) {}

func (_client) CreateModelHideExcludingScriptObjects(x float64, y float64, z float64, radius float64, model interface{}, p5 bool) {}

/**
 * Only works with objects!
 * Network players do not see changes done with this.
 */
func (_client) CreateModelSwap(x float64, y float64, z float64, radius float64, originalModel interface{}, newModel interface{}, p6 bool) {}

/**
 * Spawns one or more money pickups.
 * x: The X-component of the world position to spawn the money pickups at.
 * y: The Y-component of the world position to spawn the money pickups at.
 * z: The Z-component of the world position to spawn the money pickups at.
 * value: The combined value of the pickups (in dollars).
 * amount: The number of pickups to spawn.
 * model: The model to use, or 0 for default money model.
 * Example:
 * CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
 * Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
 * ==============================================
 * Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
 */
func (_client) CreateMoneyPickups(x float64, y float64, z float64, value float64, amount float64, model interface{}) {}

/**
 * clanFlag: takes a number 0-5
 * @param player the headDisplayId for the net players is the same as the local id of the ped
 * @param clanFlag takes a number 0-5
 */
func (_client) CreateMpGamerTagWithCrewColor(player float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64, r float64, g float64, b float64) {}
/**
 * clanFlag: takes a number 0-5
 * @param player the headDisplayId for the net players is the same as the local id of the ped
 * @param clanFlag takes a number 0-5
 */
func (_client) N_0x6dd05e9d83efa4c9(player float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64, r float64, g float64, b float64) {}
/**
 * clanFlag: takes a number 0-5
 * @param player the headDisplayId for the net players is the same as the local id of the ped
 * @param clanFlag takes a number 0-5
 */
func (_client) CreateMpGamerTagColor(player float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64, r float64, g float64, b float64) {}
/**
 * clanFlag: takes a number 0-5
 * @param player the headDisplayId for the net players is the same as the local id of the ped
 * @param clanFlag takes a number 0-5
 */
func (_client) SetMpGamerTagColor(player float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64, r float64, g float64, b float64) {}
/**
 * clanFlag: takes a number 0-5
 * @param player the headDisplayId for the net players is the same as the local id of the ped
 * @param clanFlag takes a number 0-5
 */
func (_client) CreateMpGamerTagForNetPlayer(player float64, username string, pointedClanTag bool, isRockstarClan bool, clanTag string, clanFlag float64, r float64, g float64, b float64) {}

func (_client) CreateNewScriptedConversation() {}

/**
 * Creates a new NaturalMotion message.
 * startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
 * messageId: The ID of the NaturalMotion message.
 * If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
 */
func (_client) CreateNmMessage(startImmediately bool, messageId float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) CreateNonNetworkedAmbientPickup(pickupHash float64, posX float64, posY float64, posZ float64, flags float64, value float64, modelHash float64, p7 bool, p8 bool) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x9c93764223e29c50(pickupHash float64, posX float64, posY float64, posZ float64, flags float64, value float64, modelHash float64, p7 bool, p8 bool) float64 {
	return 0.0
}

func (_client) CreateNonNetworkedPortablePickup(pickupHash interface{}, x float64, y float64, z float64, placeOnGround bool, modelHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x125494b98a21aaf7(pickupHash interface{}, x float64, y float64, z float64, placeOnGround bool, modelHash interface{}) float64 {
	return 0.0
}
func (_client) CreatePortablePickup_2(pickupHash interface{}, x float64, y float64, z float64, placeOnGround bool, modelHash interface{}) float64 {
	return 0.0
}

/**
 * Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
 * This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * @param modelHash The model to spawn.
 * @param x Spawn coordinate X component.
 * @param y Spawn coordinate Y component.
 * @param z Spawn coordinate Z component, 'ground level'.
 * @param isNetwork Whether to create a network object for the object. If false, the object exists only locally.
 * @param netMissionEntity Whether to register the object as pinned to the script host in the R\* network model.
 * @param doorFlag False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
 * @return A script handle (fwScriptGuid index) for the object, or `0` if the object failed to be created.
 */
func (_client) CreateObject(modelHash interface{}, x float64, y float64, z float64, isNetwork bool, netMissionEntity bool, doorFlag bool) float64 {
	return 0.0
}

/**
 * Creates an object (prop) with the specified model centered at the specified position.
 * This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * @param modelHash The model to spawn.
 * @param x Spawn coordinate X component.
 * @param y Spawn coordinate Y component.
 * @param z Spawn coordinate Z component.
 * @param isNetwork Whether to create a network object for the object. If false, the object exists only locally.
 * @param netMissionEntity Whether to register the object as pinned to the script host in the R\* network model.
 * @param doorFlag False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
 * @return A script handle (fwScriptGuid index) for the object, or `0` if the object failed to be created.
 */
func (_client) CreateObjectNoOffset(modelHash interface{}, x float64, y float64, z float64, isNetwork bool, netMissionEntity bool, doorFlag bool) float64 {
	return 0.0
}

func (_client) CreateParachuteBagObject(ped float64, p1 bool, p2 bool) float64 {
	return 0.0
}
func (_client) N_0x8c4f3bf23b6237db(ped float64, p1 bool, p2 bool) float64 {
	return 0.0
}
func (_client) CreateParachuteObject(ped float64, p1 bool, p2 bool) float64 {
	return 0.0
}

func (_client) CreatePatrolRoute() {}

/**
 * Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
 * This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
 * (e.g. using REQUEST_MODEL).
 * @param pedType Unused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.
 * @param modelHash The model of ped to spawn.
 * @param x Spawn coordinate X component.
 * @param y Spawn coordinate Y component.
 * @param z Spawn coordinate Z component.
 * @param heading Heading to face towards, in degrees.
 * @param isNetwork Whether to create a network object for the ped. If false, the ped exists only locally.
 * @param bScriptHostPed Whether to register the ped as pinned to the script host in the R\* network model.
 * @return A script handle (fwScriptGuid index) for the ped, or `0` if the ped failed to be created.
 */
func (_client) CreatePed(pedType float64, modelHash interface{}, x float64, y float64, z float64, heading float64, isNetwork bool, bScriptHostPed bool) float64 {
	return 0.0
}

func (_client) CreatePedInsideVehicle(vehicle float64, pedType float64, modelHash interface{}, seat float64, isNetwork bool, bScriptHostPed bool) float64 {
	return 0.0
}

/**
 * Drops the Hook/Magnet on a cargobob
 * state
 * enum eCargobobHook
 * {
 * CARGOBOB_HOOK = 0,
 * CARGOBOB_MAGNET = 1,
 * };
 */
func (_client) CreatePickUpRopeForCargobob(cargobob float64, state float64) {}
/**
 * Drops the Hook/Magnet on a cargobob
 * state
 * enum eCargobobHook
 * {
 * CARGOBOB_HOOK = 0,
 * CARGOBOB_MAGNET = 1,
 * };
 */
func (_client) EnableCargobobHook(cargobob float64, state float64) {}

/**
 * Pickup hashes: pastebin.com/8EuSv2r1
 */
func (_client) CreatePickup(pickupHash interface{}, posX float64, posY float64, posZ float64, p4 float64, value float64, p6 bool, modelHash interface{}) float64 {
	return 0.0
}

/**
 * Pickup hashes: pastebin.com/8EuSv2r1
 * flags:
 * 8 (1 << 3): place on ground
 * 512 (1 << 9): spin around
 */
func (_client) CreatePickupRotate(pickupHash interface{}, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, flag float64, amount float64, p9 float64, p10 bool, modelHash interface{}) float64 {
	return 0.0
}

/**
 * Pickup hashes: pastebin.com/8EuSv2r1
 */
func (_client) CreatePortablePickup(pickupHash interface{}, x float64, y float64, z float64, placeOnGround bool, modelHash interface{}) float64 {
	return 0.0
}

/**
 * vb.net
 * Dim ped_handle As Integer
 * With Game.Player.Character
 * Dim pos As Vector3 = .Position + .ForwardVector * 3
 * ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
 * End With
 * Creates a Ped at the specified location, returns the Ped Handle.
 * Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
 */
func (_client) CreateRandomPed(posX float64, posY float64, posZ float64) float64 {
	return 0.0
}

func (_client) CreateRandomPedAsDriver(vehicle float64, returnHandle bool) float64 {
	return 0.0
}

/**
 * Creates a blank runtime texture.
 * @param txd A handle to the runtime TXD to create the runtime texture in.
 * @param txn The name for the texture in the runtime texture dictionary.
 * @param width The width of the new texture.
 * @param height The height of the new texture.
 * @return A runtime texture handle.
 */
func (_client) CreateRuntimeTexture(txd float64, txn string, width float64, height float64) float64 {
	return 0.0
}

/**
 * Creates a runtime texture from a DUI handle.
 * @param txd A handle to the runtime TXD to create the runtime texture in.
 * @param txn The name for the texture in the runtime texture dictionary.
 * @param duiHandle The DUI handle returned from GET_DUI_HANDLE.
 * @return The runtime texture handle.
 */
func (_client) CreateRuntimeTextureFromDuiHandle(txd float64, txn string, duiHandle string) float64 {
	return 0.0
}

/**
 * Creates a runtime texture from the specified file in the current resource.
 * @param txd A handle to the runtime TXD to create the runtime texture in.
 * @param txn The name for the texture in the runtime texture dictionary.
 * @param fileName The file name of an image to load. This should preferably be a PNG, and has to be specified as a `file` in the resource manifest.
 * @return A runtime texture handle.
 */
func (_client) CreateRuntimeTextureFromImage(txd float64, txn string, fileName string) float64 {
	return 0.0
}

/**
 * Creates a runtime texture dictionary with the specified name.
 * Example:
 * ```lua
 * local txd = CreateRuntimeTxd('meow')
 * ```
 * @param name The name for the runtime TXD.
 * @return A handle to the runtime TXD.
 */
func (_client) CreateRuntimeTxd(name string) float64 {
	return 0.0
}

/**
 * Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
 * Parameters:
 * a/w/s - Generator position
 * heading - Generator heading
 * p4 - Unknown (always 5.0)
 * p5 - Unknown (always 3.0)
 * modelHash - Vehicle model hash
 * p7/8/9/10 - Unknown (always -1)
 * p11 - Unknown (usually TRUE, only one instance of FALSE)
 * p12/13 - Unknown (always FALSE)
 * p14 - Unknown (usally FALSE, only two instances of TRUE)
 * p15 - Unknown (always TRUE)
 * p16 - Unknown (always -1)
 * Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
 */
func (_client) CreateScriptVehicleGenerator(x float64, y float64, z float64, heading float64, p4 float64, p5 float64, modelHash interface{}, p7 float64, p8 float64, p9 float64, p10 float64, p11 bool, p12 bool, p13 bool, p14 bool, p15 bool, p16 float64) float64 {
	return 0.0
}

/**
 * p6 always 2 (but it doesnt seem to matter...)
 * roll and pitch 0
 * yaw to Ped.rotation
 */
func (_client) CreateSynchronizedScene(x float64, y float64, z float64, roll float64, pitch float64, yaw float64, p6 float64) float64 {
	return 0.0
}

func (_client) CreateSynchronizedScene_2(x float64, y float64, z float64, radius float64, object interface{}) float64 {
	return 0.0
}
func (_client) N_0x62ec273d00187dca(x float64, y float64, z float64, radius float64, object interface{}) float64 {
	return 0.0
}

/**
 * Creates a tracked point: useful for checking the visibility of a 3D point on screen.
 * Tracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See [`DESTROY_TRACKED_POINT`](#\_0xB25DC90BAD56CA42) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/).
 * Only 64 points may be tracked at a given time.
 */
func (_client) CreateTrackedPoint() float64 {
	return 0.0
}

/**
 * Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
 * script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * ```
 * NativeDB Added Parameter 8: BOOL p7
 * ```
 * @param modelHash The model of vehicle to spawn.
 * @param x Spawn coordinate X component.
 * @param y Spawn coordinate Y component.
 * @param z Spawn coordinate Z component.
 * @param heading Heading to face towards, in degrees.
 * @param isNetwork Whether to create a network object for the vehicle. If false, the vehicle exists only locally.
 * @param netMissionEntity Whether to register the vehicle as pinned to the script host in the R\* network model.
 * @return A script handle (fwScriptGuid index) for the vehicle, or `0` if the vehicle failed to be created.
 */
func (_client) CreateVehicle(modelHash interface{}, x float64, y float64, z float64, heading float64, isNetwork bool, netMissionEntity bool) float64 {
	return 0.0
}

/**
 * Now has 8 params.
 * ```
 * ```
 * NativeDB Added Parameter 9: Any p8
 * NativeDB Added Parameter 10: Any p9
 */
func (_client) CreateWeaponObject(weaponHash interface{}, ammoCount float64, x float64, y float64, z float64, showWorldModel bool, scale float64, p7 float64) float64 {
	return 0.0
}

/**
 * some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
 */
func (_client) CustomMenuCoordinates(p0 float64) {}
/**
 * some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
 */
func (_client) N_0x487a82c650eb7799(p0 float64) {}

func (_client) DataarrayAddBool(value bool) float64 {
	return 0.0
}
func (_client) ArrayValueAddBoolean(value bool) float64 {
	return 0.0
}

func (_client) DataarrayAddDict(arrayData float64) (float64, float64) { return 0.0, 0.0 };
func (_client) ArrayValueAddObject(arrayData float64) (float64, float64) { return 0.0, 0.0 };

func (_client) DataarrayAddFloat(value float64) float64 {
	return 0.0
}
func (_client) ArrayValueAddFloat(value float64) float64 {
	return 0.0
}

func (_client) DataarrayAddInt(value float64) float64 {
	return 0.0
}
func (_client) ArrayValueAddInteger(value float64) float64 {
	return 0.0
}

func (_client) DataarrayAddString(value string) float64 {
	return 0.0
}
func (_client) ArrayValueAddString(value string) float64 {
	return 0.0
}

func (_client) DataarrayAddVector(valueX float64, valueY float64, valueZ float64) float64 {
	return 0.0
}
func (_client) ArrayValueAddVector3(valueX float64, valueY float64, valueZ float64) float64 {
	return 0.0
}

func (_client) DataarrayGetBool(arrayIndex float64)  (bool, float64){
	return false,0.0
}
func (_client) ArrayValueGetBoolean(arrayIndex float64)  (bool, float64){
	return false,0.0
}

func (_client) DataarrayGetCount(arrayData float64) (float64, float64) { return 0.0, 0.0 };
func (_client) ArrayValueGetSize(arrayData float64) (float64, float64) { return 0.0, 0.0 };

func (_client) DataarrayGetDict(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };
func (_client) ArrayValueGetObject(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };

func (_client) DataarrayGetFloat(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };
func (_client) ArrayValueGetFloat(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };

func (_client) DataarrayGetInt(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };
func (_client) ArrayValueGetInteger(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };

func (_client) DataarrayGetString(arrayIndex float64)  (string, float64){
	return false,0.0
}
func (_client) ArrayValueGetString(arrayIndex float64)  (string, float64){
	return false,0.0
}

/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 */
func (_client) DataarrayGetType(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };
/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 */
func (_client) ArrayValueGetType(arrayIndex float64) (float64, float64) { return 0.0, 0.0 };

func (_client) DataarrayGetVector(arrayIndex float64)  (interface{}, float64){
	return nil,0.0
}
func (_client) ArrayValueGetVector3(arrayIndex float64)  (interface{}, float64){
	return nil,0.0
}

func (_client) DatadictCreateArray(key string) (float64, float64) { return 0.0, 0.0 };
func (_client) ObjectValueAddArray(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictCreateDict(key string) (float64, float64) { return 0.0, 0.0 };
func (_client) ObjectValueAddObject(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictGetArray(key string) (float64, float64) { return 0.0, 0.0 };
func (_client) ObjectValueGetArray(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictGetBool(key string)  (bool, float64){
	return false,0.0
}
func (_client) ObjectValueGetBoolean(key string)  (bool, float64){
	return false,0.0
}

func (_client) DatadictGetDict(key string) (float64, float64) { return 0.0, 0.0 };
func (_client) ObjectValueGetObject(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictGetFloat(key string) (float64, float64) { return 0.0, 0.0 };
func (_client) ObjectValueGetFloat(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictGetInt(key string) (float64, float64) { return 0.0, 0.0 };
func (_client) ObjectValueGetInteger(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictGetString(key string)  (string, float64){
	return false,0.0
}
func (_client) ObjectValueGetString(key string)  (string, float64){
	return false,0.0
}

/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 */
func (_client) DatadictGetType(key string) (float64, float64) { return 0.0, 0.0 };
/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 */
func (_client) ObjectValueGetType(key string) (float64, float64) { return 0.0, 0.0 };

func (_client) DatadictGetVector(key string)  (interface{}, float64){
	return nil,0.0
}
func (_client) ObjectValueGetVector3(key string)  (interface{}, float64){
	return nil,0.0
}

func (_client) DatadictSetBool(key string, value bool) float64 {
	return 0.0
}
func (_client) ObjectValueAddBoolean(key string, value bool) float64 {
	return 0.0
}

func (_client) DatadictSetFloat(key string, value float64) float64 {
	return 0.0
}
func (_client) ObjectValueAddFloat(key string, value float64) float64 {
	return 0.0
}

func (_client) DatadictSetInt(key string, value float64) float64 {
	return 0.0
}
func (_client) ObjectValueAddInteger(key string, value float64) float64 {
	return 0.0
}

func (_client) DatadictSetString(key string, value string) float64 {
	return 0.0
}
func (_client) ObjectValueAddString(key string, value string) float64 {
	return 0.0
}

func (_client) DatadictSetVector(key string, valueX float64, valueY float64, valueZ float64) float64 {
	return 0.0
}
func (_client) ObjectValueAddVector3(key string, valueX float64, valueY float64, valueZ float64) float64 {
	return 0.0
}

func (_client) DatafileClearWatchList() {}
func (_client) N_0x6cc86e78358d5119() {}

/**
 * NativeDB Added Parameter 1: int p0
 */
func (_client) DatafileCreate() {}

/**
 * NativeDB Added Parameter 1: int p0
 */
func (_client) DatafileDelete() {}

func (_client) DatafileDeleteRequestedFile(p0 float64) bool;
func (_client) N_0x8f5ea1c01d65a100(p0 float64) bool;

func (_client) DatafileFlushMissionHeader() {}
func (_client) N_0xc55854c7d7274882() {}

/**
 * NativeDB Added Parameter 1: int p0
 */
func (_client) DatafileGetFileDict() string;
/**
 * NativeDB Added Parameter 1: int p0
 */
func (_client) N_0x906b778ca1dc72b6() string;

func (_client) DatafileHasLoadedFileData(p0 float64) bool;
func (_client) N_0x15ff52b809db2353(p0 float64) bool;

func (_client) DatafileHasValidFileData(p0 float64) bool;
func (_client) N_0xf8cc1ebe0b62e29f(p0 float64) bool;

/**
 * Example:
 * if (!DATAFILE::_BEDB96A7584AA8CF())
 * {
 * if (!g_109E3)
 * {
 * if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
 * {
 * if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())
 * {
 * g_17A8B = 0;
 * }
 * if (!g_D52C)
 * {
 * sub_730();
 * }
 * }
 * }
 * }
 */
func (_client) DatafileIsSavePending() bool;
/**
 * Example:
 * if (!DATAFILE::_BEDB96A7584AA8CF())
 * {
 * if (!g_109E3)
 * {
 * if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
 * {
 * if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())
 * {
 * g_17A8B = 0;
 * }
 * if (!g_D52C)
 * {
 * sub_730();
 * }
 * }
 * }
 * }
 */
func (_client) N_0xbedb96a7584aa8cf() bool;

func (_client) DatafileIsValidRequestId(index float64) bool;
func (_client) N_0xfccae5b92a830878(index float64) bool;

/**
 * Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
 * Returns whether or not the file was successfully loaded.
 * Example:
 * DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) DatafileLoadOfflineUgc(filename string) bool;
/**
 * Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
 * Returns whether or not the file was successfully loaded.
 * Example:
 * DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) LoadUgcFile(filename string) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) DatafileSelectActiveFile(p0 float64) bool;
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x22da66936e0fff37(p0 float64) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) DatafileSelectCreatorStats(p0 float64) bool;
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x01095c95cd46b624(p0 float64) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) DatafileSelectUgcData(p0 float64) bool;
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0xa69ac4ade82b57a4(p0 float64) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) DatafileSelectUgcPlayerData(p0 float64) bool;
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x52818819057f2b40(p0 float64) bool;

/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) DatafileSelectUgcStats(p0 float64, p1 bool) bool;
/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) N_0x9cb0bfa7a9342c3d(p0 float64, p1 bool) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) DatafileStartSaveToCloud(filename string) bool;
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x83bcce3224735f05(filename string) bool;

/**
 * NativeDB Added Parameter 1: int p0
 */
func (_client) DatafileStoreMissionHeader() {}
/**
 * NativeDB Added Parameter 1: int p0
 */
func (_client) N_0x2ed61456317b8178() {}

func (_client) DatafileUpdateSaveToCloud()  (bool,interface{}){
	return false,nil
}
func (_client) N_0x4dfdd9eb705f8140()  (bool,interface{}){
	return false,nil
}

/**
 * Adds the given request ID to the watch list.
 */
func (_client) DatafileWatchRequestId(id float64) {}
/**
 * Adds the given request ID to the watch list.
 */
func (_client) N_0xad6875bbc0fc899c(id float64) {}

func (_client) DeactivateAudioSlowmoMode(p0 string) {}
func (_client) N_0xddc635d5b3262c56(p0 string) {}

func (_client) DeactivateInteriorEntitySet(interior float64, entitySetName string) {}
func (_client) N_0x420bd37289eee162(interior float64, entitySetName string) {}
func (_client) DisableInteriorProp(interior float64, entitySetName string) {}

/**
 * Returns whether or not the specified property is set for the entity.
 */
func (_client) DecorExistOn(entity float64, propertyName string) bool;

func (_client) DecorGetBool(entity float64, propertyName string) bool;

func (_client) DecorGetFloat(entity float64, propertyName string) float64 {
	return 0.0
}
func (_client) DecorGetFloat(entity float64, propertyName string) float64 {
	return 0.0
}

func (_client) DecorGetInt(entity float64, propertyName string) float64 {
	return 0.0
}

func (_client) DecorIsRegisteredAsType(propertyName string, _type float64) bool;

/**
 * https://alloc8or.re/gta5/doc/enums/eDecorType.txt
 */
func (_client) DecorRegister(propertyName string, _type float64) {}

/**
 * Called after all decorator type initializations.
 */
func (_client) DecorRegisterLock() {}

func (_client) DecorRemove(entity float64, propertyName string) bool;

/**
 * This function sets metadata of type bool to specified entity.
 */
func (_client) DecorSetBool(entity float64, propertyName string, value bool) bool;

func (_client) DecorSetFloat(entity float64, propertyName string, value float64) bool;
func (_client) DecorSetFloat(entity float64, propertyName string, value float64) bool;

/**
 * Sets property to int.
 */
func (_client) DecorSetInt(entity float64, propertyName string, value float64) bool;

func (_client) DecorSetTime(entity float64, propertyName string, timestamp float64) bool;

func (_client) DeleteAllTrains() {}

func (_client) DeleteCheckpoint(checkpoint float64) {}

func (_client) DeleteChildRope(ropeId float64) {}

/**
 * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
 * @param entity The entity to delete.
 */
func (_client) DeleteEntity(entity float64) {}

func (_client) DeleteFunctionReference(referenceIdentity string) {}

/**
 * Delete an incident with a given id.
 * =======================================================
 * Correction, I have change this to int, instead of int*
 * as it doesn't use a pointer to the createdIncident.
 * If you try it you will crash (or) freeze.
 * =======================================================
 */
func (_client) DeleteIncident(incidentId float64) {}

func (_client) DeleteMissionTrain(train float64) {}

/**
 * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
 */
func (_client) DeleteObject(object float64) {}

/**
 * From the b617d scripts:
 * TASK::DELETE_PATROL_ROUTE("miss_merc0");
 * TASK::DELETE_PATROL_ROUTE("miss_merc1");
 * TASK::DELETE_PATROL_ROUTE("miss_merc2");
 * TASK::DELETE_PATROL_ROUTE("miss_dock");
 */
func (_client) DeletePatrolRoute(patrolRoute string) {}

/**
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
 */
func (_client) DeletePed(ped float64) {}

func (_client) DeleteResourceKvp(key string) {}

func (_client) DeleteRope(ropeId float64) {}

func (_client) DeleteScriptVehicleGenerator(vehicleGenerator float64) {}

func (_client) DeleteStuntJump(p0 float64) {}

/**
 * Deletes a vehicle.
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * eg how to use:
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * DELETE_VEHICLE(&vehicle);
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
 */
func (_client) DeleteVehicle(vehicle float64) {}

func (_client) DeleteWaypoint() {}
func (_client) N_0xd8e694757bcea8e9() {}

/**
 * Does nothing and always returns false.
 */
func (_client) DepositVc(amount float64) bool;
/**
 * Does nothing and always returns false.
 */
func (_client) N_0xe260e0bb9cd995ac(amount float64) bool;

/**
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 */
func (_client) DestroyAllCams(bScriptHostCam bool) {}

/**
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 */
func (_client) DestroyCam(cam float64, bScriptHostCam bool) {}

/**
 * Destroys a DUI browser.
 * @param duiObject The DUI browser handle.
 */
func (_client) DestroyDui(duiObject float64) {}

func (_client) DestroyItemset(p0 float64) {}

/**
 * Destroys the currently active mobile phone.
 */
func (_client) DestroyMobilePhone() {}

func (_client) DestroyTrackedPoint(point float64) {}

func (_client) DetachCam(cam float64) {}

func (_client) DetachContainerFromHandlerFrame(vehicle float64) {}
func (_client) N_0x7c0043fdff6436bc(vehicle float64) {}

func (_client) DetachEntity(entity float64, dynamic bool, collision bool) {}

func (_client) DetachEntityFromCargobob(vehicle float64, entity float64) float64 {
	return 0.0
}
func (_client) N_0xaf03011701811146(vehicle float64, entity float64) float64 {
	return 0.0
}

func (_client) DetachPortablePickupFromPed(pickupObject float64) {}

func (_client) DetachRopeFromEntity(ropeId float64, entity float64) {}

func (_client) DetachSynchronizedScene(sceneID float64) {}

func (_client) DetachVehicleFromAnyCargobob(vehicle float64) bool;

func (_client) DetachVehicleFromAnyTowTruck(vehicle float64) bool;

func (_client) DetachVehicleFromCargobob(vehicle float64, cargobob float64) {}

/**
 * First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
 */
func (_client) DetachVehicleFromTowTruck(towTruck float64, vehicle float64) {}

func (_client) DetachVehicleFromTrailer(vehicle float64) {}

func (_client) DetonateVehiclePhoneExplosiveDevice() {}
func (_client) N_0xef49cf0270307cbe() {}
func (_client) RequestVehiclePhoneExplosion() {}

func (_client) DisableAimCamThisUpdate() {}
func (_client) N_0x1a31fe0049e542f6() {}

func (_client) DisableAllControlActions(padIndex float64) {}

func (_client) DisableCamCollisionForEntity(entity float64) {}
func (_client) N_0x2aed6301f67007d5(entity float64) {}

func (_client) DisableCamCollisionForObject(entity float64) {}
func (_client) N_0x49482f9fcd825aaa(entity float64) {}

/**
 * [Control values and meaning](https://docs.fivem.net/docs/game-references/controls/#controls)
 * Example: `CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true)` disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.
 * Control group 1 and 0 gives the same results as 2. Same results for all players.
 */
func (_client) DisableControlAction(padIndex float64, control float64, disable bool) {}

/**
 * Disables the editor runtime mode, changing game behavior to not track entity metadata.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 */
func (_client) DisableEditorRuntime() {}

/**
 * Disables first person camera for the current frame.
 * Found in decompiled scripts:
 * GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);
 * CAM::_DE2EF5DA284CC8DF();
 */
func (_client) DisableFirstPersonCamThisFrame() {}

func (_client) DisableFrontendThisFrame() {}

func (_client) DisableHeadBlendPaletteColor(ped float64) {}
func (_client) N_0xa21c118553bbdf02(ped float64) {}

/**
 * The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
 */
func (_client) DisableHospitalRestart(hospitalIndex float64, toggle bool) {}

func (_client) DisableIndividualPlanePropeller(vehicle float64, propeller float64) {}
func (_client) N_0x500873a45724c863(vehicle float64, propeller float64) {}
func (_client) DisablePlanePropeller(vehicle float64, propeller float64) {}

func (_client) DisableInputGroup(padIndex float64) {}
func (_client) N_0x7f4724035fdca1dd(padIndex float64) {}

/**
 * Example:
 * This removes the interior from the strip club and when trying to walk inside the player just falls:
 * INTERIOR::DISABLE_INTERIOR(118018, true);
 */
func (_client) DisableInterior(interiorID float64, toggle bool) {}

func (_client) DisableNavmeshInArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) DisableOcclusionThisFrame() {}
func (_client) N_0x3669f1b198dcaa4f() {}

func (_client) DisablePedHeatscaleOverride(ped float64) {}
func (_client) N_0x600048c60d5c2c51(ped float64) {}

func (_client) DisablePedPainAudio(ped float64, toggle bool) {}

func (_client) DisablePlaneAileron(vehicle float64, p1 bool, p2 bool) {}

/**
 * Inhibits the player from using any method of combat including melee and firearms.
 * NOTE: Only disables the firing for one frame
 */
func (_client) DisablePlayerFiring(player float64, toggle bool) {}

func (_client) DisablePlayerVehicleRewards(player float64) {}

/**
 * Disables the spawn point at the police house on the specified index.
 * policeIndex: The police house index.
 * toggle: true to enable the spawn point, false to disable.
 * - Nacorpio
 */
func (_client) DisablePoliceRestart(policeIndex float64, toggle bool) {}

/**
 * This will disable the ability to make camera changes in R* Editor.
 * RE*
 */
func (_client) DisableRockstarEditorCameraChanges() {}
/**
 * This will disable the ability to make camera changes in R* Editor.
 * RE*
 */
func (_client) N_0xaf66dcee6609b148() {}

func (_client) DisableScreenblurFade() {}
func (_client) N_0xde81239437e8c5a8() {}
func (_client) PausedScreenblurLoaded() {}

func (_client) DisableScriptAmbientEffects(p0 float64) {}
func (_client) N_0xefd97ff47b745b8d(p0 float64) {}

func (_client) DisableScriptBrainSet(brainSet float64) {}

func (_client) DisableStuntJumpSet(p0 float64) {}

func (_client) DisableSwitchOutroFx() {}
func (_client) N_0xbd605b8e0e18b3bb() {}

func (_client) DisableVehicleDistantlights(toggle bool) {}

func (_client) DisableVehicleFirstPersonCamThisFrame() {}

func (_client) DisableVehicleNeonLights(vehicle float64, toggle bool) {}
func (_client) N_0x83f813570ff519de(vehicle float64, toggle bool) {}

func (_client) DisableVehicleTurretMovementThisFrame(vehicle float64) {}
func (_client) N_0x32caedf24a583345(vehicle float64) {}

/**
 * how does this work?
 */
func (_client) DisableVehicleWeapon(disabled bool, weaponHash interface{}, vehicle float64, owner float64) {}

/**
 * Disables collision for this vehicle (maybe it also supports other entities, not sure).
 * Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
 * [Example video](https://streamable.com/6n45d5)
 * Not sure if there is a native (and if so, which one) that resets the collisions.
 * @param vehicle the vehicle to disable world collisions for
 */
func (_client) DisableVehicleWorldCollision(vehicle float64) {}
/**
 * Disables collision for this vehicle (maybe it also supports other entities, not sure).
 * Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
 * [Example video](https://streamable.com/6n45d5)
 * Not sure if there is a native (and if so, which one) that resets the collisions.
 * @param vehicle the vehicle to disable world collisions for
 */
func (_client) N_0x75627043c6aa90ad(vehicle float64) {}

func (_client) DisplayAmmoThisFrame(display bool) {}

func (_client) DisplayAreaName(toggle bool) {}

/**
 * "DISPLAY_CASH(true);" makes the cash amount render on the screen when appropriate
 * "DISPLAY_CASH(false);" disables cash amount rendering
 */
func (_client) DisplayCash(display bool) {}

/**
 * The messages are localized strings.
 * Examples:
 * "No_bus_money"
 * "Enter_bus"
 * "Tour_help"
 * "LETTERS_HELP2"
 * "Dummy"
 * **The bool appears to always be false (if it even is a bool, as it's represented by a zero)**
 * --------
 * p1 doesn't seem to make a difference, regardless of the state it's in.
 * picture of where on the screen this is displayed?
 */
func (_client) DisplayHelpTextThisFrame(message string, p1 bool) {}

/**
 * If Hud should be displayed
 */
func (_client) DisplayHud(toggle bool) {}

/**
 * Enables drawing some hud components, such as help labels, this frame, when the player is dead.
 */
func (_client) DisplayHudWhenDeadThisFrame() {}
/**
 * Enables drawing some hud components, such as help labels, this frame, when the player is dead.
 */
func (_client) N_0x7669f9e39dc17063() {}

func (_client) DisplayHudWhenPausedThisFrame() {}
func (_client) N_0x402f9ed62087e898() {}

/**
 * windowTitle's
 * -----------------
 * CELL_EMAIL_BOD	=	"Enter your Eyefind message"
 * CELL_EMAIL_BODE	=	"Message too long. Try again"
 * CELL_EMAIL_BODF	=	"Forbidden message. Try again"
 * CELL_EMAIL_SOD	=	"Enter your Eyefind subject"
 * CELL_EMAIL_SODE	=	"Subject too long. Try again"
 * CELL_EMAIL_SODF	=	"Forbidden text. Try again"
 * CELL_EMASH_BOD	=	"Enter your Eyefind message"
 * CELL_EMASH_BODE	=	"Message too long. Try again"
 * CELL_EMASH_BODF	=	"Forbidden message. Try again"
 * CELL_EMASH_SOD	=	"Enter your Eyefind subject"
 * CELL_EMASH_SODE	=	"Subject too long. Try again"
 * CELL_EMASH_SODF	=	"Forbidden Text. Try again"
 * FMMC_KEY_TIP10	=	"Enter Synopsis"
 * FMMC_KEY_TIP12	=	"Enter Custom Team Name"
 * FMMC_KEY_TIP12F	=	"Forbidden Text. Try again"
 * FMMC_KEY_TIP12N	=	"Custom Team Name"
 * FMMC_KEY_TIP8	=	"Enter Message"
 * FMMC_KEY_TIP8F	=	"Forbidden Text. Try again"
 * FMMC_KEY_TIP8FS	=	"Invalid Message. Try again"
 * FMMC_KEY_TIP8S	=	"Enter Message"
 * FMMC_KEY_TIP9	=	"Enter Outfit Name"
 * FMMC_KEY_TIP9F	=	"Invalid Outfit Name. Try again"
 * FMMC_KEY_TIP9N	=	"Outfit Name"
 * PM_NAME_CHALL	=	"Enter Challenge Name"
 */
func (_client) DisplayOnscreenKeyboard(p0 float64, windowTitle string, p2 string, defaultText string, defaultConcat1 string, defaultConcat2 string, defaultConcat3 string, maxInputLength float64) {}

func (_client) DisplayOnscreenKeyboardWithLongerInitialString(p0 float64, windowTitle string, defaultText string, defaultConcat1 string, defaultConcat2 string, defaultConcat3 string, defaultConcat4 string, defaultConcat5 string, defaultConcat6 string, defaultConcat7 string, maxInputLength float64) float64 {
	return 0.0
}
func (_client) N_0xca78cfa0366592fe(p0 float64, windowTitle string, defaultText string, defaultConcat1 string, defaultConcat2 string, defaultConcat3 string, defaultConcat4 string, defaultConcat5 string, defaultConcat6 string, defaultConcat7 string, maxInputLength float64) float64 {
	return 0.0
}
func (_client) DisplayOnscreenKeyboard_2(p0 float64, windowTitle string, defaultText string, defaultConcat1 string, defaultConcat2 string, defaultConcat3 string, defaultConcat4 string, defaultConcat5 string, defaultConcat6 string, defaultConcat7 string, maxInputLength float64) float64 {
	return 0.0
}

/**
 * Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
 * Doesn't need to be called every frame.
 * Preview: https://i.imgur.com/DfqKWfJ.png
 * Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
 * @param toggle the toggle boolean
 */
func (_client) DisplayPlayerNameTagsOnBlips(toggle bool) {}
/**
 * Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
 * Doesn't need to be called every frame.
 * Preview: https://i.imgur.com/DfqKWfJ.png
 * Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
 * @param toggle the toggle boolean
 */
func (_client) N_0x82cedc33687e1f50(toggle bool) {}

/**
 * If Minimap / Radar should be displayed.
 */
func (_client) DisplayRadar(toggle bool) {}

/**
 * Displays the crosshair for this frame.
 */
func (_client) DisplaySniperScopeThisFrame() {}

/**
 * Purpose of the BOOL currently unknown.
 * Both, true and false, work
 */
func (_client) DisplaySystemSigninUi(unk bool) {}

func (_client) DisposeSynchronizedScene(scene float64) {}
func (_client) N_0xcd9cc7e200a52a6f(scene float64) {}

/**
 * If value is set to true, and ambient siren sound will be played.
 * Appears to enable/disable an audio flag.
 */
func (_client) DistantCopCarSirens(value bool) {}
/**
 * If value is set to true, and ambient siren sound will be played.
 * Appears to enable/disable an audio flag.
 */
func (_client) N_0x552369f549563ad5(value bool) {}
/**
 * If value is set to true, and ambient siren sound will be played.
 * Appears to enable/disable an audio flag.
 */
func (_client) ForceAmbientSiren(value bool) {}

func (_client) DoAutoSave() {}

/**
 * Fades the screen in.
 * duration: The time the fade should take, in milliseconds.
 */
func (_client) DoScreenFadeIn(duration float64) {}

/**
 * Fades the screen out.
 * duration: The time the fade should take, in milliseconds.
 */
func (_client) DoScreenFadeOut(duration float64) {}

func (_client) DoesAirDefenseZoneExist(zoneId float64) bool;
func (_client) N_0xcd79a550999d7d4f(zoneId float64) bool;

func (_client) DoesAnimDictExist(animDict string) bool;

func (_client) DoesBlipExist(blip float64) bool;

func (_client) DoesBlipHaveGpsRoute(blip float64) bool;
func (_client) N_0xdd2238f57b977751(blip float64) bool;

/**
 * Returns whether or not the passed camera handle exists.
 */
func (_client) DoesCamExist(cam float64) bool;

/**
 * Returns true only when the hook is active, will return false if the magnet is active
 */
func (_client) DoesCargobobHavePickUpRope(cargobob float64) bool;
/**
 * Returns true only when the hook is active, will return false if the magnet is active
 */
func (_client) IsCargobobHookActive(cargobob float64) bool;

/**
 * Returns true only when the magnet is active, will return false if the hook is active
 */
func (_client) DoesCargobobHavePickupMagnet(cargobob float64) bool;
/**
 * Returns true only when the magnet is active, will return false if the hook is active
 */
func (_client) IsCargobobMagnetActive(cargobob float64) bool;
/**
 * Returns true only when the magnet is active, will return false if the hook is active
 */
func (_client) DoesCargobobHavePickupMagnet(cargobob float64) bool;

func (_client) DoesCutsceneEntityExist(cutsceneEntName string, modelHash interface{}) bool;

func (_client) DoesEntityBelongToThisScript(entity float64, p2 bool) bool;

/**
 * Checks whether an entity exists in the game world.
 * @param entity The entity to check if it exists.
 * @return Whether the entity exists or not.
 */
func (_client) DoesEntityExist(entity float64) bool;

func (_client) DoesEntityHaveDrawable(entity float64) bool;

func (_client) DoesEntityHavePhysics(entity float64) bool;

/**
 * Checks via CVehicleModelInfo
 */
func (_client) DoesExtraExist(vehicle float64, extraId float64) bool;

func (_client) DoesGroupExist(groupId float64) bool;

func (_client) DoesNavmeshBlockingObjectExist(p0 float64) bool;
func (_client) N_0x0eaeb0db4b132399(p0 float64) bool;

/**
 * p5 is usually 0.
 */
func (_client) DoesObjectOfTypeExistAtCoords(x float64, y float64, z float64, radius float64, hash interface{}, p5 bool) bool;

func (_client) DoesParticleFxLoopedExist(ptfxHandle float64) bool;

/**
 * Returns whether the ped's blip is controlled by the game.
 * It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).
 */
func (_client) DoesPedHaveAiBlip(ped float64) bool;

func (_client) DoesPickupExist(pickup float64) bool;

func (_client) DoesPickupObjectExist(pickupObject float64) bool;

/**
 * Pickup hashes: pastebin.com/8EuSv2r1
 */
func (_client) DoesPickupOfTypeExistInArea(pickupHash interface{}, x float64, y float64, z float64, radius float64) bool;
/**
 * Pickup hashes: pastebin.com/8EuSv2r1
 */
func (_client) IsPickupWithinRadius(pickupHash interface{}, x float64, y float64, z float64, radius float64) bool;

func (_client) DoesPlayerVehHaveRadio() bool;
func (_client) N_0x109697e2ffbac8a1() bool;

func (_client) DoesPopMultiplierAreaExist(id float64) bool;
func (_client) N_0x1327e2fe9746baee(id float64) bool;

func (_client) DoesPopMultiplierSphereExist(id float64) bool;
func (_client) N_0x171bafb3c60389f4(id float64) bool;

/**
 * Returns true if a destructible object with this handle exists, false otherwise.
 */
func (_client) DoesRayfireMapObjectExist(object float64) bool;
/**
 * Returns true if a destructible object with this handle exists, false otherwise.
 */
func (_client) N_0x52af537a0c5b8aad(object float64) bool;
/**
 * Returns true if a destructible object with this handle exists, false otherwise.
 */
func (_client) DoesDesObjectExist(object float64) bool;

func (_client) DoesRelationshipGroupExist(groupHash interface{}) bool;
func (_client) N_0xcc6e3b6bb69501f1(groupHash interface{}) bool;

func (_client) DoesRopeBelongToThisScript(ropeId float64) bool;
func (_client) N_0x271c9d3aca5d6409(ropeId float64) bool;

func (_client) DoesRopeExist(ropeId float64)  (bool, float64){
	return false,0.0
}

func (_client) DoesScenarioBlockingAreaExist(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;
func (_client) N_0x8a24b067d175a7bd(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;

func (_client) DoesScenarioExistInArea(x float64, y float64, z float64, radius float64, b bool) bool;

/**
 * Occurrences in the b617d scripts:
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "GRAPESEED_PLANES",
 * "KORTZ_SECURITY",
 * "LOST_BIKERS",
 * "LSA_Planes",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5"
 * "QUARRY",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE",
 * "Triathlon_1_Start",
 * "Triathlon_2_Start",
 * "Triathlon_3_Start"
 * Sometimes used with IS_SCENARIO_GROUP_ENABLED:
 * if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
 * else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
 */
func (_client) DoesScenarioGroupExist(scenarioGroup string) bool;

func (_client) DoesScenarioOfTypeExistInArea(p0 float64, p1 float64, p2 float64, p4 float64, p5 bool)  (bool, float64){
	return false,0.0
}

func (_client) DoesScriptExist(scriptName string) bool;

func (_client) DoesScriptVehicleGeneratorExist(vehicleGenerator float64) bool;

func (_client) DoesScriptWithNameHashExist(scriptHash interface{}) bool;
func (_client) N_0xf86aa3c56ba31381(scriptHash interface{}) bool;
func (_client) DoesScriptWithNameHashExist(scriptHash interface{}) bool;

/**
 * Checks if there is a cover point at position
 */
func (_client) DoesScriptedCoverPointExistAtCoords(x float64, y float64, z float64) bool;

func (_client) DoesShopPedApparelHaveRestrictionTag(componentHash interface{}, restrictionTagHash interface{}, componentId float64) bool;
func (_client) N_0x341de7ed1d2a1bfd(componentHash interface{}, restrictionTagHash interface{}, componentId float64) bool;

func (_client) DoesTextBlockExist(gxt string) bool;

/**
 * Checks if the passed gxt name exists in the game files.
 */
func (_client) DoesTextLabelExist(gxt string) bool;

/**
 * Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
 */
func (_client) DoesVehicleAllowRappel(vehicle float64) bool;
/**
 * Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
 */
func (_client) N_0x4e417c547182c84d(vehicle float64) bool;

func (_client) DoesVehicleExistWithDecorator(decorator string) bool;

func (_client) DoesVehicleHaveCrewEmblem(vehicle float64, p1 float64) bool;
func (_client) HasVehicleGotDecal(vehicle float64, p1 float64) bool;
func (_client) DoesVehicleHaveDecal(vehicle float64, p1 float64) bool;

/**
 * NativeDB Introduced: v1180
 */
func (_client) DoesVehicleHaveLandingGear(vehicle float64) bool;
/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xe43701c36caff1a4(vehicle float64) bool;
/**
 * NativeDB Introduced: v1180
 */
func (_client) GetVehicleHasLandingGear(vehicle float64) bool;

func (_client) DoesVehicleHaveRoof(vehicle float64) bool;

/**
 * NativeDB Introduced: v2189
 */
func (_client) DoesVehicleHaveSearchlight(vehicle float64) bool;

/**
 * Maximum amount of vehicles with vehicle stuck check appears to be 16.
 */
func (_client) DoesVehicleHaveStuckVehicleCheck(vehicle float64) bool;

func (_client) DoesVehicleHaveWeapons(vehicle float64) bool;

/**
 * Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) DoesVehicleTyreExist(vehicle float64, tyreIndex float64) bool;
/**
 * Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) N_0x534e36d4db9ecc5d(vehicle float64, tyreIndex float64) bool;

func (_client) DoesWeaponTakeWeaponComponent(weaponHash interface{}, componentHash interface{}) bool;

func (_client) DontRenderInGameUi(p0 bool) {}
func (_client) N_0x22a249a53034450a(p0 bool) {}

/**
 * When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
 */
func (_client) DontTiltMinimapThisFrame() {}
/**
 * When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
 */
func (_client) CenterPlayerOnRadarThisFrame() {}

/**
 * Hardcoded not to work in multiplayer environments.
 * Native name between `SET_LOCAL_PLAYER_VISIBLE_LOCALLY` & `SET_MAX_WANTED_LEVEL`.
 * ```
 * OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked
 * OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked
 * ```
 * @param locked tells the game whether or not the door is locked
 * @param xRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
 * @param yRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
 * @param zRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
 */
func (_client) DoorControl(modelHash interface{}, x float64, y float64, z float64, locked bool, xRotMult float64, yRotMult float64, zRotMult float64) {}

/**
 * Search radius: 0.5
 * @param x The X coordinate of the door object
 * @param y The Y coordinate of the door object
 * @param z The Z coordinate of the door object
 * @param modelHash Entity model hash
 */
func (_client) DoorSystemFindExistingDoor(x float64, y float64, z float64, modelHash interface{}, doorOutPointer float64)  (bool, float64){
	return false,0.0
}
/**
 * Search radius: 0.5
 * @param x The X coordinate of the door object
 * @param y The Y coordinate of the door object
 * @param z The Z coordinate of the door object
 * @param modelHash Entity model hash
 */
func (_client) N_0x589f80b325cc82c5(x float64, y float64, z float64, modelHash interface{}, doorOutPointer float64)  (bool, float64){
	return false,0.0
}

/**
 * Returns a list of door system entries: a door system hash (see [ADD_DOOR_TO_SYSTEM](#\_0x6F8838D03D1DC226)) and its object handle.
 * The data returned adheres to the following layout:
 * ```
 * [{doorHash1, doorHandle1}, ..., {doorHashN, doorHandleN}]
 * ```
 * @return An object containing a list of door system entries.
 */
func (_client) DoorSystemGetActive() interface{} {
	return nil
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) DoorSystemGetAutomaticDistance(doorHash interface{}) float64 {
	return 0.0
}

func (_client) DoorSystemGetDoorPendingState(doorHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x4bc2854478f3a749(doorHash interface{}) float64 {
	return 0.0
}

func (_client) DoorSystemGetDoorState(doorHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x160aa1b32f6139b8(doorHash interface{}) float64 {
	return 0.0
}

func (_client) DoorSystemGetIsPhysicsLoaded(doorHash interface{}) bool;
func (_client) N_0xdf97cdd4fc08fd34(doorHash interface{}) bool;

func (_client) DoorSystemGetOpenRatio(doorHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x65499865fca6e5ec(doorHash interface{}) float64 {
	return 0.0
}

func (_client) DoorSystemGetSize() float64 {
	return 0.0
}

func (_client) DoorSystemSetAutomaticDistance(doorHash interface{}, distance float64, requestDoor bool, forceUpdate bool) {}
func (_client) N_0x9ba001cb45cbf627(doorHash interface{}, distance float64, requestDoor bool, forceUpdate bool) {}

/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) DoorSystemSetAutomaticRate(doorHash interface{}, rate float64, requestDoor bool, forceUpdate bool) {}
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) N_0x03c27e13b42a0e82(doorHash interface{}, rate float64, requestDoor bool, forceUpdate bool) {}

/**
 * Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.
 * ### Door lock states: (v323)
 * *   **0**: UNLOCKED
 * *   **1**: LOCKED
 * *   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
 * *   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
 * *   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
 * *   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
 * *   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
 * @param requestDoor On true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
 * @param forceUpdate On true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
 */
func (_client) DoorSystemSetDoorState(doorHash interface{}, state float64, requestDoor bool, forceUpdate bool) {}
/**
 * Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.
 * ### Door lock states: (v323)
 * *   **0**: UNLOCKED
 * *   **1**: LOCKED
 * *   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
 * *   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
 * *   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
 * *   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
 * *   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
 * @param requestDoor On true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
 * @param forceUpdate On true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
 */
func (_client) N_0x6bab9442830c7f53(doorHash interface{}, state float64, requestDoor bool, forceUpdate bool) {}
/**
 * Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.
 * ### Door lock states: (v323)
 * *   **0**: UNLOCKED
 * *   **1**: LOCKED
 * *   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
 * *   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
 * *   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
 * *   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
 * *   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
 * @param requestDoor On true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
 * @param forceUpdate On true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
 */
func (_client) SetDoorAccelerationLimit(doorHash interface{}, state float64, requestDoor bool, forceUpdate bool) {}

/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * @param doorHash Door system identifier
 */
func (_client) DoorSystemSetHoldOpen(doorHash interface{}, toggle bool) {}
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * @param doorHash Door system identifier
 */
func (_client) N_0xd9b71952f78a2640(doorHash interface{}, toggle bool) {}

/**
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) DoorSystemSetOpenRatio(doorHash interface{}, ajar float64, requestDoor bool, forceUpdate bool) {}
/**
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) N_0xb6e6fba95c7324ac(doorHash interface{}, ajar float64, requestDoor bool, forceUpdate bool) {}
/**
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) SetDoorAjarAngle(doorHash interface{}, ajar float64, requestDoor bool, forceUpdate bool) {}

/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) DoorSystemSetSpringRemoved(doorHash interface{}, removed bool, requestDoor bool, forceUpdate bool) {}
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * @param doorHash Door system identifier
 * @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
 */
func (_client) N_0xc485e07e4f0b7958(doorHash interface{}, removed bool, requestDoor bool, forceUpdate bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) DrawBinkMovie(binkMovie float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, r float64, g float64, b float64, a float64) {}

/**
 * x,y,z = start pos
 * x2,y2,z2 = end pos
 * Draw's a 3D Box between the two x,y,z coords.
 * --------------
 * Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
 * End Sub
 * [C#]
 * public void DrawBox(Vector3 a, Vector3 b, Color col)
 * {
 * Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
 * }
 */
func (_client) DrawBox(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugBox(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, r float64, g float64, b float64, a float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugCross(x float64, y float64, z float64, size float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugLine(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, r float64, g float64, b float64, a float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugLineWithTwoColours(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, r1 float64, g1 float64, b1 float64, r2 float64, g2 float64, b2 float64, alpha1 float64, alpha2 float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugSphere(x float64, y float64, z float64, radius float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugText(text string, x float64, y float64, z float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) DrawDebugText_2d(text string, x float64, y float64, z float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * Draws a gizmo. This function supports SDK infrastructure and is not intended to be used directly from your code.
 * This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
 * Matrix layout is as follows:
 * *   Element \[0], \[1] and \[2] should represent the right vector.
 * *   Element \[4], \[5] and \[6] should represent the forward vector.
 * *   Element \[8], \[9] and \[10] should represent the up vector.
 * *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
 * *   All other elements should be \[0, 0, 0, 1].
 * @param matrixPtr A mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.
 * @param id A unique identifier of what the gizmo is affecting.
 * @return Whether or not the matrix was modified.
 */
func (_client) DrawGizmo(matrixPtr float64, id string) bool;

/**
 * Similar to [\_DRAW_SPRITE](#\_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
 * These seem to be the only dicts ever requested by this native:
 * ```
 * prop_screen_biker_laptop
 * Prop_Screen_GR_Disruption
 * Prop_Screen_TaleOfUs
 * prop_screen_nightclub
 * Prop_Screen_IE_Adhawk
 * prop_screen_sm_free_trade_shipping
 * prop_screen_hacker_truck
 * MPDesktop
 * Prop_Screen_Nightclub
 * And a few others
 * ```
 * @param textureDict Name of texture dictionary to load texture from
 * @param textureName Name of texture to load from texture dictionary
 * @param screenX Screen X
 * @param screenY Screen Y
 * @param width Scale X
 * @param height Scale Y
 * @param heading Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 * @param red Color
 * @param green Color
 * @param blue Color
 * @param alpha Opacity level
 */
func (_client) DrawInteractiveSprite(textureDict string, textureName string, screenX float64, screenY float64, width float64, height float64, heading float64, red float64, green float64, blue float64, alpha float64) {}
/**
 * Similar to [\_DRAW_SPRITE](#\_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
 * These seem to be the only dicts ever requested by this native:
 * ```
 * prop_screen_biker_laptop
 * Prop_Screen_GR_Disruption
 * Prop_Screen_TaleOfUs
 * prop_screen_nightclub
 * Prop_Screen_IE_Adhawk
 * prop_screen_sm_free_trade_shipping
 * prop_screen_hacker_truck
 * MPDesktop
 * Prop_Screen_Nightclub
 * And a few others
 * ```
 * @param textureDict Name of texture dictionary to load texture from
 * @param textureName Name of texture to load from texture dictionary
 * @param screenX Screen X
 * @param screenY Screen Y
 * @param width Scale X
 * @param height Scale Y
 * @param heading Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 * @param red Color
 * @param green Color
 * @param blue Color
 * @param alpha Opacity level
 */
func (_client) N_0x2bc54a8188768488(textureDict string, textureName string, screenX float64, screenY float64, width float64, height float64, heading float64, red float64, green float64, blue float64, alpha float64) {}

func (_client) DrawLightWithRange(posX float64, posY float64, posZ float64, colorR float64, colorG float64, colorB float64, _range float64, intensity float64) {}

func (_client) DrawLightWithRangeAndShadow(x float64, y float64, z float64, r float64, g float64, b float64, _range float64, intensity float64, shadow float64) {}
func (_client) DrawLightWithRangeWithShadow(x float64, y float64, z float64, r float64, g float64, b float64, _range float64, intensity float64, shadow float64) {}

/**
 * Draws a depth-tested line from one point to another.
 * ----------------
 * x1, y1, z1 : Coordinates for the first point
 * x2, y2, z2 : Coordinates for the second point
 * r, g, b, alpha : Color with RGBA-Values
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
 * End Sub
 * [C#]
 * public void DrawLine(Vector3 from, Vector3 to, Color col)
 * {
 * Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
 * }
 */
func (_client) DrawLine(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, red float64, green float64, blue float64, alpha float64) {}

func (_client) DrawLowQualityPhotoToPhone(p0 bool, p1 bool) {}
func (_client) N_0x1072f115dab0717e(p0 bool, p1 bool) {}

/**
 * Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.
 * There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
 * @param type The marker type to draw.
 * @param posX The X coordinate to draw the marker at.
 * @param posY The Y coordinate to draw the marker at.
 * @param posZ The Z coordinate to draw the marker at.
 * @param dirX The X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
 * @param dirY The Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
 * @param dirZ The Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
 * @param rotX The X rotation for the marker. Only used if the direction vector is 0.0.
 * @param rotY The Y rotation for the marker. Only used if the direction vector is 0.0.
 * @param rotZ The Z rotation for the marker. Only used if the direction vector is 0.0.
 * @param scaleX The scale for the marker on the X axis.
 * @param scaleY The scale for the marker on the Y axis.
 * @param scaleZ The scale for the marker on the Z axis.
 * @param red The red component of the marker color, on a scale from 0-255.
 * @param green The green component of the marker color, on a scale from 0-255.
 * @param blue The blue component of the marker color, on a scale from 0-255.
 * @param alpha The alpha component of the marker color, on a scale from 0-255.
 * @param bobUpAndDown Whether or not the marker should slowly animate up/down.
 * @param faceCamera Whether the marker should be a 'billboard', as in, should constantly face the camera.
 * @param p19 Typically set to `2`. Does not seem to matter directly.
 * @param rotate Rotations only apply to the heading.
 * @param textureDict A texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'
 * @param textureName A texture name in `textureDict` to draw the marker with, or NULL. Example: 'PuttingMarker'
 * @param drawOnEnts Whether or not the marker should draw on intersecting entities.
 */
func (_client) DrawMarker(_type float64, posX float64, posY float64, posZ float64, dirX float64, dirY float64, dirZ float64, rotX float64, rotY float64, rotZ float64, scaleX float64, scaleY float64, scaleZ float64, red float64, green float64, blue float64, alpha float64, bobUpAndDown bool, faceCamera bool, p19 float64, rotate bool, textureDict string, textureName string, drawOnEnts bool) {}

/**
 * NativeDB Added Parameter 26: BOOL p25
 */
func (_client) DrawMarker_2(_type float64, posX float64, posY float64, posZ float64, dirX float64, dirY float64, dirZ float64, rotX float64, rotY float64, rotZ float64, scaleX float64, scaleY float64, scaleZ float64, red float64, green float64, blue float64, alpha float64, bobUpAndDown bool, faceCamera bool, p19 float64, rotate bool, textureDict string, textureName string, drawOnEnts bool, p24 bool) {}
/**
 * NativeDB Added Parameter 26: BOOL p25
 */
func (_client) N_0xe82728f0de75d13a(_type float64, posX float64, posY float64, posZ float64, dirX float64, dirY float64, dirZ float64, rotX float64, rotY float64, rotZ float64, scaleX float64, scaleY float64, scaleZ float64, red float64, green float64, blue float64, alpha float64, bobUpAndDown bool, faceCamera bool, p19 float64, rotate bool, textureDict string, textureName string, drawOnEnts bool, p24 bool) {}

/**
 * x/y/z - Location of a vertex (in world coords), presumably.
 * ----------------
 * x1, y1, z1     : Coordinates for the first point
 * x2, y2, z2     : Coordinates for the second point
 * x3, y3, z3     : Coordinates for the third point
 * r, g, b, alpha : Color with RGBA-Values
 * Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
 * But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
 * End Sub
 * [C#]
 * public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
 * {
 * Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
 * }
 * BTW: Intersecting triangles are not supported: They overlap in the order they were called.
 */
func (_client) DrawPoly(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * Draws a rectangle on the screen.
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
 * -R: Red part of the color. (0-255)
 * -G: Green part of the color. (0-255)
 * -B: Blue part of the color. (0-255)
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
 * The total number of rectangles to be drawn in one frame is apparently limited to 399.
 * ```
 * ```
 * NativeDB Added Parameter 9: BOOL p8
 */
func (_client) DrawRect(x float64, y float64, width float64, height float64, r float64, g float64, b float64, a float64) {}

func (_client) DrawScaleformMovie(scaleformHandle float64, x float64, y float64, width float64, height float64, red float64, green float64, blue float64, alpha float64, unk float64) {}

/**
 * unk is not used so no need
 */
func (_client) DrawScaleformMovieFullscreen(scaleform float64, red float64, green float64, blue float64, alpha float64, unk float64) {}

func (_client) DrawScaleformMovieFullscreenMasked(scaleform1 float64, scaleform2 float64, red float64, green float64, blue float64, alpha float64) {}

func (_client) DrawScaleformMovie_3d(scaleform float64, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, p7 float64, sharpness float64, p9 float64, scaleX float64, scaleY float64, scaleZ float64, p13 float64) {}
func (_client) N_0x87d51d72255d4e78(scaleform float64, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, p7 float64, sharpness float64, p9 float64, scaleX float64, scaleY float64, scaleZ float64, p13 float64) {}

func (_client) DrawScaleformMovie_3dSolid(scaleform float64, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, p7 float64, p8 float64, p9 float64, scaleX float64, scaleY float64, scaleZ float64, p13 float64) {}
func (_client) N_0x1ce592fdc749d6f5(scaleform float64, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, p7 float64, p8 float64, p9 float64, scaleX float64, scaleY float64, scaleZ float64, p13 float64) {}
func (_client) DrawScaleformMovie_3dNonAdditive(scaleform float64, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, p7 float64, p8 float64, p9 float64, scaleX float64, scaleY float64, scaleZ float64, p13 float64) {}

/**
 * It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
 * p0 was always "CELEBRATION_WINNER"
 */
func (_client) DrawShowroom(p0 string, ped float64, p2 float64, posX float64, posY float64, posZ float64) bool;
/**
 * It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
 * p0 was always "CELEBRATION_WINNER"
 */
func (_client) N_0x98c4fe6ec34154ca(p0 string, ped float64, p2 float64, posX float64, posY float64, posZ float64) bool;

/**
 * Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
 * Example [image](https://imgur.com/nCbtS4H):
 * ```lua
 * DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
 * ```
 * @param x X coordinate of the sphere
 * @param y Y coordinate of the sphere
 * @param z Z coordinate of the sphere
 * @param radius Size of the sphere, `1.0` = 1 meter
 * @param r Color red `0`-`255`
 * @param g Color green `0`-`255`
 * @param b Color blue `0`-`255`
 * @param opacity Opacity from `0.0`-`1.0`
 */
func (_client) DrawSphere(x float64, y float64, z float64, radius float64, r float64, g float64, b float64, opacity float64) {}
/**
 * Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
 * Example [image](https://imgur.com/nCbtS4H):
 * ```lua
 * DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
 * ```
 * @param x X coordinate of the sphere
 * @param y Y coordinate of the sphere
 * @param z Z coordinate of the sphere
 * @param radius Size of the sphere, `1.0` = 1 meter
 * @param r Color red `0`-`255`
 * @param g Color green `0`-`255`
 * @param b Color blue `0`-`255`
 * @param opacity Opacity from `0.0`-`1.0`
 */
func (_client) N_0x799017f9e3b10112(x float64, y float64, z float64, radius float64, r float64, g float64, b float64, opacity float64) {}

/**
 * Parameters:
 * * pos - coordinate where the spotlight is located
 * * dir - the direction vector the spotlight should aim at from its current position
 * * r,g,b - color of the spotlight
 * * distance - the maximum distance the light can reach
 * * brightness - the brightness of the light
 * * roundness - "smoothness" of the circle edge
 * * radius - the radius size of the spotlight
 * * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
 * Example in C# (spotlight aims at the closest vehicle):
 * Vector3 myPos = Game.Player.Character.Position;
 * Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
 * Vector3 destinationCoords = nearest.Position;
 * Vector3 dirVector = destinationCoords - myPos;
 * dirVector.Normalize();
 * Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
 */
func (_client) DrawSpotLight(posX float64, posY float64, posZ float64, dirX float64, dirY float64, dirZ float64, colorR float64, colorG float64, colorB float64, distance float64, brightness float64, hardness float64, radius float64, falloff float64) {}

func (_client) DrawSpotLightWithShadow(posX float64, posY float64, posZ float64, dirX float64, dirY float64, dirZ float64, colorR float64, colorG float64, colorB float64, distance float64, brightness float64, roundness float64, radius float64, falloff float64, shadowId float64) {}

/**
 * Draws a 2D sprite on the screen.
 * Parameters:
 * textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
 * textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
 * screenX/Y - Screen offset (0.5 = center)
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 * red,green,blue - Sprite color (default = 255/255/255)
 * alpha - opacity level
 * ```
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 */
func (_client) DrawSprite(textureDict string, textureName string, screenX float64, screenY float64, width float64, height float64, heading float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 */
func (_client) DrawSpritePoly(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64, red float64, green float64, blue float64, alpha float64, textureDict string, textureName string, u1 float64, v1 float64, w1 float64, u2 float64, v2 float64, w2 float64, u3 float64, v3 float64, w3 float64) {}
/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 */
func (_client) N_0x29280002282f1928(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64, red float64, green float64, blue float64, alpha float64, textureDict string, textureName string, u1 float64, v1 float64, w1 float64, u2 float64, v2 float64, w2 float64, u3 float64, v3 float64, w3 float64) {}

/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 * Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 */
func (_client) DrawSpritePoly_2(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64, red1 float64, green1 float64, blue1 float64, alpha1 float64, red2 float64, green2 float64, blue2 float64, alpha2 float64, red3 float64, green3 float64, blue3 float64, alpha3 float64, textureDict string, textureName string, u1 float64, v1 float64, w1 float64, u2 float64, v2 float64, w2 float64, u3 float64, v3 float64, w3 float64) {}
/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 * Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 */
func (_client) N_0x736d7aa1b750856b(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64, red1 float64, green1 float64, blue1 float64, alpha1 float64, red2 float64, green2 float64, blue2 float64, alpha2 float64, red3 float64, green3 float64, blue3 float64, alpha3 float64, textureDict string, textureName string, u1 float64, v1 float64, w1 float64, u2 float64, v2 float64, w2 float64, u3 float64, v3 float64, w3 float64) {}

/**
 * Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
 * u1, v1 - texture coordinates for the top-left corner
 * u2, v2 - texture coordinates for the bottom-right corner
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) DrawSpriteUv(textureDict string, textureName string, x float64, y float64, width float64, height float64, u1 float64, v1 float64, u2 float64, v2 float64, heading float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
 * "act_cinema.ysc", line 1483:
 * HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
 * HUD::SET_TEXT_RENDER_ID(l_AE);
 * GRAPHICS::_0x61BB1D9B3A95D802(4);
 * GRAPHICS::_0xC6372ECD45D73BCD(1);
 * if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
 * GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
 * } else {
 * GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
 * }
 * "am_mp_property_int.ysc", line 102545:
 * if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
 * if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
 * HUD::SET_TEXT_RENDER_ID(a_2._f1);
 * GRAPHICS::_0x61BB1D9B3A95D802(4);
 * GRAPHICS::_0xC6372ECD45D73BCD(1);
 * GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
 * if (GRAPHICS::GET_TV_CHANNEL() == -1) {
 * sub_a8fa5(a_2, 1);
 * } else {
 * sub_a8fa5(a_2, 1);
 * GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
 * }
 * HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
 * }
 * }
 */
func (_client) DrawTvChannel(xPos float64, yPos float64, xScale float64, yScale float64, rotation float64, red float64, green float64, blue float64, alpha float64) {}

func (_client) DropAmbientProp(ped float64) {}
func (_client) N_0xaff4710e2a0a6c12(ped float64) {}

func (_client) DuplicateFunctionReference(referenceIdentity string) string;

func (_client) EjectJb700Roof(vehicle float64, x float64, y float64, z float64) {}
func (_client) N_0xe38cb9d7d39fdbcc(vehicle float64, x float64, y float64, z float64) {}

/**
 * Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`START_SCREEN_EFFECT`](#\_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
 * This native does not seem to work, however by using the [START_SCREEN_EFFECT](https://runtime.fivem.net/doc/natives/#\_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
 */
func (_client) EnableAlienBloodVfx(toggle bool) {}
/**
 * Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`START_SCREEN_EFFECT`](#\_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
 * This native does not seem to work, however by using the [START_SCREEN_EFFECT](https://runtime.fivem.net/doc/natives/#\_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
 */
func (_client) N_0x9dce1f0f78260875(toggle bool) {}

/**
 * padIndex:
 * 0 - PLAYER_CONTROL
 * 1 - Unknown
 * 2 - FRONTEND_CONTROL
 * @param padIndex The control system instance to use.
 */
func (_client) EnableAllControlActions(padIndex float64) {}

/**
 * Creates cartoon effect when Michel smokes the weed
 */
func (_client) EnableClownBloodVfx(toggle bool) {}
/**
 * Creates cartoon effect when Michel smokes the weed
 */
func (_client) SetCameraEndtime(toggle bool) {}

/**
 * control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Control.cs
 * and
 * https://docs.fivem.net/game-references/controls/
 * 0, 1 and 2 used in the scripts.
 * Control values from the decompiled scripts:
 * 0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,
 * 37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100
 * ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19
 * 0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2
 * 20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,
 * 261,262,263,264,286,287,288,289,337,338,339,340,341,342,343
 * INPUTGROUP_MOVE
 * INPUTGROUP_LOOK
 * INPUTGROUP_WHEEL
 * INPUTGROUP_CELLPHONE_NAVIGATE
 * INPUTGROUP_CELLPHONE_NAVIGATE_UD
 * INPUTGROUP_CELLPHONE_NAVIGATE_LR
 * INPUTGROUP_FRONTEND_DPAD_ALL
 * INPUTGROUP_FRONTEND_DPAD_UD
 * INPUTGROUP_FRONTEND_DPAD_LR
 * INPUTGROUP_FRONTEND_LSTICK_ALL
 * INPUTGROUP_FRONTEND_RSTICK_ALL
 * INPUTGROUP_FRONTEND_GENERIC_UD
 * INPUTGROUP_FRONTEND_GENERIC_LR
 * INPUTGROUP_FRONTEND_GENERIC_ALL
 * INPUTGROUP_FRONTEND_BUMPERS
 * INPUTGROUP_FRONTEND_TRIGGERS
 * INPUTGROUP_FRONTEND_STICKS
 * INPUTGROUP_SCRIPT_DPAD_ALL
 * INPUTGROUP_SCRIPT_DPAD_UD
 * INPUTGROUP_SCRIPT_DPAD_LR
 * INPUTGROUP_SCRIPT_LSTICK_ALL
 * INPUTGROUP_SCRIPT_RSTICK_ALL
 * INPUTGROUP_SCRIPT_BUMPERS
 * INPUTGROUP_SCRIPT_TRIGGERS
 * INPUTGROUP_WEAPON_WHEEL_CYCLE
 * INPUTGROUP_FLY
 * INPUTGROUP_SUB
 * INPUTGROUP_VEH_MOVE_ALL
 * INPUTGROUP_CURSOR
 * INPUTGROUP_CURSOR_SCROLL
 * INPUTGROUP_SNIPER_ZOOM_SECONDARY
 * INPUTGROUP_VEH_HYDRAULICS_CONTROL
 * Took those in IDA Pro.Not sure in which order they go
 */
func (_client) EnableControlAction(padIndex float64, control float64, enable bool) {}

/**
 * Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
 */
func (_client) EnableCrosshairThisFrame() {}

/**
 * https://alloc8or.re/gta5/doc/enums/DispatchType.txt
 */
func (_client) EnableDispatchService(dispatchService float64, toggle bool) {}
/**
 * https://alloc8or.re/gta5/doc/enums/DispatchType.txt
 */
func (_client) N_0xdc0f817884cdd856(dispatchService float64, toggle bool) {}

/**
 * Enables the editor runtime mode, changing game behavior to track entity metadata.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 */
func (_client) EnableEditorRuntime() {}

/**
 * ENABLE_*
 */
func (_client) EnableEntityUnk(entity float64) {}
/**
 * ENABLE_*
 */
func (_client) N_0x6ce177d014502e8a(entity float64) {}

/**
 * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
 */
func (_client) EnableExteriorCullModelThisFrame(mapObjectHash interface{}) {}
/**
 * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
 */
func (_client) N_0xa97f257d0151a6ab(mapObjectHash interface{}) {}
/**
 * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
 */
func (_client) HideMapObjectThisFrame(mapObjectHash interface{}) {}

/**
 * Enables laser sight on any weapon.
 * It doesn't work. Neither on tick nor OnKeyDown
 */
func (_client) EnableLaserSightRendering(toggle bool) {}

func (_client) EnableMovieKeyframeWait(toggle bool) {}
func (_client) N_0x74c180030fde4b69(toggle bool) {}

func (_client) EnableMovieSubtitles(toggle bool) {}

func (_client) EnableSavingInGarage(garageHash interface{}, toggle bool) {}
func (_client) N_0xf2e1a7133dd356a6(garageHash interface{}, toggle bool) {}

func (_client) EnableScriptBrainSet(brainSet float64) {}

func (_client) EnableScriptCullModelThisFrame(mapObjectHash interface{}) {}
func (_client) N_0x50c375537449f369(mapObjectHash interface{}) {}

/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) EnableSpecialAbility(player float64, toggle bool) {}

func (_client) EnableStallWarningSounds(vehicle float64, toggle bool) {}
func (_client) N_0xc15907d667f7cfb2(vehicle float64, toggle bool) {}

func (_client) EnableStuntJumpSet(p0 float64) {}

func (_client) EnableSwitchPauseBeforeDescent() {}
func (_client) N_0xd4793dff3af2abcd() {}

/**
 * Makes the ped jump around like they're in a tennis match
 */
func (_client) EnableTennisMode(ped float64, toggle bool, p2 bool) {}

/**
 * Sets whether the vehicle passed has exhaust pops.
 * @param toggle Enables or disables exaust pops.
 */
func (_client) EnableVehicleExhaustPops(vehicle float64, toggle bool) {}
/**
 * Sets whether the vehicle passed has exhaust pops.
 * @param toggle Enables or disables exaust pops.
 */
func (_client) N_0x2be4bc731d039d5a(vehicle float64, toggle bool) {}

func (_client) EndFindKvp(handle float64) {}

func (_client) EndFindObject(findHandle float64) {}

func (_client) EndFindPed(findHandle float64) {}

func (_client) EndFindPickup(findHandle float64) {}

func (_client) EndFindVehicle(findHandle float64) {}

func (_client) EndPetrolTrailDecals() {}
func (_client) N_0x0a123435a26c36cd() {}

func (_client) EndReplayStats() {}

/**
 * Pops and calls the Scaleform function on the stack
 */
func (_client) EndScaleformMovieMethod() {}
/**
 * Pops and calls the Scaleform function on the stack
 */
func (_client) PopScaleformMovieFunctionVoid() {}

func (_client) EndScaleformMovieMethodReturnValue() float64 {
	return 0.0
}
func (_client) PopScaleformMovieFunction() float64 {
	return 0.0
}
func (_client) EndScaleformMovieMethodReturn() float64 {
	return 0.0
}

/**
 * Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
 */
func (_client) EndSrl() {}

/**
 * enum eBusySpinnerType
 * {
 * BUSY_SPINNER_LEFT,
 * BUSY_SPINNER_LEFT_2,
 * BUSY_SPINNER_LEFT_3,
 * BUSY_SPINNER_SAVE,
 * BUSY_SPINNER_RIGHT,
 * };
 */
func (_client) EndTextCommandBusyspinnerOn(busySpinnerType float64) {}
/**
 * enum eBusySpinnerType
 * {
 * BUSY_SPINNER_LEFT,
 * BUSY_SPINNER_LEFT_2,
 * BUSY_SPINNER_LEFT_3,
 * BUSY_SPINNER_SAVE,
 * BUSY_SPINNER_RIGHT,
 * };
 */
func (_client) N_0xbd12f8228410d9b4(busySpinnerType float64) {}
/**
 * enum eBusySpinnerType
 * {
 * BUSY_SPINNER_LEFT,
 * BUSY_SPINNER_LEFT_2,
 * BUSY_SPINNER_LEFT_3,
 * BUSY_SPINNER_SAVE,
 * BUSY_SPINNER_RIGHT,
 * };
 */
func (_client) ShowLoadingPrompt(busySpinnerType float64) {}
/**
 * enum eBusySpinnerType
 * {
 * BUSY_SPINNER_LEFT,
 * BUSY_SPINNER_LEFT_2,
 * BUSY_SPINNER_LEFT_3,
 * BUSY_SPINNER_SAVE,
 * BUSY_SPINNER_RIGHT,
 * };
 */
func (_client) EndTextCommandBusyString(busySpinnerType float64) {}

func (_client) EndTextCommandClearPrint() {}
func (_client) N_0xfcc75460aba29378() {}

/**
 * -----------
 * p3 (duration in MS) was previously mentioned as "shape", but with some more testing it seems that it's more likely to be a duration in MS. (Tested this when not calling it every tick, but instead only once and let it display for the specified duration).
 * -1 seems to be default delay (around 3 seconds), 5000 (ms) seems to be the max. Anything > 5000 will still result in 5 seconds of display time.
 * Old p3 (shape) description: "shape goes from -1 to 50 (may be more)."
 * --------------
 * p0 is always 0.
 * Example:
 * void FloatingHelpText(char* text)
 * {
 * BEGIN_TEXT_COMMAND_DISPLAY_HELP("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
 * }
 * Image:
 * - imgbin.org/images/26209.jpg
 * more inputs/icons:
 * - pastebin.com/nqNYWMSB
 * Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
 */
func (_client) EndTextCommandDisplayHelp(p0 float64, loop bool, beep bool, shape float64) {}
/**
 * -----------
 * p3 (duration in MS) was previously mentioned as "shape", but with some more testing it seems that it's more likely to be a duration in MS. (Tested this when not calling it every tick, but instead only once and let it display for the specified duration).
 * -1 seems to be default delay (around 3 seconds), 5000 (ms) seems to be the max. Anything > 5000 will still result in 5 seconds of display time.
 * Old p3 (shape) description: "shape goes from -1 to 50 (may be more)."
 * --------------
 * p0 is always 0.
 * Example:
 * void FloatingHelpText(char* text)
 * {
 * BEGIN_TEXT_COMMAND_DISPLAY_HELP("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
 * }
 * Image:
 * - imgbin.org/images/26209.jpg
 * more inputs/icons:
 * - pastebin.com/nqNYWMSB
 * Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
 */
func (_client) DisplayHelpTextFromStringLabel(p0 float64, loop bool, beep bool, shape float64) {}

/**
 * After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 */
func (_client) EndTextCommandDisplayText(x float64, y float64) {}
/**
 * After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 */
func (_client) DrawText(x float64, y float64) {}

/**
 * END_TEXT_COMMAND_*
 * In scripts font most of the time is passed as 1.
 * Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
 * param is not font from what i've tested
 */
func (_client) EndTextCommandGetWidth(p0 bool) float64 {
	return 0.0
}
/**
 * END_TEXT_COMMAND_*
 * In scripts font most of the time is passed as 1.
 * Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
 * param is not font from what i've tested
 */
func (_client) GetTextScreenWidth(p0 bool) float64 {
	return 0.0
}

func (_client) EndTextCommandIsMessageDisplayed() bool;
func (_client) N_0x8a9ba1ab3e237613() bool;

func (_client) EndTextCommandIsThisHelpMessageBeingDisplayed(p0 float64) bool;
func (_client) N_0x10bddbfc529428dd(p0 float64) bool;

/**
 * END_TEXT_COMMAND_*
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 */
func (_client) EndTextCommandLineCount(x float64, y float64) float64 {
	return 0.0
}
/**
 * END_TEXT_COMMAND_*
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 */
func (_client) N_0x9040dfb09be75706(x float64, y float64) float64 {
	return 0.0
}
/**
 * END_TEXT_COMMAND_*
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 */
func (_client) GetTextScreenLineCount(x float64, y float64) float64 {
	return 0.0
}
/**
 * END_TEXT_COMMAND_*
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 */
func (_client) EndTextCommandGetLineCount(x float64, y float64) float64 {
	return 0.0
}

func (_client) EndTextCommandObjective(p0 bool) {}
func (_client) N_0xcfdbdf5ae59ba0f4(p0 bool) {}

func (_client) EndTextCommandOverrideButtonText(p0 float64) {}
func (_client) N_0xa86911979638106f(p0 float64) {}
func (_client) EndTextCommandTimer(p0 float64) {}

/**
 * Draws the subtitle at middle center of the screen.
 * int duration = time in milliseconds to show text on screen before disappearing
 * drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
 * Used to be known as _DRAW_SUBTITLE_TIMED
 */
func (_client) EndTextCommandPrint(duration float64, drawImmediately bool) {}
/**
 * Draws the subtitle at middle center of the screen.
 * int duration = time in milliseconds to show text on screen before disappearing
 * drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
 * Used to be known as _DRAW_SUBTITLE_TIMED
 */
func (_client) DrawSubtitleTimed(duration float64, drawImmediately bool) {}

func (_client) EndTextCommandScaleformString() {}
func (_client) EndTextComponent() {}

/**
 * Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
 */
func (_client) EndTextCommandScaleformString_2() {}
/**
 * Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
 */
func (_client) N_0xae4e8157d9ecf087() {}

/**
 * Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xF9113A30DE5C6670), setting the name
 * of the specified blip.
 * @param blip The blip to change the name for.
 */
func (_client) EndTextCommandSetBlipName(blip float64) {}

/**
 * Shows an "award" notification above the minimap, lua example result:
 * ![](https://i.imgur.com/e2DNaKX.png)
 * Old description:
 * ```
 * Example:
 * UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
 * UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
 * ```
 * @param textureDict The texture dictionary name for the icon on the left.
 * @param textureName The texture name for the icon on the left.
 * @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
 * @param colorOverlay Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
 * @param titleLabel The label that will be displayed at the top of the notification (title).
 * @return The notification handle.
 */
func (_client) EndTextCommandThefeedPostAward(textureDict string, textureName string, rpBonus float64, colorOverlay float64, titleLabel string) float64 {
	return 0.0
}
/**
 * Shows an "award" notification above the minimap, lua example result:
 * ![](https://i.imgur.com/e2DNaKX.png)
 * Old description:
 * ```
 * Example:
 * UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
 * UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
 * ```
 * @param textureDict The texture dictionary name for the icon on the left.
 * @param textureName The texture name for the icon on the left.
 * @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
 * @param colorOverlay Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
 * @param titleLabel The label that will be displayed at the top of the notification (title).
 * @return The notification handle.
 */
func (_client) N_0xaa295b6f28bd587d(textureDict string, textureName string, rpBonus float64, colorOverlay float64, titleLabel string) float64 {
	return 0.0
}
/**
 * Shows an "award" notification above the minimap, lua example result:
 * ![](https://i.imgur.com/e2DNaKX.png)
 * Old description:
 * ```
 * Example:
 * UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
 * UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
 * ```
 * @param textureDict The texture dictionary name for the icon on the left.
 * @param textureName The texture name for the icon on the left.
 * @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
 * @param colorOverlay Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
 * @param titleLabel The label that will be displayed at the top of the notification (title).
 * @return The notification handle.
 */
func (_client) DrawNotificationIcon(textureDict string, textureName string, rpBonus float64, colorOverlay float64, titleLabel string) float64 {
	return 0.0
}
/**
 * Shows an "award" notification above the minimap, lua example result:
 * ![](https://i.imgur.com/e2DNaKX.png)
 * Old description:
 * ```
 * Example:
 * UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
 * UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
 * ```
 * @param textureDict The texture dictionary name for the icon on the left.
 * @param textureName The texture name for the icon on the left.
 * @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
 * @param colorOverlay Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
 * @param titleLabel The label that will be displayed at the top of the notification (title).
 * @return The notification handle.
 */
func (_client) DrawNotificationAward(textureDict string, textureName string, rpBonus float64, colorOverlay float64, titleLabel string) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostCrewRankup(chTitle string, clanTxd string, clanTxn string, isImportant bool, showSubtitle bool) float64 {
	return 0.0
}
func (_client) N_0x8efccf6ec66d85e4(chTitle string, clanTxd string, clanTxn string, isImportant bool, showSubtitle bool) float64 {
	return 0.0
}

/**
 * This function and the one below it are for after you receive an invite, not sending it.
 * p0 = 1 or 0
 * nothin doin.
 * int invite(Player player)
 * {
 * int iVar2, iVar3;
 * networkHandleMgr handle;
 * NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(0);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
 * {
 * iVar2 = 0;
 * if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
 * {
 * iVar2 = 1;
 * }
 * if (clan.unk21 > 0)
 * {
 * iVar3 = 0;
 * }
 * else
 * {
 * iVar3 = 1;
 * }
 * BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
 * return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0  -- [[unused]] , &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
 * }
 * }
 */
func (_client) EndTextCommandThefeedPostCrewtag(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, hasFounderStatus bool, isImportant bool, clanHandle float64, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };
/**
 * This function and the one below it are for after you receive an invite, not sending it.
 * p0 = 1 or 0
 * nothin doin.
 * int invite(Player player)
 * {
 * int iVar2, iVar3;
 * networkHandleMgr handle;
 * NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(0);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
 * {
 * iVar2 = 0;
 * if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
 * {
 * iVar2 = 1;
 * }
 * if (clan.unk21 > 0)
 * {
 * iVar3 = 0;
 * }
 * else
 * {
 * iVar3 = 1;
 * }
 * BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
 * return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0  -- [[unused]] , &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
 * }
 * }
 */
func (_client) N_0x97c9e4e7024a8f2c(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, hasFounderStatus bool, isImportant bool, clanHandle float64, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };
/**
 * This function and the one below it are for after you receive an invite, not sending it.
 * p0 = 1 or 0
 * nothin doin.
 * int invite(Player player)
 * {
 * int iVar2, iVar3;
 * networkHandleMgr handle;
 * NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(0);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
 * {
 * iVar2 = 0;
 * if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
 * {
 * iVar2 = 1;
 * }
 * if (clan.unk21 > 0)
 * {
 * iVar3 = 0;
 * }
 * else
 * {
 * iVar3 = 1;
 * }
 * BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
 * return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0  -- [[unused]] , &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
 * }
 * }
 */
func (_client) NotificationSendApartmentInvite(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, hasFounderStatus bool, isImportant bool, clanHandle float64, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };
/**
 * This function and the one below it are for after you receive an invite, not sending it.
 * p0 = 1 or 0
 * nothin doin.
 * int invite(Player player)
 * {
 * int iVar2, iVar3;
 * networkHandleMgr handle;
 * NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(0);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
 * {
 * iVar2 = 0;
 * if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
 * {
 * iVar2 = 1;
 * }
 * if (clan.unk21 > 0)
 * {
 * iVar3 = 0;
 * }
 * else
 * {
 * iVar3 = 1;
 * }
 * BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
 * return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0  -- [[unused]] , &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
 * }
 * }
 */
func (_client) DrawNotificationApartmentInvite(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, hasFounderStatus bool, isImportant bool, clanHandle float64, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };

/**
 * p0 = 1 or 0
 * crashes my game...
 * this is for sending invites to network players - jobs/apartment/ect...
 * return notification handle
 * int invite(Player player)
 * {
 * networkHandleMgr netHandle;
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(1);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
 * if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
 * {
 * NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
 * _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
 * }
 * }
 */
func (_client) EndTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, isLeader bool, isImportant bool, clanHandle float64, gamerStr string, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };
/**
 * p0 = 1 or 0
 * crashes my game...
 * this is for sending invites to network players - jobs/apartment/ect...
 * return notification handle
 * int invite(Player player)
 * {
 * networkHandleMgr netHandle;
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(1);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
 * if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
 * {
 * NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
 * _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
 * }
 * }
 */
func (_client) N_0x137bc35589e34e1e(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, isLeader bool, isImportant bool, clanHandle float64, gamerStr string, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };
/**
 * p0 = 1 or 0
 * crashes my game...
 * this is for sending invites to network players - jobs/apartment/ect...
 * return notification handle
 * int invite(Player player)
 * {
 * networkHandleMgr netHandle;
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(1);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
 * if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
 * {
 * NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
 * _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
 * }
 * }
 */
func (_client) NotificationSendClanInvite(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, isLeader bool, isImportant bool, clanHandle float64, gamerStr string, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };
/**
 * p0 = 1 or 0
 * crashes my game...
 * this is for sending invites to network players - jobs/apartment/ect...
 * return notification handle
 * int invite(Player player)
 * {
 * networkHandleMgr netHandle;
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(1);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
 * if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
 * {
 * NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
 * _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
 * }
 * }
 */
func (_client) DrawNotificationClanInvite(crewTypeIsPrivate bool, crewTagContainsRockstar bool, rank float64, isLeader bool, isImportant bool, clanHandle float64, gamerStr string, r float64, g float64, b float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
 * Texture dictionary and texture name parameters are usually the same exact value.
 * Example result:
 * ![](https://i.imgur.com/LviutDl.png)
 * Old description with list of possible icons and texture names:
 * ```
 * List of picNames: pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * ```
 * @param textureDict The texture dictionary for the icon.
 * @param textureName The texture name for the icon.
 * @param flash Flash, doesn't seem to work no matter what.
 * @param iconType The icon type, see the list in the description below.
 * @param sender The notification title.
 * @param subject The notification subtitle.
 * @return The notification handle.
 */
func (_client) EndTextCommandThefeedPostMessagetext(textureDict string, textureName string, flash bool, iconType float64, sender string, subject string) float64 {
	return 0.0
}
/**
 * Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
 * Texture dictionary and texture name parameters are usually the same exact value.
 * Example result:
 * ![](https://i.imgur.com/LviutDl.png)
 * Old description with list of possible icons and texture names:
 * ```
 * List of picNames: pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * ```
 * @param textureDict The texture dictionary for the icon.
 * @param textureName The texture name for the icon.
 * @param flash Flash, doesn't seem to work no matter what.
 * @param iconType The icon type, see the list in the description below.
 * @param sender The notification title.
 * @param subject The notification subtitle.
 * @return The notification handle.
 */
func (_client) SetNotificationMessage(textureDict string, textureName string, flash bool, iconType float64, sender string, subject string) float64 {
	return 0.0
}

/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 * Needs more research.
 * Only one type of usage in the scripts:
 * HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
 */
func (_client) EndTextCommandThefeedPostMessagetextGxtEntry(txdName string, textureName string, flash bool, iconType float64, sender string, subject string) float64 {
	return 0.0
}
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 * Needs more research.
 * Only one type of usage in the scripts:
 * HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
 */
func (_client) N_0xc6f580e4c94926ac(txdName string, textureName string, flash bool, iconType float64, sender string, subject string) float64 {
	return 0.0
}
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 * Needs more research.
 * Only one type of usage in the scripts:
 * HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
 */
func (_client) SetNotificationMessage_3(txdName string, textureName string, flash bool, iconType float64, sender string, subject string) float64 {
	return 0.0
}
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 * Needs more research.
 * Only one type of usage in the scripts:
 * HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
 */
func (_client) EndTextCommandThefeedPostMessagetextEntry(txdName string, textureName string, flash bool, iconType float64, sender string, subject string) float64 {
	return 0.0
}

/**
 * NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * Example, only occurrence in the scripts:
 * ```
 * v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
 * ```
 * Example result:
 * ![](https://i.imgur.com/YrN4Bcm.png)
 */
func (_client) EndTextCommandThefeedPostMessagetextTu(picTxd string, picTxn string, flash bool, iconType float64, nameStr string, subtitleStr string, duration float64) float64 {
	return 0.0
}
/**
 * NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * Example, only occurrence in the scripts:
 * ```
 * v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
 * ```
 * Example result:
 * ![](https://i.imgur.com/YrN4Bcm.png)
 */
func (_client) N_0x1e6611149db3db6b(picTxd string, picTxn string, flash bool, iconType float64, nameStr string, subtitleStr string, duration float64) float64 {
	return 0.0
}
/**
 * NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * Example, only occurrence in the scripts:
 * ```
 * v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
 * ```
 * Example result:
 * ![](https://i.imgur.com/YrN4Bcm.png)
 */
func (_client) SetNotificationMessage_4(picTxd string, picTxn string, flash bool, iconType float64, nameStr string, subtitleStr string, duration float64) float64 {
	return 0.0
}

/**
 * List of picNames pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 */
func (_client) EndTextCommandThefeedPostMessagetextWithCrewTag(picTxd string, picTxn string, flash bool, iconType float64, nameStr string, subtitleStr string, duration float64, crewPackedStr string) float64 {
	return 0.0
}
/**
 * List of picNames pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 */
func (_client) SetNotificationMessageClanTag(picTxd string, picTxn string, flash bool, iconType float64, nameStr string, subtitleStr string, duration float64, crewPackedStr string) float64 {
	return 0.0
}

/**
 * List of picNames: pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 * iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
 * int IconNotification(char *text, char *text2, char *Subject)
 * {
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
 * return _DRAW_NOTIFICATION(1, 1);
 * }
 */
func (_client) EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd string, picTxn string, flash bool, iconType1 float64, nameStr string, subtitleStr string, duration float64, crewPackedStr string, iconType2 float64, textColor float64) float64 {
	return 0.0
}
/**
 * List of picNames: pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 * iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
 * int IconNotification(char *text, char *text2, char *Subject)
 * {
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
 * return _DRAW_NOTIFICATION(1, 1);
 * }
 */
func (_client) SetNotificationMessageClanTag_2(picTxd string, picTxn string, flash bool, iconType1 float64, nameStr string, subtitleStr string, duration float64, crewPackedStr string, iconType2 float64, textColor float64) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostMpticker(blink bool, bHasTokens bool) float64 {
	return 0.0
}
func (_client) DrawNotification_4(blink bool, bHasTokens bool) float64 {
	return 0.0
}

/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0
 * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
 * example:
 * UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese Don't you know I'm LOCO?!");
 */
func (_client) EndTextCommandThefeedPostReplayIcon(eType float64, iIcon float64, sTitle string) float64 {
	return 0.0
}
/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0
 * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
 * example:
 * UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese Don't you know I'm LOCO?!");
 */
func (_client) N_0xd202b92cbf1d816f(eType float64, iIcon float64, sTitle string) float64 {
	return 0.0
}
/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0
 * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
 * example:
 * UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese Don't you know I'm LOCO?!");
 */
func (_client) DrawNotificationWithIcon(eType float64, iIcon float64, sTitle string) float64 {
	return 0.0
}

/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, button accepts "~INPUT_SOMETHING~"
 * example:
 * HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese Don't you know I'm LOCO?!");
 * - imgur.com/UPy0Ial
 * Examples from the scripts:
 * l_D1[1 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
 * l_D1[1 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
 */
func (_client) EndTextCommandThefeedPostReplayInput(_type float64, button string, text string) float64 {
	return 0.0
}
/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, button accepts "~INPUT_SOMETHING~"
 * example:
 * HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese Don't you know I'm LOCO?!");
 * - imgur.com/UPy0Ial
 * Examples from the scripts:
 * l_D1[1 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
 * l_D1[1 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
 */
func (_client) N_0xdd6cb2cce7c2735c(_type float64, button string, text string) float64 {
	return 0.0
}
/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, button accepts "~INPUT_SOMETHING~"
 * example:
 * HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese Don't you know I'm LOCO?!");
 * - imgur.com/UPy0Ial
 * Examples from the scripts:
 * l_D1[1 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
 * l_D1[1 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2 -- [[1]] ]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
 */
func (_client) DrawNotificationWithButton(_type float64, button string, text string) float64 {
	return 0.0
}

/**
 * [List of picture names](https://pastebin.com/XdpJVbHz)
 * Example result:
 * ![](https://i.imgur.com/SdEZ22m.png)
 * @return The notification handle.
 */
func (_client) EndTextCommandThefeedPostStats(statTitle string, iconEnum float64, stepVal bool, barValue float64, isImportant bool, picTxd string, picTxn string) float64 {
	return 0.0
}
/**
 * [List of picture names](https://pastebin.com/XdpJVbHz)
 * Example result:
 * ![](https://i.imgur.com/SdEZ22m.png)
 * @return The notification handle.
 */
func (_client) N_0x2b7e9a4eaaa93c89(statTitle string, iconEnum float64, stepVal bool, barValue float64, isImportant bool, picTxd string, picTxn string) float64 {
	return 0.0
}
/**
 * [List of picture names](https://pastebin.com/XdpJVbHz)
 * Example result:
 * ![](https://i.imgur.com/SdEZ22m.png)
 * @return The notification handle.
 */
func (_client) SetNotificationMessage_2(statTitle string, iconEnum float64, stepVal bool, barValue float64, isImportant bool, picTxd string, picTxn string) float64 {
	return 0.0
}

/**
 * Example output preview:
 * ![](https://i.imgur.com/TJvqkYq.png)
 * @param isImportant Makes the notification flash on the screen.
 * @param bHasTokens Makes the notification appear in the "Pause Menu > Info/Brief > Notifications" section.
 * @return The notification handle.
 */
func (_client) EndTextCommandThefeedPostTicker(isImportant bool, bHasTokens bool) float64 {
	return 0.0
}
/**
 * Example output preview:
 * ![](https://i.imgur.com/TJvqkYq.png)
 * @param isImportant Makes the notification flash on the screen.
 * @param bHasTokens Makes the notification appear in the "Pause Menu > Info/Brief > Notifications" section.
 * @return The notification handle.
 */
func (_client) DrawNotification(isImportant bool, bHasTokens bool) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostTickerForced(blink bool, bHasTokens bool) float64 {
	return 0.0
}
func (_client) DrawNotification_2(blink bool, bHasTokens bool) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostTickerWithTokens(isImportant bool, bHasTokens bool) float64 {
	return 0.0
}
func (_client) DrawNotification_3(isImportant bool, bHasTokens bool) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostUnlock(chTitle string, iconType float64, chSubtitle string) float64 {
	return 0.0
}
func (_client) N_0x33ee12743ccd6343(chTitle string, iconType float64, chSubtitle string) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostUnlockTu(chTitle string, iconType float64, chSubtitle string, isImportant bool) float64 {
	return 0.0
}
func (_client) N_0xc8f3aaf93d0600bf(chTitle string, iconType float64, chSubtitle string, isImportant bool) float64 {
	return 0.0
}

func (_client) EndTextCommandThefeedPostUnlockTuWithColor(chTitle string, iconType float64, chSubtitle string, isImportant bool, titleColor float64, p5 bool) float64 {
	return 0.0
}
func (_client) N_0x7ae0589093a2e088(chTitle string, iconType float64, chSubtitle string, isImportant bool, titleColor float64, p5 bool) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 7: int hudColorIndex1
 * NativeDB Added Parameter 8: int hudColorIndex2
 */
func (_client) EndTextCommandThefeedPostVersusTu(ch1TXD string, ch1TXN string, val1 float64, ch2TXD string, ch2TXN string, val2 float64) float64 {
	return 0.0
}
/**
 * NativeDB Added Parameter 7: int hudColorIndex1
 * NativeDB Added Parameter 8: int hudColorIndex2
 */
func (_client) N_0xb6871b0555b02996(ch1TXD string, ch1TXN string, val1 float64, ch2TXD string, ch2TXN string, val2 float64) float64 {
	return 0.0
}

/**
 * Internal function for ensuring an entity has a state bag.
 */
func (_client) EnsureEntityStateBag(entity float64) {}

/**
 * Enters cursor mode, suppressing mouse movement to the game and displaying a mouse cursor instead. This function supports
 * SDK infrastructure and is not intended to be used directly from your code.
 */
func (_client) EnterCursorMode() {}

func (_client) ExecuteCommand(commandString string) {}

/**
 * This native is not implemented.
 */
func (_client) ExperimentalLoadCloneCreate(data string, objectId float64, tree string) float64 {
	return 0.0
}

/**
 * This native is not implemented.
 */
func (_client) ExperimentalLoadCloneSync(entity float64, data string) {}

/**
 * This native is not implemented.
 */
func (_client) ExperimentalSaveCloneCreate(entity float64) string;

/**
 * This native is not implemented.
 */
func (_client) ExperimentalSaveCloneSync(entity float64) string;

/**
 * Forces the ped to fall back and kills it.
 * It doesn't really explode the ped's head but it kills the ped
 */
func (_client) ExplodePedHead(ped float64, weaponHash interface{}) {}

/**
 * WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);
 */
func (_client) ExplodeProjectiles(ped float64, weaponHash interface{}, p2 bool) {}

/**
 * Explodes a selected vehicle.
 * Vehicle vehicle = Vehicle you want to explode.
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
 */
func (_client) ExplodeVehicle(vehicle float64, isAudible bool, isInvisible bool) {}

func (_client) ExplodeVehicleInCutscene(vehicle float64, p1 bool) {}

/**
 * Appears only 3 times in the scripts, more specifically in michael1.ysc
 * -
 * This can be used to prevent dying if you are "out of the world"
 */
func (_client) ExtendWorldBoundaryForPlayer(x float64, y float64, z float64) {}
/**
 * Appears only 3 times in the scripts, more specifically in michael1.ysc
 * -
 * This can be used to prevent dying if you are "out of the world"
 */
func (_client) N_0x5006d96c995a5827(x float64, y float64, z float64) {}
/**
 * Appears only 3 times in the scripts, more specifically in michael1.ysc
 * -
 * This can be used to prevent dying if you are "out of the world"
 */
func (_client) ExpandWorldLimits(x float64, y float64, z float64) {}

func (_client) FacebookDoUnkCheck() bool;
func (_client) N_0xa75e2b6733da5142() bool;

func (_client) FacebookIsAvailable() bool;
func (_client) N_0x43865688ae10f0d7() bool;

func (_client) FacebookIsSendingData() bool;
func (_client) N_0x62b9fec9a11f10ef() bool;

func (_client) FacebookSetCreateCharacterComplete() bool;
func (_client) N_0xdc48473142545431() bool;

func (_client) FacebookSetHeistComplete(heistName string, cashEarned float64, xpEarned float64) bool;
func (_client) N_0x098ab65b9ed9a9ec(heistName string, cashEarned float64, xpEarned float64) bool;

/**
 * milestoneId:
 * 0 = "percentcomplete"
 * 1 = "storycomplete"
 * 2 = "vehicles"
 * 3 = "properties"
 * 4 = "psych"
 * 5 = "mapreveal"
 * 6 = "prologue"
 */
func (_client) FacebookSetMilestoneComplete(milestoneId float64) bool;
/**
 * milestoneId:
 * 0 = "percentcomplete"
 * 1 = "storycomplete"
 * 2 = "vehicles"
 * 3 = "properties"
 * 4 = "psych"
 * 5 = "mapreveal"
 * 6 = "prologue"
 */
func (_client) N_0x0ae1f1653b554ab9(milestoneId float64) bool;

func (_client) FadeDecalsInRange(x float64, y float64, z float64, radius float64, duration float64) {}

/**
 * Hardcoded to not work in SP.
 */
func (_client) FadeOutLocalPlayer(p0 bool) {}

func (_client) FadeUpPedLight(p0 float64) {}
func (_client) N_0xc9b18b4619f48f7b(p0 float64) {}

func (_client) FilloutPmPlayerList(p1 float64, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) FilloutPmPlayerListWithNames(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) FinalizeHeadBlend(ped float64) {}
func (_client) N_0x4668d80430d6c299(ped float64) {}

/**
 * ```
 * In the script "player_scene_t_bbfight.c4":
 * "if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4 -- [[16]] ], v_9, &v_A, &v_B))"
 * -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
 * -- &l_19F[v_4 -- [[16]] ] (p1) is used in other natives in the script as the "animation" param.
 * -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
 * --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
 * "if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"
 * Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
 * -alphazolam
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) FindAnimEventPhase(animDictionary string, animName string, p2 string) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) FindFirstObject(outEntity float64) (float64, float64) { return 0.0, 0.0 };

func (_client) FindFirstPed(outEntity float64) (float64, float64) { return 0.0, 0.0 };

func (_client) FindFirstPickup(outEntity float64) (float64, float64) { return 0.0, 0.0 };

func (_client) FindFirstVehicle(outEntity float64) (float64, float64) { return 0.0, 0.0 };

func (_client) FindKvp(handle float64) string;

func (_client) FindNextObject(findHandle float64, outEntity float64)  (bool, float64){
	return false,0.0
}

func (_client) FindNextPed(findHandle float64, outEntity float64)  (bool, float64){
	return false,0.0
}

func (_client) FindNextPickup(findHandle float64, outEntity float64)  (bool, float64){
	return false,0.0
}

func (_client) FindNextVehicle(findHandle float64, outEntity float64)  (bool, float64){
	return false,0.0
}

func (_client) FindRadioStationIndex(stationNameHash float64) float64 {
	return 0.0
}

/**
 * Native is significantly more complicated than simply generating a random vector & length.
 * The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport\_\__IsSphereVisible.
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) FindRandomPointInSpace(ped float64)  interface{} { return nil }
/**
 * Native is significantly more complicated than simply generating a random vector & length.
 * The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport\_\__IsSphereVisible.
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) N_0x8dc9675797123522(ped float64)  interface{} { return nil }

/**
 * Finds a position ahead of the player by predicting the players next actions.
 * The positions match path finding node positions.
 * When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
 */
func (_client) FindSpawnPointInDirection(posX float64, posY float64, posZ float64, dirX float64, dirY float64, dirZ float64, distance float64) (bool,interface{}) { return false,nil }

/**
 * Finds the vehicle that is carrying this entity with a handler frame.
 * The model of the entity must be prop_contr_03b_ld or the function will return 0.
 */
func (_client) FindVehicleCarryingThisEntity(entity float64) float64 {
	return 0.0
}
/**
 * Finds the vehicle that is carrying this entity with a handler frame.
 * The model of the entity must be prop_contr_03b_ld or the function will return 0.
 */
func (_client) N_0x375e7fc44f21c8ab(entity float64) float64 {
	return 0.0
}
/**
 * Finds the vehicle that is carrying this entity with a handler frame.
 * The model of the entity must be prop_contr_03b_ld or the function will return 0.
 */
func (_client) GetVehicleAttachedToEntity(entity float64) float64 {
	return 0.0
}

func (_client) FireAirDefenseWeapon(zoneId float64, x float64, y float64, z float64) {}
func (_client) N_0x44f1012b69313374(zoneId float64, x float64, y float64, z float64) {}

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 * This function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
 */
func (_client) FixVehicleWindow(vehicle float64, windowIndex float64) {}

func (_client) FlagPlayerContextInTournament(toggle bool) {}
func (_client) N_0xcef214315d276fd1(toggle bool) {}
func (_client) SetIsInTournament(toggle bool) {}

func (_client) FlashAbilityBar(millisecondsToFlash float64) {}

/**
 * adds a short flash to the Radar/Minimap
 * Usage: UI.FLASH_MINIMAP_DISPLAY
 */
func (_client) FlashMinimapDisplay() {}

func (_client) FlashMinimapDisplayWithColor(hudColorIndex float64) {}
func (_client) N_0x6b1de27ee78e6a19(hudColorIndex float64) {}

func (_client) FlashWantedDisplay(p0 bool) {}

func (_client) Floor(value float64) float64 {
	return 0.0
}

func (_client) ForceCinematicRenderingThisUpdate(p0 bool) {}
func (_client) N_0xa41bcd7213805aac(p0 bool) {}

/**
 * used with 1,2,8,64,128 in the scripts
 */
func (_client) ForceCleanup(cleanupFlags float64) {}

/**
 * PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation
 */
func (_client) ForceCleanupForAllThreadsWithThisName(name string, cleanupFlags float64) {}

func (_client) ForceCleanupForThreadWithThisId(id float64, cleanupFlags float64) {}

func (_client) ForceCloseReportugcMenu() {}
func (_client) N_0xee4c0e6dbc6f2c6f() {}

func (_client) ForceCloseTextInputBox() {}
func (_client) N_0x8817605c2ba76200() {}

/**
 * Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
 */
func (_client) ForceEntityAiAndAnimationUpdate(entity float64) {}

/**
 * Sets the localplayer playerinfo state back to playing (State 0)
 * States are:
 * -1: "Invalid"
 * 0: "Playing"
 * 1: "Died"
 * 2: "Arrested"
 * 3: "Failed Mission"
 * 4: "Left Game"
 * 5: "Respawn"
 * 6: "In MP Cutscene"
 */
func (_client) ForceGameStatePlaying() {}
/**
 * Sets the localplayer playerinfo state back to playing (State 0)
 * States are:
 * -1: "Invalid"
 * 0: "Playing"
 * 1: "Died"
 * 2: "Arrested"
 * 3: "Failed Mission"
 * 4: "Left Game"
 * 5: "Respawn"
 * 6: "In MP Cutscene"
 */
func (_client) ResetLocalplayerState() {}

/**
 * creates single lightning+thunder at random position
 */
func (_client) ForceLightningFlash() {}
/**
 * creates single lightning+thunder at random position
 */
func (_client) CreateLightningThunder() {}

func (_client) ForcePedAiAndAnimationUpdate(ped float64, p1 bool, p2 bool) {}
func (_client) N_0x2208438012482a1a(ped float64, p1 bool, p2 bool) {}

/**
 * Some motionstate hashes are
 * 0xec17e58 (standing idle), 0xbac0f10b (nothing?), 0x3f67c6af (aiming with pistol 2-h), 0x422d7a25 (stealth), 0xbd8817db, 0x916e828c
 * and those for the strings
 * "motionstate_idle", "motionstate_walk", "motionstate_run", "motionstate_actionmode_idle", and "motionstate_actionmode_walk".
 * Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in the scripts. p4 is very rarely something other than 0.
 * [31/03/2017] ins1de :
 * enum MotionState
 * {
 * StopRunning = -530524,
 * StopWalking = -668482597,
 * Idle = 247561816, // 1, 1, 0
 * Idl2 = -1871534317,
 * SkyDive =-1161760501, // 0, 1, 0
 * Stealth = 1110276645,
 * Sprint = -1115154469,
 * Swim = -1855028596,
 * Unknown1 = 1063765679,
 * Unknown2 = -633298724,
 * }
 */
func (_client) ForcePedMotionState(ped float64, motionStateHash interface{}, p2 bool, p3 float64, p4 bool) bool;

func (_client) ForcePedToOpenParachute(ped float64) {}

func (_client) ForcePickupRegenerate(p0 float64) {}
func (_client) N_0x758a5c1b3b1e1990(p0 float64) {}

/**
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 */
func (_client) ForcePlaybackRecordedVehicleUpdate(vehicle float64, p1 bool) {}
/**
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 */
func (_client) N_0x1f2e4e06dea8992b(vehicle float64, p1 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) ForceRadioTrackListPosition(radioStation string, trackListName string, milliseconds float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x4e0af9114608257c(radioStation string, trackListName string, milliseconds float64) {}

func (_client) ForceRenderInGameUi(toggle bool) {}
func (_client) N_0xdc459cfa0cce245b(toggle bool) {}

/**
 * Forces the particular room in an interior to load incase not teleporting into the portal.
 */
func (_client) ForceRoomForEntity(entity float64, interior float64, roomHashKey interface{}) {}

func (_client) ForceRoomForGameViewport(interiorID float64, roomHashKey interface{}) {}
func (_client) N_0x920d853f3e17f1da(interiorID float64, roomHashKey interface{}) {}

/**
 * Forces the game snow pass to render.
 * @param enabled Whether or not to force rendering to use a snow pass.
 */
func (_client) ForceSnowPass(enabled bool) {}

/**
 * Exits the game and downloads a fresh social club update on next restart.
 */
func (_client) ForceSocialClubUpdate() {}

/**
 * Doesn't actually return anything.
 */
func (_client) ForceSonarBlipsThisFrame() float64 {
	return 0.0
}
/**
 * Doesn't actually return anything.
 */
func (_client) N_0x1121bfa1a1a522a8() float64 {
	return 0.0
}

func (_client) ForceSubmarineSurfaceMode(vehicle float64, toggle bool) {}
func (_client) N_0x33506883545ac0df(vehicle float64, toggle bool) {}

/**
 * This native sets the audio of the specified vehicle to the audioName (p1).
 * Use the audioNameHash found in vehicles.meta
 * Example:
 * _SET_VEHICLE_AUDIO(veh, "ADDER");
 * The selected vehicle will now have the audio of the Adder.
 * FORCE_VEHICLE_???
 */
func (_client) ForceVehicleEngineAudio(vehicle float64, audioName string) {}
/**
 * This native sets the audio of the specified vehicle to the audioName (p1).
 * Use the audioNameHash found in vehicles.meta
 * Example:
 * _SET_VEHICLE_AUDIO(veh, "ADDER");
 * The selected vehicle will now have the audio of the Adder.
 * FORCE_VEHICLE_???
 */
func (_client) N_0x4f0c413926060b38(vehicle float64, audioName string) {}
/**
 * This native sets the audio of the specified vehicle to the audioName (p1).
 * Use the audioNameHash found in vehicles.meta
 * Example:
 * _SET_VEHICLE_AUDIO(veh, "ADDER");
 * The selected vehicle will now have the audio of the Adder.
 * FORCE_VEHICLE_???
 */
func (_client) SetVehicleAudio(vehicle float64, audioName string) {}

func (_client) FreeMemoryForHighQualityPhoto() {}
func (_client) N_0xd801cc02177fa3f1() {}

func (_client) FreeMemoryForLowQualityPhoto() {}
func (_client) N_0x6a12d88881435dca() {}

func (_client) FreeMemoryForMissionCreatorPhoto() {}
func (_client) N_0x0a46af8a78dc5e0a() {}

/**
 * Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
 * @param entity The entity to freeze/unfreeze.
 * @param toggle Freeze or unfreeze entity.
 */
func (_client) FreezeEntityPosition(entity float64, toggle bool) {}

func (_client) FreezeMicrophone() {}
func (_client) N_0xd57aaae0e2214d11() {}

func (_client) FreezePedCameraRotation(ped float64) {}
func (_client) N_0xff287323b0e2c69a(ped float64) {}

func (_client) FreezeRadioStation(radioStation string) {}

/**
 * p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
 * distToNxJunction seems to be the distance in metres * 10.0f
 * direction:
 * 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
 * 1 = Route is being calculated or the player is going in the wrong direction
 * 2 = Please Proceed the Highlighted Route
 * 3 = In (distToNxJunction) Turn Left
 * 4 = In (distToNxJunction) Turn Right
 * 5 = In (distToNxJunction) Keep Straight
 * 6 = In (distToNxJunction) Turn Sharply To The Left
 * 7 = In (distToNxJunction) Turn Sharply To The Right
 * 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
 * return value set to 0 always
 */
func (_client) GenerateDirectionsToCoord(x float64, y float64, z float64, p3 bool) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

/**
 * For Steam.
 * Always returns 0 in retail version of the game.
 * @return Returns the progression of an achievement; 0 if the achievement cannot be progressed.
 */
func (_client) GetAchievementProgress(achievement float64) float64 {
	return 0.0
}
/**
 * For Steam.
 * Always returns 0 in retail version of the game.
 * @return Returns the progression of an achievement; 0 if the achievement cannot be progressed.
 */
func (_client) N_0x1c186837d0619335(achievement float64) float64 {
	return 0.0
}
/**
 * For Steam.
 * Always returns 0 in retail version of the game.
 * @return Returns the progression of an achievement; 0 if the achievement cannot be progressed.
 */
func (_client) GetAchievementProgression(achievement float64) float64 {
	return 0.0
}

/**
 * Returns all player indices for 'active' physical players known to the client.
 * The data returned adheres to the following layout:
 * ```
 * [127, 42, 13, 37]
 * ```
 * @return An object containing a list of player indices.
 */
func (_client) GetActivePlayers() interface{} {
	return nil
}

/**
 * Returns current screen resolution.
 */
func (_client) GetActiveScreenResolution() (float64, float64) { return 0.0, 0.0 };
/**
 * Returns current screen resolution.
 */
func (_client) GetScreenActiveResolution() (float64, float64) { return 0.0, 0.0 };

/**
 * https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
 */
func (_client) GetActiveVehicleMissionType(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the current AI BLIP for the specified ped
 */
func (_client) GetAiBlip(ped float64) float64 {
	return 0.0
}
/**
 * Returns the current AI BLIP for the specified ped
 */
func (_client) N_0x56176892826a4fe8(ped float64) float64 {
	return 0.0
}

func (_client) GetAiBlip_2(ped float64) float64 {
	return 0.0
}
func (_client) N_0x7cd934010e115c2c(ped float64) float64 {
	return 0.0
}

/**
 * Returns all rope handles. The data returned adheres to the following layout:
 * ```
 * [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
 * ```
 * @return An object containing a list of all rope handles.
 */
func (_client) GetAllRopes() interface{} {
	return nil
}

func (_client) GetAllVehicles(vehArray float64) (float64, float64) { return 0.0, 0.0 };

func (_client) GetAllocatedStackSize() float64 {
	return 0.0
}

/**
 * Returns profile setting 17.
 */
func (_client) GetAllowMovementWhileZoomed() bool;
/**
 * Returns profile setting 17.
 */
func (_client) N_0xfc859e2374407556() bool;

/**
 * A getter for [SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME](#\_0x0B919E1FB47CC4E0).
 * @return Returns ambient ped range multiplier value.
 */
func (_client) GetAmbientPedRangeMultiplier() float64 {
	return 0.0
}

/**
 * A getter for [SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME](#\_0x90B6DA738A9A25DA).
 * @return Returns ambient vehicle range multiplier value.
 */
func (_client) GetAmbientVehicleRangeMultiplier() float64 {
	return 0.0
}

func (_client) GetAmbientVoiceNameHash(ped float64) float64 {
	return 0.0
}
func (_client) N_0x5e203da2ba15d436(ped float64) float64 {
	return 0.0
}

func (_client) GetAmmoInClip(ped float64, weaponHash interface{}, ammo float64)  (bool, float64){
	return false,0.0
}

/**
 * WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)
 * From decompiled scripts
 * Returns total ammo in weapon
 * GTALua Example :
 * natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
 */
func (_client) GetAmmoInPedWeapon(ped float64, weaponhash interface{}) float64 {
	return 0.0
}

func (_client) GetAngleBetween_2dVectors(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) GetAnimDuration(animDict string, animName string) float64 {
	return 0.0
}
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) GetAnimDuration(animDict string, animName string) float64 {
	return 0.0
}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) GetAnimInitialOffsetPosition(animDict string, animName string, x float64, y float64, z float64, xRot float64, yRot float64, zRot float64, p8 float64, p9 float64)  interface{} { return nil }

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) GetAnimInitialOffsetRotation(animDict string, animName string, x float64, y float64, z float64, xRot float64, yRot float64, zRot float64, p8 float64, p9 float64)  interface{} { return nil }

func (_client) GetAspectRatio(b bool) float64 {
	return 0.0
}
func (_client) GetScreenAspectRatio(b bool) float64 {
	return 0.0
}

func (_client) GetAudibleMusicTrackTextId() float64 {
	return 0.0
}

func (_client) GetBaseElementMetadata(p3 float64, p4 bool) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xb335f761606db47c(p3 float64, p4 bool) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * Returns value of the '-benchmarkIterations' command line option.
 */
func (_client) GetBenchmarkIterationsFromCommandLine() float64 {
	return 0.0
}
/**
 * Returns value of the '-benchmarkIterations' command line option.
 */
func (_client) N_0x4750fc27570311ec() float64 {
	return 0.0
}

/**
 * Returns value of the '-benchmarkPass' command line option.
 */
func (_client) GetBenchmarkPassFromCommandLine() float64 {
	return 0.0
}
/**
 * Returns value of the '-benchmarkPass' command line option.
 */
func (_client) N_0x1b2366c3f2a5c8df() float64 {
	return 0.0
}

func (_client) GetBenchmarkTime() float64 {
	return 0.0
}
func (_client) N_0xe599a503b3837e1b() float64 {
	return 0.0
}

/**
 * p1 is always 0 in the scripts.
 */
func (_client) GetBestPedWeapon(ped float64, p1 bool) float64 {
	return 0.0
}

/**
 * In percentage: 0.0 - 100.0
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) GetBinkMovieTime(binkMovie float64) float64 {
	return 0.0
}

func (_client) GetBitsInRange(_var float64, rangeStart float64, rangeEnd float64) float64 {
	return 0.0
}

func (_client) GetBlipAlpha(blip float64) float64 {
	return 0.0
}

func (_client) GetBlipColour(blip float64) float64 {
	return 0.0
}

func (_client) GetBlipCoords(blip float64)  interface{} { return nil }

/**
 * Returns the Blip handle of given Entity.
 */
func (_client) GetBlipFromEntity(entity float64) float64 {
	return 0.0
}

func (_client) GetBlipHudColour(blip float64) float64 {
	return 0.0
}

func (_client) GetBlipInfoIdCoord(blip float64)  interface{} { return nil }

func (_client) GetBlipInfoIdDisplay(blip float64) float64 {
	return 0.0
}

func (_client) GetBlipInfoIdEntityIndex(blip float64) float64 {
	return 0.0
}

/**
 * This function is hard-coded to always return 0.
 */
func (_client) GetBlipInfoIdPickupIndex(blip float64) float64 {
	return 0.0
}

/**
 * Returns a value based on what the blip is attached to
 * 1 - Vehicle
 * 2 - Ped
 * 3 - Object
 * 4 - Coord
 * 5 - unk
 * 6 - Pickup
 * 7 - Radius
 */
func (_client) GetBlipInfoIdType(blip float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2060
 */
func (_client) GetBlipRotation(blip float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x003e92ba477f9d7f(blip float64) float64 {
	return 0.0
}

/**
 * Blips Images + IDs:
 * gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
 */
func (_client) GetBlipSprite(blip float64) float64 {
	return 0.0
}

func (_client) GetBoatBoomPositionRatio(vehicle float64) float64 {
	return 0.0
}
func (_client) N_0x6636c535f6cc2725(vehicle float64) float64 {
	return 0.0
}

/**
 * Same call as VEHICLE::_0x0F3B4D4E43177236
 */
func (_client) GetBoatBoomPositionRatio_2(vehicle float64, p1 bool) {}
/**
 * Same call as VEHICLE::_0x0F3B4D4E43177236
 */
func (_client) N_0xc1f981a6f74f0c23(vehicle float64, p1 bool) {}

func (_client) GetBoatBoomPositionRatio_3(vehicle float64, p1 bool) {}
func (_client) N_0x0f3b4d4e43177236(vehicle float64, p1 bool) {}

/**
 * Enumerated type defined in camControlHelperMetadataViewModes:
 * ```cpp
 * enum Context {
 * ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
 * IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
 * ON_BIKE = 2,
 * IN_BOAT = 3,
 * IN_AIRCRAFT = 4,
 * IN_SUBMARINE = 5,
 * IN_HELI = 6,
 * IN_TURRET = 7,
 * }
 * ```
 * @return The active view mode context.
 */
func (_client) GetCamActiveViewModeContext() float64 {
	return 0.0
}
/**
 * Enumerated type defined in camControlHelperMetadataViewModes:
 * ```cpp
 * enum Context {
 * ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
 * IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
 * ON_BIKE = 2,
 * IN_BOAT = 3,
 * IN_AIRCRAFT = 4,
 * IN_SUBMARINE = 5,
 * IN_HELI = 6,
 * IN_TURRET = 7,
 * }
 * ```
 * @return The active view mode context.
 */
func (_client) N_0x19cafa3c87f7c2ff() float64 {
	return 0.0
}

func (_client) GetCamAnimCurrentPhase(cam float64) float64 {
	return 0.0
}

func (_client) GetCamCoord(cam float64)  interface{} { return nil }

func (_client) GetCamFarClip(cam float64) float64 {
	return 0.0
}

func (_client) GetCamFarDof(cam float64) float64 {
	return 0.0
}

func (_client) GetCamFov(cam float64) float64 {
	return 0.0
}

/**
 * Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inverse.
 */
func (_client) GetCamMatrix(camera float64) (interface{},interface{},interface{},interface{}) { return nil,nil,nil,nil}

func (_client) GetCamNearClip(cam float64) float64 {
	return 0.0
}

/**
 * The last parameter, as in other "ROT" methods, is usually 2.
 */
func (_client) GetCamRot(cam float64, rotationOrder float64)  interface{} { return nil }

func (_client) GetCamSplineNodeIndex(cam float64) float64 {
	return 0.0
}

/**
 * I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
 */
func (_client) GetCamSplineNodePhase(cam float64) float64 {
	return 0.0
}

/**
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)
 */
func (_client) GetCamSplinePhase(cam float64) float64 {
	return 0.0
}

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the view mode enum.
 * @param context See [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
 */
func (_client) GetCamViewModeForContext(context float64) float64 {
	return 0.0
}
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the view mode enum.
 * @param context See [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
 */
func (_client) N_0xee778f8c7e1142e2(context float64) float64 {
	return 0.0
}

/**
 * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
 */
func (_client) GetCanVehicleJump(vehicle float64) bool;
/**
 * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
 */
func (_client) HasVehicleJumpingAbility(vehicle float64) bool;
/**
 * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
 */
func (_client) DoesVehicleHaveJumpingAbility(vehicle float64) bool;

/**
 * Gets the position of the cargobob hook, in world coords.
 */
func (_client) GetCargobobHookPosition(cargobob float64)  interface{} { return nil }
/**
 * Gets the position of the cargobob hook, in world coords.
 */
func (_client) N_0xcbdb9b923cacc92d(cargobob float64)  interface{} { return nil }

func (_client) GetCauseOfMostRecentForceCleanup() float64 {
	return 0.0
}

func (_client) GetCgoffset(entity float64)  interface{} { return nil }

func (_client) GetClipSetForScriptedGunTask(p0 float64) string;

func (_client) GetClockDayOfMonth() float64 {
	return 0.0
}

/**
 * Gets the current day of the week.
 * 0: Sunday
 * 1: Monday
 * 2: Tuesday
 * 3: Wednesday
 * 4: Thursday
 * 5: Friday
 * 6: Saturday
 */
func (_client) GetClockDayOfWeek() float64 {
	return 0.0
}

/**
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
 */
func (_client) GetClockHours() float64 {
	return 0.0
}

/**
 * Gets the current ingame clock minute.
 */
func (_client) GetClockMinutes() float64 {
	return 0.0
}

func (_client) GetClockMonth() float64 {
	return 0.0
}

/**
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
 */
func (_client) GetClockSeconds() float64 {
	return 0.0
}

func (_client) GetClockYear() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1180
 */
func (_client) GetClosestBlipOfType(blipSprite float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xd484bf71050ca1ee(blipSprite float64) float64 {
	return 0.0
}

/**
 * Returns TRUE if it found something. FALSE if not.
 */
func (_client) GetClosestFirePos(x float64, y float64, z float64) (bool,interface{}) { return false,nil }

/**
 * Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0
 */
func (_client) GetClosestMajorVehicleNode(x float64, y float64, z float64, unknown1 float64, unknown2 float64) (bool,interface{}) { return false,nil }

/**
 * Has 8 params in the latest patches.
 * isMission - if true doesn't return mission objects
 */
func (_client) GetClosestObjectOfType(x float64, y float64, z float64, radius float64, modelHash interface{}, isMission bool, p6 bool, p7 bool) float64 {
	return 0.0
}

/**
 * Gets the closest ped in a radius.
 * Ped Types:
 * Any ped = -1
 * Player = 1
 * Male = 4
 * Female = 5
 * Cop = 6
 * Human = 26
 * SWAT = 27
 * Animal = 28
 * Army = 29
 * ------------------
 * P4 P5 P7 P8
 * 1  0  x  x  = return nearest walking Ped
 * 1  x  0  x  = return nearest walking Ped
 * x  1  1  x  = return Ped you are using
 * 0  0  x  x  = no effect
 * 0  x  0  x  = no effect
 * x = can be 1 or 0. Does not have any obvious changes.
 * This function does not return ped who is:
 * 1. Standing still
 * 2. Driving
 * 3. Fleeing
 * 4. Attacking
 * This function only work if the ped is:
 * 1. walking normally.
 * 2. waiting to cross a road.
 * Note: PED::GET_PED_NEARBY_PEDS works for more peds.
 */
func (_client) GetClosestPed(x float64, y float64, z float64, radius float64, p4 bool, p5 bool, p7 bool, p8 bool, pedType float64)  (bool, float64){
	return false,0.0
}

/**
 * p1 seems to be always 1.0f in the scripts
 */
func (_client) GetClosestRoad(x float64, y float64, z float64, p3 float64, p4 float64, p10 bool) (float64,interface{},interface{},float64,float64,float64) { return 0.0,nil,nil,0.0,0.0,0.0}

/**
 * Example usage
 * VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)
 * x, y, z: Position to get closest vehicle to.
 * radius: Max radius to get a vehicle.
 * modelHash: Limit to vehicles with this model. 0 for any.
 * flags: The bitwise flags altering the function's behaviour.
 * Does not return police cars or helicopters.
 * It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
 * Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
 * These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
 * Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
 * Conversion of found flags to binary: pastebin.com/kghNFkRi
 * At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
 * It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT
 * -------------------------------------------------------------------------
 * Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
 * Use flag 127 to return police cars
 */
func (_client) GetClosestVehicle(x float64, y float64, z float64, radius float64, modelHash interface{}, flags float64) float64 {
	return 0.0
}

/**
 * FYI: When falling through the map (or however you got under it) you will respawn when your player ped's height is <= -200.0 meters (I think you all know this) and when in a vehicle you will actually respawn at the closest vehicle node.
 * ----------
 * Vector3 nodePos;
 * GET_CLOSEST_VEHICLE_NODE(x,y,z,&nodePos,...)
 * p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (asphalt) road.
 * p5, p6 are always the same:
 * 0x40400000 (3.0), 0
 * p5 can also be 100.0 and p6 can be 2.5:
 * PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, &v_5, v_9, 100.0, 2.5)
 * Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
 * The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
 * Starting at 2, every fourth node is under the map, always same coords.
 * Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
 * gtaforums.com/topic/843561-pathfind-node-types
 */
func (_client) GetClosestVehicleNode(x float64, y float64, z float64, nodeType float64, p5 float64, p6 float64) (bool,interface{}) { return false,nil }

/**
 * p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
 * p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (asphalt) road.
 * p6 is always 3.0
 * p7 is always 0.
 * Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
 * The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
 * Starting at 2, every fourth node is under the map, always same coords.
 * Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
 * gtaforums.com/topic/843561-pathfind-node-types
 * Example of usage, moving vehicle to closest path/road:
 * Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);
 * Vector3 closestVehicleNodeCoords;
 * float roadHeading;
 * PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);
 * ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);
 * ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);
 * VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);
 * ------------------------------------------------------------------
 * C# Example (ins1de) : pastebin.com/fxtMWAHD
 */
func (_client) GetClosestVehicleNodeWithHeading(x float64, y float64, z float64, nodeType float64, p6 float64, p7 float64) (bool,interface{},float64) { return false,nil,0.0}

func (_client) GetCloudHatOpacity() float64 {
	return 0.0
}
func (_client) N_0x20ac25e781ae4a84() float64 {
	return 0.0
}

/**
 * Returns POSIX timestamp.
 * Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#\_0xDA488F299A5B164E))
 * @return An int representing the cloud time.
 */
func (_client) GetCloudTimeAsInt() float64 {
	return 0.0
}
/**
 * Returns POSIX timestamp.
 * Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#\_0xDA488F299A5B164E))
 * @return An int representing the cloud time.
 */
func (_client) N_0x9a73240b49945c76() float64 {
	return 0.0
}

/**
 * Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
 */
func (_client) GetCloudTimeAsString() string;
/**
 * Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
 */
func (_client) N_0xf12e6cd06c73d69e() string;

func (_client) GetCollisionNormalOfLastHitForEntity(entity float64)  interface{} { return nil }

/**
 * p0: Ped Handle
 * p1: int i | 0 <= i <= 27
 * p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
 * <BlindFireChance value="0.1"/>
 * <WeaponShootRateModifier value="1.0"/>
 * <TimeBetweenBurstsInCover value="1.25"/>
 * <BurstDurationInCover value="2.0"/>
 * <TimeBetweenPeeks value="10.0"/>
 * <WeaponAccuracy value="0.18"/>
 * <FightProficiency value="0.8"/>
 * <StrafeWhenMovingChance value="1.0"/>
 * <WalkWhenStrafingChance value="0.0"/>
 * <AttackWindowDistanceForCover value="55.0"/>
 * <TimeToInvalidateInjuredTarget value="9.0"/>
 * <TriggerChargeTime_Near value="4.0"/>
 * <TriggerChargeTime_Far value="10.0"/>
 * -------------Confirmed by editing combatbehavior.meta:
 * p1:
 * 0=BlindFireChance
 * 1=BurstDurationInCover
 * 3=TimeBetweenBurstsInCover
 * 4=TimeBetweenPeeks
 * 5=StrafeWhenMovingChance
 * 8=WalkWhenStrafingChance
 * 11=AttackWindowDistanceForCover
 * 12=TimeToInvalidateInjuredTarget
 * 16=OptimalCoverDistance
 */
func (_client) GetCombatFloat(ped float64, p1 float64) float64 {
	return 0.0
}

/**
 * index2 is unused
 */
func (_client) GetCommerceItemCat(index float64, index2 float64) string;
/**
 * index2 is unused
 */
func (_client) N_0x6f44cbf56d79fac0(index float64, index2 float64) string;

func (_client) GetCommerceItemId(index float64) string;
func (_client) N_0x662635855957c411(index float64) string;

func (_client) GetCommerceItemName(index float64) string;
func (_client) N_0xb4271092ca7edf48(index float64) string;

func (_client) GetCommerceItemNumCats(index float64) float64 {
	return 0.0
}
func (_client) N_0x2a7776c709904ab0(index float64) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 3: int p2
 */
func (_client) GetCommerceItemTexturename(index float64) string;
/**
 * NativeDB Added Parameter 3: int p2
 */
func (_client) N_0x722f5d28b61c5ea8(index float64) string;

func (_client) GetCommerceProductPrice(index float64) string;
func (_client) N_0xca94551b50b4932c(index float64) string;

func (_client) GetControlGroupInstructionalButton(padIndex float64, controlGroup float64, p2 bool) string;
func (_client) N_0x80c2fd58d720c801(padIndex float64, controlGroup float64, p2 bool) string;

/**
 * formerly called _GET_CONTROL_ACTION_NAME incorrectly
 * p2 appears to always be true.
 * p2 is unused variable in function.
 * EG:
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1)  -- [[INPUT_FRONTEND_ACCEPT (e.g. Enter button)]] 
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1)  -- [[INPUT_FRONTEND_CANCEL (e.g. ESC button)]] 
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1)  -- [[INPUT_CONTEXT (e.g. E button)]] 
 * gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
 * 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
 */
func (_client) GetControlInstructionalButton(padIndex float64, control float64, p2 bool) string;
/**
 * formerly called _GET_CONTROL_ACTION_NAME incorrectly
 * p2 appears to always be true.
 * p2 is unused variable in function.
 * EG:
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1)  -- [[INPUT_FRONTEND_ACCEPT (e.g. Enter button)]] 
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1)  -- [[INPUT_FRONTEND_CANCEL (e.g. ESC button)]] 
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1)  -- [[INPUT_CONTEXT (e.g. E button)]] 
 * gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
 * 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
 */
func (_client) N_0x0499d7b09fc9b407(padIndex float64, control float64, p2 bool) string;

func (_client) GetControlNormal(padIndex float64, control float64) float64 {
	return 0.0
}

/**
 * Seems to return values between -1 and 1 for controls like gas and steering.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 */
func (_client) GetControlUnboundNormal(padIndex float64, control float64) float64 {
	return 0.0
}
/**
 * Seems to return values between -1 and 1 for controls like gas and steering.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 */
func (_client) N_0x5b84d09cec5209c5(padIndex float64, control float64) float64 {
	return 0.0
}

func (_client) GetControlValue(padIndex float64, control float64) float64 {
	return 0.0
}

func (_client) GetConvar(varName string, default_ string) string;

func (_client) GetConvarInt(varName string, default_ float64) float64 {
	return 0.0
}

/**
 * 0 -> up
 * 1 -> lowering down
 * 2 -> down
 * 3 -> raising up
 * enum RoofState
 * {
 * ROOFSTATE_UP = 0;
 * ROOFSTATE_LOWERING,
 * ROOFSTATE_DOWN,
 * ROOFSTATE_RAISING
 * };
 */
func (_client) GetConvertibleRoofState(vehicle float64) float64 {
	return 0.0
}

func (_client) GetCoordsAndRotationOfClosestObjectOfType(x float64, y float64, z float64, radius float64, modelHash interface{}, rotationOrder float64) (float64,interface{},interface{}) { return 0.0,nil,nil}
func (_client) N_0x163f8b586bc95f2a(x float64, y float64, z float64, radius float64, modelHash interface{}, rotationOrder float64) (float64,interface{},interface{}) { return 0.0,nil,nil}

func (_client) GetCoordsOfProjectileTypeInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, projectileHash interface{}, ownedByPlayer bool) (bool,interface{}) { return false,nil }
func (_client) N_0x8d7a43ec6a5fea45(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, projectileHash interface{}, ownedByPlayer bool) (bool,interface{}) { return false,nil }
func (_client) GetIsProjectileTypeInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, projectileHash interface{}, ownedByPlayer bool) (bool,interface{}) { return false,nil }

func (_client) GetCoordsOfProjectileTypeWithinDistance(ped float64, weaponHash interface{}, distance float64, ownedByPlayer bool) (bool,interface{}) { return false,nil }
func (_client) N_0xdfb4138eefed7b81(ped float64, weaponHash interface{}, distance float64, ownedByPlayer bool) (bool,interface{}) { return false,nil }
func (_client) GetProjectileNearPedCoords(ped float64, weaponHash interface{}, distance float64, ownedByPlayer bool) (bool,interface{}) { return false,nil }

/**
 * if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
 */
func (_client) GetCurrentFrontendMenuVersion() float64 {
	return 0.0
}
/**
 * if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
 */
func (_client) N_0x2309595ad6145265() float64 {
	return 0.0
}
/**
 * if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
 */
func (_client) GetCurrentFrontendMenu() float64 {
	return 0.0
}

/**
 * This native returns the currently used game's name.
 * @return The game name as a string, one of the following values: gta4, gta5, rdr3
 */
func (_client) GetCurrentGameName() string;

/**
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 */
func (_client) GetCurrentLanguage() float64 {
	return 0.0
}
/**
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 */
func (_client) GetUiLanguageId() float64 {
	return 0.0
}
/**
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 */
func (_client) GetCurrentLanguageId() float64 {
	return 0.0
}

func (_client) GetCurrentNumberOfCloudPhotos() float64 {
	return 0.0
}
func (_client) N_0x473151ebc762c6da() float64 {
	return 0.0
}
func (_client) GetNumberOfPhotos() float64 {
	return 0.0
}
func (_client) GetCurrentNumberOfPhotos() float64 {
	return 0.0
}

func (_client) GetCurrentPedVehicleWeapon(ped float64, weaponHash float64)  (bool, float64){
	return false,0.0
}

/**
 * The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
 * p2 seems to be 1 most of the time; and is not implemented.
 */
func (_client) GetCurrentPedWeapon(ped float64, p2 bool)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) GetCurrentPedWeaponEntityIndex(ped float64) float64 {
	return 0.0
}

func (_client) GetCurrentPlaybackForVehicle(vehicle float64) float64 {
	return 0.0
}

/**
 * Return the hash of the radio stations current track.
 * NativeDB Introduced: v1493
 */
func (_client) GetCurrentRadioTrackName(radioStationName string) float64 {
	return 0.0
}
/**
 * Return the hash of the radio stations current track.
 * NativeDB Introduced: v1493
 */
func (_client) N_0x34d66bc058019ce0(radioStationName string) float64 {
	return 0.0
}

/**
 * Return the playback time (in milliseconds) of the radio stations current track.
 * NativeDB Introduced: v1493
 */
func (_client) GetCurrentRadioTrackPlaybackTime(radioStationName string) float64 {
	return 0.0
}
/**
 * Return the playback time (in milliseconds) of the radio stations current track.
 * NativeDB Introduced: v1493
 */
func (_client) N_0x3e65cde5215832c1(radioStationName string) float64 {
	return 0.0
}
/**
 * Return the playback time (in milliseconds) of the radio stations current track.
 * NativeDB Introduced: v1493
 */
func (_client) GetCurrentRadioStationHash(radioStationName string) float64 {
	return 0.0
}

/**
 * Returns the name of the currently executing resource.
 * @return The name of the resource.
 */
func (_client) GetCurrentResourceName() string;

func (_client) GetCurrentScriptedConversationLine() float64 {
	return 0.0
}

/**
 * Returns the peer address of the remote game server that the user is currently connected to.
 * @return The peer address of the game server (e.g. `127.0.0.1:30120`), or NULL if not available.
 */
func (_client) GetCurrentServerEndpoint() string;

func (_client) GetCurrentWebpageId() float64 {
	return 0.0
}
func (_client) N_0x01a358d9128b7a86() float64 {
	return 0.0
}
func (_client) GetActiveWebsiteId() float64 {
	return 0.0
}

func (_client) GetCurrentWebsiteId() float64 {
	return 0.0
}

/**
 * Jenkins hash probably is 0xFD8B1AC2
 */
func (_client) GetCutFileNumSections(cutsceneName string) float64 {
	return 0.0
}
/**
 * Jenkins hash probably is 0xFD8B1AC2
 */
func (_client) N_0x0abc54de641dc0fc(cutsceneName string) float64 {
	return 0.0
}

func (_client) GetCutsceneSectionPlaying() float64 {
	return 0.0
}

func (_client) GetCutsceneTime() float64 {
	return 0.0
}

func (_client) GetCutsceneTotalDuration() float64 {
	return 0.0
}

func (_client) GetDeadPedPickupCoords(ped float64, p1 float64, p2 float64)  interface{} { return nil }

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetDebugCamera() float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x77c3cec46be286f6() float64 {
	return 0.0
}

func (_client) GetDecalWashLevel(decal float64) float64 {
	return 0.0
}

/**
 * Gets the aggressiveness factor of the ocean waves.
 */
func (_client) GetDeepOceanScaler() float64 {
	return 0.0
}
/**
 * Gets the aggressiveness factor of the ocean waves.
 */
func (_client) N_0x2b2a2cc86778b619() float64 {
	return 0.0
}
/**
 * Gets the aggressiveness factor of the ocean waves.
 */
func (_client) GetWavesIntensity() float64 {
	return 0.0
}
/**
 * Gets the aggressiveness factor of the ocean waves.
 */
func (_client) GetCurrentIntensity() float64 {
	return 0.0
}

/**
 * This function is hard-coded to always return 1.
 */
func (_client) GetDefaultScriptRendertargetRenderId() float64 {
	return 0.0
}

func (_client) GetDisabledControlNormal(padIndex float64, control float64) float64 {
	return 0.0
}

func (_client) GetDisabledControlUnboundNormal(padIndex float64, control float64) float64 {
	return 0.0
}
func (_client) N_0x4f8a26a890fd62fb(padIndex float64, control float64) float64 {
	return 0.0
}

/**
 * Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
 * -----------------------------------------------------------------------------------------------------------------------------------------
 * While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
 * -----------------------------------------------------------------------------------------------------------------------------------------
 * Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
 * Using HUD::_GET_LABEL_TEXT, you can get the localized name.
 */
func (_client) GetDisplayNameFromVehicleModel(modelHash interface{}) string;

/**
 * Returns the distance between two three-dimensional points, optionally ignoring the Z values.
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 * Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
 * @param x1 The X coordinate of the first point.
 * @param y1 The Y coordinate of the first point.
 * @param z1 The Z coordinate of the first point.
 * @param x2 The X coordinate of the second point.
 * @param y2 The Y coordinate of the second point.
 * @param z2 The Z coordinate of the second point.
 * @param useZ Whether or not to use the Z coordinate.
 * @return The distance between the passed points in units.
 */
func (_client) GetDistanceBetweenCoords(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, useZ bool) float64 {
	return 0.0
}

/**
 * dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.
 * outData is a struct of 3 8-byte items.
 * The Second item in the struct *(Hash *)(outData + 1) is the vehicle hash.
 */
func (_client) GetDlcVehicleData(dlcVehicleIndex float64, outData float64)  (bool, float64){
	return false,0.0
}

func (_client) GetDlcVehicleFlags(dlcVehicleIndex float64) float64 {
	return 0.0
}

func (_client) GetDlcVehicleModLockHash(hash interface{}) float64 {
	return 0.0
}
func (_client) N_0xc098810437312fff(hash interface{}) float64 {
	return 0.0
}

/**
 * dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()
 */
func (_client) GetDlcVehicleModel(dlcVehicleIndex float64) float64 {
	return 0.0
}

/**
 * p0 seems to be the weapon index
 * p1 seems to be the weapon component index
 * struct DlcComponentData{
 * int attachBone;
 * int padding1;
 * int bActiveByDefault;
 * int padding2;
 * int unk;
 * int padding3;
 * int componentHash;
 * int padding4;
 * int unk2;
 * int padding5;
 * int componentCost;
 * int padding6;
 * char nameLabel[64];
 * char descLabel[64];
 * };
 */
func (_client) GetDlcWeaponComponentData(dlcWeaponIndex float64, dlcWeapCompIndex float64, ComponentDataPtr float64)  (bool, float64){
	return false,0.0
}

/**
 * Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) GetDlcWeaponComponentDataSp(dlcWeaponIndex float64, dlcWeapCompIndex float64, ComponentDataPtr float64)  (bool, float64){
	return false,0.0
}

/**
 * dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
 * struct DlcWeaponData
 * {
 * int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this
 * int padding1;
 * int weaponHash;
 * int padding2;
 * int unk;
 * int padding3;
 * int weaponCost;
 * int padding4;
 * int ammoCost;
 * int padding5;
 * int ammoType;
 * int padding6;
 * int defaultClipSize;
 * int padding7;
 * char nameLabel[64];
 * char descLabel[64];
 * char desc2Label[64]; // usually "the" + name
 * char upperCaseNameLabel[64];
 * };
 */
func (_client) GetDlcWeaponData(dlcWeaponIndex float64, outData float64)  (bool, float64){
	return false,0.0
}

/**
 * Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) GetDlcWeaponDataSp(dlcWeaponIndex float64, outData float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) GetDoesVehicleHaveTombstone(vehicle float64) bool;

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetDriftTyresEnabled(vehicle float64) bool;

/**
 * Returns the NUI window handle for a specified DUI browser object.
 * @param duiObject The DUI browser handle.
 * @return The NUI window handle, for use in e.g. CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
 */
func (_client) GetDuiHandle(duiObject float64) string;

func (_client) GetEntityAlpha(entity float64) float64 {
	return 0.0
}

/**
 * ```
 * Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
 * Example:
 * 0.000000 - mark the starting of animation.
 * 0.500000 - mark the midpoint of the animation.
 * 1.000000 - mark the end of animation.
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) GetEntityAnimCurrentTime(entity float64, animDict string, animName string) float64 {
	return 0.0
}

/**
 * ```
 * Returns a float value representing animation's total playtime in milliseconds.
 * Example:
 * GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
 * return 20800.000000
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) GetEntityAnimTotalTime(entity float64, animDict string, animName string) float64 {
	return 0.0
}

/**
 * Returns entity's archetype name, if available.
 * @param entity An entity handle.
 * @return Entity's archetype name
 */
func (_client) GetEntityArchetypeName(entity float64) string;

func (_client) GetEntityAttachedTo(entity float64) float64 {
	return 0.0
}

func (_client) GetEntityAttachedToCargobob(vehicle float64) float64 {
	return 0.0
}
func (_client) N_0x99093f60746708ca(vehicle float64) float64 {
	return 0.0
}

func (_client) GetEntityAttachedToTowTruck(towTruck float64) float64 {
	return 0.0
}

func (_client) GetEntityBoneCount(entity float64) float64 {
	return 0.0
}
func (_client) N_0xb328dcc3a3aa401b(entity float64) float64 {
	return 0.0
}

/**
 * Returns the index of the bone. If the bone was not found, -1 will be returned.
 * list:
 * pastebin.com/D7JMnX1g
 * BoneNames:
 * chassis,
 * windscreen,
 * seat_pside_r,
 * seat_dside_r,
 * bodyshell,
 * suspension_lm,
 * suspension_lr,
 * platelight,
 * attach_female,
 * attach_male,
 * bonnet,
 * boot,
 * chassis_dummy,	//Center of the dummy
 * chassis_Control,	//Not found yet
 * door_dside_f,	//Door left, front
 * door_dside_r,	//Door left, back
 * door_pside_f,	//Door right, front
 * door_pside_r,	//Door right, back
 * Gun_GripR,
 * windscreen_f,
 * platelight,	//Position where the light above the numberplate is located
 * VFX_Emitter,
 * window_lf,	//Window left, front
 * window_lr,	//Window left, back
 * window_rf,	//Window right, front
 * window_rr,	//Window right, back
 * engine,	//Position of the engine
 * gun_ammo,
 * ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".
 * wheel_lf,	//Wheel left, front
 * wheel_lr,	//Wheel left, back
 * wheel_rf,	//Wheel right, front
 * wheel_rr,	//Wheel right, back
 * exhaust,	//Exhaust. shows only the position of the stock-exhaust
 * overheat,	//A position on the engine(not exactly sure, how to name it)
 * misc_e,	//Not a car-bone.
 * seat_dside_f,	//Driver-seat
 * seat_pside_f,	//Seat next to driver
 * Gun_Nuzzle,
 * seat_r
 * I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
 */
func (_client) GetEntityBoneIndexByName(entity float64, boneName string) float64 {
	return 0.0
}

/**
 * Gets the world rotation of the specified bone of the specified entity.
 * This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
 */
func (_client) GetEntityBonePosition_2(entity float64, boneIndex float64)  interface{} { return nil }
/**
 * Gets the world rotation of the specified bone of the specified entity.
 * This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
 */
func (_client) N_0x46f8696933a63c9b(entity float64, boneIndex float64)  interface{} { return nil }
/**
 * Gets the world rotation of the specified bone of the specified entity.
 * This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
 */
func (_client) GetWorldPositionOfEntityBone_2(entity float64, boneIndex float64)  interface{} { return nil }

/**
 * Gets the world rotation of the specified bone of the specified entity.
 */
func (_client) GetEntityBoneRotation(entity float64, boneIndex float64)  interface{} { return nil }
/**
 * Gets the world rotation of the specified bone of the specified entity.
 */
func (_client) N_0xce6294a232d03786(entity float64, boneIndex float64)  interface{} { return nil }
/**
 * Gets the world rotation of the specified bone of the specified entity.
 */
func (_client) GetWorldRotationOfEntityBone(entity float64, boneIndex float64)  interface{} { return nil }

/**
 * Gets the local rotation of the specified bone of the specified entity.
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) GetEntityBoneRotationLocal(entity float64, boneIndex float64)  interface{} { return nil }

func (_client) GetEntityCanBeDamaged(entity float64) bool;
func (_client) N_0xd95cc5d2ab15a09f(entity float64) bool;

func (_client) GetEntityCollisionDisabled(entity float64) bool;
func (_client) N_0xccf1e97befdae480(entity float64) bool;
func (_client) GetEntityCollisonDisabled(entity float64) bool;

/**
 * Gets the current coordinates (world position) for a specified entity.
 * @param entity The entity to get the coordinates from.
 * @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
 * @return The current entity coordinates.
 */
func (_client) GetEntityCoords(entity float64, alive bool)  interface{} { return nil }

/**
 * Gets the entity's forward vector.
 * @param entity The entity to get the forward vector for.
 * @return The forward vector.
 */
func (_client) GetEntityForwardVector(entity float64)  interface{} { return nil }

/**
 * Gets the X-component of the entity's forward vector.
 */
func (_client) GetEntityForwardX(entity float64) float64 {
	return 0.0
}

/**
 * Gets the Y-component of the entity's forward vector.
 */
func (_client) GetEntityForwardY(entity float64) float64 {
	return 0.0
}

/**
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 * @param entity The entity to get the heading from.
 * @return The current entity heading.
 */
func (_client) GetEntityHeading(entity float64) float64 {
	return 0.0
}

/**
 * Returns an integer value of entity's current health.
 * Example of range for ped:
 * - Player [0 to 200]
 * - Ped [100 to 200]
 * - Vehicle [0 to 1000]
 * - Object [0 to 1000]
 * Health is actually a float value but this native casts it to int.
 * In order to get the actual value, do:
 * float health = *(float *)(entityAddress + 0x280);
 * @param entity The entity to get the health from.
 * @return The current entity health.
 */
func (_client) GetEntityHealth(entity float64) float64 {
	return 0.0
}

func (_client) GetEntityHeight(entity float64, X float64, Y float64, Z float64, atTop bool, inWorldCoords bool) float64 {
	return 0.0
}

/**
 * Return height (z-dimension) above ground.
 * Example: The pilot in a titan plane is 1.844176 above ground.
 * How can i convert it to meters?
 * Everything seems to be in meters, probably this too.
 */
func (_client) GetEntityHeightAboveGround(entity float64) float64 {
	return 0.0
}

/**
 * Returns the transient entity index for a specified mapdata/entity pair.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param mapdata The input map data index from GET_MAPDATA_FROM_HASH_KEY.
 * @param entity The input entity handle from GET_ENTITY_MAPDATA_OWNER.
 * @return A transient (non-persistable) index to the requested entity, or -1.
 */
func (_client) GetEntityIndexFromMapdata(mapdata float64, entity float64) float64 {
	return 0.0
}

func (_client) GetEntityIndexOfCutsceneEntity(cutsceneEntName string, modelHash interface{}) float64 {
	return 0.0
}

func (_client) GetEntityIndexOfRegisteredEntity(cutsceneEntName string, modelHash interface{}) float64 {
	return 0.0
}

/**
 * Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
 * @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
 */
func (_client) GetEntityInsideExplosionArea(explosionType float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64) float64 {
	return 0.0
}
/**
 * Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
 * @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
 */
func (_client) GetPedInsideExplosionArea(explosionType float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) GetEntityInsideExplosionSphere(explosionType float64, x float64, y float64, z float64, radius float64) float64 {
	return 0.0
}

/**
 * Returns the LOD distance of an entity.
 */
func (_client) GetEntityLodDist(entity float64) float64 {
	return 0.0
}

/**
 * Retrieves the map data and entity handles from a specific entity.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param entity An entity owned by map data.
 * @param mapdataHandle The output map data handle.
 * @param entityHandle The output entity handle.
 * @return True if successful, false if not.
 */
func (_client) GetEntityMapdataOwner(entity float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) GetEntityMatrix(entity float64) (interface{},interface{},interface{},interface{}) { return nil,nil,nil,nil}

/**
 * Return an integer value of entity's maximum health.
 * Example:
 * - Player = 200
 */
func (_client) GetEntityMaxHealth(entity float64) float64 {
	return 0.0
}

/**
 * Returns the model hash from the entity
 * @param entity The entity to get the model for.
 * @return The model hash from the entity.
 */
func (_client) GetEntityModel(entity float64) float64 {
	return 0.0
}

/**
 * Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
 * NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
 */
func (_client) GetEntityPhysicsHeading(entity float64) float64 {
	return 0.0
}
/**
 * Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
 * NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
 */
func (_client) N_0x846bf6291198a71e(entity float64) float64 {
	return 0.0
}

/**
 * GET_ENTITY_*
 * Seems to return the handle of the entity's portable pickup.
 * NativeDB Introduced: v1180
 */
func (_client) GetEntityPickup(entity float64, modelHash interface{}) float64 {
	return 0.0
}

func (_client) GetEntityPitch(entity float64) float64 {
	return 0.0
}

/**
 * Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
 * Returns false if no entity found.
 */
func (_client) GetEntityPlayerIsFreeAimingAt(player float64, entity float64)  (bool, float64){
	return false,0.0
}

/**
 * A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
 * @param entity The entity to obtain the population type from.
 * @return A population type, from the enumeration above.
 */
func (_client) GetEntityPopulationType(entity float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) GetEntityProofs(entity float64)  (bool,interface{},interface{},interface{},interface{},interface{},interface{},interface{},interface{}) { return false,nil,nil,nil,nil,nil,nil,nil,nil}

/**
 * w is the correct parameter name!
 */
func (_client) GetEntityQuaternion(entity float64) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

/**
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
 * (Sideways Roll) such as a vehicle tipped on its side
 */
func (_client) GetEntityRoll(entity float64) float64 {
	return 0.0
}

/**
 * ```
 * rotationOrder refers to the order yaw pitch roll is applied; value ranges from 0 to 5 and is usually *2* in scripts.
 * What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
 * What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll:
 * www.allstar.fiu.edu/aero/images/pic5-1.gif
 * ```
 * ### Rotation Orders
 * *   **0**: ZYX - Rotate around the z-axis, then the y-axis and finally the x-axis.
 * *   **1**: YZX - Rotate around the y-axis, then the z-axis and finally the x-axis.
 * *   **2**: ZXY - Rotate around the z-axis, then the x-axis and finally the y-axis.
 * *   **3**: XZY - Rotate around the x-axis, then the z-axis and finally the y-axis.
 * *   **4**: YXZ - Rotate around the y-axis, then the x-axis and finally the z-axis.
 * *   **5**: XYZ - Rotate around the x-axis, then the y-axis and finally the z-axis.
 * @param entity The entity to get the rotation for.
 * @param rotationOrder The order yaw, pitch and roll is applied. Usually 2.
 * @return A vector where the Z coordinate is the yaw.
 */
func (_client) GetEntityRotation(entity float64, rotationOrder float64)  interface{} { return nil }

func (_client) GetEntityRotationVelocity(entity float64)  interface{} { return nil }

/**
 * All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.
 */
func (_client) GetEntityScript(entity float64, script float64)  (string, float64){
	return false,0.0
}

/**
 * result is in meters per second
 * ------------------------------------------------------------
 * So would the conversion to mph and km/h, be along the lines of this.
 * float speed = GET_ENTITY_SPEED(veh);
 * float kmh = (speed * 3.6);
 * float mph = (speed * 2.236936);
 */
func (_client) GetEntitySpeed(entity float64) float64 {
	return 0.0
}

/**
 * Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
 */
func (_client) GetEntitySpeedVector(entity float64, relative bool)  interface{} { return nil }

/**
 * Get how much of the entity is submerged.  1.0f is whole entity.
 */
func (_client) GetEntitySubmergedLevel(entity float64) float64 {
	return 0.0
}

/**
 * Returns:
 * 0 = no entity
 * 1 = ped
 * 2 = vehicle
 * 3 = object
 */
func (_client) GetEntityType(entity float64) float64 {
	return 0.0
}

func (_client) GetEntityUprightValue(entity float64) float64 {
	return 0.0
}

func (_client) GetEntityVelocity(entity float64)  interface{} { return nil }

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) GetEntryPositionOfDoor(vehicle float64, doorIndex float64)  interface{} { return nil }

/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 */
func (_client) GetEventAtIndex(eventGroup float64, eventIndex float64) float64 {
	return 0.0
}

/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 */
func (_client) GetEventData(eventGroup float64, eventIndex float64, eventDataSize float64)  (bool, float64){
	return false,0.0
}

/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 */
func (_client) GetEventExists(eventGroup float64, eventIndex float64) bool;

/**
 * A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938), but for a specified resource.
 * @param resource The resource to fetch from.
 * @param key The key to fetch
 * @return A float that contains the value stored in the Kvp or nil/null if none.
 */
func (_client) GetExternalKvpFloat(resource string, key string) float64 {
	return 0.0
}

/**
 * A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8), but for a specified resource.
 * @param resource The resource to fetch from.
 * @param key The key to fetch
 * @return A int that contains the value stored in the Kvp or nil/null if none.
 */
func (_client) GetExternalKvpInt(resource string, key string) float64 {
	return 0.0
}

/**
 * A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B), but for a specified resource.
 * @param resource The resource to fetch from.
 * @param key The key to fetch
 * @return A string that contains the value stored in the Kvp or nil/null if none.
 */
func (_client) GetExternalKvpString(resource string, key string) string;

func (_client) GetExtraContentPackHasBeenInstalled() bool;
func (_client) N_0x8d30f648014a92b5() bool;

/**
 * See [`GET_TIMECYCLE_MODIFIER_INDEX`](#\_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
 * @return An integer representing the Timecycle modifier
 */
func (_client) GetExtraTimecycleModifierIndex() float64 {
	return 0.0
}
/**
 * See [`GET_TIMECYCLE_MODIFIER_INDEX`](#\_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
 * @return An integer representing the Timecycle modifier
 */
func (_client) N_0xbb0527ec6341496d() float64 {
	return 0.0
}

func (_client) GetFakeWantedLevel() float64 {
	return 0.0
}
func (_client) N_0x4c9296cbcd1b971e() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamCoord()  interface{} { return nil }
func (_client) GetGameplayCamCoords()  interface{} { return nil }

func (_client) GetFinalRenderedCamFarClip() float64 {
	return 0.0
}
func (_client) N_0xdfc8cbc606fdb0fc() float64 {
	return 0.0
}
func (_client) GetGameplayCamFarClip() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamFarDof() float64 {
	return 0.0
}
func (_client) N_0x9780f32bcaf72431() float64 {
	return 0.0
}
func (_client) GetGameplayCamFarDof() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamFov() float64 {
	return 0.0
}
func (_client) N_0x80ec114669daeff4() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamMotionBlurStrength() float64 {
	return 0.0
}
func (_client) N_0x162f9d995753dc19() float64 {
	return 0.0
}
func (_client) GetGameplayCamFarClip_2() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamNearClip() float64 {
	return 0.0
}
func (_client) N_0xd0082607100d7193() float64 {
	return 0.0
}
func (_client) GetGameplayCamNearClip() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamNearDof() float64 {
	return 0.0
}
func (_client) N_0xa03502fc581f7d9b() float64 {
	return 0.0
}
func (_client) GetGameplayCamNearDof() float64 {
	return 0.0
}

func (_client) GetFinalRenderedCamRot(rotationOrder float64)  interface{} { return nil }
func (_client) GetGameplayCamRot_2(rotationOrder float64)  interface{} { return nil }

func (_client) GetFinalRenderedInWhenFriendlyFov(player float64) float64 {
	return 0.0
}
func (_client) N_0x5f35f6732c3fbba0(player float64) float64 {
	return 0.0
}

func (_client) GetFinalRenderedInWhenFriendlyRot(player float64, rotationOrder float64)  interface{} { return nil }
func (_client) N_0x26903d9cd1175f2c(player float64, rotationOrder float64)  interface{} { return nil }

func (_client) GetFirstBlipInfoId(blipSprite float64) float64 {
	return 0.0
}

func (_client) GetFirstPersonAimCamZoomFactor() float64 {
	return 0.0
}
func (_client) GetGameplayCamZoom() float64 {
	return 0.0
}

func (_client) GetFocusPedOnScreen(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) float64 {
	return 0.0
}
func (_client) N_0x89215ec747df244a(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) float64 {
	return 0.0
}

/**
 * cpp
 * // view mode enumeration
 * enum _0xA11D7CA8
 * {
 * THIRD_PERSON_NEAR = 0,
 * THIRD_PERSON_MEDIUM = 1,
 * THIRD_PERSON_FAR = 2,
 * CINEMATIC = 3,
 * FIRST_PERSON = 4,
 * };
 * @return Returns a value from the view mode enumeration
 */
func (_client) GetFollowPedCamViewMode() float64 {
	return 0.0
}

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 */
func (_client) GetFollowPedCamZoomLevel() float64 {
	return 0.0
}

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 */
func (_client) GetFollowVehicleCamViewMode() float64 {
	return 0.0
}

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 */
func (_client) GetFollowVehicleCamZoomLevel() float64 {
	return 0.0
}

func (_client) GetForcedComponent(componentHash interface{}, forcedComponentIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetForcedProp(componentHash interface{}, forcedPropIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}
func (_client) N_0xe1ca84ebf72e691d(componentHash interface{}, forcedPropIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetFrameCount() float64 {
	return 0.0
}

func (_client) GetFrameTime() float64 {
	return 0.0
}

/**
 * Returns the internal build number of the current game being executed.
 * Possible values:
 * *   FiveM
 * *   1604
 * *   2060
 * *   2189
 * *   2372
 * *   RedM
 * *   1311
 * *   1355
 * *   1436
 * *   LibertyM
 * *   43
 * *   FXServer
 * *   0
 * @return The build number, or **0** if no build number is known.
 */
func (_client) GetGameBuildNumber() float64 {
	return 0.0
}

/**
 * Returns the current game being executed.
 * Possible values:
 * | Return value | Meaning                        |
 * | ------------ | ------------------------------ |
 * | `fxserver`   | Server-side code ('Duplicity') |
 * | `fivem`      | FiveM for GTA V                |
 * | `libertym`   | LibertyM for GTA IV            |
 * | `redm`       | RedM for Red Dead Redemption 2 |
 * @return The game the script environment is running in.
 */
func (_client) GetGameName() string;

/**
 * Returns all pool handles for the given pool name; the data returned adheres to the following layout:
 * ```
 * [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
 * ```
 * ### Supported Pools
 * **1**: CPed\
 * **2**: CObject\
 * **3**: CVehicle\
 * **4**: CPickup
 * @return An object containing a list of all pool handles
 */
func (_client) GetGamePool(poolname string) interface{} {
	return nil
}

func (_client) GetGameTimer() float64 {
	return 0.0
}

func (_client) GetGameplayCamCoord()  interface{} { return nil }

func (_client) GetGameplayCamFov() float64 {
	return 0.0
}

func (_client) GetGameplayCamRelativeHeading() float64 {
	return 0.0
}

func (_client) GetGameplayCamRelativePitch() float64 {
	return 0.0
}

/**
 * p0 dosen't seem to change much, I tried it with 0, 1, 2:
 * 0-Pitch(X): -70.000092
 * 0-Roll(Y): -0.000001
 * 0-Yaw(Z): -43.886459
 * 1-Pitch(X): -70.000092
 * 1-Roll(Y): -0.000001
 * 1-Yaw(Z): -43.886463
 * 2-Pitch(X): -70.000092
 * 2-Roll(Y): -0.000002
 * 2-Yaw(Z): -43.886467
 */
func (_client) GetGameplayCamRot(rotationOrder float64)  interface{} { return nil }

/**
 * Returns the ActionScript flagValue.
 * ActionScript flags are global flags that scaleforms use
 * Flags found during testing
 * 0: Returns 1 if the web_browser keyboard is open, otherwise 0
 * 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
 * 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
 * 9: Returns the current selection on the mobile phone scaleform
 * There are 20 flags in total.
 */
func (_client) GetGlobalActionscriptFlag(flagIndex float64) float64 {
	return 0.0
}
/**
 * Returns the ActionScript flagValue.
 * ActionScript flags are global flags that scaleforms use
 * Flags found during testing
 * 0: Returns 1 if the web_browser keyboard is open, otherwise 0
 * 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
 * 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
 * 9: Returns the current selection on the mobile phone scaleform
 * There are 20 flags in total.
 */
func (_client) N_0xe3b05614dce1d014(flagIndex float64) float64 {
	return 0.0
}

/**
 * Returns pointer to an empty string.
 * GET_C*
 */
func (_client) GetGlobalCharBuffer() string;
/**
 * Returns pointer to an empty string.
 * GET_C*
 */
func (_client) N_0x24da7d7667fd7b09() string;

/**
 * NativeDB Introduced: v2189
 */
func (_client) GetGlobalWaterType() float64 {
	return 0.0
}

func (_client) GetGpsBlipRouteFound() bool;
func (_client) N_0x869daacbbe9fa006() bool;

func (_client) GetGpsBlipRouteLength() float64 {
	return 0.0
}
func (_client) N_0xbbb45c3cf5c8aa85() float64 {
	return 0.0
}

func (_client) GetGroundZAndNormalFor_3dCoord(x float64, y float64, z float64) (bool,float64,interface{}) { return false,0.0,nil}
func (_client) N_0x8bdc7bfc57a81e76(x float64, y float64, z float64) (bool,float64,interface{}) { return false,0.0,nil}
func (_client) GetGroundZCoordWithOffsets(x float64, y float64, z float64) (bool,float64,interface{}) { return false,0.0,nil}

/**
 * Bear in mind this native can only calculate the elevation when the coordinates are within the client's render distance.
 * ```
 * ```
 * NativeDB Added Parameter 6: BOOL p5
 * @param x Position on the X-axis to get ground elevation at.
 * @param y Position on the Y-axis to get ground elevation at.
 * @param z Position on the Z-axis to get ground elevation at.
 * @param groundZ The ground elevation at the specified position.
 */
func (_client) GetGroundZFor_3dCoord(x float64, y float64, z float64, ignoreWater bool)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Added Parameter 6: BOOL p5
 */
func (_client) GetGroundZFor_3dCoord_2(x float64, y float64, z float64, p4 bool)  (bool, float64){
	return false,0.0
}
/**
 * NativeDB Added Parameter 6: BOOL p5
 */
func (_client) N_0x9e82f0f362881b29(x float64, y float64, z float64, p4 bool)  (bool, float64){
	return false,0.0
}

/**
 * p1 may be a BOOL representing whether or not the group even exists
 */
func (_client) GetGroupSize(groupID float64) (float64, float64) { return 0.0, 0.0 };

/**
 * GET_*
 */
func (_client) GetHasObjectFragInst(object float64) bool;
/**
 * GET_*
 */
func (_client) N_0x0c112765300c7e1e(object float64) bool;
/**
 * GET_*
 */
func (_client) DoesEntityHaveFragInst(object float64) bool;

func (_client) GetHasRetractableWheels(vehicle float64) bool;
func (_client) GetHasLowerableWheels(vehicle float64) bool;
func (_client) DoesVehicleHaveRetractableWheels(vehicle float64) bool;

func (_client) GetHasRocketBoost(vehicle float64) bool;
func (_client) HasVehicleRocketBoost(vehicle float64) bool;
func (_client) DoesVehicleHaveRocketBoost(vehicle float64) bool;

/**
 * This native converts its past string to hash. It is hashed using jenkins one at a time method.
 * @param string The string to hash.
 * @return The hash of `string`.
 */
func (_client) GetHashKey(_string string) float64 {
	return 0.0
}

func (_client) GetHashNameForComponent(entity float64, componentId float64, drawableVariant float64, textureVariant float64) float64 {
	return 0.0
}

func (_client) GetHashNameForProp(entity float64, componentId float64, propIndex float64, propTextureIndex float64) float64 {
	return 0.0
}

/**
 * Returns a hash representing which part of the map the given coords are located.
 * Possible return values:
 * (Hash of) city -> -289320599
 * (Hash of) countryside -> 2072609373
 * C# Example :
 * Ped player = Game.Player.Character;
 * Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
 */
func (_client) GetHashOfMapAreaAtCoords(x float64, y float64, z float64) float64 {
	return 0.0
}

func (_client) GetHashOfThisScriptName() float64 {
	return 0.0
}
func (_client) GetThisScriptHash() float64 {
	return 0.0
}

/**
 * dx = x1 - x2
 * dy = y1 - y2
 */
func (_client) GetHeadingFromVector_2d(dx float64, dy float64) float64 {
	return 0.0
}

/**
 * Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
 */
func (_client) GetHeightmapBottomZForArea(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}
/**
 * Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
 */
func (_client) N_0x3599d741c9ac6310(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}

/**
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 */
func (_client) GetHeightmapBottomZForPosition(x float64, y float64) float64 {
	return 0.0
}
/**
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 */
func (_client) N_0x336511a34f2e5185(x float64, y float64) float64 {
	return 0.0
}

/**
 * Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
 */
func (_client) GetHeightmapTopZForArea(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}
/**
 * Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
 */
func (_client) N_0x8abe8608576d9ce3(x1 float64, y1 float64, x2 float64, y2 float64) float64 {
	return 0.0
}

/**
 * Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
 */
func (_client) GetHeightmapTopZForPosition(x float64, y float64) float64 {
	return 0.0
}
/**
 * Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
 */
func (_client) N_0x29c24bfbed8ab8fb(x float64, y float64) float64 {
	return 0.0
}

/**
 * Max 1000.
 * At 0 the main rotor will stall.
 */
func (_client) GetHeliMainRotorHealth(vehicle float64) float64 {
	return 0.0
}
/**
 * Max 1000.
 * At 0 the main rotor will stall.
 */
func (_client) GetHeliMainRotorHealth(vehicle float64) float64 {
	return 0.0
}

/**
 * Max 1000.
 * At -100 both helicopter rotors will stall.
 */
func (_client) GetHeliTailBoomHealth(vehicle float64) float64 {
	return 0.0
}
/**
 * Max 1000.
 * At -100 both helicopter rotors will stall.
 */
func (_client) GetHeliEngineHealth(vehicle float64) float64 {
	return 0.0
}

/**
 * Max 1000.
 * At 0 the tail rotor will stall.
 */
func (_client) GetHeliTailRotorHealth(vehicle float64) float64 {
	return 0.0
}
/**
 * Max 1000.
 * At 0 the tail rotor will stall.
 */
func (_client) GetHeliTailRotorHealth(vehicle float64) float64 {
	return 0.0
}

/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 */
func (_client) GetHudColour(hudColorIndex float64) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

func (_client) GetHudComponentPosition(id float64)  interface{} { return nil }

/**
 * World to relative screen coords
 * this world to screen will keep the text on screen. it will keep it in the screen pos
 */
func (_client) GetHudScreenPositionFromWorldPosition(worldX float64, worldY float64, worldZ float64) (bool , float64,float64) { return false,0.0,0.0 }
/**
 * World to relative screen coords
 * this world to screen will keep the text on screen. it will keep it in the screen pos
 */
func (_client) N_0xf9904d11f1acbec3(worldX float64, worldY float64, worldZ float64) (bool , float64,float64) { return false,0.0,0.0 }
/**
 * World to relative screen coords
 * this world to screen will keep the text on screen. it will keep it in the screen pos
 */
func (_client) Get_2dCoordFrom_3dCoord(worldX float64, worldY float64, worldZ float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetHydraulicWheelValue(vehicle float64, wheelId float64) float64 {
	return 0.0
}

func (_client) GetIdOfThisThread() float64 {
	return 0.0
}

/**
 * x1, y1, z1 -- Coords of your ped model
 * x2, y2, z2 -- Coords of the ped you want to switch to
 */
func (_client) GetIdealPlayerSwitchType(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) float64 {
	return 0.0
}

func (_client) GetIndexOfCurrentLevel() float64 {
	return 0.0
}

func (_client) GetIndexedItemInItemset(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) GetInstanceId() float64 {
	return 0.0
}

/**
 * Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
 * Example for VB.NET
 * Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
 */
func (_client) GetInteriorAtCoords(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
 * Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))
 * Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
 * Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
 */
func (_client) GetInteriorAtCoordsWithType(x float64, y float64, z float64, interiorType string) float64 {
	return 0.0
}
/**
 * Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
 * Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))
 * Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
 * Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
 */
func (_client) N_0x05b7a89bd78797fc(x float64, y float64, z float64, interiorType string) float64 {
	return 0.0
}

/**
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 */
func (_client) GetInteriorAtCoordsWithTypehash(x float64, y float64, z float64, typeHash interface{}) float64 {
	return 0.0
}
/**
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 */
func (_client) N_0xf0f77adb9f67e79d(x float64, y float64, z float64, typeHash interface{}) float64 {
	return 0.0
}
/**
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 */
func (_client) UnkGetInteriorAtCoords(x float64, y float64, z float64, typeHash interface{}) float64 {
	return 0.0
}

func (_client) GetInteriorEntitiesExtents(interiorId float64): [number, number, number, number, number, number];

func (_client) GetInteriorFromCollision(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.
 */
func (_client) GetInteriorFromEntity(entity float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) GetInteriorFromGameplayCam() float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xe7d267ec6ca966c3() float64 {
	return 0.0
}

/**
 * Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.
 */
func (_client) GetInteriorGroupId(interior float64) float64 {
	return 0.0
}

/**
 * GET_INTERIOR_*
 * NativeDB Introduced: v1493
 */
func (_client) GetInteriorHeading(interior float64) float64 {
	return 0.0
}

/**
 * GET_INTERIOR_*
 * NativeDB Introduced: v1290
 */
func (_client) GetInteriorInfo(interior float64)  (interface{}, float64){
	return nil,0.0
}

func (_client) GetInteriorPortalCornerPosition(interiorId float64, portalIndex float64, cornerIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetInteriorPortalCount(interiorId float64) float64 {
	return 0.0
}

func (_client) GetInteriorPortalFlag(interiorId float64, portalIndex float64) float64 {
	return 0.0
}

func (_client) GetInteriorPortalRoomFrom(interiorId float64, portalIndex float64) float64 {
	return 0.0
}

func (_client) GetInteriorPortalRoomTo(interiorId float64, portalIndex float64) float64 {
	return 0.0
}

func (_client) GetInteriorPosition(interiorId float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetInteriorRoomCount(interiorId float64) float64 {
	return 0.0
}

func (_client) GetInteriorRoomExtents(interiorId float64, roomIndex float64): [number, number, number, number, number, number];

func (_client) GetInteriorRoomFlag(interiorId float64, roomIndex float64) float64 {
	return 0.0
}

func (_client) GetInteriorRoomIndexByHash(interiorId float64, roomHash float64) float64 {
	return 0.0
}

func (_client) GetInteriorRoomName(interiorId float64, roomIndex float64) string;

func (_client) GetInteriorRoomTimecycle(interiorId float64, roomIndex float64) float64 {
	return 0.0
}

func (_client) GetInteriorRotation(interiorId float64) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

func (_client) GetInvokingResource() string;

/**
 * NativeDB Introduced: v1604
 */
func (_client) GetIsArenaPropPhysicsDisabled(entity float64, p1 float64) bool;
/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x43c677f1e1158005(entity float64, p1 float64) bool;

/**
 * Returns true if profile setting 208 is equal to 0.
 */
func (_client) GetIsAutoSaveOff() bool;
/**
 * Returns true if profile setting 208 is equal to 0.
 */
func (_client) N_0x6e04f06094c87047() bool;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) GetIsDoorValid(vehicle float64, doorIndex float64) bool;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) DoesVehicleHaveDoor(vehicle float64, doorIndex float64) bool;

/**
 * false = Any resolution < 1280x720
 * true = Any resolution >= 1280x720
 */
func (_client) GetIsHidef() bool;

/**
 * From the driver's perspective, is the left headlight broken.
 */
func (_client) GetIsLeftVehicleHeadlightDamaged(vehicle float64) bool;
/**
 * From the driver's perspective, is the left headlight broken.
 */
func (_client) IsHeadlightLBroken(vehicle float64) bool;

func (_client) GetIsLoadingScreenActive() bool;

/**
 * gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
 */
func (_client) GetIsPedGadgetEquipped(ped float64, gadgetHash interface{}) bool;

func (_client) GetIsPetrolDecalInRange(xCoord float64, yCoord float64, zCoord float64, radius float64) bool;
func (_client) N_0x2f09f7976c512404(xCoord float64, yCoord float64, zCoord float64, radius float64) bool;

/**
 * Although we don't have a jenkins hash for this one, the name is 100% confirmed.
 */
func (_client) GetIsPlayerInAnimalForm() bool;
/**
 * Although we don't have a jenkins hash for this one, the name is 100% confirmed.
 */
func (_client) N_0x9689123e3f213aa5() bool;

func (_client) GetIsPreloadedConversationReady() bool;
func (_client) N_0xe73364db90778ffa() bool;

/**
 * From the driver's perspective, is the right headlight broken.
 */
func (_client) GetIsRightVehicleHeadlightDamaged(vehicle float64) bool;
/**
 * From the driver's perspective, is the right headlight broken.
 */
func (_client) IsHeadlightRBroken(vehicle float64) bool;

/**
 * NativeDB Introduced: v1290
 */
func (_client) GetIsSubmarineVehicleTransformed(vehicle float64) bool;

/**
 * Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
 */
func (_client) GetIsTaskActive(ped float64, taskIndex float64) bool;

/**
 * Returns profile setting 225.
 */
func (_client) GetIsUsingAlternateDriveby() bool;
/**
 * Returns profile setting 225.
 */
func (_client) N_0x0f70731baccfbb96() bool;

/**
 * Returns whether this vehicle is currently disabled by an EMP mine.
 * NativeDB Introduced: v1604
 */
func (_client) GetIsVehicleEmpDisabled(vehicle float64) bool;

/**
 * Returns true when in a vehicle, false whilst entering/exiting.
 */
func (_client) GetIsVehicleEngineRunning(vehicle float64) bool;
/**
 * Returns true when in a vehicle, false whilst entering/exiting.
 */
func (_client) IsVehicleEngineOn(vehicle float64) bool;

func (_client) GetIsVehiclePrimaryColourCustom(vehicle float64) bool;

/**
 * Check if Vehicle Secondary is avaliable for customize
 */
func (_client) GetIsVehicleSecondaryColourCustom(vehicle float64) bool;

/**
 * NativeDB Introduced: v1604
 */
func (_client) GetIsVehicleShuntBoostActive(vehicle float64) bool;

func (_client) GetIsWaypointRecordingLoaded(name string) bool;

func (_client) GetIsWheelsLoweredStateActive(vehicle float64) bool;
func (_client) N_0x1da0da9cb3f0c8bf(vehicle float64) bool;

/**
 * Setting Aspect Ratio Manually in game will return:
 * false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
 * true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
 * Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
 */
func (_client) GetIsWidescreen() bool;

func (_client) GetItemsetSize(x float64) float64 {
	return 0.0
}

func (_client) GetJackTarget(ped float64) float64 {
	return 0.0
}

/**
 * Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
 */
func (_client) GetKeyForEntityInRoom(entity float64) float64 {
	return 0.0
}

/**
 * Gets a string literal from a label name.
 * GET_F*
 */
func (_client) GetLabelText(labelName string) string;

/**
 * ```
 * Landing gear states:
 * 0: Deployed
 * 1: Closing (Retracting)
 * 3: Opening (Deploying)
 * 4: Retracted
 * 5: Broken
 * ```
 * Landing gear state 2 is never used.
 * @param vehicle The vehicle to check.
 * @return The current state of the vehicles landing gear.
 */
func (_client) GetLandingGearState(vehicle float64) float64 {
	return 0.0
}
/**
 * ```
 * Landing gear states:
 * 0: Deployed
 * 1: Closing (Retracting)
 * 3: Opening (Deploying)
 * 4: Retracted
 * 5: Broken
 * ```
 * Landing gear state 2 is never used.
 * @param vehicle The vehicle to check.
 * @return The current state of the vehicles landing gear.
 */
func (_client) GetVehicleLandingGear(vehicle float64) float64 {
	return 0.0
}

func (_client) GetLastDrivenVehicle() float64 {
	return 0.0
}
func (_client) N_0xb2d06faede65b577() float64 {
	return 0.0
}

func (_client) GetLastMaterialHitByEntity(entity float64) float64 {
	return 0.0
}

func (_client) GetLastPedInVehicleSeat(vehicle float64, seatIndex float64) float64 {
	return 0.0
}

/**
 * Returns last vehicle that was rammed by the given vehicle using the shunt boost.
 * NativeDB Introduced: v1604
 */
func (_client) GetLastRammedVehicle(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the length of the string passed (much like strlen).
 */
func (_client) GetLengthOfLiteralString(_string string) float64 {
	return 0.0
}

func (_client) GetLengthOfLiteralStringInBytes(_string string) float64 {
	return 0.0
}
func (_client) N_0x43e4111189e54f0e(_string string) float64 {
	return 0.0
}
func (_client) GetLengthOfString(_string string) float64 {
	return 0.0
}

/**
 * Returns the string length of the string from the gxt string .
 */
func (_client) GetLengthOfStringWithThisTextLabel(gxt string) float64 {
	return 0.0
}

/**
 * Second Param = LiveryIndex
 * example
 * int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);
 * for (int i = 0; i < count; i++)
 * {
 * char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);
 * }
 * this example will work fine to fetch all names
 * for example for Sanchez we get
 * SANC_LV1
 * SANC_LV2
 * SANC_LV3
 * SANC_LV4
 * SANC_LV5
 * Use _GET_LABEL_TEXT, to get the localized livery name.
 * -----------
 * NOTE: You may need to set the vehicle's modKit to 0 by using this function: SET_VEHICLE_MOD_KIT() before getting the name, otherwise this native may return NULL.
 * dev-c.com/nativedb/func/info/1f2aa07f00b3217a
 */
func (_client) GetLiveryName(vehicle float64, liveryIndex float64) string;

/**
 * Returns the local player's targeting mode. See [`SET_PLAYER_TARGETING_MODE`](#\_0xB1906895227793F3).
 */
func (_client) GetLocalPlayerAimState() float64 {
	return 0.0
}

/**
 * Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.
 */
func (_client) GetLocalPlayerAimState_2() float64 {
	return 0.0
}
/**
 * Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.
 */
func (_client) N_0x59b9a7af4c95133c() float64 {
	return 0.0
}

/**
 * Gets local system time as year, month, day, hour, minute and second.
 * Example usage:
 * int year;
 * int month;
 * int day;
 * int hour;
 * int minute;
 * int second;
 * or use std::tm struct
 * TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);
 */
func (_client) GetLocalTime(): [number, number, number, number, number, number];

func (_client) GetLockonDistanceOfCurrentPedWeapon(ped float64) float64 {
	return 0.0
}
func (_client) N_0x840f03e9041e2c9c(ped float64) float64 {
	return 0.0
}
func (_client) GetLockonRangeOfCurrentPedWeapon(ped float64) float64 {
	return 0.0
}

func (_client) GetLodscale() float64 {
	return 0.0
}
func (_client) N_0x0c15b0e443b2349d() float64 {
	return 0.0
}

func (_client) GetMainPlayerBlipId() float64 {
	return 0.0
}

/**
 * Will return a vehicle's manufacturer display label.
 * Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) GetMakeNameFromVehicleModel(modelHash interface{}) string;

/**
 * Returns the zoom level data by index from mapzoomdata.meta file.
 * @param index Zoom level index.
 * @param zoomScale fZoomScale value.
 * @param zoomSpeed fZoomSpeed value.
 * @param scrollSpeed fScrollSpeed value.
 * @param tilesX vTiles X.
 * @param tilesY vTiles Y.
 * @return A boolean indicating TRUE if the data was received successfully.
 */
func (_client) GetMapZoomDataLevel(index float64): [boolean, number, number, number, number, number];

/**
 * Retrieves the map data entity handle.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param mapDataHash A mapdata hash from `mapDataLoaded` event.
 * @param entityInternalIdx An internal entity's index.
 * @param entityHandle The output entity handle.
 * @return True if successful, false if not.
 */
func (_client) GetMapdataEntityHandle(mapDataHash float64, entityInternalIdx float64, entityHandle float64)  (bool, float64){
	return false,0.0
}

/**
 * Returns mapdata's entity matrix. This function supports SDK infrastructure and is not intended to be used directly from your code.
 * This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
 * Matrix layout is as follows:
 * *   Element \[0], \[1] and \[2] should represent the right vector.
 * *   Element \[4], \[5] and \[6] should represent the forward vector.
 * *   Element \[8], \[9] and \[10] should represent the up vector.
 * *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
 * *   All other elements should be \[0, 0, 0, 1].
 * @param mapDataHash A mapdata hash from `mapDataLoaded` event.
 * @param entityInternalIdx An internal entity's index.
 * @param matrixPtr A mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.
 * @return Whether or not the matrix was retrieved.
 */
func (_client) GetMapdataEntityMatrix(mapDataHash float64, entityInternalIdx float64, matrixPtr float64) bool;

/**
 * Returns the transient map data index for a specified hash.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param mapdataHandle The input map data handle.
 * @return A transient (non-persistable) index to the requested mapdata, or -1.
 */
func (_client) GetMapdataFromHashKey(mapdataHandle interface{}) float64 {
	return 0.0
}

func (_client) GetMaxAmmo(ped float64, weaponHash interface{}, ammo float64)  (bool, float64){
	return false,0.0
}

func (_client) GetMaxAmmoByType(ped float64, ammoType interface{}, ammo float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x585847c5e4e11709(ped float64, ammoType interface{}, ammo float64)  (bool, float64){
	return false,0.0
}
func (_client) GetMaxAmmo_2(ped float64, ammoType interface{}, ammo float64)  (bool, float64){
	return false,0.0
}

/**
 * p2 is mostly 1 in the scripts.
 */
func (_client) GetMaxAmmoInClip(ped float64, weaponHash interface{}, p2 bool) float64 {
	return 0.0
}

func (_client) GetMaxNumNetworkObjects() float64 {
	return 0.0
}
func (_client) N_0xc7be335216b5ec7c() float64 {
	return 0.0
}

func (_client) GetMaxNumNetworkPeds() float64 {
	return 0.0
}
func (_client) N_0x0c1f7d49c39d2289() float64 {
	return 0.0
}

func (_client) GetMaxNumNetworkPickups() float64 {
	return 0.0
}
func (_client) N_0xa72835064dd63e4c() float64 {
	return 0.0
}

func (_client) GetMaxNumNetworkVehicles() float64 {
	return 0.0
}
func (_client) N_0x0afce529f69b21ff() float64 {
	return 0.0
}

func (_client) GetMaxRangeOfCurrentPedWeapon(ped float64) float64 {
	return 0.0
}

/**
 * Gets the maximum wanted level the player can get.
 * Ranges from 0 to 5.
 */
func (_client) GetMaxWantedLevel() float64 {
	return 0.0
}

/**
 * This function is hard-coded to always return 96.
 */
func (_client) GetMaximumNumberOfCloudPhotos() float64 {
	return 0.0
}
/**
 * This function is hard-coded to always return 96.
 */
func (_client) N_0xdc54a7af8b3a14ef() float64 {
	return 0.0
}
/**
 * This function is hard-coded to always return 96.
 */
func (_client) GetMaximumNumberOfPhotos_2() float64 {
	return 0.0
}

/**
 * This function is hard-coded to always return 0.
 */
func (_client) GetMaximumNumberOfPhotos() float64 {
	return 0.0
}

func (_client) GetMeleeTargetForPed(ped float64) float64 {
	return 0.0
}

/**
 * p0 was always 0xAE2602A3.
 */
func (_client) GetMenuPedBoolStat(p0 interface{}, p1 float64)  (bool, float64){
	return false,0.0
}
/**
 * p0 was always 0xAE2602A3.
 */
func (_client) N_0x052991e59076e4e4(p0 interface{}, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) GetMenuPedFloatStat(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x5fbd7095fe7ae57f(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) GetMenuPedIntStat(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) SetUseridsUihidden(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xef4ced81cebedc6d(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) GetMenuPedMaskedIntStat(p0 float64, p2 float64, p3 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x90a6526cf0381030(p0 float64, p2 float64, p3 float64)  (bool, float64){
	return false,0.0
}

/**
 * Returns how many real ms are equal to one game minute.
 * A getter for [`SetMillisecondsPerGameMinute`](#\_0x36CA2554).
 * @return A number of milliseconds that equals to one game minute.
 */
func (_client) GetMillisecondsPerGameMinute() float64 {
	return 0.0
}

func (_client) GetMinimapFowCoordinateIsRevealed(x float64, y float64, z float64) bool;
func (_client) N_0x6e31b91145873922(x float64, y float64, z float64) bool;
func (_client) IsMinimapAreaRevealed(x float64, y float64, z float64) bool;

func (_client) GetMinimapFowDiscoveryRatio() float64 {
	return 0.0
}
func (_client) N_0xe0130b41d3cf4574() float64 {
	return 0.0
}
func (_client) GetMinimapRevealPercentage() float64 {
	return 0.0
}

func (_client) GetMissionFlag() bool;

func (_client) GetMobilePhonePosition()  interface{} { return nil }

func (_client) GetMobilePhoneRenderId(renderId float64) {}

func (_client) GetMobilePhoneRotation(p1 float64)  interface{} { return nil }

func (_client) GetModSlotName(vehicle float64, modType float64) string;

/**
 * Returns the text label of a mod type for a given vehicle
 * Use _GET_LABEL_TEXT to get the part name in the game's language
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) GetModTextLabel(vehicle float64, modType float64, modValue float64) string;

/**
 * Gets the dimensions of a model.
 * Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
 * Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
 */
func (_client) GetModelDimensions(modelHash interface{}): [number[], number[]];

/**
 * Function just returns 0
 * void __fastcall ped__get_mount(NativeContext *a1)
 * {
 * NativeContext *v1; // rbx@1
 * v1 = a1;
 * GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
 * v1->Returns->Item1= 0;
 * }
 */
func (_client) GetMount(ped float64) float64 {
	return 0.0
}

func (_client) GetMusicPlaytime() float64 {
	return 0.0
}

func (_client) GetNameOfThread(threadId float64) string;
func (_client) GetThreadName(threadId float64) string;

/**
 * AIRP = Los Santos International Airport
 * ALAMO = Alamo Sea
 * ALTA = Alta
 * ARMYB = Fort Zancudo
 * BANHAMC = Banham Canyon Dr
 * BANNING = Banning
 * BEACH = Vespucci Beach
 * BHAMCA = Banham Canyon
 * BRADP = Braddock Pass
 * BRADT = Braddock Tunnel
 * BURTON = Burton
 * CALAFB = Calafia Bridge
 * CANNY = Raton Canyon
 * CCREAK = Cassidy Creek
 * CHAMH = Chamberlain Hills
 * CHIL = Vinewood Hills
 * CHU = Chumash
 * CMSW = Chiliad Mountain State Wilderness
 * CYPRE = Cypress Flats
 * DAVIS = Davis
 * DELBE = Del Perro Beach
 * DELPE = Del Perro
 * DELSOL = La Puerta
 * DESRT = Grand Senora Desert
 * DOWNT = Downtown
 * DTVINE = Downtown Vinewood
 * EAST_V = East Vinewood
 * EBURO = El Burro Heights
 * ELGORL = El Gordo Lighthouse
 * ELYSIAN = Elysian Island
 * GALFISH = Galilee
 * GOLF = GWC and Golfing Society
 * GRAPES = Grapeseed
 * GREATC = Great Chaparral
 * HARMO = Harmony
 * HAWICK = Hawick
 * HORS = Vinewood Racetrack
 * HUMLAB = Humane Labs and Research
 * JAIL = Bolingbroke Penitentiary
 * KOREAT = Little Seoul
 * LACT = Land Act Reservoir
 * LAGO = Lago Zancudo
 * LDAM = Land Act Dam
 * LEGSQU = Legion Square
 * LMESA = La Mesa
 * LOSPUER = La Puerta
 * MIRR = Mirror Park
 * MORN = Morningwood
 * MOVIE = Richards Majestic
 * MTCHIL = Mount Chiliad
 * MTGORDO = Mount Gordo
 * MTJOSE = Mount Josiah
 * MURRI = Murrieta Heights
 * NCHU = North Chumash
 * NOOSE = N.O.O.S.E
 * OCEANA = Pacific Ocean
 * PALCOV = Paleto Cove
 * PALETO = Paleto Bay
 * PALFOR = Paleto Forest
 * PALHIGH = Palomino Highlands
 * PALMPOW = Palmer-Taylor Power Station
 * PBLUFF = Pacific Bluffs
 * PBOX = Pillbox Hill
 * PROCOB = Procopio Beach
 * RANCHO = Rancho
 * RGLEN = Richman Glen
 * RICHM = Richman
 * ROCKF = Rockford Hills
 * RTRAK = Redwood Lights Track
 * SANAND = San Andreas
 * SANCHIA = San Chianski Mountain Range
 * SANDY = Sandy Shores
 * SKID = Mission Row
 * SLAB = Stab City
 * STAD = Maze Bank Arena
 * STRAW = Strawberry
 * TATAMO = Tataviam Mountains
 * TERMINA = Terminal
 * TEXTI = Textile City
 * TONGVAH = Tongva Hills
 * TONGVAV = Tongva Valley
 * VCANA = Vespucci Canals
 * VESP = Vespucci
 * VINE = Vinewood
 * WINDF = Ron Alternates Wind Farm
 * WVINE = West Vinewood
 * ZANCUDO = Zancudo River
 * ZP_ORT = Port of South Los Santos
 * ZQ_UAR = Davis Quartz
 * PROL = Prologue / North Yankton
 * ISHeist = Cayo Perico Island
 */
func (_client) GetNameOfZone(x float64, y float64, z float64) string;

func (_client) GetNamedRendertargetRenderId(name string) float64 {
	return 0.0
}

/**
 * Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
 * Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
 * Looks like the native returns an int for the path's state:
 * 1 - ???
 * 2 - ???
 * 3 - Finished Generating
 */
func (_client) GetNavmeshRouteDistanceRemaining(ped float64): [number, number, any /* actually bool */];

/**
 * See [`GET_NAVMESH_ROUTE_DISTANCE_REMAINING`](#\_0xC6F5C0BCDC74D62D) for more details.
 */
func (_client) GetNavmeshRouteResult(ped float64) float64 {
	return 0.0
}

func (_client) GetNearestPlayerToEntity(entity float64) float64 {
	return 0.0
}

func (_client) GetNearestPlayerToEntityOnTeam(entity float64, team float64) float64 {
	return 0.0
}

/**
 * Could this be used alongside either,
 * SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online It'd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
 */
func (_client) GetNetworkIdFromSoundId(soundId float64) float64 {
	return 0.0
}

func (_client) GetNetworkTime() float64 {
	return 0.0
}

/**
 * Returns the same value as [`GetNetworkTime`](#\_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.
 * Could be used for benchmarking since it can return times in ticks.
 * @return Returns the network time as an integer
 */
func (_client) GetNetworkTimeAccurate() float64 {
	return 0.0
}
/**
 * Returns the same value as [`GetNetworkTime`](#\_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.
 * Could be used for benchmarking since it can return times in ticks.
 * @return Returns the network time as an integer
 */
func (_client) N_0x89023fbbf9200e9f() float64 {
	return 0.0
}

func (_client) GetNewSelectedMissionCreatorBlip() float64 {
	return 0.0
}
func (_client) DisableBlipNameForVar() float64 {
	return 0.0
}
func (_client) N_0x5c90988e7c8e1af4() float64 {
	return 0.0
}

func (_client) GetNextBlipInfoId(blipSprite float64) float64 {
	return 0.0
}

/**
 * Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
 * ```
 * NativeDB Removed Parameter 1: int index
 * ```
 * @return The disabled zone index
 */
func (_client) GetNextGpsDisabledZoneIndex(index float64) float64 {
	return 0.0
}
/**
 * Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
 * ```
 * NativeDB Removed Parameter 1: int index
 * ```
 * @return The disabled zone index
 */
func (_client) N_0xd3a6a0ef48823a8c(index float64) float64 {
	return 0.0
}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) GetNextWeatherTypeHashName() float64 {
	return 0.0
}
/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) GetNextWeatherType() float64 {
	return 0.0
}

/**
 * Needs more research. Gets the stat name of a masked bool?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_BOOL"
 * "_NGTATPSTAT_BOOL"
 * "_NGDLCPSTAT_BOOL"
 * "_DLCBIKEPSTAT_BOOL"
 * "_DLCGUNPSTAT_BOOL"
 * "_GUNTATPSTAT_BOOL"
 * "_DLCSMUGCHARPSTAT_BOOL"
 * "_GANGOPSPSTAT_BOOL"
 * "_BUSINESSBATPSTAT_BOOL"
 * "_ARENAWARSPSTAT_BOOL"
 * "_CASINOPSTAT_BOOL"
 * "_CASINOHSTPSTAT_BOOL"
 * "_HEIST3TATTOOSTAT_BOOL"
 */
func (_client) GetNgstatBoolHash(index float64, spStat bool, charStat bool, character float64, section string) float64 {
	return 0.0
}
/**
 * Needs more research. Gets the stat name of a masked bool?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_BOOL"
 * "_NGTATPSTAT_BOOL"
 * "_NGDLCPSTAT_BOOL"
 * "_DLCBIKEPSTAT_BOOL"
 * "_DLCGUNPSTAT_BOOL"
 * "_GUNTATPSTAT_BOOL"
 * "_DLCSMUGCHARPSTAT_BOOL"
 * "_GANGOPSPSTAT_BOOL"
 * "_BUSINESSBATPSTAT_BOOL"
 * "_ARENAWARSPSTAT_BOOL"
 * "_CASINOPSTAT_BOOL"
 * "_CASINOHSTPSTAT_BOOL"
 * "_HEIST3TATTOOSTAT_BOOL"
 */
func (_client) N_0xba52ff538ed2bc71(index float64, spStat bool, charStat bool, character float64, section string) float64 {
	return 0.0
}

/**
 * Needs more research. Gets the stat name of a masked int?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_INT"
 * "_MP_NGPSTAT_INT"
 * "_MP_LRPSTAT_INT"
 * "_MP_APAPSTAT_INT"
 * "_MP_LR2PSTAT_INT"
 * "_MP_BIKEPSTAT_INT"
 * "_MP_IMPEXPPSTAT_INT"
 * "_MP_GUNRPSTAT_INT"
 * "_NGDLCPSTAT_INT"
 * "_MP_NGDLCPSTAT_INT"
 * "_DLCSMUGCHARPSTAT_INT"
 * "_GANGOPSPSTAT_INT"
 * "_BUSINESSBATPSTAT_INT"
 * "_ARENAWARSPSTAT_INT"
 * "_CASINOPSTAT_INT"
 * "_CASINOHSTPSTAT_INT"
 */
func (_client) GetNgstatIntHash(index float64, spStat bool, charStat bool, character float64, section string) float64 {
	return 0.0
}
/**
 * Needs more research. Gets the stat name of a masked int?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_INT"
 * "_MP_NGPSTAT_INT"
 * "_MP_LRPSTAT_INT"
 * "_MP_APAPSTAT_INT"
 * "_MP_LR2PSTAT_INT"
 * "_MP_BIKEPSTAT_INT"
 * "_MP_IMPEXPPSTAT_INT"
 * "_MP_GUNRPSTAT_INT"
 * "_NGDLCPSTAT_INT"
 * "_MP_NGDLCPSTAT_INT"
 * "_DLCSMUGCHARPSTAT_INT"
 * "_GANGOPSPSTAT_INT"
 * "_BUSINESSBATPSTAT_INT"
 * "_ARENAWARSPSTAT_INT"
 * "_CASINOPSTAT_INT"
 * "_CASINOHSTPSTAT_INT"
 */
func (_client) N_0x2b4cdca6f07ff3da(index float64, spStat bool, charStat bool, character float64, section string) float64 {
	return 0.0
}

func (_client) GetNoLoadingScreen() bool;
func (_client) GetNoLoadingScreen() bool;

func (_client) GetNorthRadarBlip() float64 {
	return 0.0
}
func (_client) N_0x3f0cf9cb7e589b88() float64 {
	return 0.0
}

func (_client) GetNthClosestVehicleNode(x float64, y float64, z float64, nthClosest float64, unknown1 float64, unknown2 float64, unknown3 float64) (bool,interface{}) { return false,nil }

/**
 * See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
 * p10 always equal 0x40400000
 * p11 always equal 0
 */
func (_client) GetNthClosestVehicleNodeFavourDirection(x float64, y float64, z float64, desiredX float64, desiredY float64, desiredZ float64, nthClosest float64, nodetype float64, p10 float64, p11 float64) (bool,interface{},float64) { return false,nil,0.0}

/**
 * Returns the id.
 */
func (_client) GetNthClosestVehicleNodeId(x float64, y float64, z float64, nth float64, nodetype float64, p5 float64, p6 float64) float64 {
	return 0.0
}

func (_client) GetNthClosestVehicleNodeIdWithHeading(x float64, y float64, z float64, nthClosest float64, p6 float64, p7 float64, p8 float64): [number, number[], number];

/**
 * Get the nth closest vehicle node and its heading. (unknown2 = 9, unknown3 = 3.0, unknown4 = 2.5)
 */
func (_client) GetNthClosestVehicleNodeWithHeading(x float64, y float64, z float64, nthClosest float64, unknown2 float64, unknown3 float64, unknown4 float64): [boolean, number[], number, number];

func (_client) GetNuiCursorPosition() (float64, float64) { return 0.0, 0.0 };

func (_client) GetNumCommerceItems() float64 {
	return 0.0
}
func (_client) N_0xf2eac213d5ea0623() float64 {
	return 0.0
}

func (_client) GetNumCreatedMissionObjects(p0 bool) float64 {
	return 0.0
}
func (_client) N_0x12b6281b6c6706c0(p0 bool) float64 {
	return 0.0
}

func (_client) GetNumCreatedMissionPeds(p0 bool) float64 {
	return 0.0
}
func (_client) N_0xcb215c4b56a7fae7(p0 bool) float64 {
	return 0.0
}

func (_client) GetNumCreatedMissionVehicles(p0 bool) float64 {
	return 0.0
}
func (_client) N_0x0cd9ab83489430ea(p0 bool) float64 {
	return 0.0
}

func (_client) GetNumDispatchedUnitsForPlayer(dispatchService float64) float64 {
	return 0.0
}
func (_client) N_0xeb4a0c2d56441717(dispatchService float64) float64 {
	return 0.0
}
func (_client) GetNumberOfDispatchedUnitsForPlayer(dispatchService float64) float64 {
	return 0.0
}

func (_client) GetNumDlcVehicles() float64 {
	return 0.0
}

/**
 * Returns the total number of DLC weapon components.
 */
func (_client) GetNumDlcWeaponComponents(dlcWeaponIndex float64) float64 {
	return 0.0
}

/**
 * Returns the total number of DLC weapon components that are available in SP.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) GetNumDlcWeaponComponentsSp(dlcWeaponIndex float64) float64 {
	return 0.0
}

/**
 * Returns the total number of DLC weapons.
 */
func (_client) GetNumDlcWeapons() float64 {
	return 0.0
}

/**
 * Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) GetNumDlcWeaponsSp() float64 {
	return 0.0
}

/**
 * Used for freemode (online) characters.
 */
func (_client) GetNumHairColors() float64 {
	return 0.0
}

func (_client) GetNumMakeupColors() float64 {
	return 0.0
}
func (_client) N_0xd1f7ca1535d22818() float64 {
	return 0.0
}

/**
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 */
func (_client) GetNumModColors(paintType float64, p1 bool) float64 {
	return 0.0
}

func (_client) GetNumModKits(vehicle float64) float64 {
	return 0.0
}

/**
 * p0 appears to be for MP
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) GetNumReservedMissionObjects(p0 bool) float64 {
	return 0.0
}

/**
 * p0 appears to be for MP
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) GetNumReservedMissionPeds(p0 bool) float64 {
	return 0.0
}

/**
 * p0 appears to be for MP
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) GetNumReservedMissionVehicles(p0 bool) float64 {
	return 0.0
}

/**
 * Gets the amount of metadata values with the specified key existing in the specified resource's manifest.
 * See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
 * @param resourceName The resource name.
 * @param metadataKey The key to look up in the resource manifest.
 */
func (_client) GetNumResourceMetadata(resourceName string, metadataKey string) float64 {
	return 0.0
}

func (_client) GetNumResources() float64 {
	return 0.0
}

func (_client) GetNumSuccessfulStuntJumps() float64 {
	return 0.0
}
func (_client) N_0x996dd1e1e02f1008() float64 {
	return 0.0
}

/**
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 */
func (_client) GetNumTattooShopDlcItems(character float64) float64 {
	return 0.0
}
/**
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 */
func (_client) N_0x278f76c3b0a8f109(character float64) float64 {
	return 0.0
}
/**
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 */
func (_client) GetNumDecorations(character float64) float64 {
	return 0.0
}

func (_client) GetNumUnlockedRadioStations() float64 {
	return 0.0
}
func (_client) MaxRadioStationIndex() float64 {
	return 0.0
}

/**
 * Returns how many possible mods a vehicle has for a given mod type
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) GetNumVehicleMods(vehicle float64, modType float64) float64 {
	return 0.0
}

func (_client) GetNumVehicleWindowTints() float64 {
	return 0.0
}

func (_client) GetNumberOfActiveBlips() float64 {
	return 0.0
}

/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 */
func (_client) GetNumberOfEvents(eventGroup float64) float64 {
	return 0.0
}

func (_client) GetNumberOfFiresInRange(x float64, y float64, z float64, radius float64) float64 {
	return 0.0
}

func (_client) GetNumberOfFreeStacksOfThisSize(stackSize float64) float64 {
	return 0.0
}
func (_client) GetFreeStackSlotsCount(stackSize float64) float64 {
	return 0.0
}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetNumberOfPedDrawableVariations(ped float64, componentId float64) float64 {
	return 0.0
}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetNumberOfPedPropDrawableVariations(ped float64, propId float64) float64 {
	return 0.0
}

/**
 * Need to check behavior when drawableId = -1
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetNumberOfPedPropTextureVariations(ped float64, propId float64, drawableId float64) float64 {
	return 0.0
}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetNumberOfPedTextureVariations(ped float64, componentId float64, drawableId float64) float64 {
	return 0.0
}

/**
 * Gets the number of players in the current session.
 * If not multiplayer, always returns 1.
 */
func (_client) GetNumberOfPlayers() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1180
 */
func (_client) GetNumberOfPlayersInTeam(team float64) float64 {
	return 0.0
}

/**
 * Gets the number of instances of the specified script is currently running.
 * Actually returns numRefs - 1.
 * if (program)
 * v3 = rage::scrProgram::GetNumRefs(program) - 1;
 * return v3;
 */
func (_client) GetNumberOfReferencesOfScriptWithNameHash(scriptHash interface{}) float64 {
	return 0.0
}
/**
 * Gets the number of instances of the specified script is currently running.
 * Actually returns numRefs - 1.
 * if (program)
 * v3 = rage::scrProgram::GetNumRefs(program) - 1;
 * return v3;
 */
func (_client) GetNumberOfInstancesOfStreamedScript(scriptHash interface{}) float64 {
	return 0.0
}
/**
 * Gets the number of instances of the specified script is currently running.
 * Actually returns numRefs - 1.
 * if (program)
 * v3 = rage::scrProgram::GetNumRefs(program) - 1;
 * return v3;
 */
func (_client) GetNumberOfInstancesOfScriptWithNameHash(scriptHash interface{}) float64 {
	return 0.0
}

func (_client) GetNumberOfStreamingRequests() float64 {
	return 0.0
}

/**
 * Actually number of color combinations
 */
func (_client) GetNumberOfVehicleColours(vehicle float64) float64 {
	return 0.0
}

func (_client) GetNumberOfVehicleDoors(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
 */
func (_client) GetNumberOfVehicleNumberPlates() float64 {
	return 0.0
}

func (_client) GetObjectFragmentDamageHealth(p0 float64, p1 bool) float64 {
	return 0.0
}

/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 */
func (_client) GetObjectIndexFromEntityIndex(entity float64) float64 {
	return 0.0
}

func (_client) GetObjectOffsetFromCoords(xPos float64, yPos float64, zPos float64, heading float64, xOffset float64, yOffset float64, zOffset float64)  interface{} { return nil }

func (_client) GetObjectTextureVariation(object float64) float64 {
	return 0.0
}
func (_client) N_0xe84eb93729c5f36a(object float64) float64 {
	return 0.0
}

/**
 * Converts world coords (posX - Z) to coords relative to the entity
 * Example:
 * posX = 50
 * posY = 1000
 * posZ = 60
 * Entity's coords are: x=30, y=1000, z=60.
 * All three returned coords will then be in range of [-20,20] depending on rotation of the entity.
 */
func (_client) GetOffsetFromEntityGivenWorldCoords(entity float64, posX float64, posY float64, posZ float64)  interface{} { return nil }

/**
 * Offset values are relative to the entity.
 * x = left/right
 * y = forward/backward
 * z = up/down
 */
func (_client) GetOffsetFromEntityInWorldCoords(entity float64, offsetX float64, offsetY float64, offsetZ float64)  interface{} { return nil }

func (_client) GetOffsetFromInteriorInWorldCoords(interior float64, x float64, y float64, z float64)  interface{} { return nil }

/**
 * Online version is defined here: update\update.rpf\common\data\version.txt
 * Example:
 * [ONLINE_VERSION_NUMBER]
 * 1.33
 * _GET_ONLINE_VERSION() will return "1.33"
 */
func (_client) GetOnlineVersion() string;
/**
 * Online version is defined here: update\update.rpf\common\data\version.txt
 * Example:
 * [ONLINE_VERSION_NUMBER]
 * 1.33
 * _GET_ONLINE_VERSION() will return "1.33"
 */
func (_client) GetGameVersion() string;

/**
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
 */
func (_client) GetOnscreenKeyboardResult() string;

func (_client) GetPackedBoolStatKey(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) N_0x80c75307b1c42837(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) GetPstatBoolHash(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}

func (_client) GetPackedIntStatKey(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) N_0x61e111e323419e07(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) GetPstatIntHash(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}

func (_client) GetPackedTuBoolStatKey(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) N_0xc4bb08ee7907471e(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) GetTupstatBoolHash(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) GetPackedTitleUpdateBoolStatKey(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}

func (_client) GetPackedTuIntStatKey(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) N_0xd16c2ad6b8e32854(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) GetTupstatIntHash(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}
func (_client) GetPackedTitleUpdateIntStatKey(index float64, spStat bool, charStat bool, character float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xEAE6DCC7EEE3DB1D).
 * @return Returns parked vehicle density multiplier value.
 */
func (_client) GetParkedVehicleDensityMultiplier() float64 {
	return 0.0
}

/**
 * Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
 * @return If the pause menu is open, it will return a Vector3, Z is always 0.
If the pause menu is closed, it will return Vector3.Zero
 */
func (_client) GetPauseMenuCursorPosition()  interface{} { return nil }
/**
 * Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
 * @return If the pause menu is open, it will return a Vector3, Z is always 0.
If the pause menu is closed, it will return Vector3.Zero
 */
func (_client) N_0x5bff36d6ed83e0ae()  interface{} { return nil }

func (_client) GetPauseMenuSelection() (float64, float64) { return 0.0, 0.0 };
func (_client) N_0x36c1451a88a09630() (float64, float64) { return 0.0, 0.0 };

/**
 * lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
 * selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
 * selectedItemUniqueId: this is uniqueID of the currently selected menu item
 * when the pausemenu is closed:
 * lastItemMenuId = -1
 * selectedItemMenuId = -1
 * selectedItemUniqueId = 0
 * when the header gains focus:
 * lastItemMenuId updates as normal or 0 if the pausemenu was just opened
 * selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
 * selectedItemUniqueId = -1
 * when focus is moved from the header to a pausemenu page:
 * lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
 * selectedItemMenuId = -1
 * selectedItemUniqueId updates as normal
 */
func (_client) GetPauseMenuSelectionData() (float64,float64,float64) { return 0.0,0.0,0.0}
/**
 * lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
 * selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
 * selectedItemUniqueId: this is uniqueID of the currently selected menu item
 * when the pausemenu is closed:
 * lastItemMenuId = -1
 * selectedItemMenuId = -1
 * selectedItemUniqueId = 0
 * when the header gains focus:
 * lastItemMenuId updates as normal or 0 if the pausemenu was just opened
 * selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
 * selectedItemUniqueId = -1
 * when focus is moved from the header to a pausemenu page:
 * lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
 * selectedItemMenuId = -1
 * selectedItemUniqueId updates as normal
 */
func (_client) N_0x7e17be53e1aaabaf() (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * Returns:
 * 0
 * 5
 * 10
 * 15
 * 20
 * 25
 * 30
 * 35
 */
func (_client) GetPauseMenuState() float64 {
	return 0.0
}

func (_client) GetPedAccuracy(ped float64) float64 {
	return 0.0
}

/**
 * Returns the ped's alertness (0-3).
 * Values :
 * 0 : Neutral
 * 1 : Heard something (gun shot, hit, etc)
 * 2 : Knows (the origin of the event)
 * 3 : Fully alerted (is facing the event?)
 * If the Ped does not exist, returns -1.
 */
func (_client) GetPedAlertness(ped float64) float64 {
	return 0.0
}

func (_client) GetPedAmmoByType(ped float64, ammoType interface{}) float64 {
	return 0.0
}

/**
 * Returns the current ammo type of the specified ped's specified weapon.
 * MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
 * Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
 */
func (_client) GetPedAmmoTypeFromWeapon(ped float64, weaponHash interface{}) float64 {
	return 0.0
}
/**
 * Returns the current ammo type of the specified ped's specified weapon.
 * MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
 * Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
 */
func (_client) GetPedAmmoType(ped float64, weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Returns the base/default ammo type of the specified ped's specified weapon.
 * Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
 */
func (_client) GetPedAmmoTypeFromWeapon_2(ped float64, weaponHash interface{}) float64 {
	return 0.0
}

func (_client) GetPedArmour(ped float64) float64 {
	return 0.0
}

func (_client) GetPedAsGroupLeader(groupID float64) float64 {
	return 0.0
}
func (_client) GetPedAsGroupLeader(groupID float64) float64 {
	return 0.0
}

/**
 * from fm_mission_controller.c4 (variable names changed for clarity):
 * int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());
 * PED::GET_GROUP_SIZE(group, &unused, &groupSize);
 * if (groupSize >= 1) {
 * . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
 * . . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);
 * . . . . . . . . //and so on
 */
func (_client) GetPedAsGroupMember(groupID float64, memberNumber float64) float64 {
	return 0.0
}

/**
 * Gets the position of the specified bone of the specified ped.
 * ped: The ped to get the position of a bone from.
 * boneId: The ID of the bone to get the position from. This is NOT the index.
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
 */
func (_client) GetPedBoneCoords(ped float64, boneId float64, offsetX float64, offsetY float64, offsetZ float64)  interface{} { return nil }

/**
 * Bone ID enum: pastebin.com/3pz17QGd
 */
func (_client) GetPedBoneIndex(ped float64, boneId float64) float64 {
	return 0.0
}

/**
 * Returns the hash of the weapon/model/object that killed the ped.
 */
func (_client) GetPedCauseOfDeath(ped float64) float64 {
	return 0.0
}

func (_client) GetPedCombatMovement(ped float64) float64 {
	return 0.0
}

func (_client) GetPedCombatRange(ped float64) float64 {
	return 0.0
}

/**
 * See [`SET_PED_CONFIG_FLAG`](#\_0x1913FE4CBF41C463).
 */
func (_client) GetPedConfigFlag(ped float64, flagId float64, p2 bool) bool;

func (_client) GetPedCurrentMovementSpeed(ped float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xf60165e1d2c5370b(ped float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * Returns the zoneID for the overlay if it is a member of collection.
 * enum ePedDecorationZone
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7
 * };
 */
func (_client) GetPedDecorationZoneFromHashes(collection interface{}, overlay interface{}) float64 {
	return 0.0
}
/**
 * Returns the zoneID for the overlay if it is a member of collection.
 * enum ePedDecorationZone
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7
 * };
 */
func (_client) GetTattooZone(collection interface{}, overlay interface{}) float64 {
	return 0.0
}

func (_client) GetPedDecorationsState(ped float64) float64 {
	return 0.0
}
func (_client) N_0x71eab450d86954a1(ped float64) float64 {
	return 0.0
}

func (_client) GetPedDefensiveAreaPosition(ped float64, p1 bool)  interface{} { return nil }

/**
 * A getter for [SET_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x95E3D6257B166CF2).
 * @return Returns ped density multiplier value.
 */
func (_client) GetPedDensityMultiplier() float64 {
	return 0.0
}

func (_client) GetPedDesiredMoveBlendRatio(ped float64) float64 {
	return 0.0
}

/**
 * Ids
 * 0 - Head
 * 1 - Beard
 * 2 - Hair
 * 3 - Torso
 * 4 - Legs
 * 5 - Hands
 * 6 - Foot
 * 7 - ------
 * 8 - Accessories 1
 * 9 - Accessories 2
 * 10- Decals
 * 11 - Auxiliary parts for torso
 */
func (_client) GetPedDrawableVariation(ped float64, componentId float64) float64 {
	return 0.0
}

/**
 * Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
 * @param ped The ped to get the glow intensity from.
 * @return A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
 */
func (_client) GetPedEmissiveIntensity(ped float64) float64 {
	return 0.0
}
/**
 * Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
 * @param ped The ped to get the glow intensity from.
 * @return A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
 */
func (_client) N_0x1461b28a06717d68(ped float64) float64 {
	return 0.0
}
/**
 * Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
 * @param ped The ped to get the glow intensity from.
 * @return A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
 */
func (_client) GetPedIlluminatedClothingGlowIntensity(ped float64) float64 {
	return 0.0
}

func (_client) GetPedEnveffScale(ped float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2189
 */
func (_client) GetPedEventData(ped float64, eventType float64, outData float64)  (bool, float64){
	return false,0.0
}

/**
 * Gets the offset the specified ped has moved since the previous tick.
 * If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
 * If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
 */
func (_client) GetPedExtractedDisplacement(ped float64, worldSpace bool)  interface{} { return nil }

/**
 * A getter for [`_SET_PED_EYE_COLOR`](#\_0x50B56988B170AFDF).
 * @param ped The target ped
 * @return Returns ped's eye colour, or -1 if fails to get.
 */
func (_client) GetPedEyeColor(ped float64) float64 {
	return 0.0
}
/**
 * A getter for [`_SET_PED_EYE_COLOR`](#\_0x50B56988B170AFDF).
 * @param ped The target ped
 * @return Returns ped's eye colour, or -1 if fails to get.
 */
func (_client) N_0x76bba2cee66d47e9(ped float64) float64 {
	return 0.0
}

/**
 * A getter for [\_SET_PED_EYE_COLOR](#\_0x50B56988B170AFDF). Returns -1 if fails to get.
 * @param ped The target ped
 * @return Returns ped's eye colour, or -1 if fails to get.
 */
func (_client) GetPedEyeColor(ped float64) float64 {
	return 0.0
}

/**
 * A getter for [\_SET_PED_FACE_FEATURE](#\_0x71A5C1DBA060049E). Returns 0.0 if fails to get.
 * @param ped The target ped
 * @param index Face feature index
 * @return Returns ped's face feature value, or 0.0 if fails to get.
 */
func (_client) GetPedFaceFeature(ped float64, index float64) float64 {
	return 0.0
}

/**
 * Returns the group id of which the specified ped is a member of.
 */
func (_client) GetPedGroupIndex(ped float64) float64 {
	return 0.0
}

/**
 * A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
 * @param ped The target ped
 * @return Returns ped's primary hair colour.
 */
func (_client) GetPedHairColor(ped float64) float64 {
	return 0.0
}

/**
 * A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
 * @param ped The target ped
 * @return Returns ped's secondary hair colour.
 */
func (_client) GetPedHairHighlightColor(ped float64) float64 {
	return 0.0
}

/**
 * Input: Haircolor index, value between 0 and 63 (inclusive).
 * Output: RGB values for the haircolor specified in the input.
 * This is used with the hair color swatches scaleform.
 * Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
 * @param hairColorIndex The hair color index. Value between 0-63 (inclusive).
 * @param outR Output red value.
 * @param outG Output green value.
 * @param outB Output blue value.
 */
func (_client) GetPedHairRgbColor(hairColorIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}
/**
 * Input: Haircolor index, value between 0 and 63 (inclusive).
 * Output: RGB values for the haircolor specified in the input.
 * This is used with the hair color swatches scaleform.
 * Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
 * @param hairColorIndex The hair color index. Value between 0-63 (inclusive).
 * @param outR Output red value.
 * @param outG Output green value.
 * @param outB Output blue value.
 */
func (_client) N_0x4852fc386e2e1bb5(hairColorIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}
/**
 * Input: Haircolor index, value between 0 and 63 (inclusive).
 * Output: RGB values for the haircolor specified in the input.
 * This is used with the hair color swatches scaleform.
 * Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
 * @param hairColorIndex The hair color index. Value between 0-63 (inclusive).
 * @param outR Output red value.
 * @param outG Output green value.
 * @param outB Output blue value.
 */
func (_client) GetHairRgbColor(hairColorIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
 * pass this struct in the second parameter
 * typedef struct
 * {
 * int shapeFirst, shapeSecond, shapeThird;
 * int skinFirst, skinSecond, skinThird;
 * float shapeMix, skinMix, thirdMix;
 * } headBlendData;
 */
func (_client) GetPedHeadBlendData(ped float64, headBlendData float64)  (bool, float64){
	return false,0.0
}
/**
 * The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
 * pass this struct in the second parameter
 * typedef struct
 * {
 * int shapeFirst, shapeSecond, shapeThird;
 * int skinFirst, skinSecond, skinThird;
 * float shapeMix, skinMix, thirdMix;
 * } headBlendData;
 */
func (_client) GetPedHeadBlendData(ped float64, headBlendData float64)  (bool, float64){
	return false,0.0
}

/**
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 * Used when calling SET_PED_HEAD_BLEND_DATA.
 */
func (_client) GetPedHeadBlendFirstIndex(_type float64) float64 {
	return 0.0
}
/**
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 * Used when calling SET_PED_HEAD_BLEND_DATA.
 */
func (_client) GetFirstParentIdForPedType(_type float64) float64 {
	return 0.0
}

/**
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 */
func (_client) GetPedHeadBlendNumHeads(_type float64) float64 {
	return 0.0
}
/**
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 */
func (_client) GetNumParentPedsOfType(_type float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PED_HEAD_OVERLAY](#\_0x48F44967FA05CC1E) and [\_SET_PED_HEAD_OVERLAY_COLOR](#\_0x497BF74A7B9CB952) natives.
 * @param ped The target ped
 * @param index Overlay index
 * @param overlayValue Overlay value pointer
 * @param colourType Colour type pointer
 * @param firstColour First colour pointer
 * @param secondColour Second colour pointer
 * @param overlayOpacity Opacity pointer
 * @return Returns ped's head overlay data.
 */
func (_client) GetPedHeadOverlayData(ped float64, index float64): [boolean, number, number, number, number, number];

/**
 * Used with freemode (online) characters.
 */
func (_client) GetPedHeadOverlayNum(overlayID float64) float64 {
	return 0.0
}
/**
 * Used with freemode (online) characters.
 */
func (_client) GetNumHeadOverlayValues(overlayID float64) float64 {
	return 0.0
}

/**
 * Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
 * This might be the once removed native GET_PED_HEAD_OVERLAY.
 */
func (_client) GetPedHeadOverlayValue(ped float64, overlayID float64) float64 {
	return 0.0
}

func (_client) GetPedHelmetStoredHatPropIndex(ped float64) float64 {
	return 0.0
}
func (_client) N_0x451294e859ecc018(ped float64) float64 {
	return 0.0
}

func (_client) GetPedHelmetStoredHatTexIndex(ped float64) float64 {
	return 0.0
}
func (_client) N_0x9d728c1e12bf5518(ped float64) float64 {
	return 0.0
}

/**
 * Gets the ped in the specified seat of the passed vehicle.
 * If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
 * **NativeDB Added Parameter 3**: BOOL p2 (uses a different GetOccupant function)
 * @param vehicle The vehicle to get the ped for.
 * @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
 * @return A handle to a ped in the specified vehicle seat, or 0 if no such ped existed.
 */
func (_client) GetPedInVehicleSeat(vehicle float64, seatIndex float64) float64 {
	return 0.0
}

/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 */
func (_client) GetPedIndexFromEntityIndex(entity float64) float64 {
	return 0.0
}

func (_client) GetPedLastDamageBone(ped float64, outBone float64)  (bool, float64){
	return false,0.0
}

/**
 * Pass ped. Pass address of Vector3.
 * The coord will be put into the Vector3.
 * The return will determine whether there was a coord found or not.
 */
func (_client) GetPedLastWeaponImpactCoord(ped float64) (bool,interface{}) { return false,nil }

/**
 * Input: Makeup color index, value between 0 and 63 (inclusive).
 * Output: RGB values for the makeup color specified in the input.
 * This is used with the makeup color swatches scaleform.
 * Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
 * @param makeupColorIndex The hair color index. Value between 0-63 (inclusive).
 * @param outR Output red value.
 * @param outG Output green value.
 * @param outB Output blue value.
 */
func (_client) GetPedMakeupRgbColor(makeupColorIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}
/**
 * Input: Makeup color index, value between 0 and 63 (inclusive).
 * Output: RGB values for the makeup color specified in the input.
 * This is used with the makeup color swatches scaleform.
 * Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
 * @param makeupColorIndex The hair color index. Value between 0-63 (inclusive).
 * @param outR Output red value.
 * @param outG Output green value.
 * @param outB Output blue value.
 */
func (_client) N_0x013e5cfc38cd5387(makeupColorIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}
/**
 * Input: Makeup color index, value between 0 and 63 (inclusive).
 * Output: RGB values for the makeup color specified in the input.
 * This is used with the makeup color swatches scaleform.
 * Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
 * @param makeupColorIndex The hair color index. Value between 0-63 (inclusive).
 * @param outR Output red value.
 * @param outG Output green value.
 * @param outB Output blue value.
 */
func (_client) GetMakeupRgbColor(makeupColorIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetPedMaxHealth(ped float64) float64 {
	return 0.0
}

func (_client) GetPedMoney(ped float64) float64 {
	return 0.0
}

/**
 * Console/PC structure definitions and example: pastebin.com/SsFej963
 * For FiveM/Cfx.Re use-cases refer to: [`GET_GAME_POOL`](#\_0x2B9D4F50).
 * @param ignore Ped type to ignore
 */
func (_client) GetPedNearbyPeds(ped float64, ignore float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Returns size of array, passed into the second variable.
 * See below for usage information.
 * This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
 * //Setup the array
 * const int numElements = 10;
 * const int arrSize = numElements * 2 + 2;
 * Any veh[arrSize];
 * //0 index is the size of the array
 * veh[0] = numElements;
 * int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);
 * if (veh != NULL)
 * {
 * //Simple loop to go through results
 * for (int i = 0; i < count; i++)
 * {
 * int offsettedID = i * 2 + 2;
 * //Make sure it exists
 * if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))
 * {
 * //Do something
 * }
 * }
 * }
 * Here's the right way to do it (console and pc):
 * pastebin.com/SsFej963
 */
func (_client) GetPedNearbyVehicles(ped float64, sizeAndVehs float64) (float64, float64) { return 0.0, 0.0 };

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetPedPaletteVariation(ped float64, componentId float64) float64 {
	return 0.0
}

/**
 * -1: no landing
 * 0: landing on both feet
 * 1: stumbling
 * 2: rolling
 * 3: ragdoll
 */
func (_client) GetPedParachuteLandingType(ped float64) float64 {
	return 0.0
}

/**
 * Returns:
 * -1: Normal
 * 0: Wearing parachute on back
 * 1: Parachute opening
 * 2: Parachute open
 * 3: Falling to doom (e.g. after exiting parachute)
 * Normal means no parachute?
 */
func (_client) GetPedParachuteState(ped float64) float64 {
	return 0.0
}

func (_client) GetPedParachuteTintIndex(ped float64, outTintIndex float64) float64 {
	return 0.0
}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetPedPropIndex(ped float64, componentId float64) float64 {
	return 0.0
}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetPedPropTextureIndex(ped float64, componentId float64) float64 {
	return 0.0
}

func (_client) GetPedRagdollBoneIndex(ped float64, bone float64) float64 {
	return 0.0
}

func (_client) GetPedRelationshipGroupDefaultHash(ped float64) float64 {
	return 0.0
}

func (_client) GetPedRelationshipGroupHash(ped float64) float64 {
	return 0.0
}

func (_client) GetPedResetFlag(ped float64, flagId float64) bool;

/**
 * Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
 * Is best to check if the Ped is dead before asking for its killer.
 */
func (_client) GetPedSourceOfDeath(ped float64) float64 {
	return 0.0
}
/**
 * Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
 * Is best to check if the Ped is dead before asking for its killer.
 */
func (_client) GetPedKiller(ped float64) float64 {
	return 0.0
}

/**
 * Returns whether the entity is in stealth mode
 */
func (_client) GetPedStealthMovement(ped float64) bool;

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetPedTaskCombatTarget(ped float64, p1 float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x32c27a11307b01cc(ped float64, p1 float64) float64 {
	return 0.0
}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) GetPedTextureVariation(ped float64, componentId float64) float64 {
	return 0.0
}

func (_client) GetPedTimeOfDeath(ped float64) float64 {
	return 0.0
}
func (_client) GetPedTimeOfDeath(ped float64) float64 {
	return 0.0
}
func (_client) N_0x1e98817b311ae98a(ped float64) float64 {
	return 0.0
}

/**
 * https://alloc8or.re/gta5/doc/enums/ePedType.txt
 */
func (_client) GetPedType(ped float64) float64 {
	return 0.0
}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) GetPedUsingVehicleDoor(vehicle float64, doorIndex float64) float64 {
	return 0.0
}
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) N_0x218297bf0cfd853b(vehicle float64, doorIndex float64) float64 {
	return 0.0
}
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) GetPedUsingVehicleDoor(vehicle float64, doorIndex float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1493
 */
func (_client) GetPedVisualFieldCenterAngle(ped float64) float64 {
	return 0.0
}

func (_client) GetPedWaypointDistance(p0 float64) float64 {
	return 0.0
}

func (_client) GetPedWaypointProgress(ped float64) float64 {
	return 0.0
}

func (_client) GetPedWeaponLiveryColor(ped float64, weaponHash interface{}, camoComponentHash interface{}) float64 {
	return 0.0
}
func (_client) N_0xf0a60040be558f2d(ped float64, weaponHash interface{}, camoComponentHash interface{}) float64 {
	return 0.0
}

func (_client) GetPedWeaponTintIndex(ped float64, weaponHash interface{}) float64 {
	return 0.0
}

func (_client) GetPedWeapontypeInSlot(ped float64, weaponSlot interface{}) float64 {
	return 0.0
}

/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 */
func (_client) GetPedheadshotTxdString(id float64) string;

func (_client) GetPedsJacker(ped float64) float64 {
	return 0.0
}

func (_client) GetPhoneGestureAnimCurrentTime(ped float64) float64 {
	return 0.0
}

func (_client) GetPhoneGestureAnimTotalTime(ped float64) float64 {
	return 0.0
}

func (_client) GetPickupCoords(pickup float64)  interface{} { return nil }

func (_client) GetPickupGenerationRangeMultiplier() float64 {
	return 0.0
}
func (_client) N_0xb3eca65c7317f174() float64 {
	return 0.0
}

/**
 * returns pickup hash.
 */
func (_client) GetPickupHash(pickupHash interface{}) float64 {
	return 0.0
}
/**
 * returns pickup hash.
 */
func (_client) N_0x5eaad83f8cfb4575(pickupHash interface{}) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) GetPickupHashFromWeapon(weapon interface{}) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xd6429a016084f1a5(weapon interface{}) float64 {
	return 0.0
}

func (_client) GetPickupObject(pickup float64) float64 {
	return 0.0
}
func (_client) N_0x5099bc55630b25ae(pickup float64) float64 {
	return 0.0
}

func (_client) GetPlayerCurrentStealthNoise(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerFakeWantedLevel(player float64) float64 {
	return 0.0
}
func (_client) N_0x56105e599cab0efa(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerFromServerId(serverId float64) float64 {
	return 0.0
}

/**
 * Returns the group ID the player is member of.
 */
func (_client) GetPlayerGroup(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerHasReserveParachute(player float64) bool;

func (_client) GetPlayerHealthRechargeLimit(player float64) float64 {
	return 0.0
}
func (_client) N_0x8bc515bae4aaf8ff(player float64) float64 {
	return 0.0
}

/**
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
 */
func (_client) GetPlayerIndex() float64 {
	return 0.0
}

/**
 * Returns the Player's Invincible status.
 * This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
 * bool IsPlayerInvincible(Player player)
 * {
 * auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
 * if (addr)
 * {
 * DWORD flag = *(DWORD *)(addr + 0x188);
 * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
 * }
 * return false;
 * }
 * ============================================================
 * This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?
 */
func (_client) GetPlayerInvincible(player float64) bool;

/**
 * Unlike [GET_PLAYER_INVINCIBLE](#\_0xB721981B2B939E07) this native gets both [SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED](#\_0x6BC97F4F4BB3C04B) and [SET_PLAYER_INVINCIBLE](#\_0x239528EACDC3E7DE) invincibility state.
 * @param player The player id
 * @return A boolean to tell if the player is invincible.
 */
func (_client) GetPlayerInvincible_2(player float64) bool;

func (_client) GetPlayerMaxArmour(player float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER](#\_0x4A3DC7ECCC321032).
 * @param playerId The player index.
 * @return Returns player melee weapon damage modifier value.
 */
func (_client) GetPlayerMeleeWeaponDamageModifier(playerId float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER](#\_0xAE540335B4ABC4E2).
 * @param playerId The player index.
 * @return The value of player melee weapon defense modifier.
 */
func (_client) GetPlayerMeleeWeaponDefenseModifier(playerId float64) float64 {
	return 0.0
}

/**
 * Returns the players name from a specified player index
 * @param player The player index, or -1 to get the local player ped.
 * @return The name of the queried player. "**Invalid**" if the player does not exist.
 */
func (_client) GetPlayerName(player float64) string;

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetPlayerParachuteModelOverride(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerParachutePackTintIndex(player float64, tintIndex float64) float64 {
	return 0.0
}

func (_client) GetPlayerParachuteSmokeTrailColor(player float64) (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 */
func (_client) GetPlayerParachuteTintIndex(player float64, tintIndex float64) float64 {
	return 0.0
}

/**
 * Gets the ped for a specified player index.
 * @param playerId The player index, or -1 to get the local player ped.
 * @return The specified player's ped, or 0 if invalid.
 */
func (_client) GetPlayerPed(playerId float64) float64 {
	return 0.0
}

func (_client) GetPlayerPedIsFollowing(ped float64) float64 {
	return 0.0
}

/**
 * Does the same like PLAYER::GET_PLAYER_PED
 */
func (_client) GetPlayerPedScriptIndex(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerRadioStationGenre() float64 {
	return 0.0
}

/**
 * Returns 255 (radio off index) if the function fails.
 */
func (_client) GetPlayerRadioStationIndex() float64 {
	return 0.0
}

/**
 * Returns active radio station name
 */
func (_client) GetPlayerRadioStationName() string;

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetPlayerReserveParachuteModelOverride(player float64) float64 {
	return 0.0
}

/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 */
func (_client) GetPlayerReserveParachuteTintIndex(player float64, index float64) float64 {
	return 0.0
}

func (_client) GetPlayerRgbColour(player float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetPlayerServerId(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerShortSwitchState() float64 {
	return 0.0
}

func (_client) GetPlayerSprintStaminaRemaining(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerSprintTimeRemaining(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerSwitchInterpOutCurrentTime() float64 {
	return 0.0
}
func (_client) N_0x5b48a06dd0e792a5() float64 {
	return 0.0
}

func (_client) GetPlayerSwitchInterpOutDuration() float64 {
	return 0.0
}
func (_client) SetPlayerInvertedUp() float64 {
	return 0.0
}
func (_client) N_0x08c2d6c52a3104bb() float64 {
	return 0.0
}

func (_client) GetPlayerSwitchJumpCutIndex() float64 {
	return 0.0
}
func (_client) N_0x78c0d93253149435() float64 {
	return 0.0
}

func (_client) GetPlayerSwitchState() float64 {
	return 0.0
}

func (_client) GetPlayerSwitchType() float64 {
	return 0.0
}

/**
 * Assigns the handle of locked-on melee target to *entity that you pass it.
 * Returns false if no entity found.
 */
func (_client) GetPlayerTargetEntity(player float64, entity float64)  (bool, float64){
	return false,0.0
}

/**
 * Gets the player's team.
 * Does nothing in singleplayer.
 */
func (_client) GetPlayerTeam(player float64) float64 {
	return 0.0
}

func (_client) GetPlayerUnderwaterTimeRemaining(player float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PLAYER_VEHICLE_DAMAGE_MODIFIER](#\_0xA50E117CDDF82F0C).
 * @param playerId The player index.
 * @return The value of player vehicle damage modifier.
 */
func (_client) GetPlayerVehicleDamageModifier(playerId float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PLAYER_VEHICLE_DEFENSE_MODIFIER](#\_0x4C60E6EFDAFF2462).
 * @param playerId The player index.
 * @return The value of player vehicle defense modifier.
 */
func (_client) GetPlayerVehicleDefenseModifier(playerId float64) float64 {
	return 0.0
}

func (_client) GetPlayerWantedCentrePosition(player float64)  interface{} { return nil }

func (_client) GetPlayerWantedLevel(player float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PLAYER_WEAPON_DAMAGE_MODIFIER](#\_0xCE07B9F7817AADA3).
 * @param playerId The player index.
 * @return The value of player weapon damage modifier.
 */
func (_client) GetPlayerWeaponDamageModifier(playerId float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_PLAYER_WEAPON_DEFENSE_MODIFIER](#\_0x2D83BC011CA14A3C).
 * @param playerId The player index.
 * @return The value of player weapon defense modifier.
 */
func (_client) GetPlayerWeaponDefenseModifier(playerId float64) float64 {
	return 0.0
}

/**
 * A getter for [\_SET_PLAYER_WEAPON_DEFENSE_MODIFIER\_2](#\_0xBCFDE9EDE4CF27DC).
 * @param playerId The player index.
 * @return The value of player weapon defense modifier 2.
 */
func (_client) GetPlayerWeaponDefenseModifier_2(playerId float64) float64 {
	return 0.0
}

/**
 * Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
 */
func (_client) GetPlayersLastVehicle() float64 {
	return 0.0
}

func (_client) GetPointOnRoadSide(x float64, y float64, z float64, p3 float64) (bool,interface{}) { return false,nil }
func (_client) N_0x16f46fb18c8009e4(x float64, y float64, z float64, p3 float64) (bool,interface{}) { return false,nil }

/**
 * Distance traveled in the vehicles current recording.
 */
func (_client) GetPositionInRecording(vehicle float64) float64 {
	return 0.0
}

/**
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 * See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
 */
func (_client) GetPositionOfVehicleRecordingAtTime(recording float64, time float64, script string)  interface{} { return nil }

func (_client) GetPositionOfVehicleRecordingIdAtTime(id float64, time float64)  interface{} { return nil }
func (_client) N_0x92523b76657a517d(id float64, time float64)  interface{} { return nil }

/**
 * Gets system time as year, month, day, hour, minute and second.
 * Example usage:
 * int year;
 * int month;
 * int day;
 * int hour;
 * int minute;
 * int second;
 * TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);
 */
func (_client) GetPosixTime(): [number, number, number, number, number, number];

/**
 * Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
 */
func (_client) GetPowerSavingModeDuration() float64 {
	return 0.0
}
/**
 * Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
 */
func (_client) N_0xabb2fa71c83a1b72() float64 {
	return 0.0
}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) GetPrevWeatherTypeHashName() float64 {
	return 0.0
}
/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) GetPrevWeatherType() float64 {
	return 0.0
}

func (_client) GetProfileSetting(profileSetting float64) float64 {
	return 0.0
}

func (_client) GetProjectileNearPed(ped float64, weaponHash interface{}, distance float64, ownedByPlayer bool) (bool,interface{},float64) { return false,nil,0.0}
func (_client) N_0x82fde6a57ee4ee44(ped float64, weaponHash interface{}, distance float64, ownedByPlayer bool) (bool,interface{},float64) { return false,nil,0.0}

/**
 * Returns String with radio station name.
 */
func (_client) GetRadioStationName(radioStation float64) string;

func (_client) GetRainLevel() float64 {
	return 0.0
}

func (_client) GetRandomEventFlag() bool;

func (_client) GetRandomFloatInRange(startRange float64, endRange float64) float64 {
	return 0.0
}

func (_client) GetRandomIntInRange(startRange float64, endRange float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1734
 */
func (_client) GetRandomIntInRange_2(startRange float64, endRange float64) float64 {
	return 0.0
}

/**
 * Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
 * Ped Types:
 * Any = -1
 * Player = 1
 * Male = 4
 * Female = 5
 * Cop = 6
 * Human = 26
 * SWAT = 27
 * Animal = 28
 * Army = 29
 */
func (_client) GetRandomPedAtCoord(x float64, y float64, z float64, xRadius float64, yRadius float64, zRadius float64, pedType float64) float64 {
	return 0.0
}

func (_client) GetRandomVehicleBackBumperInSphere(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xB3B3359379FE77D3).
 * Same as vehicle density multiplier.
 * @return Returns random vehicle density multiplier value.
 */
func (_client) GetRandomVehicleDensityMultiplier() float64 {
	return 0.0
}

func (_client) GetRandomVehicleFrontBumperInSphere(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}

/**
 * Gets a random vehicle in a sphere at the specified position, of the specified radius.
 * x: The X-component of the position of the sphere.
 * y: The Y-component of the position of the sphere.
 * z: The Z-component of the position of the sphere.
 * radius: The radius of the sphere. Max is 9999.9004.
 * modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
 * flags: The bitwise flags that modifies the behaviour of this function.
 */
func (_client) GetRandomVehicleInSphere(x float64, y float64, z float64, radius float64, modelHash interface{}, flags float64) float64 {
	return 0.0
}

/**
 * Not present in the retail version! It's just a nullsub.
 * p0 always true (except in one case)
 * p1 a random vehicle hash loaded in memory
 * successIndicator: 0 if success, -1 if failed
 */
func (_client) GetRandomVehicleModelInMemory(p0 bool) (float64, float64) { return 0.0, 0.0 };

func (_client) GetRandomVehicleNode(x float64, y float64, z float64, radius float64, p4 bool, p5 bool, p6 bool) (bool,interface{},float64) { return false,nil,0.0}

/**
 * Example:
 * OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
 */
func (_client) GetRayfireMapObject(x float64, y float64, z float64, radius float64, name string) float64 {
	return 0.0
}
/**
 * Example:
 * OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
 */
func (_client) N_0xb48fced898292e52(x float64, y float64, z float64, radius float64, name string) float64 {
	return 0.0
}
/**
 * Example:
 * OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
 */
func (_client) GetDesObject(x float64, y float64, z float64, radius float64, name string) float64 {
	return 0.0
}

/**
 * `object`: The des-object handle to get the animation progress from.
 * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 * @param object The des-object handle to get the animation progress from.
 * @return A float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 */
func (_client) GetRayfireMapObjectAnimPhase(object float64) float64 {
	return 0.0
}
/**
 * `object`: The des-object handle to get the animation progress from.
 * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 * @param object The des-object handle to get the animation progress from.
 * @return A float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 */
func (_client) N_0x260ee4fdbdf4db01(object float64) float64 {
	return 0.0
}
/**
 * `object`: The des-object handle to get the animation progress from.
 * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 * @param object The des-object handle to get the animation progress from.
 * @return A float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 */
func (_client) GetDesObjectAnimProgress(object float64) float64 {
	return 0.0
}

/**
 * Returns all commands that are registered in the command system.
 * The data returned adheres to the following layout:
 * ```
 * [
 * {
 * "name": "cmdlist"
 * },
 * {
 * "name": "command1"
 * }
 * ]
 * ```
 * @return An object containing registered commands.
 */
func (_client) GetRegisteredCommands() interface{} {
	return nil
}

/**
 * Gets the relationship between two groups. This should be called twice (once for each group).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * Example:
 * PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);
 * PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);
 */
func (_client) GetRelationshipBetweenGroups(group1 interface{}, group2 interface{}) float64 {
	return 0.0
}

/**
 * Gets the relationship between two peds. This should be called twice (once for each ped).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * (Credits: Inco)
 * Example:
 * PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);
 * PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);
 */
func (_client) GetRelationshipBetweenPeds(ped1 float64, ped2 float64) float64 {
	return 0.0
}

/**
 * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
 * Old name: _GET_TEXT_SCALE_HEIGHT
 */
func (_client) GetRenderedCharacterHeight(size float64, font float64) float64 {
	return 0.0
}
/**
 * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
 * Old name: _GET_TEXT_SCALE_HEIGHT
 */
func (_client) N_0xdb88a37483346780(size float64, font float64) float64 {
	return 0.0
}
/**
 * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
 * Old name: _GET_TEXT_SCALE_HEIGHT
 */
func (_client) GetTextScaleHeight(size float64, font float64) float64 {
	return 0.0
}

func (_client) GetRenderingCam() float64 {
	return 0.0
}

func (_client) GetReplayStatAtIndex(index float64) float64 {
	return 0.0
}
func (_client) N_0x8098c8d6597aae18(index float64) float64 {
	return 0.0
}

func (_client) GetReplayStatCount() float64 {
	return 0.0
}
func (_client) N_0xdc9274a7ef6b2867() float64 {
	return 0.0
}

func (_client) GetReplayStatMissionType() float64 {
	return 0.0
}
func (_client) N_0x2b626a0150e4d449() float64 {
	return 0.0
}

func (_client) GetRequestingnightvision() bool;
func (_client) N_0x35fb78dc42b7bd21() bool;

func (_client) GetResourceByFindIndex(findIndex float64) string;

/**
 * A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938).
 * @param key The key to fetch
 * @return A float that contains the value stored in the Kvp or nil/null if none.
 */
func (_client) GetResourceKvpFloat(key string) float64 {
	return 0.0
}

/**
 * A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8).
 * @param key The key to fetch
 * @return A int that contains the value stored in the Kvp or nil/null if none.
 */
func (_client) GetResourceKvpInt(key string) float64 {
	return 0.0
}

/**
 * A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B).
 * @param key The key to fetch
 * @return A string that contains the value stored in the Kvp or nil/null if none.
 */
func (_client) GetResourceKvpString(key string) string;

/**
 * Gets the metadata value at a specified key/index from a resource's manifest.
 * See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
 * @param resourceName The resource name.
 * @param metadataKey The key in the resource manifest.
 * @param index The value index, in a range from \[0..GET_NUM_RESOURCE_METDATA-1].
 */
func (_client) GetResourceMetadata(resourceName string, metadataKey string, index float64) string;

/**
 * Returns the current state of the specified resource.
 * @param resourceName The name of the resource.
 * @return The resource state. One of `"missing", "started", "starting", "stopped", "stopping", "uninitialized" or "unknown"`.
 */
func (_client) GetResourceState(resourceName string) string;

func (_client) GetRoadSidePointWithHeading(x float64, y float64, z float64, heading float64) (bool,interface{}) { return false,nil }
func (_client) N_0xa0f8a7517a273c05(x float64, y float64, z float64, heading float64) (bool,interface{}) { return false,nil }

func (_client) GetRoomKeyForGameViewport() float64 {
	return 0.0
}
func (_client) N_0xa6575914d2a0b450() float64 {
	return 0.0
}
func (_client) GetRoomKeyFromGameplayCam() float64 {
	return 0.0
}

/**
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
 */
func (_client) GetRoomKeyFromEntity(entity float64) float64 {
	return 0.0
}

/**
 * cpp
 * enum eRopeFlags
 * {
 * DrawShadowEnabled = 2,
 * Breakable = 4,
 * RopeUnwindingFront = 8,
 * RopeWinding = 32
 * }
 * @param rope The rope to get the flags for.
 * @return The rope's flags.
 */
func (_client) GetRopeFlags(rope float64) float64 {
	return 0.0
}

func (_client) GetRopeLastVertexCoord(ropeId float64)  interface{} { return nil }

func (_client) GetRopeLengthChangeRate(rope float64) float64 {
	return 0.0
}

func (_client) GetRopeTimeMultiplier(rope float64) float64 {
	return 0.0
}

func (_client) GetRopeUpdateOrder(rope float64) float64 {
	return 0.0
}

func (_client) GetRopeVertexCoord(ropeId float64, vertex float64)  interface{} { return nil }

func (_client) GetRopeVertexCount(ropeId float64) float64 {
	return 0.0
}

func (_client) GetRotationOfVehicleRecordingAtTime(recording float64, time float64, script string)  interface{} { return nil }

func (_client) GetRotationOfVehicleRecordingIdAtTime(id float64, time float64)  interface{} { return nil }
func (_client) N_0xf0f2103efaf8cba7(id float64, time float64)  interface{} { return nil }

/**
 * Gets the height of the specified runtime texture.
 * @param tex A handle to the runtime texture.
 * @return The height in pixels.
 */
func (_client) GetRuntimeTextureHeight(tex float64) float64 {
	return 0.0
}

/**
 * Gets the row pitch of the specified runtime texture, for use when creating data for `SET_RUNTIME_TEXTURE_ARGB_DATA`.
 * @param tex A handle to the runtime texture.
 * @return The row pitch in bytes.
 */
func (_client) GetRuntimeTexturePitch(tex float64) float64 {
	return 0.0
}

/**
 * Gets the width of the specified runtime texture.
 * @param tex A handle to the runtime texture.
 * @return The width in pixels.
 */
func (_client) GetRuntimeTextureWidth(tex float64) float64 {
	return 0.0
}

/**
 * Flags are:
 * 1 = 1 = B02_IsFootpath
 * 2 = 4 = !B15_InteractionUnk
 * 4 = 0x20 = !B14_IsInterior
 * 8 = 0x40 = !B07_IsWater
 * 16 = 0x200 = B17_IsFlatGround
 * When onGround == true outPosition is a position located on the nearest pavement.
 * When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
 * In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
 * 16 works for me, 0 crashed the script.
 */
func (_client) GetSafeCoordForPed(x float64, y float64, z float64, onGround bool, flags float64) (bool,interface{}) { return false,nil }

func (_client) GetSafePickupCoords(x float64, y float64, z float64, p3 float64, p4 float64)  interface{} { return nil }

/**
 * Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
 */
func (_client) GetSafeZoneSize() float64 {
	return 0.0
}

/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 */
func (_client) GetScaleformMovieMethodReturnValueBool(methodReturn float64) bool;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 */
func (_client) N_0xd80a80346a45d761(methodReturn float64) bool;

/**
 * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
 */
func (_client) GetScaleformMovieMethodReturnValueInt(method_return float64) float64 {
	return 0.0
}
/**
 * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
 */
func (_client) N_0x2de7efa66b906036(method_return float64) float64 {
	return 0.0
}
/**
 * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
 */
func (_client) GetScaleformMovieFunctionReturnInt(method_return float64) float64 {
	return 0.0
}

/**
 * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns a string in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT` returns an int.
 */
func (_client) GetScaleformMovieMethodReturnValueString(method_return float64) string;
/**
 * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns a string in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT` returns an int.
 */
func (_client) SittingTv(method_return float64) string;
/**
 * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns a string in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT` returns an int.
 */
func (_client) GetScaleformMovieFunctionReturnString(method_return float64) string;

/**
 * A getter for [SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x7A556143A1C03898).
 * @return Returns scenario ped density multiplier value.
 */
func (_client) GetScenarioPedDensityMultiplier() float64 {
	return 0.0
}

/**
 * Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
 * Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
 * For .NET users...
 * VB:
 * Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
 * Dim x2dp, y2dp As New Native.OutputArgument
 * Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
 * Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
 * End Function
 * C#:
 * Vector2 World3DToScreen2d(Vector3 pos)
 * {
 * var x2dp = new OutputArgument();
 * var y2dp = new OutputArgument();
 * Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
 * return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
 * }
 * //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
 * Used to be called _WORLD3D_TO_SCREEN2D
 * I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
 */
func (_client) GetScreenCoordFromWorldCoord(worldX float64, worldY float64, worldZ float64) (bool , float64,float64) { return false,0.0,0.0 }
/**
 * Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
 * Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
 * For .NET users...
 * VB:
 * Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
 * Dim x2dp, y2dp As New Native.OutputArgument
 * Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
 * Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
 * End Function
 * C#:
 * Vector2 World3DToScreen2d(Vector3 pos)
 * {
 * var x2dp = new OutputArgument();
 * var y2dp = new OutputArgument();
 * Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
 * return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
 * }
 * //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
 * Used to be called _WORLD3D_TO_SCREEN2D
 * I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
 */
func (_client) World3dToScreen2d(worldX float64, worldY float64, worldZ float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * Hardcoded to always return 1280x720. Use [`_GET_ACTIVE_SCREEN_RESOLUTION`](?\_0x873C9F3104101DD3) to retrieve the correct screen resolution.
 */
func (_client) GetScreenResolution() (float64, float64) { return 0.0, 0.0 };

func (_client) GetScreenblurFadeCurrentTime() float64 {
	return 0.0
}
func (_client) IsParticleFxDelayedBlink() float64 {
	return 0.0
}

/**
 * Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
 * `SET_SCRIPT_GFX_ALIGN_PARAMS`.
 * @param x The input X coordinate.
 * @param y The input Y coordinate.
 * @param calculatedX A pointer to the calculated X value.
 * @param calculatedY A pointer to the calculated Y value.
 */
func (_client) GetScriptGfxPosition(x float64, y float64) (float64, float64) { return 0.0, 0.0 };
/**
 * Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
 * `SET_SCRIPT_GFX_ALIGN_PARAMS`.
 * @param x The input X coordinate.
 * @param y The input Y coordinate.
 * @param calculatedX A pointer to the calculated X value.
 * @param calculatedY A pointer to the calculated Y value.
 */
func (_client) N_0x6dd8f5aa635eb4b2(x float64, y float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Gets the status of a script-assigned task.
 * taskHash: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
 */
func (_client) GetScriptTaskStatus(ped float64, taskHash interface{}) float64 {
	return 0.0
}

func (_client) GetScriptedCoverPointCoords(coverpoint float64)  interface{} { return nil }

func (_client) GetSeatPedIsTryingToEnter(ped float64) float64 {
	return 0.0
}

func (_client) GetSelectedPedWeapon(ped float64) float64 {
	return 0.0
}

/**
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 */
func (_client) GetSequenceProgress(ped float64) float64 {
	return 0.0
}

/**
 * Returns the result of a shape test.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle A shape test handle.
 * @param hit Whether or not the shape test hit any collisions.
 * @param endCoords The resulting coordinates where the shape test hit a collision.
 * @param surfaceNormal The surface normal of the hit position.
 * @param entityHit Any dynamic entity hit by the shape test.
 * @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
 */
func (_client) GetShapeTestResult(shapeTestHandle float64): [number, any /* actually bool */, number[], number[], number];
/**
 * Returns the result of a shape test.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle A shape test handle.
 * @param hit Whether or not the shape test hit any collisions.
 * @param endCoords The resulting coordinates where the shape test hit a collision.
 * @param surfaceNormal The surface normal of the hit position.
 * @param entityHit Any dynamic entity hit by the shape test.
 * @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
 */
func (_client) GetRaycastResult(shapeTestHandle float64): [number, any /* actually bool */, number[], number[], number];

/**
 * Returns the result of a shape test, also returning the material of any touched surface.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle A shape test handle.
 * @param hit Whether or not the shape test hit any collisions.
 * @param endCoords The resulting coordinates where the shape test hit a collision.
 * @param surfaceNormal The surface normal of the hit position.
 * @param materialHash hash of the hit material or surface type, see materialFX.dat
 * @param entityHit Any dynamic entity hit by the shape test.
 * @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
 */
func (_client) GetShapeTestResultIncludingMaterial(shapeTestHandle float64): [number, any /* actually bool */, number[], number[], number, number];
/**
 * Returns the result of a shape test, also returning the material of any touched surface.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle A shape test handle.
 * @param hit Whether or not the shape test hit any collisions.
 * @param endCoords The resulting coordinates where the shape test hit a collision.
 * @param surfaceNormal The surface normal of the hit position.
 * @param materialHash hash of the hit material or surface type, see materialFX.dat
 * @param entityHit Any dynamic entity hit by the shape test.
 * @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
 */
func (_client) N_0x65287525d951f6be(shapeTestHandle float64): [number, any /* actually bool */, number[], number[], number, number];
/**
 * Returns the result of a shape test, also returning the material of any touched surface.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle A shape test handle.
 * @param hit Whether or not the shape test hit any collisions.
 * @param endCoords The resulting coordinates where the shape test hit a collision.
 * @param surfaceNormal The surface normal of the hit position.
 * @param materialHash hash of the hit material or surface type, see materialFX.dat
 * @param entityHit Any dynamic entity hit by the shape test.
 * @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
 */
func (_client) GetShapeTestResultEx(shapeTestHandle float64): [number, any /* actually bool */, number[], number[], number, number];

/**
 * Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
 */
func (_client) GetShopPedApparelForcedComponentCount(componentHash interface{}) float64 {
	return 0.0
}
/**
 * Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
 */
func (_client) GetNumForcedComponents(componentHash interface{}) float64 {
	return 0.0
}

/**
 * Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
 */
func (_client) GetShopPedApparelForcedPropCount(componentHash interface{}) float64 {
	return 0.0
}
/**
 * Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
 */
func (_client) N_0x017568a8182d98a6(componentHash interface{}) float64 {
	return 0.0
}

func (_client) GetShopPedApparelVariantComponentCount(componentHash interface{}) float64 {
	return 0.0
}
func (_client) N_0xc17ad0e5752becda(componentHash interface{}) float64 {
	return 0.0
}

func (_client) GetShopPedApparelVariantPropCount(propHash interface{}) float64 {
	return 0.0
}
func (_client) N_0xd40aac51e8e4c663(propHash interface{}) float64 {
	return 0.0
}

/**
 * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
 */
func (_client) GetShopPedComponent(componentHash interface{}, outComponent float64) float64 {
	return 0.0
}

func (_client) GetShopPedOutfit(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) GetShopPedOutfitComponentVariant(outfit interface{}, slot float64, outComponentVariant float64)  (bool, float64){
	return false,0.0
}
func (_client) GetPropFromOutfit(outfit interface{}, slot float64, outComponentVariant float64)  (bool, float64){
	return false,0.0
}

func (_client) GetShopPedOutfitLocate(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x073ca26b079f956e(p0 float64) float64 {
	return 0.0
}

func (_client) GetShopPedOutfitPropVariant(outfitHash interface{}, variantIndex float64, outPropVariant float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xa9f9c2e0fde11cbb(outfitHash interface{}, variantIndex float64, outPropVariant float64)  (bool, float64){
	return false,0.0
}

func (_client) GetShopPedProp(componentHash interface{}, outProp float64) float64 {
	return 0.0
}
func (_client) N_0x5d5caff661ddf6fc(componentHash interface{}, outProp float64) float64 {
	return 0.0
}

func (_client) GetShopPedQueryComponent(componentId float64, outComponent float64) float64 {
	return 0.0
}

/**
 * struct Outfit_s
 * {
 * int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;
 * int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,
 * armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;
 * };
 */
func (_client) GetShopPedQueryOutfit(outfitIndex float64, outfit float64) float64 {
	return 0.0
}

func (_client) GetShopPedQueryProp(componentId float64, outProp float64) float64 {
	return 0.0
}

func (_client) GetSizeOfSaveData(p0 bool) float64 {
	return 0.0
}
func (_client) N_0xa09f896ce912481f(p0 bool) float64 {
	return 0.0
}

func (_client) GetSnowLevel() float64 {
	return 0.0
}

func (_client) GetSoundId() float64 {
	return 0.0
}

/**
 * Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#\_0x2DE3F0A134FFBC0D).
 * @param netId Network ID of sound.
 * @return Integer representing a sound id, -1 (0xFFFFFFFF) on failure.
 */
func (_client) GetSoundIdFromNetworkId(netId float64) float64 {
	return 0.0
}
/**
 * Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#\_0x2DE3F0A134FFBC0D).
 * @param netId Network ID of sound.
 * @return Integer representing a sound id, -1 (0xFFFFFFFF) on failure.
 */
func (_client) N_0x75262fd12d0a1c84(netId float64) float64 {
	return 0.0
}

func (_client) GetStandardBlipEnumId() float64 {
	return 0.0
}
func (_client) N_0x4a9923385bdb9dad() float64 {
	return 0.0
}
func (_client) GetLevelBlipSprite() float64 {
	return 0.0
}

/**
 * Returns the value of a state bag key.
 * @return Value.
 */
func (_client) GetStateBagValue(bagName string, key string) interface{} {
	return nil
}

/**
 * locked is 0 if no door is found
 * locked is 0 if door is unlocked
 * locked is 1 if door is found and unlocked.
 * -------------
 * the locked bool is either 0(unlocked)(false) or 1(locked)(true)
 */
func (_client) GetStateOfClosestDoorOfType(_type interface{}, x float64, y float64, z float64): [any /* actually bool */, number];

/**
 * See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states
 * Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
 */
func (_client) GetStateOfRayfireMapObject(object float64) float64 {
	return 0.0
}
/**
 * See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states
 * Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
 */
func (_client) N_0x899ba936634a322e(object float64) float64 {
	return 0.0
}
/**
 * See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states
 * Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
 */
func (_client) GetDesObjectState(object float64) float64 {
	return 0.0
}

func (_client) GetStatusOfLoadMissionCreatorPhoto(p0 string) float64 {
	return 0.0
}
func (_client) N_0x1670f8d05056f257(p0 string) float64 {
	return 0.0
}

func (_client) GetStatusOfMissionRepeatSave() float64 {
	return 0.0
}
func (_client) N_0x2b5e102e4a42f2bf() float64 {
	return 0.0
}

func (_client) GetStatusOfSaveHighQualityPhoto() float64 {
	return 0.0
}
func (_client) N_0x0c0c4e81e1ac60a0() float64 {
	return 0.0
}

/**
 * 3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
 * appcamera, appmedia, and cellphone_controller.
 */
func (_client) GetStatusOfSortedListOperation(p0 bool) float64 {
	return 0.0
}
/**
 * 3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
 * appcamera, appmedia, and cellphone_controller.
 */
func (_client) N_0xf5bed327cea362b1(p0 bool) float64 {
	return 0.0
}

func (_client) GetStatusOfTakeHighQualityPhoto() float64 {
	return 0.0
}
func (_client) N_0x0d6ca79eeebd8ca3() float64 {
	return 0.0
}

func (_client) GetStatusOfTakeMissionCreatorPhoto() float64 {
	return 0.0
}
func (_client) N_0x90a78ecaa4e78453() float64 {
	return 0.0
}

/**
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 */
func (_client) GetStatusOfTextureDownload(p0 float64) float64 {
	return 0.0
}
/**
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 */
func (_client) N_0x8bd6c6dea20e82c6(p0 float64) float64 {
	return 0.0
}
/**
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 */
func (_client) GetStatusOfTextureDownload(p0 float64) float64 {
	return 0.0
}

func (_client) GetStreamPlayTime() float64 {
	return 0.0
}

/**
 * Determines the name of the street which is the closest to the given coordinates.
 * x,y,z - the coordinates of the street
 * streetName - returns a hash to the name of the street the coords are on
 * crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
 * Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.
 */
func (_client) GetStreetNameAtCoord(x float64, y float64, z float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see [`GET_STREET_NAME_AT_COORD`](#\_0x2EB41072B4C1E4C0).
 */
func (_client) GetStreetNameFromHashKey(hash interface{}) string;

/**
 * NativeDB Introduced: v2189
 */
func (_client) GetSubmarineCrushDepthWarningState(submarine float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2189
 */
func (_client) GetSubmarineIsBelowFirstCrushDepth(submarine float64) bool;

func (_client) GetSynchronizedScenePhase(sceneID float64) float64 {
	return 0.0
}

func (_client) GetSynchronizedSceneRate(sceneID float64) float64 {
	return 0.0
}

func (_client) GetTaskMoveNetworkEvent(ped float64, eventName string) bool;
func (_client) N_0xb4f47213df45a64c(ped float64, eventName string) bool;

func (_client) GetTaskMoveNetworkSignalBool(ped float64, signalName string) bool;
func (_client) N_0xa7ffba498e4aaf67(ped float64, signalName string) bool;

/**
 * NativeDB Introduced: v1493
 */
func (_client) GetTaskMoveNetworkSignalFloat(ped float64, signalName string) float64 {
	return 0.0
}

func (_client) GetTaskMoveNetworkState(ped float64) string;
func (_client) N_0x717e4d1f2048376d(ped float64) string;

/**
 * Character types:
 * ```
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 * ```
 * ```csharp
 * enum TattooZoneData
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7,
 * };
 * struct outComponent
 * {
 * // these vars are suffixed with 4 bytes of padding each.
 * uint unk;
 * int unk2;
 * uint tattooCollectionHash;
 * uint tattooNameHash;
 * int unk3;
 * TattooZoneData zoneId;
 * uint unk4;
 * uint unk5;
 * // maybe more, not sure exactly, decompiled scripts are very vague around this part.
 * }
 * ```
 * @param characterType Character types 0 = Michael, 1 = Franklin, 2 = Trevor, 3 = MPMale, 4 = MPFemale.
 * @param decorationIndex Tattoo index, value between 0 and GetNumDecorations(characterType).
 * @param outComponent The referenced struct.
 * @return A bool indicating that the tattoo data could be fetched(?)
 */
func (_client) GetTattooShopDlcItemData(characterType float64, decorationIndex float64, outComponent float64)  (bool, float64){
	return false,0.0
}
/**
 * Character types:
 * ```
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 * ```
 * ```csharp
 * enum TattooZoneData
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7,
 * };
 * struct outComponent
 * {
 * // these vars are suffixed with 4 bytes of padding each.
 * uint unk;
 * int unk2;
 * uint tattooCollectionHash;
 * uint tattooNameHash;
 * int unk3;
 * TattooZoneData zoneId;
 * uint unk4;
 * uint unk5;
 * // maybe more, not sure exactly, decompiled scripts are very vague around this part.
 * }
 * ```
 * @param characterType Character types 0 = Michael, 1 = Franklin, 2 = Trevor, 3 = MPMale, 4 = MPFemale.
 * @param decorationIndex Tattoo index, value between 0 and GetNumDecorations(characterType).
 * @param outComponent The referenced struct.
 * @return A bool indicating that the tattoo data could be fetched(?)
 */
func (_client) N_0xff56381874f82086(characterType float64, decorationIndex float64, outComponent float64)  (bool, float64){
	return false,0.0
}
/**
 * Character types:
 * ```
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 * ```
 * ```csharp
 * enum TattooZoneData
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7,
 * };
 * struct outComponent
 * {
 * // these vars are suffixed with 4 bytes of padding each.
 * uint unk;
 * int unk2;
 * uint tattooCollectionHash;
 * uint tattooNameHash;
 * int unk3;
 * TattooZoneData zoneId;
 * uint unk4;
 * uint unk5;
 * // maybe more, not sure exactly, decompiled scripts are very vague around this part.
 * }
 * ```
 * @param characterType Character types 0 = Michael, 1 = Franklin, 2 = Trevor, 3 = MPMale, 4 = MPFemale.
 * @param decorationIndex Tattoo index, value between 0 and GetNumDecorations(characterType).
 * @param outComponent The referenced struct.
 * @return A bool indicating that the tattoo data could be fetched(?)
 */
func (_client) GetTattooCollectionData(characterType float64, decorationIndex float64, outComponent float64)  (bool, float64){
	return false,0.0
}

func (_client) GetTennisSwingAnimComplete(ped float64) bool;
func (_client) N_0x17df68d720aa77f8(ped float64) bool;

/**
 * Returns a substring of a specified length starting at a specified position.
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * subStr = HUD::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);
 */
func (_client) GetTextSubstring(text string, position float64, length float64) string;

/**
 * Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
 * NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
 * Example:
 * // Condensed example of how Rockstar uses this function
 * strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
 * subStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
 * --
 * "fm_race_creator.ysc", line 85115:
 * // parameters modified for clarity
 * BOOL sub_8e5aa(char *text, int length) {
 * for (i = 0; i <= (length - 2); i += 1) {
 * if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {
 * return FALSE;
 * }
 * }
 * return TRUE;
 * }
 */
func (_client) GetTextSubstringSafe(text string, position float64, length float64, maxLength float64) string;

/**
 * Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);
 * // Overflows are possibly replaced with underscores (needs verification)
 * subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?
 */
func (_client) GetTextSubstringSlice(text string, startPosition float64, endPosition float64) string;

/**
 * Returns the texture resolution of the passed texture dict+name.
 * Note: Most texture resolutions are doubled compared to the console version of the game.
 */
func (_client) GetTextureResolution(textureDict string, textureName string)  interface{} { return nil }

func (_client) GetThisScriptName() string;

func (_client) GetTimeAsString(time float64) string;
func (_client) FormatTime(time float64) string;

/**
 * Subtracts the second argument from the first.
 */
func (_client) GetTimeDifference(timeA float64, timeB float64) float64 {
	return 0.0
}

/**
 * GET_TIME_*
 */
func (_client) GetTimeOfLastPedWeaponDamage(ped float64, weaponHash interface{}) float64 {
	return 0.0
}
/**
 * GET_TIME_*
 */
func (_client) N_0x36b77bb84687c318(ped float64, weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Adds the first argument to the second.
 */
func (_client) GetTimeOffset(timeA float64, timeB float64) float64 {
	return 0.0
}

/**
 * Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
 */
func (_client) GetTimePositionInRecording(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the time since the character was arrested in (ms) milliseconds.
 * example
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
 * UI.DrawSubtitle(time.ToString());
 * if player has not been arrested, the int returned will be -1.
 */
func (_client) GetTimeSinceLastArrest() float64 {
	return 0.0
}

/**
 * Returns the time since the character died in (ms) milliseconds.
 * example
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
 * UI.DrawSubtitle(time.ToString());
 * if player has not died, the int returned will be -1.
 */
func (_client) GetTimeSinceLastDeath() float64 {
	return 0.0
}

/**
 * The number of milliseconds since last padIndex registered pressed
 */
func (_client) GetTimeSinceLastInput(padIndex float64) float64 {
	return 0.0
}
/**
 * The number of milliseconds since last padIndex registered pressed
 */
func (_client) N_0xd7d22f5592aed8ba(padIndex float64) float64 {
	return 0.0
}

func (_client) GetTimeSincePlayerDroveAgainstTraffic(player float64) float64 {
	return 0.0
}

func (_client) GetTimeSincePlayerDroveOnPavement(player float64) float64 {
	return 0.0
}

func (_client) GetTimeSincePlayerHitPed(player float64) float64 {
	return 0.0
}

func (_client) GetTimeSincePlayerHitVehicle(player float64) float64 {
	return 0.0
}

/**
 * Only use for this in the PC scripts is:
 * if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
 * For a full list, see here: pastebin.com/cnk7FTF2
 */
func (_client) GetTimecycleModifierIndex() float64 {
	return 0.0
}

func (_client) GetTimecycleTransitionModifierIndex() float64 {
	return 0.0
}
func (_client) N_0x459fd2c8d0ab78bc() float64 {
	return 0.0
}

func (_client) GetTogglePausedRenderphasesStatus() bool;
func (_client) N_0xeb3dac2c86001e5e() bool;

func (_client) GetTotalDurationOfVehicleRecording(recording float64, script string) float64 {
	return 0.0
}

func (_client) GetTotalDurationOfVehicleRecordingId(id float64) float64 {
	return 0.0
}

func (_client) GetTotalSuccessfulStuntJumps() float64 {
	return 0.0
}
func (_client) N_0x6856ec3d35c81ea4() float64 {
	return 0.0
}

/**
 * Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
 */
func (_client) GetTrainCarriage(train float64, trailerNumber float64) float64 {
	return 0.0
}

func (_client) GetTrainCurrentTrackNode(train float64) float64 {
	return 0.0
}

/**
 * Gets the door count for the specified train.
 * @param train The train to obtain the door count for.
 * @return The door count.
 */
func (_client) GetTrainDoorCount(train float64) float64 {
	return 0.0
}

/**
 * Gets the ratio that a door is open for on a train.
 * @param train The train to obtain the door ratio for.
 * @param doorIndex Zero-based door index.
 * @return A value between 0.0 (fully closed) and 1.0 (fully open).
 */
func (_client) GetTrainDoorOpenRatio(train float64, doorIndex float64) float64 {
	return 0.0
}

func (_client) GetTvChannel() float64 {
	return 0.0
}

func (_client) GetTvVolume() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) GetTyreHealth(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2060
 */
func (_client) GetTyreWearMultiplier(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * 0.0 = no memory used
 * 1.0 = all memory used
 * Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
 * GET_*
 */
func (_client) GetUsedCreatorModelMemoryPercentage() float64 {
	return 0.0
}
/**
 * 0.0 = no memory used
 * 1.0 = all memory used
 * Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
 * GET_*
 */
func (_client) N_0x3d3d8b3be5a83d35() float64 {
	return 0.0
}

func (_client) GetUsingnightvision() bool;
func (_client) IsNightvisionInactive() bool;
func (_client) IsNightvisionActive() bool;

func (_client) GetUsingseethrough() bool;
func (_client) IsSeethroughActive() bool;

/**
 * Gets current UTC time
 */
func (_client) GetUtcTime(): [number, number, number, number, number, number];
/**
 * Gets current UTC time
 */
func (_client) GetLocalTime(): [number, number, number, number, number, number];
/**
 * Gets current UTC time
 */
func (_client) GetUtcTime(): [number, number, number, number, number, number];

func (_client) GetVariantComponent(componentHash interface{}, variantComponentIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetVariantProp(componentHash interface{}, variantPropIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}
func (_client) N_0xd81b7f27bc773e66(componentHash interface{}, variantPropIndex float64) (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * static - max acceleration
 */
func (_client) GetVehicleAcceleration(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleAlarmTimeLeft(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns attached vehicle (Vehicle in parameter must be cargobob)
 */
func (_client) GetVehicleAttachedToCargobob(cargobob float64) float64 {
	return 0.0
}

/**
 * Seems related to vehicle health, like the one in IV.
 * Max 1000, min 0.
 * Vehicle does not necessarily explode or become undrivable at 0.
 */
func (_client) GetVehicleBodyHealth(vehicle float64) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 2: float maxEngineHealth
 * NativeDB Added Parameter 3: float maxPetrolTankHealth
 * NativeDB Added Parameter 4: float maxBodyHealth
 * NativeDB Added Parameter 5: float maxMainRotorHealth
 * NativeDB Added Parameter 6: float maxTailRotorHealth
 * NativeDB Added Parameter 7: float maxUnkHealth
 */
func (_client) GetVehicleBodyHealth_2(vehicle float64) float64 {
	return 0.0
}

/**
 * Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).
 * Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
 * @param aircraft The vehicle to get the amount of bombs from.
 * @return An int indicating the amount of bombs remaining on that plane.
 */
func (_client) GetVehicleBombCount(aircraft float64) float64 {
	return 0.0
}
/**
 * Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).
 * Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
 * @param aircraft The vehicle to get the amount of bombs from.
 * @return An int indicating the amount of bombs remaining on that plane.
 */
func (_client) N_0xea12bd130d7569a1(aircraft float64) float64 {
	return 0.0
}
/**
 * Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).
 * Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
 * @param aircraft The vehicle to get the amount of bombs from.
 * @return An int indicating the amount of bombs remaining on that plane.
 */
func (_client) GetAircraftBombCount(aircraft float64) float64 {
	return 0.0
}

func (_client) GetVehicleCanActivateParachute(vehicle float64) bool;
func (_client) CanVehicleParachuteBeActivated(vehicle float64) bool;

/**
 * iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);
 * if (iVar3 == joaat("weapon_stickybomb"))
 * {
 * func_171(726);
 * iLocal_260 = 1;
 * }
 */
func (_client) GetVehicleCauseOfDestruction(vehicle float64) float64 {
	return 0.0
}

/**
 * A getter for [SET_VEHICLE_CHEAT_POWER_INCREASE](#\_0xB59E4BD37AE292DB).
 * @param vehicle The target vehicle.
 * @return Returns vehicle's cheat power increase modifier value.
 */
func (_client) GetVehicleCheatPowerIncrease(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns an int
 * Vehicle Classes:
 * 0: Compacts
 * 1: Sedans
 * 2: SUVs
 * 3: Coupes
 * 4: Muscle
 * 5: Sports Classics
 * 6: Sports
 * 7: Super
 * 8: Motorcycles
 * 9: Off-road
 * 10: Industrial
 * 11: Utility
 * 12: Vans
 * 13: Cycles
 * 14: Boats
 * 15: Helicopters
 * 16: Planes
 * 17: Service
 * 18: Emergency
 * 19: Military
 * 20: Commercial
 * 21: Trains
 * char buffer[128];
 * std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));
 * char* className = UI::_GET_LABEL_TEXT(buffer);
 */
func (_client) GetVehicleClass(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleClassEstimatedMaxSpeed(vehicleClass float64) float64 {
	return 0.0
}
func (_client) N_0x00c09f246abedd82(vehicleClass float64) float64 {
	return 0.0
}
func (_client) GetVehicleClassMaxSpeed(vehicleClass float64) float64 {
	return 0.0
}

/**
 * For a full enum, see here : pastebin.com/i2GGAjY0
 * char buffer[128];
 * std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
 * const char* className = HUD::_GET_LABEL_TEXT(buffer);
 */
func (_client) GetVehicleClassFromName(modelHash interface{}) float64 {
	return 0.0
}

func (_client) GetVehicleClassMaxAcceleration(vehicleClass float64) float64 {
	return 0.0
}

func (_client) GetVehicleClassMaxAgility(vehicleClass float64) float64 {
	return 0.0
}

func (_client) GetVehicleClassMaxBraking(vehicleClass float64) float64 {
	return 0.0
}

func (_client) GetVehicleClassMaxTraction(vehicleClass float64) float64 {
	return 0.0
}

func (_client) GetVehicleClutch(vehicle float64) float64 {
	return 0.0
}

/**
 * See [`SET_VEHICLE_CUSTOM_PRIMARY_COLOUR`](#\_0x7141766F91D15BEA) and [`SET_VEHICLE_CUSTOM_SECONDARY_COLOUR`](#\_0x36CED73BFED89754).
 * @param vehicle The target vehicle
 */
func (_client) GetVehicleColor(vehicle float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetVehicleColourCombination(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleColours(vehicle float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
 * Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
 * @param aircraft The vehicle to get the amount of countermeasures from.
 * @return An int indicating the amount of countermeasures remaining on that plane.
 */
func (_client) GetVehicleCountermeasureCount(aircraft float64) float64 {
	return 0.0
}
/**
 * Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
 * Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
 * @param aircraft The vehicle to get the amount of countermeasures from.
 * @return An int indicating the amount of countermeasures remaining on that plane.
 */
func (_client) N_0xf846aa63df56b804(aircraft float64) float64 {
	return 0.0
}
/**
 * Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
 * Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
 * @param aircraft The vehicle to get the amount of countermeasures from.
 * @return An int indicating the amount of countermeasures remaining on that plane.
 */
func (_client) GetAircraftCountermeasureCount(aircraft float64) float64 {
	return 0.0
}

func (_client) GetVehicleCrewEmblemRequestState(vehicle float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0xfe26117a5841b2ff(vehicle float64, p1 float64) float64 {
	return 0.0
}

func (_client) GetVehicleCurrentGear(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleCurrentRpm(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
 * GET_VEHICLE_*
 */
func (_client) GetVehicleCurrentSlipstreamDraft(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
 * GET_VEHICLE_*
 */
func (_client) N_0x36492c2f0d134c56(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleCustomPrimaryColour(vehicle float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetVehicleCustomSecondaryColour(vehicle float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetVehicleDashboardColor(vehicle float64, color float64) float64 {
	return 0.0
}
func (_client) GetVehicleDashboardColour(vehicle float64, color float64) float64 {
	return 0.0
}

func (_client) GetVehicleDashboardSpeed(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns hash of default vehicle horn
 * Hash is stored in audVehicleAudioEntity
 */
func (_client) GetVehicleDefaultHorn(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleDefaultHornIgnoreMods(vehicle float64) float64 {
	return 0.0
}
func (_client) N_0xacb5dcca1ec76840(vehicle float64) float64 {
	return 0.0
}
func (_client) GetVehicleHornHash(vehicle float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1365
 */
func (_client) GetVehicleDefaultHornVariation(vehicle float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0xd53f3a29bce2580e(vehicle float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0x22fecb546c276a30(vehicle float64) float64 {
	return 0.0
}

/**
 * The only example I can find of this function in the scripts, is this:
 * struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);
 * -----------------------------------------------------------------------------------------------------------------------------------------
 * PC scripts:
 * v_5 -- [[{3}]]  = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);
 */
func (_client) GetVehicleDeformationAtPos(vehicle float64, offsetX float64, offsetY float64, offsetZ float64)  interface{} { return nil }

/**
 * A getter for [SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x245A6883D966D537).
 * @return Returns vehicle density multiplier value.
 */
func (_client) GetVehicleDensityMultiplier() float64 {
	return 0.0
}

/**
 * A getter for [`SET_VEHICLE_DIRT_LEVEL`](#\_0x79D3B596FE44EE8B).
 * @param vehicle The vehicle to check.
 * @return A number between 0.0 and 15.0 representing the vehicles dirt level.
 */
func (_client) GetVehicleDirtLevel(vehicle float64) float64 {
	return 0.0
}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) GetVehicleDoorAngleRatio(vehicle float64, doorIndex float64) float64 {
	return 0.0
}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Returns vehicle door destroy type previously set with \_SET_VEHICLE_DOOR_DESTROY_TYPE
 */
func (_client) GetVehicleDoorDestroyType(vehicle float64, doorIndex float64) float64 {
	return 0.0
}
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Returns vehicle door destroy type previously set with \_SET_VEHICLE_DOOR_DESTROY_TYPE
 */
func (_client) N_0xca4ac3eaae46ec7b(vehicle float64, doorIndex float64) float64 {
	return 0.0
}

/**
 * enum VehicleLockStatus = {
 * None = 0,
 * Unlocked = 1,
 * Locked = 2,
 * LockedForPlayer = 3,
 * StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
 * CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
 * CanBeBrokenIntoPersist = 8, -- Can be broken into persist
 * CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
 * }
 */
func (_client) GetVehicleDoorLockStatus(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleDoorsLockedForPlayer(vehicle float64, player float64) bool;

/**
 * Gets a vehicle's multiplier used with a wheel's GET_VEHICLE_WHEEL_STEERING_ANGLE to determine the angle the wheel is rendered.
 */
func (_client) GetVehicleDrawnWheelAngleMult(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
 * Minimum: -4000
 * Maximum: 1000
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 */
func (_client) GetVehicleEngineHealth(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleEngineTemperature(vehicle float64) float64 {
	return 0.0
}

/**
 * formerly known as _GET_VEHICLE_PAINT_FADE
 * The result is a value from 0-1, where 0 is fresh paint.
 */
func (_client) GetVehicleEnveffScale(vehicle float64) float64 {
	return 0.0
}
/**
 * formerly known as _GET_VEHICLE_PAINT_FADE
 * The result is a value from 0-1, where 0 is fresh paint.
 */
func (_client) GetVehiclePaintFade(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleEstimatedMaxSpeed(vehicle float64) float64 {
	return 0.0
}
func (_client) N_0x53af99baa671ca47(vehicle float64) float64 {
	return 0.0
}
func (_client) GetVehicleMaxSpeed(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleExtraColours(vehicle float64) (float64, float64) { return 0.0, 0.0 };

func (_client) GetVehicleFlightNozzlePosition(aircraft float64) float64 {
	return 0.0
}
func (_client) N_0xda62027c8bdb326e(aircraft float64) float64 {
	return 0.0
}
func (_client) GetPlaneHoverModePercentage(aircraft float64) float64 {
	return 0.0
}
func (_client) GetVehicleHoverModePercentage(aircraft float64) float64 {
	return 0.0
}
func (_client) GetPlaneVtolDirection(aircraft float64) float64 {
	return 0.0
}

func (_client) GetVehicleFuelLevel(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleGravityAmount(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleHandbrake(vehicle float64) bool;

/**
 * Returns the effective handling data of a vehicle as a floating-point value.
 * Example: `local fSteeringLock = GetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock')`
 * @param vehicle The vehicle to obtain data for.
 * @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to get. These match the keys in `handling.meta`.
 * @return A floating-point value.
 */
func (_client) GetVehicleHandlingFloat(vehicle float64, class_ string, fieldName string) float64 {
	return 0.0
}

/**
 * Returns the effective handling data of a vehicle as an integer value.
 * Example: `local modelFlags = GetVehicleHandlingInt(vehicle, 'CHandlingData', 'strModelFlags')`
 * @param vehicle The vehicle to obtain data for.
 * @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to get. These match the keys in `handling.meta`.
 * @return An integer.
 */
func (_client) GetVehicleHandlingInt(vehicle float64, class_ string, fieldName string) float64 {
	return 0.0
}

/**
 * Returns the effective handling data of a vehicle as a vector value.
 * Example: `local inertiaMultiplier = GetVehicleHandlingVector(vehicle, 'CHandlingData', 'vecInertiaMultiplier')`
 * @param vehicle The vehicle to obtain data for.
 * @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to get. These match the keys in `handling.meta`.
 * @return An integer.
 */
func (_client) GetVehicleHandlingVector(vehicle float64, class_ string, fieldName string)  interface{} { return nil }

func (_client) GetVehicleHasKers(vehicle float64) bool;
func (_client) N_0x50634e348c8d44ef(vehicle float64) bool;
func (_client) HasVehicleKersBoost(vehicle float64) bool;

func (_client) GetVehicleHasParachute(vehicle float64) bool;
func (_client) HasVehicleParachute(vehicle float64) bool;
func (_client) DoesVehicleHaveParachute(vehicle float64) bool;

func (_client) GetVehicleHighGear(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns a value depending on the lock-on state of vehicle weapons.
 * 0: not locked on
 * 1: locking on
 * 2: locked on
 */
func (_client) GetVehicleHomingLockonState(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns a value depending on the lock-on state of vehicle weapons.
 * 0: not locked on
 * 1: locking on
 * 2: locked on
 */
func (_client) N_0xe6b0e8cfc3633bf0(vehicle float64) float64 {
	return 0.0
}

/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 */
func (_client) GetVehicleIndexFromEntityIndex(entity float64) float64 {
	return 0.0
}

/**
 * Gets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both
 * @return An integer.
 */
func (_client) GetVehicleIndicatorLights(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleInteriorColor(vehicle float64, color float64) float64 {
	return 0.0
}
func (_client) GetVehicleInteriorColour(vehicle float64, color float64) float64 {
	return 0.0
}

func (_client) GetVehicleLayoutHash(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleLightMultiplier(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleLightsState(vehicle float64): [boolean, any /* actually bool */, any /* actually bool */];

/**
 * -1 = no livery
 */
func (_client) GetVehicleLivery(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns -1 if the vehicle has no livery
 */
func (_client) GetVehicleLiveryCount(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleLockOnTarget(vehicle float64, entity float64)  (bool, float64){
	return false,0.0
}
func (_client) GetVehicleOwner(vehicle float64, entity float64)  (bool, float64){
	return false,0.0
}

func (_client) GetVehicleMaxBraking(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleMaxNumberOfPassengers(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleMaxTraction(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns -1 if the vehicle mod is stock
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) GetVehicleMod(vehicle float64, modType float64) float64 {
	return 0.0
}

func (_client) GetVehicleModColor_1(vehicle float64) (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * returns a string which is the codename of the vehicle's currently selected primary color
 * p1 is always 0
 */
func (_client) GetVehicleModColor_1Name(vehicle float64, p1 bool) string;
/**
 * returns a string which is the codename of the vehicle's currently selected primary color
 * p1 is always 0
 */
func (_client) N_0xb45085b721efd38c(vehicle float64, p1 bool) string;

func (_client) GetVehicleModColor_2(vehicle float64) (float64, float64) { return 0.0, 0.0 };

/**
 * returns a string which is the codename of the vehicle's currently selected secondary color
 */
func (_client) GetVehicleModColor_2Name(vehicle float64) string;
/**
 * returns a string which is the codename of the vehicle's currently selected secondary color
 */
func (_client) N_0x4967a516ed23a5a1(vehicle float64) string;

/**
 * Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) GetVehicleModIdentifierHash(vehicle float64, modType float64, modIndex float64) float64 {
	return 0.0
}
/**
 * Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) N_0x4593cf82aa179706(vehicle float64, modType float64, modIndex float64) float64 {
	return 0.0
}
/**
 * Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) GetVehicleModData(vehicle float64, modType float64, modIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleModKit(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleModKitType(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleModModifierValue(vehicle float64, modType float64, modIndex float64) float64 {
	return 0.0
}

/**
 * Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
 * @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 */
func (_client) GetVehicleModVariation(vehicle float64, modType float64) bool;

/**
 * Returns the acceleration of the specified model.
 */
func (_client) GetVehicleModelAcceleration(modelHash interface{}) float64 {
	return 0.0
}

/**
 * GET_VEHICLE_MODEL_*
 * 9.8 * thrust if air vehicle, else 0.38 + drive force?
 */
func (_client) GetVehicleModelEstimatedAgility(modelHash interface{}) float64 {
	return 0.0
}
/**
 * GET_VEHICLE_MODEL_*
 * 9.8 * thrust if air vehicle, else 0.38 + drive force?
 */
func (_client) N_0x53409b5163d5b846(modelHash interface{}) float64 {
	return 0.0
}
/**
 * GET_VEHICLE_MODEL_*
 * 9.8 * thrust if air vehicle, else 0.38 + drive force?
 */
func (_client) GetVehicleModelDownForce(modelHash interface{}) float64 {
	return 0.0
}

/**
 * Returns max speed (without mods) of the specified vehicle model in m/s.
 */
func (_client) GetVehicleModelEstimatedMaxSpeed(modelHash interface{}) float64 {
	return 0.0
}
/**
 * Returns max speed (without mods) of the specified vehicle model in m/s.
 */
func (_client) GetVehicleModelMaxSpeed(modelHash interface{}) float64 {
	return 0.0
}

/**
 * Returns max braking of the specified vehicle model.
 */
func (_client) GetVehicleModelMaxBraking(modelHash interface{}) float64 {
	return 0.0
}

func (_client) GetVehicleModelMaxBrakingMaxMods(modelHash interface{}) float64 {
	return 0.0
}
func (_client) N_0xbfba3ba79cff7ebf(modelHash interface{}) float64 {
	return 0.0
}
func (_client) GetVehicleModelHandBrake(modelHash interface{}) float64 {
	return 0.0
}

/**
 * GET_VEHICLE_MODEL_*
 * Function pertains only to aviation vehicles.
 */
func (_client) GetVehicleModelMaxKnots(modelHash interface{}) float64 {
	return 0.0
}
/**
 * GET_VEHICLE_MODEL_*
 * Function pertains only to aviation vehicles.
 */
func (_client) N_0xc6ad107ddc9054cc(modelHash interface{}) float64 {
	return 0.0
}

/**
 * Returns max traction of the specified vehicle model.
 */
func (_client) GetVehicleModelMaxTraction(modelHash interface{}) float64 {
	return 0.0
}

/**
 * Returns `nMonetaryValue` from handling.meta for specific model.
 */
func (_client) GetVehicleModelMonetaryValue(vehicleModel interface{}) float64 {
	return 0.0
}
/**
 * Returns `nMonetaryValue` from handling.meta for specific model.
 */
func (_client) N_0x5873c14a52d74236(vehicleModel interface{}) float64 {
	return 0.0
}

/**
 * GET_VEHICLE_MODEL_*
 * called if the vehicle is a boat -- returns vecMoveResistanceX?
 */
func (_client) GetVehicleModelMoveResistance(modelHash interface{}) float64 {
	return 0.0
}
/**
 * GET_VEHICLE_MODEL_*
 * called if the vehicle is a boat -- returns vecMoveResistanceX?
 */
func (_client) N_0x5aa3f878a178c4fc(modelHash interface{}) float64 {
	return 0.0
}

/**
 * Returns max number of passengers (including the driver) for the specified vehicle model.
 */
func (_client) GetVehicleModelNumberOfSeats(modelHash interface{}) float64 {
	return 0.0
}
/**
 * Returns max number of passengers (including the driver) for the specified vehicle model.
 */
func (_client) GetVehicleModelMaxNumberOfPassengers(modelHash interface{}) float64 {
	return 0.0
}

/**
 * Gets the color of the neon lights of the specified vehicle.
 * See [`_SET_VEHICLE_NEON_LIGHTS_COLOUR`](#\_0x8E0A582209A62695) for more information
 */
func (_client) GetVehicleNeonLightsColour(vehicle float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetVehicleNextGear(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns false for nodes that aren't used for GPS routes.
 * Example:
 * Nodes in Fort Zancudo and LSIA are false
 */
func (_client) GetVehicleNodeIsGpsAllowed(nodeID float64) bool;
/**
 * Returns false for nodes that aren't used for GPS routes.
 * Example:
 * Nodes in Fort Zancudo and LSIA are false
 */
func (_client) N_0xa2ae5c478b96e3b6(nodeID float64) bool;
/**
 * Returns false for nodes that aren't used for GPS routes.
 * Example:
 * Nodes in Fort Zancudo and LSIA are false
 */
func (_client) GetSupportsGpsRouteFlag(nodeID float64) bool;

/**
 * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
 * Normal roads where plenty of Peds spawn will return false
 */
func (_client) GetVehicleNodeIsSwitchedOff(nodeID float64) bool;
/**
 * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
 * Normal roads where plenty of Peds spawn will return false
 */
func (_client) N_0x4f5070aa58f69279(nodeID float64) bool;
/**
 * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
 * Normal roads where plenty of Peds spawn will return false
 */
func (_client) GetIsSlowRoadFlag(nodeID float64) bool;

/**
 * Calling this with an invalid node id, will crash the game.
 * Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
 * Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
 */
func (_client) GetVehicleNodePosition(nodeId float64)  interface{} { return nil }

/**
 * Gets the density and flags of the closest node to the specified position.
 * Density is a value between 0 and 15, indicating how busy the road is.
 * Flags is a bit field.
 */
func (_client) GetVehicleNodeProperties(x float64, y float64, z float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) GetVehicleNumberOfBrokenBones(vehicle float64) float64 {
	return 0.0
}
func (_client) N_0x2c8cbfe1ea5fc631(vehicle float64) float64 {
	return 0.0
}

/**
 * Also includes some "turnOffBones" when vehicle mods are installed.
 */
func (_client) GetVehicleNumberOfBrokenOffBones(vehicle float64) float64 {
	return 0.0
}
/**
 * Also includes some "turnOffBones" when vehicle mods are installed.
 */
func (_client) N_0x42a4beb35d372407(vehicle float64) float64 {
	return 0.0
}

/**
 * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
 */
func (_client) GetVehicleNumberOfPassengers(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleNumberOfWheels(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the license plate text from a vehicle.  8 chars maximum.
 */
func (_client) GetVehicleNumberPlateText(vehicle float64) string;

/**
 * Returns the PlateType of a vehicle
 * Blue_on_White_1 = 3,
 * Blue_on_White_2 = 0,
 * Blue_on_White_3 = 4,
 * Yellow_on_Blue = 2,
 * Yellow_on_Black = 1,
 * North_Yankton = 5,
 */
func (_client) GetVehicleNumberPlateTextIndex(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleOilLevel(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehiclePedIsEntering(ped float64) float64 {
	return 0.0
}
func (_client) SetExclusivePhoneRelationships(ped float64) float64 {
	return 0.0
}

/**
 * Gets the vehicle the specified Ped is in. Returns 0 if the ped is/was not in a vehicle.
 * If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
 * @param ped The target ped
 * @param lastVehicle False = CurrentVehicle, True = LastVehicle
 * @return The vehicle id. Returns 0 if the ped is/was not in a vehicle.
 */
func (_client) GetVehiclePedIsIn(ped float64, lastVehicle bool) float64 {
	return 0.0
}

func (_client) GetVehiclePedIsTryingToEnter(ped float64) float64 {
	return 0.0
}

/**
 * Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
 */
func (_client) GetVehiclePedIsUsing(ped float64) float64 {
	return 0.0
}

/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 */
func (_client) GetVehiclePetrolTankHealth(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehiclePlateType(vehicle float64) float64 {
	return 0.0
}

/**
 * See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
 */
func (_client) GetVehicleRecordingId(recording float64, script string) float64 {
	return 0.0
}

/**
 * Returns index of the current vehicle's rooftop livery.
 * A getter for [\_SET_VEHICLE_ROOF_LIVERY](#\_0xA6D3A8750DC73270).
 * @param vehicle The vehicle handle.
 * @return An index of the current vehicle's rooftop livery.
 */
func (_client) GetVehicleRoofLivery(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns index of the current vehicle's rooftop livery.
 * A getter for [\_SET_VEHICLE_ROOF_LIVERY](#\_0xA6D3A8750DC73270).
 * @param vehicle The vehicle handle.
 * @return An index of the current vehicle's rooftop livery.
 */
func (_client) N_0x60190048c0764a26(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
 * @param vehicle The vehicle handle.
 * @return A number of available rooftop liveries for vehicle.
 */
func (_client) GetVehicleRoofLiveryCount(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
 * @param vehicle The vehicle handle.
 * @return A number of available rooftop liveries for vehicle.
 */
func (_client) N_0x5ecb40269053c0d4(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleSteeringAngle(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleSteeringScale(vehicle float64) float64 {
	return 0.0
}

/**
 * Outputs 2 Vector3's.
 * Scripts check if out2.x - out1.x > something.x
 * Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
 */
func (_client) GetVehicleSuspensionBounds(vehicle float64): [number[], number[]];
/**
 * Outputs 2 Vector3's.
 * Scripts check if out2.x - out1.x > something.x
 * Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
 */
func (_client) N_0xdf7e3eeb29642c38(vehicle float64): [number[], number[]];

/**
 * Gets the height of the vehicle's suspension.
 * The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
 * 0.000 is the stock suspension.
 * 0.008 is Ultra Suspension.
 */
func (_client) GetVehicleSuspensionHeight(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleThrottleOffset(vehicle float64) float64 {
	return 0.0
}
func (_client) GetVehicleCurrentAcceleration(vehicle float64) float64 {
	return 0.0
}

/**
 * A getter for [MODIFY_VEHICLE_TOP_SPEED](#\_0x93A3996368C94158). Returns -1.0 if a modifier is not set.
 * @param vehicle The target vehicle.
 * @return Returns vehicle's modified top speed.
 */
func (_client) GetVehicleTopSpeedModifier(vehicle float64) float64 {
	return 0.0
}

/**
 * Gets the trailer of a vehicle and puts it into the trailer parameter.
 */
func (_client) GetVehicleTrailerVehicle(vehicle float64, trailer float64)  (bool, float64){
	return false,0.0
}

func (_client) GetVehicleTurboPressure(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleTyreSmokeColor(vehicle float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetVehicleTyresCanBurst(vehicle float64) bool;

func (_client) GetVehicleWaypointProgress(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleWaypointTargetPoint(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleWeaponCapacity(vehicle float64, weaponIndex float64) float64 {
	return 0.0
}
func (_client) N_0x8181ce2f25cb9bb7(vehicle float64, weaponIndex float64) float64 {
	return 0.0
}

/**
 * Gets brake pressure of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * Normal values around 1.0f when braking.
 */
func (_client) GetVehicleWheelBrakePressure(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Gets the flags of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * @return An unsigned int containing bit flags.
 */
func (_client) GetVehicleWheelFlags(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleWheelHealth(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Gets whether the wheel is powered.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * This is a shortcut to a flag in GET_VEHICLE_WHEEL_FLAGS.
 */
func (_client) GetVehicleWheelIsPowered(vehicle float64, wheelIndex float64) bool;

/**
 * Gets power being sent to a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 */
func (_client) GetVehicleWheelPower(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleWheelRimColliderSize(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Gets the rotation speed of a wheel.
 * This is used internally to calcuate GET_VEHICLE_WHEEL_SPEED.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * @return The angular velocity of the wheel.
 */
func (_client) GetVehicleWheelRotationSpeed(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Returns vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
 * Only works on non-default wheels (returns 0 in case of default wheels).
 * @param vehicle The vehicle to obtain data for.
 * @return Float representing size of the wheel (usually between 0.5 and 1.5)
 */
func (_client) GetVehicleWheelSize(vehicle float64) float64 {
	return 0.0
}

/**
 * Gets speed of a wheel at the tyre.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * @return An integer.
 */
func (_client) GetVehicleWheelSpeed(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Gets steering angle of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * @return The steering angle of the wheel, with 0 being straight.
 */
func (_client) GetVehicleWheelSteeringAngle(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleWheelSurfaceMaterial(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Gets the current suspension compression of a wheel.
 * Returns a positive value. 0 means the suspension is fully extended, the wheel is off the ground.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * @return The current compression of the wheel's suspension.
 */
func (_client) GetVehicleWheelSuspensionCompression(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleWheelTireColliderSize(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleWheelTireColliderWidth(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * Gets the traction vector length of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 */
func (_client) GetVehicleWheelTractionVectorLength(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * cpp
 * enum eVehicleWheelType
 * {
 * VWT_SPORT = 0,
 * VWT_MUSCLE = 1,
 * VWT_LOWRIDER = 2,
 * VWT_SUV = 3,
 * VWT_OFFROAD = 4,
 * VWT_TUNER = 5,
 * VWT_BIKE = 6,
 * VWT_HIEND = 7,
 * VWT_SUPERMOD1 = 8, // Benny's Original
 * VWT_SUPERMOD2 = 9, // Benny's Bespoke
 * VWT_SUPERMOD3 = 10, // Open Wheel
 * VWT_SUPERMOD4 = 11, // Street
 * VWT_SUPERMOD5 = 12, // Track
 * };
 * @return Returns an eVehicleWheelType integer value.
 */
func (_client) GetVehicleWheelType(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
 * Only works on non-default wheels (returns 0 in case of default wheels).
 * @param vehicle The vehicle to obtain data for.
 * @return Float representing width of the wheel (usually between 0.1 and 1.5)
 */
func (_client) GetVehicleWheelWidth(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the offset of the specified wheel relative to the wheel's axle center.
 */
func (_client) GetVehicleWheelXOffset(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

func (_client) GetVehicleWheelYRotation(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}
func (_client) GetVehicleWheelXrot(vehicle float64, wheelIndex float64) float64 {
	return 0.0
}

/**
 * List of known states:
 * ```
 * 1: Not wheeling.
 * 65: Vehicle is ready to do wheelie (burnouting).
 * 129: Vehicle is doing wheelie.
 * ```
 * @param vehicle Vehicle
 * @return Vehicle's current wheelie state.
 */
func (_client) GetVehicleWheelieState(vehicle float64) float64 {
	return 0.0
}

func (_client) GetVehicleWindowTint(vehicle float64) float64 {
	return 0.0
}

/**
 * Returns the headlight color index from the vehicle. Value between 0, 12.
 * Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
 * Must enable xenon headlights before it'll take affect.
 * List of colors and ids:
 * ```
 * enum headlightColors {
 * Default = -1,
 * White = 0,
 * Blue = 1,
 * Electric_Blue = 2,
 * Mint_Green = 3,
 * Lime_Green = 4,
 * Yellow = 5,
 * Golden_Shower = 6,
 * Orange = 7,
 * Red = 8,
 * Pony_Pink = 9,
 * Hot_Pink = 10,
 * Purple = 11,
 * Blacklight = 12
 * }
 * ```
 * @param vehicle The vehicle to get the headlight color from.
 * @return Returns an int, value between 0-12 or 255 if no color is set.
 */
func (_client) GetVehicleXenonLightsColor(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns the headlight color index from the vehicle. Value between 0, 12.
 * Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
 * Must enable xenon headlights before it'll take affect.
 * List of colors and ids:
 * ```
 * enum headlightColors {
 * Default = -1,
 * White = 0,
 * Blue = 1,
 * Electric_Blue = 2,
 * Mint_Green = 3,
 * Lime_Green = 4,
 * Yellow = 5,
 * Golden_Shower = 6,
 * Orange = 7,
 * Red = 8,
 * Pony_Pink = 9,
 * Hot_Pink = 10,
 * Purple = 11,
 * Blacklight = 12
 * }
 * ```
 * @param vehicle The vehicle to get the headlight color from.
 * @return Returns an int, value between 0-12 or 255 if no color is set.
 */
func (_client) N_0x3dff319a831e0cdb(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns the headlight color index from the vehicle. Value between 0, 12.
 * Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
 * Must enable xenon headlights before it'll take affect.
 * List of colors and ids:
 * ```
 * enum headlightColors {
 * Default = -1,
 * White = 0,
 * Blue = 1,
 * Electric_Blue = 2,
 * Mint_Green = 3,
 * Lime_Green = 4,
 * Yellow = 5,
 * Golden_Shower = 6,
 * Orange = 7,
 * Red = 8,
 * Pony_Pink = 9,
 * Hot_Pink = 10,
 * Purple = 11,
 * Blacklight = 12
 * }
 * ```
 * @param vehicle The vehicle to get the headlight color from.
 * @return Returns an int, value between 0-12 or 255 if no color is set.
 */
func (_client) GetVehicleHeadlightsColour(vehicle float64) float64 {
	return 0.0
}
/**
 * Returns the headlight color index from the vehicle. Value between 0, 12.
 * Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
 * Must enable xenon headlights before it'll take affect.
 * List of colors and ids:
 * ```
 * enum headlightColors {
 * Default = -1,
 * White = 0,
 * Blue = 1,
 * Electric_Blue = 2,
 * Mint_Green = 3,
 * Lime_Green = 4,
 * Yellow = 5,
 * Golden_Shower = 6,
 * Orange = 7,
 * Red = 8,
 * Pony_Pink = 9,
 * Hot_Pink = 10,
 * Purple = 11,
 * Blacklight = 12
 * }
 * ```
 * @param vehicle The vehicle to get the headlight color from.
 * @return Returns an int, value between 0-12 or 255 if no color is set.
 */
func (_client) GetVehicleXenonLightsColour(vehicle float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2372
 */
func (_client) GetWantedLevelParoleDuration() float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xa72200f51875fea4() float64 {
	return 0.0
}

/**
 * Remnant from GTA IV. Does nothing in GTA V.
 */
func (_client) GetWantedLevelRadius(player float64) float64 {
	return 0.0
}

/**
 * Drft
 */
func (_client) GetWantedLevelThreshold(wantedLevel float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) GetWarningMessageTitleHash() float64 {
	return 0.0
}

/**
 * This function set height to the value of z-axis of the water surface.
 * This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)
 * note: seems to return true when you are in water
 */
func (_client) GetWaterHeight(x float64, y float64, z float64, height float64)  (bool, float64){
	return false,0.0
}

func (_client) GetWaterHeightNoWaves(x float64, y float64, z float64, height float64)  (bool, float64){
	return false,0.0
}

func (_client) GetWaypointBlipEnumId() float64 {
	return 0.0
}
func (_client) GetBlipInfoIdIterator() float64 {
	return 0.0
}

func (_client) GetWaypointDistanceAlongRoute(p0 string, p1 float64) float64 {
	return 0.0
}

/**
 * // Returns the size of the default weapon component clip.
 * Use it like this:
 * char cClipSize[32];
 * Hash cur;
 * if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))
 * {
 * if (WEAPON::IS_WEAPON_VALID(cur))
 * {
 * int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);
 * sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
 * vDrawString(cClipSize, 0.5f, 0.5f);
 * }
 * }
 */
func (_client) GetWeaponClipSize(weaponHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeaponComponentHudStats(componentHash interface{}, outData float64)  (bool, float64){
	return false,0.0
}

func (_client) GetWeaponComponentTypeModel(componentHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeaponComponentVariantExtraComponentCount(componentHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x6558ac7c17bfef58(componentHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeaponComponentVariantExtraComponentModel(componentHash interface{}, extraComponentIndex float64) float64 {
	return 0.0
}
func (_client) N_0x4d1cb8dc40208a17(componentHash interface{}, extraComponentIndex float64) float64 {
	return 0.0
}

/**
 * This native does not return damages of weapons from the melee and explosive group.
 * @param componentHash 0 in the decompiled scripts.
 * @return Damages of the weapon.
 */
func (_client) GetWeaponDamage(weaponHash interface{}, componentHash interface{}) float64 {
	return 0.0
}
/**
 * This native does not return damages of weapons from the melee and explosive group.
 * @param componentHash 0 in the decompiled scripts.
 * @return Damages of the weapon.
 */
func (_client) N_0x3133b907d8b32053(weaponHash interface{}, componentHash interface{}) float64 {
	return 0.0
}
/**
 * This native does not return damages of weapons from the melee and explosive group.
 * @param componentHash 0 in the decompiled scripts.
 * @return Damages of the weapon.
 */
func (_client) GetWeaponDamage(weaponHash interface{}, componentHash interface{}) float64 {
	return 0.0
}

/**
 * A getter for [\_SET_WEAPON_DAMAGE_MODIFIER](#\_0x4757F00BC6323CFE).
 * @param weaponHash Weapon name hash.
 * @return A weapon damage modifier.
 */
func (_client) GetWeaponDamageModifier(weaponHash interface{}) float64 {
	return 0.0
}

/**
 * 0=unknown (or incorrect weaponHash)
 * 1= no damage (flare,snowball, petrolcan)
 * 2=melee
 * 3=bullet
 * 4=force ragdoll fall
 * 5=explosive (RPG, Railgun, grenade)
 * 6=fire(molotov)
 * 8=fall(WEAPON_HELI_CRASH)
 * 10=electric
 * 11=barbed wire
 * 12=extinguisher
 * 13=gas
 * 14=water cannon(WEAPON_HIT_BY_WATER_CANNON)
 */
func (_client) GetWeaponDamageType(weaponHash interface{}) float64 {
	return 0.0
}

/**
 * // members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure
 * struct WeaponHudStatsData
 * {
 * alignas(8) uint8_t hudDamage; // 0x0000
 * alignas(8) uint8_t hudSpeed; // 0x0008
 * alignas(8) uint8_t hudCapacity; // 0x0010
 * alignas(8) uint8_t hudAccuracy; // 0x0018
 * alignas(8) uint8_t hudRange; // 0x0020
 * };
 * Usage:
 * WeaponHudStatsData data;
 * if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))
 * {
 * // uint8_t damagePercentage = data.hudDamage etc...
 * }
 */
func (_client) GetWeaponHudStats(weaponHash interface{}, outData float64)  (bool, float64){
	return false,0.0
}

/**
 * Drops the current weapon and returns the object
 * Unknown behavior when unarmed.
 */
func (_client) GetWeaponObjectFromPed(ped float64, p1 bool) float64 {
	return 0.0
}

func (_client) GetWeaponObjectLiveryColor(weaponObject float64, camoComponentHash interface{}) float64 {
	return 0.0
}
func (_client) N_0xb3ea4feabf41464b(weaponObject float64, camoComponentHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeaponObjectTintIndex(weapon float64) float64 {
	return 0.0
}

func (_client) GetWeaponTimeBetweenShots(weaponHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x065d2aacad8cf7a4(weaponHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeaponTintCount(weaponHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeaponTypeFromPickupType(pickupHash interface{}) float64 {
	return 0.0
}
func (_client) N_0x08f96ca6c551ad51(pickupHash interface{}) float64 {
	return 0.0
}
func (_client) GetWeaponHashFromPickup(pickupHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeapontypeGroup(weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Returns the model of any weapon.
 * Can also take an ammo hash?
 * sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));
 */
func (_client) GetWeapontypeModel(weaponHash interface{}) float64 {
	return 0.0
}

func (_client) GetWeapontypeSlot(weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) GetWeatherTypeTransition() (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) GetWindDirection()  interface{} { return nil }

func (_client) GetWindSpeed() float64 {
	return 0.0
}

/**
 * Returns the coordinates of an entity-bone.
 */
func (_client) GetWorldPositionOfEntityBone(entity float64, boneIndex float64)  interface{} { return nil }

func (_client) GetZoneAtCoords(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * 'zoneName' corresponds to an entry in 'popzone.ipl'.
 * AIRP = Los Santos International Airport
 * ALAMO = Alamo Sea
 * ALTA = Alta
 * ARMYB = Fort Zancudo
 * BANHAMC = Banham Canyon Dr
 * BANNING = Banning
 * BEACH = Vespucci Beach
 * BHAMCA = Banham Canyon
 * BRADP = Braddock Pass
 * BRADT = Braddock Tunnel
 * BURTON = Burton
 * CALAFB = Calafia Bridge
 * CANNY = Raton Canyon
 * CCREAK = Cassidy Creek
 * CHAMH = Chamberlain Hills
 * CHIL = Vinewood Hills
 * CHU = Chumash
 * CMSW = Chiliad Mountain State Wilderness
 * CYPRE = Cypress Flats
 * DAVIS = Davis
 * DELBE = Del Perro Beach
 * DELPE = Del Perro
 * DELSOL = La Puerta
 * DESRT = Grand Senora Desert
 * DOWNT = Downtown
 * DTVINE = Downtown Vinewood
 * EAST_V = East Vinewood
 * EBURO = El Burro Heights
 * ELGORL = El Gordo Lighthouse
 * ELYSIAN = Elysian Island
 * GALFISH = Galilee
 * GOLF = GWC and Golfing Society
 * GRAPES = Grapeseed
 * GREATC = Great Chaparral
 * HARMO = Harmony
 * HAWICK = Hawick
 * HORS = Vinewood Racetrack
 * HUMLAB = Humane Labs and Research
 * JAIL = Bolingbroke Penitentiary
 * KOREAT = Little Seoul
 * LACT = Land Act Reservoir
 * LAGO = Lago Zancudo
 * LDAM = Land Act Dam
 * LEGSQU = Legion Square
 * LMESA = La Mesa
 * LOSPUER = La Puerta
 * MIRR = Mirror Park
 * MORN = Morningwood
 * MOVIE = Richards Majestic
 * MTCHIL = Mount Chiliad
 * MTGORDO = Mount Gordo
 * MTJOSE = Mount Josiah
 * MURRI = Murrieta Heights
 * NCHU = North Chumash
 * NOOSE = N.O.O.S.E
 * OCEANA = Pacific Ocean
 * PALCOV = Paleto Cove
 * PALETO = Paleto Bay
 * PALFOR = Paleto Forest
 * PALHIGH = Palomino Highlands
 * PALMPOW = Palmer-Taylor Power Station
 * PBLUFF = Pacific Bluffs
 * PBOX = Pillbox Hill
 * PROCOB = Procopio Beach
 * RANCHO = Rancho
 * RGLEN = Richman Glen
 * RICHM = Richman
 * ROCKF = Rockford Hills
 * RTRAK = Redwood Lights Track
 * SANAND = San Andreas
 * SANCHIA = San Chianski Mountain Range
 * SANDY = Sandy Shores
 * SKID = Mission Row
 * SLAB = Stab City
 * STAD = Maze Bank Arena
 * STRAW = Strawberry
 * TATAMO = Tataviam Mountains
 * TERMINA = Terminal
 * TEXTI = Textile City
 * TONGVAH = Tongva Hills
 * TONGVAV = Tongva Valley
 * VCANA = Vespucci Canals
 * VESP = Vespucci
 * VINE = Vinewood
 * WINDF = Ron Alternates Wind Farm
 * WVINE = West Vinewood
 * ZANCUDO = Zancudo River
 * ZP_ORT = Port of South Los Santos
 * ZQ_UAR = Davis Quartz
 */
func (_client) GetZoneFromNameId(zoneName string) float64 {
	return 0.0
}

func (_client) GetZonePopschedule(zoneId float64) float64 {
	return 0.0
}

/**
 * cellphone range 1- 5 used for signal bar in iFruit phone
 */
func (_client) GetZoneScumminess(zoneId float64) float64 {
	return 0.0
}

/**
 * Achievements from 0-57
 * more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
 */
func (_client) GiveAchievementToPlayer(achievement float64) bool;

/**
 * Gives a weapon to PED with a delay, example:
 * WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
 */
func (_client) GiveDelayedWeaponToPed(ped float64, weaponHash interface{}, ammoCount float64, bForceInHand bool) {}

func (_client) GiveLoadoutToPed(ped float64, loadoutHash interface{}) {}
func (_client) N_0x68f8be6af5cdf8a6(ped float64, loadoutHash interface{}) {}

/**
 * PoliceMotorcycleHelmet   1024
 * RegularMotorcycleHelmet   4096
 * FiremanHelmet 16384
 * PilotHeadset  32768
 * PilotHelmet   65536
 * --
 * p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
 */
func (_client) GivePedHelmet(ped float64, cannotRemove bool, helmetFlag float64, textureIndex float64) {}

/**
 * Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
 * If a message hasn't been created already, this function does nothing.
 * If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
 * The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
 * Call order:
 * SET_PED_TO_RAGDOLL
 * CREATE_NM_MESSAGE
 * GIVE_PED_NM_MESSAGE
 * Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
 * SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
 * CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 */
func (_client) GivePedNmMessage(ped float64) {}

/**
 * ```
 * p1 is either 1 or 2 in the PC scripts.
 * ```
 * This native is used to "give"/duplicate a player ped to a frontend menu as configured via the `ACTIVATE_FRONTEND_MENU` native, you first must utilize the `CLONE_PED` ( https://runtime.fivem.net/doc/natives/#\_0xEF29A16337FACADB ) to clone said ped.
 */
func (_client) GivePedToPauseMenu(ped float64, p1 float64) {}

func (_client) GivePlayerRagdollControl(player float64, toggle bool) {}

func (_client) GiveWeaponComponentToPed(ped float64, weaponHash interface{}, componentHash interface{}) {}

/**
 * addonHash:
 * (use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
 * ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
 */
func (_client) GiveWeaponComponentToWeaponObject(weaponObject float64, addonHash interface{}) {}

func (_client) GiveWeaponObjectToPed(weaponObject float64, ped float64) {}

func (_client) GiveWeaponToPed(ped float64, weaponHash interface{}, ammoCount float64, isHidden bool, bForceInHand bool) {}

func (_client) GolfTrailGetMaxHeight() float64 {
	return 0.0
}
func (_client) N_0xa4819f5e23e2ffad() float64 {
	return 0.0
}

func (_client) GolfTrailGetVisualControlPoint(p0 float64)  interface{} { return nil }
func (_client) N_0xa4664972a9b8f8ba(p0 float64)  interface{} { return nil }

func (_client) GolfTrailSetColour(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64) {}
func (_client) N_0x12995f2e53ffa601(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64) {}

func (_client) GolfTrailSetEnabled(toggle bool) {}
func (_client) N_0xa51c4b86b71652ae(toggle bool) {}

func (_client) GolfTrailSetFacing(p0 bool) {}
func (_client) N_0x06f761ea47c1d3ed(p0 bool) {}

/**
 * 12 matches across 4 scripts. All 4 scripts were job creators.
 * type ranged from 0 - 2.
 * p4 was always 0.2f. Likely scale.
 * assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
 * Tested but noticed nothing.
 */
func (_client) GolfTrailSetFixedControlPoint(_type float64, xPos float64, yPos float64, zPos float64, p4 float64, red float64, green float64, blue float64, alpha float64) {}
/**
 * 12 matches across 4 scripts. All 4 scripts were job creators.
 * type ranged from 0 - 2.
 * p4 was always 0.2f. Likely scale.
 * assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
 * Tested but noticed nothing.
 */
func (_client) N_0xb1bb03742917a5d6(_type float64, xPos float64, yPos float64, zPos float64, p4 float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * p8 seems to always be false.
 */
func (_client) GolfTrailSetPath(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 bool) {}
/**
 * p8 seems to always be false.
 */
func (_client) N_0x312342e1a4874f3f(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 bool) {}

func (_client) GolfTrailSetRadius(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0x2485d34e50a22e84(p0 float64, p1 float64, p2 float64) {}

/**
 * Only appeared in Golf & Golf_mp. Parameters were all ptrs
 */
func (_client) GolfTrailSetShaderParams(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
/**
 * Only appeared in Golf & Golf_mp. Parameters were all ptrs
 */
func (_client) N_0x9cfdd90b2b844bf7(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) GolfTrailSetTessellation(p0 float64, p1 float64) {}
func (_client) N_0xdbaa5ec848ba2d46(p0 float64, p1 float64) {}

func (_client) GrassLodResetScriptAreas() {}
func (_client) N_0x302c91ab2d477f7e() {}

/**
 * Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
 */
func (_client) GrassLodShrinkScriptAreas(x float64, y float64, z float64, radius float64, p4 float64, p5 float64, p6 float64) {}
/**
 * Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
 */
func (_client) N_0x6d955f6a9e0295b1(x float64, y float64, z float64, radius float64, p4 float64, p5 float64, p6 float64) {}

func (_client) HasAchievementBeenPassed(achievement float64) bool;

func (_client) HasActionModeAssetLoaded(asset string) bool;

func (_client) HasAdditionalTextLoaded(slot float64) bool;

func (_client) HasAnimDictLoaded(animDict string) bool;

/**
 * if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))
 */
func (_client) HasAnimEventFired(entity float64, actionHash interface{}) bool;

/**
 * Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.
 * Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
 */
func (_client) HasAnimSetLoaded(animSet string) bool;

/**
 * Hardcoded to always return true.
 */
func (_client) HasAsyncInstallFinished() bool;
/**
 * Hardcoded to always return true.
 */
func (_client) N_0x14832bf2aba53fc5() bool;

/**
 * p3 - possibly radius?
 */
func (_client) HasBulletImpactedInArea(x float64, y float64, z float64, p3 float64, p4 bool, p5 bool) bool;

func (_client) HasBulletImpactedInBox(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 bool) bool;

/**
 * This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
 * INT_SCORES_SCORTED was a hash collision
 */
func (_client) HasButtonCombinationJustBeenEntered(hash interface{}, amount float64) bool;
/**
 * This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
 * INT_SCORES_SCORTED was a hash collision
 */
func (_client) N_0x071e2a839de82d90(hash interface{}, amount float64) bool;

/**
 * Get inputted "Cheat code", for example:
 * while (TRUE)
 * {
 * if (MISC::_557E43C447E700A8(${fugitive}))
 * {
 * // Do something.
 * }
 * SYSTEM::WAIT(0);
 * }
 * Calling this will also set the last saved string hash to zero.
 */
func (_client) HasCheatStringJustBeenEntered(hash interface{}) bool;
/**
 * Get inputted "Cheat code", for example:
 * while (TRUE)
 * {
 * if (MISC::_557E43C447E700A8(${fugitive}))
 * {
 * // Do something.
 * }
 * SYSTEM::WAIT(0);
 * }
 * Calling this will also set the last saved string hash to zero.
 */
func (_client) N_0x557e43c447e700a8(hash interface{}) bool;

/**
 * Alias for HAS_ANIM_SET_LOADED.
 */
func (_client) HasClipSetLoaded(clipSet string) bool;

func (_client) HasClosestObjectOfTypeBeenBroken(p0 float64, p1 float64, p2 float64, p3 float64, modelHash interface{}, p5 float64) bool;

func (_client) HasClosestObjectOfTypeBeenCompletelyDestroyed(x float64, y float64, z float64, radius float64, modelHash interface{}, p5 bool) bool;
func (_client) N_0x46494a2475701343(x float64, y float64, z float64, radius float64, modelHash interface{}, p5 bool) bool;

/**
 * Sets the value of the specified variable to 0.
 * Always returns true.
 */
func (_client) HasCloudRequestsFinished(unused float64)  (bool,interface{}){
	return false,nil
}
/**
 * Sets the value of the specified variable to 0.
 * Always returns true.
 */
func (_client) Nullify(unused float64)  (bool,interface{}){
	return false,nil
}

func (_client) HasCollisionForModelLoaded(model interface{}) bool;

func (_client) HasCollisionLoadedAroundEntity(entity float64) bool;

/**
 * Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
 */
func (_client) HasCutFileLoaded(cutsceneName string) bool;
/**
 * Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
 */
func (_client) N_0xa1c996c2a744262e(cutsceneName string) bool;

func (_client) HasCutsceneCutThisFrame() bool;
func (_client) N_0x708bdd8cd795b043() bool;

func (_client) HasCutsceneFinished() bool;

func (_client) HasCutsceneLoaded() bool;

/**
 * HAS_*
 */
func (_client) HasDirectorModeBeenTriggered() bool;
/**
 * HAS_*
 */
func (_client) N_0xa277800a9eae340e() bool;

/**
 * ```
 * P3 is always 3 as far as i cant tell
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) HasEntityAnimFinished(entity float64, animDict string, animName string, p3 float64) bool;

func (_client) HasEntityBeenDamagedByAnyObject(entity float64) bool;

func (_client) HasEntityBeenDamagedByAnyPed(entity float64) bool;

func (_client) HasEntityBeenDamagedByAnyVehicle(entity float64) bool;

/**
 * Entity 1 = Victim
 * Entity 2 = Attacker
 * p2 seems to always be 1
 */
func (_client) HasEntityBeenDamagedByEntity(entity1 float64, entity2 float64, p2 bool) bool;

/**
 * It determines what weapons caused damage:
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 */
func (_client) HasEntityBeenDamagedByWeapon(entity float64, weaponHash interface{}, weaponType float64) bool;

/**
 * Checks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.
 * The direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false.
 * @param entity1 Entity to start from
 * @param entity2 Entity to check to
 * @param flags A bit mask with bits 1, 2, 4, etc, relating to collider types (see: [START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE](#\_0x377906D8A31E5586)). 17 is most common in GTA scripts.
 * @return Returns `true` if no collider of specified bitmask is hit.
 */
func (_client) HasEntityClearLosToEntity(entity1 float64, entity2 float64, flags float64) bool;

/**
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
 * This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
 */
func (_client) HasEntityClearLosToEntityInFront(entity1 float64, entity2 float64) bool;

/**
 * NativeDB Introduced: v1868
 */
func (_client) HasEntityClearLosToEntity_2(entity1 float64, entity2 float64, traceType float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x394bde2a7bba031e(entity1 float64, entity2 float64, traceType float64) float64 {
	return 0.0
}

/**
 * Called on tick.
 * Tested with vehicles, returns true whenever the vehicle is touching any entity.
 * Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
 */
func (_client) HasEntityCollidedWithAnything(entity float64) bool;

/**
 * HAS_*
 */
func (_client) HasFilledVehiclePopulation() bool;
/**
 * HAS_*
 */
func (_client) N_0x91d6dd290888cbab() bool;

func (_client) HasForceCleanupOccurred(cleanupFlags float64) bool;

/**
 * Returns whether or not the specific minimap overlay has loaded.
 * @param id A minimap overlay ID.
 * @return A boolean indicating load status.
 */
func (_client) HasMinimapOverlayLoaded(id float64) bool;

/**
 * Checks if the specified model has loaded into memory.
 */
func (_client) HasModelLoaded(model interface{}) bool;

/**
 * HAS_*
 */
func (_client) HasMultiplayerAudioDataLoaded() bool;
/**
 * HAS_*
 */
func (_client) N_0x544810ed9db6bbe6() bool;

/**
 * HAS_*
 */
func (_client) HasMultiplayerAudioDataUnloaded() bool;
/**
 * HAS_*
 */
func (_client) N_0x5b50abb1fe3746f4() bool;

func (_client) HasNamedPtfxAssetLoaded(fxName string) bool;

func (_client) HasNetworkTimeStarted() bool;
func (_client) N_0x46718aceedeafc84() bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) HasObjectBeenBroken(object float64) bool;

/**
 * It determines what weapons caused damage:
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 */
func (_client) HasPedBeenDamagedByWeapon(ped float64, weaponHash interface{}, weaponType float64) bool;

/**
 * p2 should be FALSE, otherwise it seems to always return FALSE
 * Bool does not check if the weapon is current equipped, unfortunately.
 */
func (_client) HasPedGotWeapon(ped float64, weaponHash interface{}, p2 bool) bool;

func (_client) HasPedGotWeaponComponent(ped float64, weaponHash interface{}, componentHash interface{}) bool;

func (_client) HasPedHeadBlendFinished(ped float64) bool;

func (_client) HasPedPreloadPropDataFinished(ped float64) bool;
func (_client) N_0x784002a632822099(ped float64) bool;

func (_client) HasPedPreloadVariationDataFinished(ped float64) bool;
func (_client) N_0x66680a92700f43df(ped float64) bool;

func (_client) HasPedReceivedEvent(ped float64, eventId float64) bool;

func (_client) HasPedheadshotImgUploadFailed() bool;
func (_client) N_0x876928dddfccc9cd() bool;

func (_client) HasPedheadshotImgUploadSucceeded() bool;
func (_client) N_0xe8a169e666cbc541() bool;

func (_client) HasPickupBeenCollected(pickup float64) bool;

func (_client) HasPlayerBeenSpottedInStolenVehicle(player float64) bool;

func (_client) HasPlayerDamagedAtLeastOneNonAnimalPed(player float64) bool;

func (_client) HasPlayerDamagedAtLeastOnePed(player float64) bool;

func (_client) HasPlayerLeftTheWorld(player float64) bool;

func (_client) HasPreloadModsFinished(p0 float64) bool;

func (_client) HasPtfxAssetLoaded() bool;

/**
 * Hardcoded to return false.
 */
func (_client) HasResumedFromSuspend() bool;
/**
 * Hardcoded to return false.
 */
func (_client) N_0xe8b9c0ec9e183f35() bool;

func (_client) HasScaleformContainerMovieLoadedIntoParent(scaleformHandle float64) bool;

/**
 * Only values used in the scripts are:
 * "heist_mp"
 * "heistmap_mp"
 * "instructional_buttons"
 * "heist_pre"
 */
func (_client) HasScaleformMovieFilenameLoaded(scaleformName string) bool;
/**
 * Only values used in the scripts are:
 * "heist_mp"
 * "heistmap_mp"
 * "instructional_buttons"
 * "heist_pre"
 */
func (_client) N_0x0c1c5d756fb5f337(scaleformName string) bool;
/**
 * Only values used in the scripts are:
 * "heist_mp"
 * "heistmap_mp"
 * "instructional_buttons"
 * "heist_pre"
 */
func (_client) HasNamedScaleformMovieLoaded(scaleformName string) bool;

func (_client) HasScaleformMovieLoaded(scaleformHandle float64) bool;

func (_client) HasScaleformScriptHudMovieLoaded(hudComponent float64) bool;
func (_client) HasHudScaleformLoaded(hudComponent float64) bool;

/**
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 */
func (_client) HasScriptLoaded(scriptName string) bool;

func (_client) HasScriptWithNameHashLoaded(scriptHash interface{}) bool;
func (_client) HasStreamedScriptLoaded(scriptHash interface{}) bool;

func (_client) HasSoundFinished(soundId float64) bool;

func (_client) HasStealthModeAssetLoaded(asset string) bool;

func (_client) HasStreamedTextureDictLoaded(textureDict string) bool;

/**
 * Checks if the specified gxt has loaded into the passed slot.
 */
func (_client) HasThisAdditionalTextLoaded(gxt string, slot float64) bool;

func (_client) HasThisCutsceneLoaded(cutsceneName string) bool;

func (_client) HasVehicleAssetLoaded(vehicleAsset float64) bool;

/**
 * Third Parameter = unsure, but pretty sure it is weapon hash
 * --> get_hash_key("weapon_stickybomb")
 * Fourth Parameter = unsure, almost always -1
 */
func (_client) HasVehicleGotProjectileAttached(driver float64, vehicle float64, weaponHash interface{}, p3 float64) bool;

func (_client) HasVehiclePhoneExplosiveDevice() bool;
func (_client) N_0x6adaabd3068c5235() bool;

func (_client) HasVehicleRecordingBeenLoaded(recording float64, script string) bool;

func (_client) HasWeaponAssetLoaded(weaponHash interface{}) bool;

func (_client) HasWeaponGotWeaponComponent(weapon float64, addonHash interface{}) bool;

func (_client) HaveAllStreamingRequestsCompleted(ped float64) bool;
func (_client) N_0x7350823473013c02(ped float64) bool;
func (_client) HasStreamedPedAssetsLoaded(ped float64) bool;

func (_client) HaveCreditsReachedEnd() bool;
func (_client) N_0x075f1d57402c93ba() bool;

func (_client) HaveVehicleModsStreamedIn(vehicle float64) bool;
func (_client) N_0x9a83f5f9963775ef(vehicle float64) bool;
func (_client) IsVehicleModLoadDone(vehicle float64) bool;

/**
 * HIDE_*_THIS_FRAME
 * Hides area and vehicle name HUD components for one frame.
 */
func (_client) HideAreaAndVehicleNameThisFrame() {}
/**
 * HIDE_*_THIS_FRAME
 * Hides area and vehicle name HUD components for one frame.
 */
func (_client) N_0xa4dede28b1814289() {}

func (_client) HideHelpTextThisFrame() {}

/**
 * I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
 */
func (_client) HideHudAndRadarThisFrame() {}

/**
 * This function hides various HUD (Heads-up Display) components.
 * Listed below are the integers and the corresponding HUD component.
 * *   1 : WANTED_STARS
 * *   2 : WEAPON_ICON
 * *   3 : CASH
 * *   4 : MP_CASH
 * *   5 : MP_MESSAGE
 * *   6 : VEHICLE_NAME
 * *   7 : AREA_NAME
 * *   8 : VEHICLE_CLASS
 * *   9 : STREET_NAME
 * *   10 : HELP_TEXT
 * *   11 : FLOATING_HELP_TEXT\_1
 * *   12 : FLOATING_HELP_TEXT\_2
 * *   13 : CASH_CHANGE
 * *   14 : RETICLE
 * *   15 : SUBTITLE_TEXT
 * *   16 : RADIO_STATIONS
 * *   17 : SAVING_GAME
 * *   18 : GAME_STREAM
 * *   19 : WEAPON_WHEEL
 * *   20 : WEAPON_WHEEL_STATS
 * *   21 : HUD_COMPONENTS
 * *   22 : HUD_WEAPONS
 * These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#\_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
 */
func (_client) HideHudComponentThisFrame(id float64) {}

func (_client) HideLoadingOnFadeThisFrame() {}

func (_client) HideMinimapExteriorMapThisFrame() {}
func (_client) DisableRadarThisFrame() {}

func (_client) HideMinimapInteriorMapThisFrame() {}
func (_client) N_0x20fe7fdfeead38c0() {}

func (_client) HideNumberOnBlip(blip float64) {}

func (_client) HidePedBloodDamageByZone(ped float64, p1 float64, p2 bool) {}
func (_client) N_0x62ab793144de75dc(ped float64, p1 float64, p2 bool) {}

/**
 * Hides the players weapon during a cutscene.
 */
func (_client) HidePedWeaponForScriptedCutscene(ped float64, toggle bool) {}

func (_client) HidePickup(pickup float64, toggle bool) {}
func (_client) N_0x867458251d47ccb2(pickup float64, toggle bool) {}

func (_client) HideScriptedHudComponentThisFrame(id float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) HideVehicleTombstone(vehicle float64, toggle bool) {}

/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) HintAmbientAudioBank(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) HintScriptAudioBank(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) HiredLimo(p0 float64, p1 float64) {}
func (_client) N_0x792271ab35c356a4(p0 float64, p1 float64) {}

/**
 * Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
 */
func (_client) HudDisplayLoadingScreenTips() {}
/**
 * Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
 */
func (_client) N_0x488043841bbe156f() {}

/**
 * Forces the weapon wheel to show/hide.
 */
func (_client) HudForceWeaponWheel(show bool) {}
/**
 * Forces the weapon wheel to show/hide.
 */
func (_client) N_0xeb354e5376bc81a7(show bool) {}
/**
 * Forces the weapon wheel to show/hide.
 */
func (_client) ShowWeaponWheel(show bool) {}

/**
 * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
 */
func (_client) HudSetWeaponWheelTopSlot(weaponHash interface{}) {}
/**
 * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
 */
func (_client) N_0x72c1056d678bb7d8(weaponHash interface{}) {}
/**
 * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
 */
func (_client) HudWeaponWheelSetSlotHash(weaponHash interface{}) {}

/**
 * Returns the weapon hash to the selected/highlighted weapon in the wheel
 */
func (_client) HudWeaponWheelGetSelectedHash() float64 {
	return 0.0
}
/**
 * Returns the weapon hash to the selected/highlighted weapon in the wheel
 */
func (_client) N_0xa48931185f0536fe() float64 {
	return 0.0
}

/**
 * Returns the weapon hash active in a specific weapon wheel slotList
 */
func (_client) HudWeaponWheelGetSlotHash(weaponTypeIndex float64) float64 {
	return 0.0
}
/**
 * Returns the weapon hash active in a specific weapon wheel slotList
 */
func (_client) N_0xa13e93403f26c812(weaponTypeIndex float64) float64 {
	return 0.0
}

/**
 * Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
 */
func (_client) HudWeaponWheelIgnoreControlInput(toggle bool) {}
/**
 * Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
 */
func (_client) N_0x14c9fdcc41f81f63(toggle bool) {}

/**
 * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
 */
func (_client) HudWeaponWheelIgnoreSelection() {}
/**
 * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
 */
func (_client) BlockWeaponWheelThisFrame() {}
/**
 * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
 */
func (_client) N_0x0afc4af510774b47() {}

func (_client) IgnoreNextRestart(toggle bool) {}

func (_client) InitCreatorBudget() {}
func (_client) N_0xb5a4db34fe89b88a() {}
func (_client) LoadMissionCreatorData() {}

func (_client) InitShopPedComponent(outComponent float64) {}

func (_client) InitShopPedProp(outProp float64) {}

func (_client) InstantlyFillPedPopulation() {}
func (_client) N_0x4759cc730f947c81() {}

func (_client) InstantlyFillVehiclePopulation() {}
func (_client) N_0x48adc8a773564670() {}

/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * --------------------------------------------------------
 * if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))
 */
func (_client) IntToParticipantindex(value float64) float64 {
	return 0.0
}

/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 */
func (_client) IntToPlayerindex(value float64) float64 {
	return 0.0
}

func (_client) InterruptConversation(p0 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * One call found in the b617d scripts:
 * AUDIO::_8A694D7A68F8DC38(NETWORK::NET_TO_PED(l_3989._f26F[0 -- [[1]] ]), "CONV_INTERRUPT_QUIT_IT", "LESTER");
 */
func (_client) InterruptConversationAndPause(ped float64, p1 string, p2 string) {}
/**
 * One call found in the b617d scripts:
 * AUDIO::_8A694D7A68F8DC38(NETWORK::NET_TO_PED(l_3989._f26F[0 -- [[1]] ]), "CONV_INTERRUPT_QUIT_IT", "LESTER");
 */
func (_client) N_0x8a694d7a68f8dc38(ped float64, p1 string, p2 string) {}

/**
 * Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
 */
func (_client) InvalidateIdleCam() {}
/**
 * Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
 */
func (_client) N_0xf4f2c0d4ee209e20() {}

/**
 * Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
 */
func (_client) InvalidateVehicleIdleCam() {}
/**
 * Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
 */
func (_client) N_0x9e4cfff989258472() {}

func (_client) InvokeFunctionReference(referenceIdentity string, argsSerialized string, argsLength float64, retvalLength float64)  (string, float64){
	return false,0.0
}

func (_client) IsAceAllowed(object string) bool;

func (_client) IsAimCamActive() bool;

/**
 * IS_A*
 */
func (_client) IsAimCamThirdPersonActive() bool;
/**
 * IS_A*
 */
func (_client) N_0x74bd83ea840f6bc9() bool;

/**
 * Example:
 * bool playing = AUDIO::IS_ALARM_PLAYING("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
 */
func (_client) IsAlarmPlaying(alarmName string) bool;

/**
 * Common in the scripts:
 * AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());
 */
func (_client) IsAmbientSpeechDisabled(ped float64) bool;

func (_client) IsAmbientSpeechPlaying(ped float64) bool;

func (_client) IsAmbientZoneEnabled(ambientZone string) bool;

func (_client) IsAnEntity(handle float64) bool;

func (_client) IsAnimalVocalizationPlaying(pedHandle float64) bool;
func (_client) N_0xc265df9fb44a9fbd(pedHandle float64) bool;

func (_client) IsAnyAirDefenseZoneInsideSphere(x float64, y float64, z float64, radius float64, outZoneId float64) bool;
func (_client) N_0xdab963831dbfd3f4(x float64, y float64, z float64, radius float64, outZoneId float64) bool;
func (_client) IsAirDefenseZoneInsideSphere(x float64, y float64, z float64, radius float64, outZoneId float64) bool;

func (_client) IsAnyEntityAttachedToHandlerFrame(vehicle float64) bool;
func (_client) N_0x62ca17b74c435651(vehicle float64) bool;

func (_client) IsAnyEntityEntirelyInsideGarage(garageHash interface{}, p1 bool, p2 bool, p3 bool, p4 float64) bool;
func (_client) N_0x673ed815d6e323b7(garageHash interface{}, p1 bool, p2 bool, p3 bool, p4 float64) bool;

func (_client) IsAnyHostilePedNearPoint(ped float64, x float64, y float64, z float64, radius float64) bool;
func (_client) N_0x68772db2b2526f9f(ped float64, x float64, y float64, z float64, radius float64) bool;

func (_client) IsAnyObjectNearPoint(x float64, y float64, z float64, _range float64, p4 bool) bool;

func (_client) IsAnyPedNearPoint(x float64, y float64, z float64, radius float64) bool;

func (_client) IsAnyPedRappellingFromHeli(vehicle float64) bool;
func (_client) N_0x291e373d483e7ee7(vehicle float64) bool;
func (_client) AnyPassengersRappeling(vehicle float64) bool;
func (_client) IsAnyPassengerRappelingFromVehicle(vehicle float64) bool;

func (_client) IsAnyPedShootingInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p6 bool, p7 bool) bool;

func (_client) IsAnySpeechPlaying(ped float64) bool;

func (_client) IsAnyVehicleNearPoint(x float64, y float64, z float64, radius float64) bool;

func (_client) IsAreaOccupied(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 bool, p8 bool, p9 bool, p10 bool, p11 float64, p12 bool) bool;

func (_client) IsAudioSceneActive(scene string) bool;

/**
 * if (MISC::IS_AUSSIE_VERSION()) {
 * sub_127a9(&l_31, 1024); // l_31 |= 1024
 * l_129 = 3;
 * sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
 * }
 * Used to block some of the prostitute stuff due to laws in Australia.
 */
func (_client) IsAussieVersion() bool;

func (_client) IsAutoSaveInProgress() bool;

func (_client) IsBigVehicle(vehicle float64) bool;

/**
 * <!-- Native implemented by Disquse. 0xFFF65C63 -->
 * Returns true if the minimap is currently expanded. False if it's the normal minimap state.
 * Use [`IsBigmapFull`](#\_0x66EE14B2) to check if the full map is currently revealed on the minimap.
 * @return A bool indicating if the minimap is currently expanded or normal state.
 */
func (_client) IsBigmapActive() bool;

/**
 * <!-- Native implemented by Disquse. 0x66EE14B2 -->
 * @return Returns true if the full map is currently revealed on the minimap.
Use [`IsBigmapActive`](#\_0xFFF65C63) to check if the minimap is currently expanded or in it's normal state.
 */
func (_client) IsBigmapFull() bool;

/**
 * Returns bit's boolean state from [offset] of [address].
 * Example:
 * MISC::IS_BIT_SET(bitAddress, 1);
 * To enable and disable bits, see:
 * MISC::SET_BIT(&bitAddress, 1);   // enable
 * MISC::CLEAR_BIT(&bitAddress, 1); // disable
 */
func (_client) IsBitSet(address float64, offset float64) bool;

func (_client) IsBlipFlashing(blip float64) bool;

func (_client) IsBlipOnMinimap(blip float64) bool;

func (_client) IsBlipShortRange(blip float64) bool;

/**
 * IS_*
 */
func (_client) IsBoatAnchoredAndFrozen(vehicle float64) bool;
/**
 * IS_*
 */
func (_client) N_0xb0ad1238a709b1a2(vehicle float64) bool;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * For projectiles, see: [`IS_PROJECTILE_TYPE_IN_ANGLED_AREA`](#\_0xF0BC12401061DEA0)
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 * @return True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.
 */
func (_client) IsBulletInAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, ownedByPlayer bool) bool;

func (_client) IsBulletInArea(x float64, y float64, z float64, radius float64, ownedByPlayer bool) bool;

func (_client) IsBulletInBox(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, ownedByPlayer bool) bool;

/**
 * Returns whether or not the passed camera handle is active.
 */
func (_client) IsCamActive(cam float64) bool;

func (_client) IsCamInterpolating(cam float64) bool;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) IsCamPlayingAnim(cam float64, animName string, animDictionary string) bool;

func (_client) IsCamRendering(cam float64) bool;

func (_client) IsCamShaking(cam float64) bool;

func (_client) IsCamSplinePaused(p0 float64) bool;

/**
 * NativeDB Introduced: v1493
 */
func (_client) IsCinematicCamActive() bool;
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xf5f1e89a970b7796() bool;

func (_client) IsCinematicCamRendering() bool;

func (_client) IsCinematicCamShaking() bool;

func (_client) IsCinematicIdleCamRendering() bool;
func (_client) N_0xca9d2aa3e326d720() bool;

func (_client) IsCinematicShotActive(p0 float64) bool;

/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 */
func (_client) IsCollisionMarkedOutside(x float64, y float64, z float64) bool;
/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 */
func (_client) N_0xeea5ac2eda7c33e8(x float64, y float64, z float64) bool;
/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 */
func (_client) AreCoordsCollidingWithExterior(x float64, y float64, z float64) bool;

/**
 * Returns true if command line option '-benchmark' is set.
 */
func (_client) IsCommandLineBenchmarkValueSet() bool;
/**
 * Returns true if command line option '-benchmark' is set.
 */
func (_client) N_0xa049a5be0f04f2f8() bool;

func (_client) IsCommerceDataValid() bool;
func (_client) N_0xea14eef5b7cd2c30() bool;

func (_client) IsCommerceStoreOpen() bool;
func (_client) N_0x2eac52b4019e2782() bool;

func (_client) IsContentItemLocked(itemHash interface{}) bool;
func (_client) IsOutfitEmpty(itemHash interface{}) bool;
func (_client) IsDlcDataEmpty(itemHash interface{}) bool;

func (_client) IsControlEnabled(padIndex float64, control float64) bool;

/**
 * Returns whether a control was newly pressed since the last check.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 * @return True if the control was pressed.
 */
func (_client) IsControlJustPressed(padIndex float64, control float64) bool;

/**
 * Returns whether a control was newly released since the last check.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 * @return True if the control was recently released.
 */
func (_client) IsControlJustReleased(padIndex float64, control float64) bool;

/**
 * Returns whether a control is currently pressed.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 * @return True if the control was pressed.
 */
func (_client) IsControlPressed(padIndex float64, control float64) bool;

/**
 * Returns whether a control is currently *not* pressed.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 * @return True if the control is not pressed.
 */
func (_client) IsControlReleased(padIndex float64, control float64) bool;

func (_client) IsConversationPedDead(ped float64) bool;

/**
 * xyz - relative to the world origin.
 */
func (_client) IsCopPedInArea_3d(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;

/**
 * Usage:
 * public bool isCopInRange(Vector3 Location, float Range)
 * {
 * return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
 * }
 */
func (_client) IsCopVehicleInArea_3d(x1 float64, x2 float64, y1 float64, y2 float64, z1 float64, z2 float64) bool;

func (_client) IsCutsceneActive() bool;

func (_client) IsCutscenePlaybackFlagSet(flag float64) bool;
func (_client) N_0x71b74d2ae19338d0(flag float64) bool;

func (_client) IsCutscenePlaying() bool;

func (_client) IsDamageTrackerActiveOnNetworkId(netID float64) bool;

func (_client) IsDamageTrackerActiveOnPlayer(player float64) bool;
func (_client) N_0xb2092a1eaa7fd45f(player float64) bool;

func (_client) IsDecalAlive(decal float64) bool;

func (_client) IsDisabledControlJustPressed(padIndex float64, control float64) bool;

func (_client) IsDisabledControlJustReleased(padIndex float64, control float64) bool;

func (_client) IsDisabledControlPressed(padIndex float64, control float64) bool;

func (_client) IsDisabledControlReleased(padIndex float64, control float64) bool;
func (_client) N_0xfb6c4072e9a32e92(padIndex float64, control float64) bool;

/**
 * Example:
 * DLC::IS_DLC_PRESENT($\mpbusiness2\);
 * ($ = gethashkey)
 * bruteforce these:
 * 0xB119F6D
 * 0x96F02EE6
 */
func (_client) IsDlcPresent(dlcHash interface{}) bool;

func (_client) IsDlcVehicleMod(hash interface{}) bool;
func (_client) N_0x0564b9ff9631b82c(hash interface{}) bool;

func (_client) IsDoorClosed(doorHash interface{}) bool;

/**
 * if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
 * {
 * OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
 * }
 */
func (_client) IsDoorRegisteredWithSystem(doorHash interface{}) bool;
/**
 * if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
 * {
 * OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
 * }
 */
func (_client) N_0xc153c43ea202c8c1(doorHash interface{}) bool;
/**
 * if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
 * {
 * OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
 * }
 */
func (_client) DoesDoorExist(doorHash interface{}) bool;

func (_client) IsDrivebyTaskUnderneathDrivingTask(ped float64) bool;

/**
 * Returns whether or not a browser is created for a specified DUI browser object.
 * @param duiObject The DUI browser handle.
 * @return A boolean indicating TRUE if the browser is created.
 */
func (_client) IsDuiAvailable(duiObject float64) bool;

/**
 * Gets whether or not this is the CitizenFX server.
 * @return A boolean value.
 */
func (_client) IsDuplicityVersion() bool;

func (_client) IsDurangoVersion() bool;

func (_client) IsEntityAMissionEntity(entity float64) bool;

func (_client) IsEntityAPed(entity float64) bool;

func (_client) IsEntityAVehicle(entity float64) bool;

func (_client) IsEntityAnObject(entity float64) bool;

/**
 * Checks if entity is within x/y/zSize distance of x/y/z.
 * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
 */
func (_client) IsEntityAtCoord(entity float64, xPos float64, yPos float64, zPos float64, xSize float64, ySize float64, zSize float64, p7 bool, p8 bool, p9 float64) bool;

/**
 * Checks if entity1 is within the box defined by x/y/zSize of entity2.
 * Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
 */
func (_client) IsEntityAtEntity(entity1 float64, entity2 float64, xSize float64, ySize float64, zSize float64, p5 bool, p6 bool, p7 float64) bool;

func (_client) IsEntityAttached(entity float64) bool;

func (_client) IsEntityAttachedToAnyObject(entity float64) bool;

func (_client) IsEntityAttachedToAnyPed(entity float64) bool;

func (_client) IsEntityAttachedToAnyVehicle(entity float64) bool;

func (_client) IsEntityAttachedToEntity(_from float64, to float64) bool;

func (_client) IsEntityAttachedToHandlerFrame(vehicle float64, entity float64) bool;
func (_client) SetPedEnabledBikeRingtone(vehicle float64, entity float64) bool;
func (_client) IsVehicleNearEntity(vehicle float64, entity float64) bool;

/**
 * NativeDB Added Parameter 2: BOOL p1
 */
func (_client) IsEntityDead(entity float64) bool;

func (_client) IsEntityFocus(entity float64) bool;

func (_client) IsEntityGhostedToLocalPlayer(entity float64) bool;
func (_client) N_0x21d04d7bc538c146(entity float64) bool;
func (_client) IsEntityAGhost(entity float64) bool;

func (_client) IsEntityInAir(entity float64) bool;

/**
 * p10 is some entity flag check, also used in [`IS_ENTITY_AT_ENTITY`](#\_0x751B70C3D034E187), [`IS_ENTITY_IN_AREA`](#\_0x54736AA40E271165) and [`IS_ENTITY_AT_COORD`](#\_0x20B60995556D004F).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 * @param debug a debug flag invoking functions in the same path as `DRAW_MARKER`
 * @param includez If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
 */
func (_client) IsEntityInAngledArea(entity float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, debug bool, includez bool, p10 float64) bool;

func (_client) IsEntityInArea(entity float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p7 bool, p8 bool, p9 float64) bool;

func (_client) IsEntityInWater(entity float64) bool;

func (_client) IsEntityInZone(entity float64, zone string) bool;

func (_client) IsEntityOccluded(entity float64) bool;

func (_client) IsEntityOnFire(entity float64) bool;

/**
 * Returns true if the entity is in between the minimum and maximum values for the 2d screen coords.
 * This means that it will return true even if the entity is behind a wall for example, as long as you're looking at their location.
 * Chipping
 */
func (_client) IsEntityOnScreen(entity float64) bool;

/**
 * See also [`IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM`](#\_0x6EC47A344923E1ED)
 * ```
 * Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)
 * p4 is always 3 in the scripts.
 * taskFlag:
 * 2 - Check synchronized scene
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) IsEntityPlayingAnim(entity float64, animDict string, animName string, taskFlag float64) bool;

/**
 * A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.
 * ^ Attach a phCollider to the ped.
 */
func (_client) IsEntityStatic(entity float64) bool;

func (_client) IsEntityTouchingEntity(entity float64, targetEntity float64) bool;

func (_client) IsEntityTouchingModel(entity float64, modelHash interface{}) bool;

func (_client) IsEntityUpright(entity float64, angle float64) bool;

func (_client) IsEntityUpsidedown(entity float64) bool;

func (_client) IsEntityVisible(entity float64) bool;

func (_client) IsEntityVisibleToScript(entity float64) bool;

func (_client) IsEntityWaitingForWorldCollision(entity float64) bool;

func (_client) IsExplosionActiveInArea(explosionType float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;
func (_client) N_0x6070104b699b2ef4(explosionType float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param explosionType explosion enum, -1 for any explosion type. See [ADD_EXPLOSION](#\_0xE3AD2BDBAEE269AC).
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) IsExplosionInAngledArea(explosionType float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) bool;

func (_client) IsExplosionInArea(explosionType float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;

func (_client) IsExplosionInSphere(explosionType float64, x float64, y float64, z float64, radius float64) bool;

func (_client) IsFirstPersonAimCamActive() bool;

func (_client) IsFlashLightOn(ped float64) bool;
func (_client) SetWeaponSmokegrenadeAssigned(ped float64) bool;

func (_client) IsFloatingHelpTextOnScreen(hudIndex float64) bool;
func (_client) N_0x2432784aca090da4(hudIndex float64) bool;

func (_client) IsFollowPedCamActive() bool;

func (_client) IsFollowVehicleCamActive() bool;

/**
 * This function is hard-coded to always return 0.
 */
func (_client) IsFrontendFading() bool;

func (_client) IsFrontendReadyForControl() bool;
func (_client) N_0x3bab9a4e4f2ff5c7() bool;

/**
 * Hardcoded to return 1
 */
func (_client) IsGameInControlOfMusic() bool;

func (_client) IsGameplayCamLookingBehind() bool;

/**
 * Examples when this function will return 0 are:
 * - During busted screen.
 * - When player is coming out from a hospital.
 * - When player is coming out from a police station.
 * - When player is buying gun from AmmuNation.
 */
func (_client) IsGameplayCamRendering() bool;

func (_client) IsGameplayCamShaking() bool;

func (_client) IsGameplayHintActive() bool;

func (_client) IsGarageEmpty(garageHash interface{}, p1 bool, p2 float64) bool;

func (_client) IsHandlerFrameAboveContainer(handler float64, container float64) bool;
func (_client) N_0x89d630cf5ea96d23(handler float64, container float64) bool;

func (_client) IsHeliLandingAreaBlocked(vehicle float64) bool;
func (_client) N_0x634148744f385576(vehicle float64) bool;

func (_client) IsHeliPartBroken(vehicle float64, p1 bool, p2 bool, p3 bool) bool;

func (_client) IsHelpMessageBeingDisplayed() bool;

func (_client) IsHelpMessageFadingOut() bool;

func (_client) IsHelpMessageOnScreen() bool;

/**
 * Checks whether the horn of a vehicle is currently played.
 */
func (_client) IsHornActive(vehicle float64) bool;

func (_client) IsHoveringOverMissionCreatorBlip() bool;
func (_client) N_0x4167efe0527d706e() bool;

/**
 * Full list of components below
 * HUD = 0;
 * HUD_WANTED_STARS = 1;
 * HUD_WEAPON_ICON = 2;
 * HUD_CASH = 3;
 * HUD_MP_CASH = 4;
 * HUD_MP_MESSAGE = 5;
 * HUD_VEHICLE_NAME = 6;
 * HUD_AREA_NAME = 7;
 * HUD_VEHICLE_CLASS = 8;
 * HUD_STREET_NAME = 9;
 * HUD_HELP_TEXT = 10;
 * HUD_FLOATING_HELP_TEXT_1 = 11;
 * HUD_FLOATING_HELP_TEXT_2 = 12;
 * HUD_CASH_CHANGE = 13;
 * HUD_RETICLE = 14;
 * HUD_SUBTITLE_TEXT = 15;
 * HUD_RADIO_STATIONS = 16;
 * HUD_SAVING_GAME = 17;
 * HUD_GAME_STREAM = 18;
 * HUD_WEAPON_WHEEL = 19;
 * HUD_WEAPON_WHEEL_STATS = 20;
 * MAX_HUD_COMPONENTS = 21;
 * MAX_HUD_WEAPONS = 22;
 * MAX_SCRIPTED_HUD_COMPONENTS = 141;
 */
func (_client) IsHudComponentActive(id float64) bool;

func (_client) IsHudHidden() bool;

func (_client) IsHudPreferenceSwitchedOn() bool;

func (_client) IsInItemset(p0 float64, p1 float64) bool;

/**
 * aka "constrained"
 */
func (_client) IsInPowerSavingMode() bool;
/**
 * aka "constrained"
 */
func (_client) N_0x684a41975f077262() bool;

func (_client) IsInVehicleCamDisabled() bool;
func (_client) N_0x4f32c0d5a90a9b40() bool;

/**
 * =======================================================
 * Correction, I have change this to int, instead of int*
 * as it doesn't use a pointer to the createdIncident.
 * If you try it you will crash (or) freeze.
 * =======================================================
 */
func (_client) IsIncidentValid(incidentId float64) bool;

func (_client) IsInteriorCapped(interiorID float64) bool;

func (_client) IsInteriorDisabled(interior float64) bool;

func (_client) IsInteriorEntitySetActive(interior float64, entitySetName string) bool;
func (_client) N_0x35f7dd45e8c0a16d(interior float64, entitySetName string) bool;
func (_client) IsInteriorPropEnabled(interior float64, entitySetName string) bool;

func (_client) IsInteriorReady(interiorID float64) bool;

/**
 * Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
 */
func (_client) IsInteriorRenderingDisabled() bool;

func (_client) IsInteriorScene() bool;

func (_client) IsIplActive(iplName string) bool;

func (_client) IsItemsetValid(p0 float64) bool;

func (_client) IsLookInverted() bool;

func (_client) IsMemoryCardInUse() bool;

func (_client) IsMessageBeingDisplayed() bool;

func (_client) IsMinigameInProgress() bool;

func (_client) IsMinimapInInterior() bool;
func (_client) N_0x9049fe339d5f6f6f() bool;

func (_client) IsMinimapRendering() bool;
func (_client) N_0xaf754f20eb5cd51a() bool;
func (_client) IsRadarEnabled() bool;

func (_client) IsMissionCompletePlaying() bool;

func (_client) IsMissionCompleteReadyForUi() bool;
func (_client) N_0x6f259f82d873b8b8() bool;

func (_client) IsMissionCreatorBlip(blip float64) bool;

func (_client) IsMissionNewsStoryUnlocked(newsStory float64) bool;
func (_client) GetNumberOfPassengerVoiceVariations(newsStory float64) bool;

/**
 * NativeDB Introduced: v2372
 */
func (_client) IsMissionTrain(vehicle float64) bool;

func (_client) IsMobilePhoneCallOngoing() bool;

func (_client) IsMobilePhoneRadioActive() bool;

func (_client) IsModelAPed(model interface{}) bool;

/**
 * Returns whether the specified model represents a vehicle.
 */
func (_client) IsModelAVehicle(model interface{}) bool;

/**
 * Check if model is in cdimage(rpf)
 */
func (_client) IsModelInCdimage(model interface{}) bool;

/**
 * Returns whether the specified model exists in the game.
 */
func (_client) IsModelValid(model interface{}) bool;

func (_client) IsMountedWeaponTaskUnderneathDrivingTask(ped float64) bool;

func (_client) IsMoveBlendRatioRunning(ped float64) bool;

func (_client) IsMoveBlendRatioSprinting(ped float64) bool;

func (_client) IsMoveBlendRatioStill(ped float64) bool;

func (_client) IsMoveBlendRatioWalking(ped float64) bool;

func (_client) IsMpGamerTagActive(gamerTagId float64) bool;
func (_client) N_0x4e929e7a5796fd26(gamerTagId float64) bool;

func (_client) IsMpGamerTagFree(gamerTagId float64) bool;
func (_client) AddTrevorRandomModifier(gamerTagId float64) bool;

func (_client) IsMpGamerTagMovieActive() bool;
func (_client) N_0x6e0eb3eb47c8d7aa() bool;
func (_client) HasMpGamerTag() bool;

/**
 * Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
 */
func (_client) IsMultiplayerChatActive() bool;
/**
 * Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
 */
func (_client) IsTextChatActive() bool;

func (_client) IsMusicOneshotPlaying() bool;
func (_client) N_0xa097ab275061fb21() bool;

func (_client) IsNamedRendertargetLinked(modelHash interface{}) bool;

func (_client) IsNamedRendertargetRegistered(name string) bool;

func (_client) IsNavigatingMenuContent() float64 {
	return 0.0
}
func (_client) N_0x4e3cd0ef8a489541() float64 {
	return 0.0
}

/**
 * Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
 * If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
 */
func (_client) IsNavmeshLoadedInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;

/**
 * IS_*
 */
func (_client) IsNavmeshRequiredRegionOwnedByAnyThread() bool;
/**
 * IS_*
 */
func (_client) N_0x705a844002b39dc0() bool;

func (_client) IsNetworkIdOwnedByParticipant(netId float64) bool;
func (_client) N_0xa1607996431332df(netId float64) bool;
func (_client) NetworkCanNetworkIdBeSeen(netId float64) bool;

func (_client) IsNetworkLoadingScene() bool;

func (_client) IsNewLoadSceneActive() bool;

func (_client) IsNewLoadSceneLoaded() bool;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) IsNextWeatherType(weatherType string) bool;

/**
 * Checks if keyboard input is enabled during NUI focus using `SET_NUI_FOCUS_KEEP_INPUT`.
 * @return True or false.
 */
func (_client) IsNuiFocusKeepingInput() bool;

/**
 * Returns the current NUI focus state previously set with `SET_NUI_FOCUS`.
 * @return True or false.
 */
func (_client) IsNuiFocused() bool;

func (_client) IsObjectAPickup(object float64) bool;
func (_client) N_0x0378c08504160d0d(object float64) bool;

/**
 * NativeDB Introduced: v1365
 */
func (_client) IsObjectAPortablePickup(object float64) bool;
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0xfc481c641ebbd27d(object float64) bool;

func (_client) IsObjectEntirelyInsideGarage(garageHash interface{}, entity float64, p2 float64, p3 float64) bool;
func (_client) N_0x372ef6699146a1e4(garageHash interface{}, entity float64, p2 float64, p3 float64) bool;

func (_client) IsObjectNearPoint(objectHash interface{}, x float64, y float64, z float64, _range float64) bool;

func (_client) IsObjectPartiallyInsideGarage(garageHash interface{}, entity float64, p2 float64) bool;
func (_client) N_0xf0eed5a6bc7b237a(garageHash interface{}, entity float64, p2 float64) bool;

func (_client) IsObjectVisible(object float64) bool;

func (_client) IsObjectWithinBrainActivationRange(object float64) bool;

/**
 * Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
 */
func (_client) IsOnlinePoliciesMenuActive() bool;
/**
 * Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
 */
func (_client) N_0x6f72cd94f7b5b68c() bool;

func (_client) IsOrbisVersion() bool;

func (_client) IsPauseMenuActive() bool;

func (_client) IsPauseMenuRestarting() bool;

func (_client) IsPcVersion() bool;

/**
 * Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
 */
func (_client) IsPedAPlayer(ped float64) bool;

/**
 * When passing a ped parameter, the function returns true if the ped is currently in any scenario.
 */
func (_client) IsPedActiveInScenario(ped float64) bool;

func (_client) IsPedAimingFromCover(ped float64) bool;

/**
 * Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
 * | Bit value | Effect            |
 * |-----------|-------------------|
 * | 1         | Melee weapons     |
 * | 2         | Explosive weapons |
 * | 4         | Any other weapons |
 * Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
 * @param ped The ped to check armed state on.
 * @param typeFlags Type flags to check.
 * @return Whether or not the ped is currently equipped with any weapon matching typeFlags.
 */
func (_client) IsPedArmed(ped float64, typeFlags float64) bool;

/**
 * This function is hard-coded to always return 0.
 */
func (_client) IsPedBeingArrested(ped float64) bool;

func (_client) IsPedBeingJacked(ped float64) bool;

func (_client) IsPedBeingStealthKilled(ped float64) bool;

/**
 * p1 is always 0
 */
func (_client) IsPedBeingStunned(ped float64, p1 float64) bool;

func (_client) IsPedBlushColorValid(colorID float64) bool;
func (_client) N_0x604e810189ee3a59(colorID float64) bool;

func (_client) IsPedBlushColorValid_2(colorId float64) bool;
func (_client) N_0xf41b5d290c99a3d6(colorId float64) bool;

/**
 * NativeDB Introduced: v1290
 */
func (_client) IsPedBodyBlemishValid(colorID float64) bool;
/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x09e7eca981d9b210(colorID float64) bool;

func (_client) IsPedClimbing(ped float64) bool;

/**
 * Checks if the component variation is valid, this works great for randomizing components using loops.
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) IsPedComponentVariationValid(ped float64, componentId float64, drawableId float64, textureId float64) bool;

func (_client) IsPedCuffed(ped float64) bool;

/**
 * This native returns a true or false value.
 * Ped ped = The ped whose weapon you want to check.
 */
func (_client) IsPedCurrentWeaponSilenced(ped float64) bool;

/**
 * Seems to consistently return true if the ped is dead, however, it does not detect the dying phase.
 * @param ped the ped
 * @param p1 always passed 1 in the scripts; requires more research.
 * @return Whether the ped is dead or dying.
 */
func (_client) IsPedDeadOrDying(ped float64, p1 bool) bool;

func (_client) IsPedDefensiveAreaActive(ped float64, p1 bool) bool;
func (_client) N_0xba63d9fe45412247(ped float64, p1 bool) bool;

func (_client) IsPedDiving(ped float64) bool;

func (_client) IsPedDoingBeastJump(ped float64) bool;
func (_client) N_0x451d05012ccec234(ped float64) bool;

func (_client) IsPedDoingDriveby(ped float64) bool;

func (_client) IsPedDucking(ped float64) bool;

/**
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 * var num3;
 * if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
 * if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
 */
func (_client) IsPedEvasiveDiving(ped float64, evadingEntity float64)  (bool, float64){
	return false,0.0
}

func (_client) IsPedExclusiveDriverOfVehicle(ped float64, vehicle float64, outIndex float64) bool;
func (_client) N_0xb09d25e77c33eb3f(ped float64, vehicle float64, outIndex float64) bool;

/**
 * angle is ped's view cone
 */
func (_client) IsPedFacingPed(ped float64, otherPed float64, angle float64) bool;

func (_client) IsPedFalling(ped float64) bool;

/**
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
 * If the handle is invalid, the function returns true.
 */
func (_client) IsPedFatallyInjured(ped float64) bool;

func (_client) IsPedFleeing(ped float64) bool;

func (_client) IsPedGettingIntoAVehicle(ped float64) bool;

func (_client) IsPedGettingUp(ped float64) bool;

func (_client) IsPedGoingIntoCover(ped float64) bool;

func (_client) IsPedGroupMember(ped float64, groupId float64) bool;

func (_client) IsPedHairColorValid(colorID float64) bool;
func (_client) N_0xe0d36e5d9e99cc21(colorID float64) bool;

func (_client) IsPedHairColorValid_2(colorId float64) bool;
func (_client) N_0xed6d8e27a43b8cde(colorId float64) bool;

func (_client) IsPedHangingOnToVehicle(ped float64) bool;

func (_client) IsPedHeadingTowardsPosition(ped float64, x float64, y float64, z float64, p4 float64) bool;
func (_client) N_0xfcf37a457cb96dc0(ped float64, x float64, y float64, z float64, p4 float64) bool;

func (_client) IsPedHeadtrackingEntity(ped float64, entity float64) bool;

func (_client) IsPedHeadtrackingPed(ped1 float64, ped2 float64) bool;

func (_client) IsPedHelmetUnk(ped float64) bool;
func (_client) N_0xb9496ce47546db2c(ped float64) bool;

/**
 * Returns true/false if the ped is/isn't humanoid.
 */
func (_client) IsPedHuman(ped float64) bool;

/**
 * Returns whether the specified ped is hurt.
 */
func (_client) IsPedHurt(ped float64) bool;

func (_client) IsPedInAnyBoat(ped float64) bool;

func (_client) IsPedInAnyHeli(ped float64) bool;

func (_client) IsPedInAnyPlane(ped float64) bool;

func (_client) IsPedInAnyPoliceVehicle(ped float64) bool;

func (_client) IsPedInAnySub(ped float64) bool;

func (_client) IsPedInAnyTaxi(ped float64) bool;

func (_client) IsPedInAnyTrain(ped float64) bool;

/**
 * Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
 * currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
 * @param ped The ped to check.
 * @param atGetIn `true` to also consider attempting to enter a vehicle.
 * @return Whether or not the ped is currently involved in any vehicle.
 */
func (_client) IsPedInAnyVehicle(ped float64, atGetIn bool) bool;

/**
 * Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.
 * p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E[4 -- [[14]] ], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794
 */
func (_client) IsPedInCombat(ped float64, target float64) bool;

/**
 * p1 is nearly always 0 in the scripts.
 */
func (_client) IsPedInCover(ped float64, exceptUseWeapon bool) bool;

func (_client) IsPedInCoverFacingLeft(ped float64) bool;

func (_client) IsPedInCurrentConversation(ped float64) bool;

func (_client) IsPedInFlyingVehicle(ped float64) bool;

func (_client) IsPedInGroup(ped float64) bool;

func (_client) IsPedInHighCover(ped float64) bool;
func (_client) N_0x6a03bf943d767c93(ped float64) bool;
func (_client) IsPedStandingInCover(ped float64) bool;

/**
 * Notes: The function only returns true while the ped is:
 * A.) Swinging a random melee attack (including pistol-whipping)
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
 * You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
 */
func (_client) IsPedInMeleeCombat(ped float64) bool;

func (_client) IsPedInModel(ped float64, modelHash interface{}) bool;

func (_client) IsPedInParachuteFreeFall(ped float64) bool;

/**
 * Gets a value indicating whether the specified ped is in the specified vehicle.
 * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
 */
func (_client) IsPedInVehicle(ped float64, vehicle float64, atGetIn bool) bool;

/**
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 * @return Returns `true` if the ped is in [writhe](https://dictionary.cambridge.org/dictionary/english/writhe), `false` otherwise.
 */
func (_client) IsPedInWrithe(ped float64) bool;

/**
 * Gets a value indicating whether this ped's health is below its injured threshold.
 * The default threshold is 100.
 */
func (_client) IsPedInjured(ped float64) bool;

func (_client) IsPedJacking(ped float64) bool;

func (_client) IsPedJumping(ped float64) bool;

func (_client) IsPedJumpingOutOfVehicle(ped float64) bool;

func (_client) IsPedLipstickColorValid(colorID float64) bool;
func (_client) N_0x0525a2c2562f3cd4(colorID float64) bool;

func (_client) IsPedLipstickColorValid_2(colorId float64) bool;
func (_client) N_0x3e802f11fbe27674(colorId float64) bool;

/**
 * Returns true/false if the ped is/isn't male.
 */
func (_client) IsPedMale(ped float64) bool;

func (_client) IsPedModel(ped float64, modelHash interface{}) bool;

func (_client) IsPedOnAnyBike(ped float64) bool;

func (_client) IsPedOnFoot(ped float64) bool;

/**
 * Same function call as PED::GET_MOUNT, aka just returns 0
 */
func (_client) IsPedOnMount(ped float64) bool;

func (_client) IsPedOnSpecificVehicle(ped float64, vehicle float64) bool;

/**
 * Gets a value indicating whether the specified ped is on top of any vehicle.
 * Return 1 when ped is on vehicle.
 * Return 0 when ped is not on a vehicle.
 */
func (_client) IsPedOnVehicle(ped float64) bool;

/**
 * IS_PED_*
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 */
func (_client) IsPedOpeningADoor(ped float64) bool;
/**
 * IS_PED_*
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 */
func (_client) N_0x26af0e8e30bd2a2c(ped float64) bool;

func (_client) IsPedPerformingDependentComboLimit(ped float64) bool;
func (_client) N_0xebd0edba5be957cf(ped float64) bool;

func (_client) IsPedPerformingMeleeAction(ped float64) bool;
func (_client) N_0xdcca191df9980fd7(ped float64) bool;

func (_client) IsPedPerformingStealthKill(ped float64) bool;

func (_client) IsPedPlantingBomb(ped float64) bool;

func (_client) IsPedPlayingBaseClipInScenario(ped float64) bool;
func (_client) N_0x621c6e4729388e41(ped float64) bool;

func (_client) IsPedProne(ped float64) bool;

/**
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
 */
func (_client) IsPedRagdoll(ped float64) bool;

/**
 * Returns whether the specified ped is reloading.
 */
func (_client) IsPedReloading(ped float64) bool;

func (_client) IsPedRespondingToEvent(ped float64, event float64) bool;

func (_client) IsPedRingtonePlaying(ped float64) bool;

func (_client) IsPedRunning(ped float64) bool;

func (_client) IsPedRunningArrestTask(ped float64) bool;

func (_client) IsPedRunningMeleeTask(ped float64) bool;
func (_client) N_0xd1871251f3b5acd7(ped float64) bool;

func (_client) IsPedRunningMobilePhoneTask(ped float64) bool;

func (_client) IsPedRunningRagdollTask(ped float64) bool;

func (_client) IsPedShaderEffectValid(ped float64) bool;
func (_client) N_0x81aa517fbba05d39(ped float64) bool;

/**
 * Returns whether the specified ped is shooting.
 */
func (_client) IsPedShooting(ped float64) bool;

func (_client) IsPedShootingInArea(ped float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p7 bool, p8 bool) bool;

/**
 * Detect if ped is in any vehicle
 * [True/False]
 */
func (_client) IsPedSittingInAnyVehicle(ped float64) bool;

/**
 * Detect if ped is sitting in the specified vehicle
 * [True/False]
 */
func (_client) IsPedSittingInVehicle(ped float64, vehicle float64) bool;

func (_client) IsPedSprinting(ped float64) bool;

func (_client) IsPedStill(ped float64) bool;

/**
 * Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
 */
func (_client) IsPedStopped(ped float64) bool;

/**
 * What's strafing?
 */
func (_client) IsPedStrafing(ped float64) bool;

func (_client) IsPedSwappingWeapon(Ped float64) bool;
func (_client) N_0x3795688a307e1eb6(Ped float64) bool;

func (_client) IsPedSwimming(ped float64) bool;

func (_client) IsPedSwimmingUnderWater(ped float64) bool;

func (_client) IsPedTakingOffHelmet(ped float64) bool;
func (_client) N_0x14590ddbedb1ec85(ped float64) bool;

func (_client) IsPedTracked(ped float64) bool;

func (_client) IsPedTryingToEnterALockedVehicle(ped float64) bool;

func (_client) IsPedUsingActionMode(ped float64) bool;

func (_client) IsPedUsingAnyScenario(ped float64) bool;

func (_client) IsPedUsingScenario(ped float64, scenario string) bool;

func (_client) IsPedVaulting(ped float64) bool;

func (_client) IsPedWalking(ped float64) bool;

func (_client) IsPedWeaponComponentActive(ped float64, weaponHash interface{}, componentHash interface{}) bool;

func (_client) IsPedWeaponReadyToShoot(ped float64) bool;

/**
 * Returns true if the ped passed through the parenthesis is wearing a helmet.
 */
func (_client) IsPedWearingHelmet(ped float64) bool;

func (_client) IsPedheadshotImgUploadAvailable() bool;
func (_client) N_0xebb376779a760aa8() bool;

/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 */
func (_client) IsPedheadshotReady(id float64) bool;

/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 */
func (_client) IsPedheadshotValid(id float64) bool;

func (_client) IsPickupWeaponObjectValid(object float64) bool;
func (_client) N_0x11d1e53a726891fe(object float64) bool;

func (_client) IsPlaneLandingGearIntact(plane float64) bool;
func (_client) N_0x4198ab0022b15f87(plane float64) bool;
func (_client) VehicleHasLandingGear(plane float64) bool;

func (_client) IsPlaybackGoingOnForVehicle(vehicle float64) bool;

func (_client) IsPlaybackUsingAiGoingOnForVehicle(vehicle float64) bool;

/**
 * Returns true if an unk value is greater than 0.0f
 */
func (_client) IsPlayerBattleAware(player float64) bool;
/**
 * Returns true if an unk value is greater than 0.0f
 */
func (_client) N_0x38d28da81e4e9bf9(player float64) bool;

/**
 * Return true while player is being arrested / busted.
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
 */
func (_client) IsPlayerBeingArrested(player float64, atArresting bool) bool;

func (_client) IsPlayerBluetoothEnable(player float64) bool;
func (_client) N_0x65faee425de637b0(player float64) bool;

/**
 * Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
 * Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
 */
func (_client) IsPlayerCamControlDisabled() bool;
/**
 * Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
 * Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
 */
func (_client) N_0x7c814d2fb49f40c0() bool;

/**
 * Returns TRUE if the player ('s ped) is climbing at the moment.
 */
func (_client) IsPlayerClimbing(player float64) bool;

/**
 * Can the player control himself, used to disable controls for player for things like a cutscene.
 * ---
 * You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
 */
func (_client) IsPlayerControlOn(player float64) bool;

func (_client) IsPlayerDead(player float64) bool;

func (_client) IsPlayerEntirelyInsideGarage(garageHash interface{}, player float64, p2 float64, p3 float64) bool;
func (_client) N_0x024a60deb0ea69f0(garageHash interface{}, player float64, p2 float64, p3 float64) bool;

/**
 * Gets a value indicating whether the specified player is currently aiming freely.
 */
func (_client) IsPlayerFreeAiming(player float64) bool;

/**
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
 */
func (_client) IsPlayerFreeAimingAtEntity(player float64, entity float64) bool;

func (_client) IsPlayerFreeForAmbientTask(player float64) bool;

func (_client) IsPlayerInCutscene(player float64) bool;

/**
 * this function is hard-coded to always return 0.
 */
func (_client) IsPlayerLoggingInNp() bool;

/**
 * Returns TRUE if the game is in online mode and FALSE if in offline mode.
 * This is an alias for NETWORK_IS_SIGNED_ONLINE.
 */
func (_client) IsPlayerOnline() bool;

func (_client) IsPlayerPartiallyInsideGarage(garageHash interface{}, player float64, p2 float64) bool;
func (_client) N_0x1761dc5d8471cbaa(garageHash interface{}, player float64, p2 float64) bool;

/**
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
 */
func (_client) IsPlayerPlaying(player float64) bool;

func (_client) IsPlayerPressingHorn(player float64) bool;

func (_client) IsPlayerReadyForCutscene(player float64) bool;

/**
 * Returns true if the player is riding a train.
 */
func (_client) IsPlayerRidingTrain(player float64) bool;

func (_client) IsPlayerScriptControlOn(player float64) bool;

/**
 * Returns true if the player is currently switching, false otherwise.
 * (When the camera is in the sky moving from Trevor to Franklin for example)
 */
func (_client) IsPlayerSwitchInProgress() bool;
/**
 * Returns true if the player is currently switching, false otherwise.
 * (When the camera is in the sky moving from Trevor to Franklin for example)
 */
func (_client) N_0xd9d2cfff49fab35f() bool;

func (_client) IsPlayerTargettingAnything(player float64) bool;

func (_client) IsPlayerTargettingEntity(player float64, entity float64) bool;

func (_client) IsPlayerTeleportActive() bool;

func (_client) IsPlayerVehRadioEnable() bool;
func (_client) N_0x5f43d83fd6738741() bool;
func (_client) IsPlayerVehicleRadioEnabled() bool;

func (_client) IsPlayerWantedLevelGreater(player float64, wantedLevel float64) bool;

func (_client) IsPlayingPhoneGestureAnim(ped float64) bool;

/**
 * NativeDB Introduced: v1604
 */
func (_client) IsPlaylistUnk(tvChannel float64, p1 float64) bool;

/**
 * An **angled area** is an X-Z oriented rectangle with three parameters:
 * 1.  **origin**: the mid-point along a base edge of the rectangle;
 * 2.  **extent**: the mid-point of opposite base edge on the other Z;
 * 3.  **width**: the length of the base edge; (named derived from logging strings `CNetworkRoadNodeWorldStateData`).
 * The oriented rectangle can then be derived from the direction of the two points (`norm(origin - extent)`), its orthonormal, and the width, e.g:
 * 1.  [golf_mp](https://i.imgur.com/JhsQAK9.png)
 * 2.  [am_taxi](https://i.imgur.com/TJWCZaT.jpg)
 * @param xPos The x coordinate.
 * @param yPos The y coordinate.
 * @param zPos The z coordinate.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 * @param p10 a debug flag invoking functions in the same path as `DRAW_MARKER`
 * @param includez If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
 */
func (_client) IsPointInAngledArea(xPos float64, yPos float64, zPos float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, p10 bool, includez bool) bool;

func (_client) IsPointObscuredByAMissionEntity(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) bool;

/**
 * Gets a value indicating whether the specified position is on a road.
 * The vehicle parameter is not implemented (ignored).
 */
func (_client) IsPointOnRoad(x float64, y float64, z float64, vehicle float64) bool;

/**
 * NativeDB Introduced: v1290
 */
func (_client) IsPopMultiplierAreaUnk(id float64) bool;

/**
 * The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
 * @param x X coordinate of the position to check.
 * @param y Y coordinate of the position to check.
 * @param z Z coordinate of the position to check.
 * @param range The range, seems to not be very accurate during testing.
 * @param p4 Unknown, when set to true it seems to always return true no matter what I try.
 * @param checkVehicles Check for any vehicles in that area.
 * @param checkPeds Check for any peds in that area.
 * @param p7 Unknown.
 * @param p8 Unknown.
 * @param ignoreEntity This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
 * @param p10 Unknown.
 * @return Returns true if there is anything in that location matching the provided parameters.
 */
func (_client) IsPositionOccupied(x float64, y float64, z float64, _range float64, p4 bool, checkVehicles bool, checkPeds bool, p7 bool, p8 bool, ignoreEntity float64, p10 bool) bool;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) IsPrevWeatherType(weatherType string) bool;

func (_client) IsPrincipalAceAllowed(principal string, object string) bool;

/**
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
 * ownedByPlayer = only projectiles fired by the player will be detected.
 */
func (_client) IsProjectileInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, ownedByPlayer bool) bool;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * ```
 * NativeDB Removed Parameter 7: float p7
 * ```
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) IsProjectileTypeInAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, p7 float64, weaponHash interface{}, ownedByPlayer bool) bool;

/**
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
 */
func (_client) IsProjectileTypeInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, _type float64, ownedByPlayer bool) bool;

func (_client) IsProjectileTypeWithinDistance(x float64, y float64, z float64, projHash interface{}, radius float64, ownedByPlayer bool) bool;
func (_client) N_0x34318593248c8fb2(x float64, y float64, z float64, projHash interface{}, radius float64, ownedByPlayer bool) bool;
func (_client) IsProjectileTypeInRadius(x float64, y float64, z float64, projHash interface{}, radius float64, ownedByPlayer bool) bool;

func (_client) IsPs3Version() bool;

func (_client) IsRadarHidden() bool;

func (_client) IsRadarPreferenceSwitchedOn() bool;

func (_client) IsRadioFadedOut() bool;
func (_client) N_0x0626a247d2405330() bool;

func (_client) IsRadioRetuning() bool;

/**
 * Checks if you're recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
 * mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944
 * retn
 */
func (_client) IsRecording() bool;

func (_client) IsReportugcMenuOpen() bool;
func (_client) N_0x9135584d09a3437e() bool;

func (_client) IsRockstarMessageReadyForScript() bool;
func (_client) N_0xbc1cc91205ec8d6e() bool;

/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns true if the return value of a scaleform function is ready to be collected
 */
func (_client) IsScaleformMovieMethodReturnValueReady(method_return float64) bool;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns true if the return value of a scaleform function is ready to be collected
 */
func (_client) N_0x768ff8961ba904d6(method_return float64) bool;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
 * @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
 * @return Returns true if the return value of a scaleform function is ready to be collected
 */
func (_client) GetScaleformMovieFunctionReturnBool(method_return float64) bool;

/**
 * Occurrences in the b617d scripts:
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "BLIMP",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "KORTZ_SECURITY",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5",
 * "Rampage1",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE"
 * Sometimes used with DOES_SCENARIO_GROUP_EXIST:
 * if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
 * else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
 */
func (_client) IsScenarioGroupEnabled(scenarioGroup string) bool;

func (_client) IsScenarioOccupied(p0 float64, p1 float64, p2 float64, p3 float64, p4 bool) bool;

/**
 * Occurrences in the b617d scripts:
 * "PROP_HUMAN_SEAT_CHAIR",
 * "WORLD_HUMAN_DRINKING",
 * "WORLD_HUMAN_HANG_OUT_STREET",
 * "WORLD_HUMAN_SMOKING",
 * "WORLD_MOUNTAIN_LION_WANDER",
 * "WORLD_HUMAN_DRINKING"
 * Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.
 * scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
 */
func (_client) IsScenarioTypeEnabled(scenarioType string) bool;

func (_client) IsScreenFadedIn() bool;

func (_client) IsScreenFadedOut() bool;

func (_client) IsScreenFadingIn() bool;

func (_client) IsScreenFadingOut() bool;

/**
 * Returns whether screen transition to blur/from blur is running.
 */
func (_client) IsScreenblurFadeRunning() bool;
/**
 * Returns whether screen transition to blur/from blur is running.
 */
func (_client) N_0x7b226c785a52a0a9() bool;

/**
 * In drunk_controller.c4, sub_309
 * if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
 * CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
 * }
 */
func (_client) IsScriptGlobalShaking() bool;
/**
 * In drunk_controller.c4, sub_309
 * if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
 * CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
 * }
 */
func (_client) N_0xc912af078af19212() bool;

func (_client) IsScriptedConversationLoaded() bool;

func (_client) IsScriptedConversationOngoing() bool;

func (_client) IsScriptedHudComponentActive(id float64) bool;

func (_client) IsScriptedHudComponentHiddenThisFrame(id float64) bool;
func (_client) N_0x09c0403ed9a751c2(id float64) bool;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) IsScriptedScenarioPedUsingConditionalAnim(ped float64, animDict string, anim string) bool;

func (_client) IsScriptedSpeechPlaying(p0 float64) bool;

/**
 * NativeDB Introduced: v1493
 */
func (_client) IsScubaGearLightEnabled(ped float64) bool;

func (_client) IsSeatWarpOnly(vehicle float64, seatIndex float64) bool;
func (_client) N_0xf7f203e31f96f6a1(vehicle float64, seatIndex float64) bool;

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 */
func (_client) IsShockingEventInSphere(eventType float64, x float64, y float64, z float64, radius float64) bool;

/**
 * Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
 */
func (_client) IsSniperBulletInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) bool;

/**
 * This function is hard-coded to always return 0.
 */
func (_client) IsSniperInverted() bool;

func (_client) IsSocialClubActive() bool;
func (_client) N_0xc406be343fc4b9af() bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) IsSpecialAbilityActive(player float64) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) IsSpecialAbilityEnabled(player float64) bool;

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) IsSpecialAbilityMeterFull(player float64) bool;

func (_client) IsSpecialAbilityUnlocked(playerModel interface{}) bool;

func (_client) IsSphereVisible(x float64, y float64, z float64, radius float64) bool;

func (_client) IsSphereVisibleToAnotherMachine(p0 float64, p1 float64, p2 float64, p3 float64) bool;

func (_client) IsSphereVisibleToPlayer(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) bool;

/**
 * Returns true when the srl from BEGIN_SRL is loaded.
 * @return *   A boolean once BeginSrl srl is loaded.
 */
func (_client) IsSrlLoaded() bool;

func (_client) IsStoreAvailableToUser() bool;
func (_client) N_0x883d79c4071e18b3() bool;

func (_client) IsStreamPlaying() bool;

func (_client) IsStreamingAdditionalText(p0 float64) bool;

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Returns whether an asynchronous streaming file registration completed.
 * @param registerAs The file name to check, for example `asset.ydr`.
 * @return Whether or not the streaming file has been registered.
 */
func (_client) IsStreamingFileReady(registerAs string) bool;

func (_client) IsStreamvolActive() bool;
func (_client) N_0xbc9823ab80a3dcac() bool;

func (_client) IsStringNull(_string string) bool;

func (_client) IsStringNullOrEmpty(_string string) bool;

func (_client) IsStuntJumpInProgress() bool;

func (_client) IsStuntJumpMessageShowing() bool;
func (_client) N_0x2272b0a1343129f4() bool;

func (_client) IsSubtitlePreferenceSwitchedOn() bool;

func (_client) IsSwitchReadyForDescent() bool;
func (_client) N_0xdfa80cb25d0a19b3() bool;

func (_client) IsSwitchSkippingDescent() bool;
func (_client) DestroyPlayerInPauseMenu() bool;

func (_client) IsSynchronizedSceneHoldLastFrame(sceneID float64) bool;
func (_client) N_0x7f2f4f13ac5257ef(sceneID float64) bool;

func (_client) IsSynchronizedSceneLooped(sceneID float64) bool;

/**
 * Returns true if a synchronized scene is running
 */
func (_client) IsSynchronizedSceneRunning(sceneId float64) bool;

func (_client) IsSystemUiBeingDisplayed() bool;

func (_client) IsTaskMoveNetworkActive(ped float64) bool;
func (_client) N_0x921ce12c489c4c41(ped float64) bool;

func (_client) IsTaskMoveNetworkReadyForTransition(ped float64) bool;
func (_client) N_0x30ed88d5e0c56a37(ped float64) bool;

func (_client) IsTaxiLightOn(vehicle float64) bool;

func (_client) IsTennisMode(ped float64) bool;

func (_client) IsThisAMinigameScript() bool;

func (_client) IsThisModelABicycle(model interface{}) bool;

func (_client) IsThisModelABike(model interface{}) bool;

func (_client) IsThisModelABoat(model interface{}) bool;

/**
 * To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)
 */
func (_client) IsThisModelACar(model interface{}) bool;

func (_client) IsThisModelAHeli(model interface{}) bool;

/**
 * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
 */
func (_client) IsThisModelAJetski(model interface{}) bool;
/**
 * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
 */
func (_client) IsThisModelASubmersible(model interface{}) bool;
/**
 * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
 */
func (_client) IsThisModelAnEmergencyBoat(model interface{}) bool;

func (_client) IsThisModelAPlane(model interface{}) bool;

func (_client) IsThisModelAQuadbike(model interface{}) bool;

func (_client) IsThisModelATrain(model interface{}) bool;

func (_client) IsThisModelAnAmphibiousCar(model interface{}) bool;

func (_client) IsThisModelAnAmphibiousQuadbike(model interface{}) bool;
func (_client) N_0xa1a9fc1c76a6730d(model interface{}) bool;

func (_client) IsThreadActive(threadId float64) bool;

/**
 * Returns true if the two times are equal; otherwise returns false.
 */
func (_client) IsTimeEqualTo(timeA float64, timeB float64) bool;
/**
 * Returns true if the two times are equal; otherwise returns false.
 */
func (_client) AreIntegersEqual(timeA float64, timeB float64) bool;

/**
 * Subtracts the second argument from the first, then returns whether the result is negative.
 */
func (_client) IsTimeLessThan(timeA float64, timeB float64) bool;
/**
 * Subtracts the second argument from the first, then returns whether the result is negative.
 */
func (_client) SubtractBFromAAndCheckIfNegative(timeA float64, timeB float64) bool;

/**
 * Subtracts the first argument from the second, then returns whether the result is negative.
 */
func (_client) IsTimeMoreThan(timeA float64, timeB float64) bool;
/**
 * Subtracts the first argument from the second, then returns whether the result is negative.
 */
func (_client) SubtractAFromBAndCheckIfNegative(timeA float64, timeB float64) bool;

func (_client) IsToggleModOn(vehicle float64, modType float64) bool;

/**
 * returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
 * Target needs to be tracked.. won't work otherwise.
 */
func (_client) IsTrackedPedVisible(ped float64) bool;

func (_client) IsTrackedPointVisible(point float64) bool;

func (_client) IsTurretSeat(vehicle float64, seatIndex float64) bool;
func (_client) N_0xe33ffa906ce74880(vehicle float64, seatIndex float64) bool;

/**
 * IS_*
 */
func (_client) IsTvPlaylistItemPlaying(videoCliphash interface{}) bool;
/**
 * IS_*
 */
func (_client) N_0x0ad973ca1e077b60(videoCliphash interface{}) bool;
/**
 * IS_*
 */
func (_client) LoadTvChannel(videoCliphash interface{}) bool;

func (_client) IsUsingKeyboard(padIndex float64) bool;
func (_client) GetLastInputMethod(padIndex float64) bool;
func (_client) IsInputDisabled(padIndex float64) bool;

func (_client) IsUsingKeyboard_2(padIndex float64) bool;
func (_client) N_0x13337b38db572509(padIndex float64) bool;
func (_client) IsInputJustDisabled(padIndex float64) bool;

func (_client) IsValidInterior(interior float64) bool;

/**
 * IS_*
 */
func (_client) IsValidMpGamerTagMovie(gamerTagId float64) bool;
/**
 * IS_*
 */
func (_client) N_0xeb709a36958abe0d(gamerTagId float64) bool;
/**
 * IS_*
 */
func (_client) HasMpGamerTag_2(gamerTagId float64) bool;
/**
 * IS_*
 */
func (_client) HasMpGamerTagCrewFlagsSet(gamerTagId float64) bool;

/**
 * p1 is false almost always.
 * However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF
 */
func (_client) IsVehicleAConvertible(vehicle float64, p1 bool) bool;

func (_client) IsVehicleAlarmActivated(vehicle float64) bool;

func (_client) IsVehicleAlarmSet(vehicle float64) bool;

func (_client) IsVehicleAttachedToCargobob(cargobob float64, vehicleAttached float64) bool;

/**
 * Scripts verify that towTruck is the first parameter, not the second.
 */
func (_client) IsVehicleAttachedToTowTruck(towTruck float64, vehicle float64) bool;

func (_client) IsVehicleAttachedToTrailer(vehicle float64) bool;

func (_client) IsVehicleAudiblyDamaged(vehicle float64) bool;
func (_client) N_0x5db8010ee71fdef2(vehicle float64) bool;

/**
 * Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
 * _IS_VEHICLE_*
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) IsVehicleBeingHalted(vehicle float64) bool;
/**
 * Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
 * _IS_VEHICLE_*
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) N_0xc69bb1d832a710ef(vehicle float64) bool;

func (_client) IsVehicleBumperBouncing(vehicle float64, frontBumper bool) bool;
func (_client) N_0x27b926779deb502d(vehicle float64, frontBumper bool) bool;

func (_client) IsVehicleBumperBrokenOff(vehicle float64, front bool) bool;

/**
 * Appears to return true if the vehicle has any damage, including cosmetically.
 * GET_*
 */
func (_client) IsVehicleDamaged(vehicle float64) bool;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) IsVehicleDoorDamaged(veh float64, doorID float64) bool;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * @param vehicle The vehicle to check.
 * @param doorIndex The index of the door to check.
 * @return A bool indiciating if the specified door is fully open on the specified vehicle.
 */
func (_client) IsVehicleDoorFullyOpen(vehicle float64, doorIndex float64) bool;

/**
 * p1 is always 0 in the scripts.
 * p1 = check if vehicle is on fire
 */
func (_client) IsVehicleDriveable(vehicle float64, isOnFireCheck bool) bool;

/**
 * Only ever used once in decompiled scripts: **am_pi_menu**:
 * Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it **has been** on fire.
 * It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.
 * This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
 * @param vehicle The vehicle to check.
 * @return Returns true when the engine of your vehicle is on fire. Returns false if it's not on fire.
 */
func (_client) IsVehicleEngineOnFire(vehicle float64) bool;
/**
 * Only ever used once in decompiled scripts: **am_pi_menu**:
 * Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it **has been** on fire.
 * It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.
 * This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
 * @param vehicle The vehicle to check.
 * @return Returns true when the engine of your vehicle is on fire. Returns false if it's not on fire.
 */
func (_client) N_0xec69adf931aae0c3(vehicle float64) bool;

func (_client) IsVehicleEngineStarting(vehicle float64) bool;

func (_client) IsVehicleExtraTurnedOn(vehicle float64, extraId float64) bool;

func (_client) IsVehicleHighDetail(vehicle float64) bool;

/**
 * Returns whether the specified vehicle is currently in a burnout.
 * vb.net
 * Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
 * End Function
 */
func (_client) IsVehicleInBurnout(vehicle float64) bool;

/**
 * garageName example "Michael - Beverly Hills"
 */
func (_client) IsVehicleInGarageArea(garageName string, vehicle float64) bool;

func (_client) IsVehicleInteriorLightOn(vehicle float64) bool;

func (_client) IsVehicleModel(vehicle float64, model interface{}) bool;

func (_client) IsVehicleNeedsToBeHotwired(vehicle float64) bool;

/**
 * indices:
 * 0 = Left
 * 1 = Right
 * 2 = Front
 * 3 = Back
 */
func (_client) IsVehicleNeonLightEnabled(vehicle float64, index float64) bool;

/**
 * Returns true if the id is non zero.
 */
func (_client) IsVehicleNodeIdValid(vehicleNodeId float64) bool;

/**
 * Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
 * End Function
 */
func (_client) IsVehicleOnAllWheels(vehicle float64) bool;

/**
 * Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
 */
func (_client) IsVehicleParachuteActive(vehicle float64) bool;
/**
 * Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
 */
func (_client) N_0x3de51e9c80b116cf(vehicle float64) bool;

func (_client) IsVehiclePreviouslyOwnedByPlayer(vehicle float64) bool;

/**
 * IS_VEHICLE_*
 * @param vehicle The vehicle to check
 * @return Is the given vehicle's radio enabled
 */
func (_client) IsVehicleRadioEnabled(vehicle float64) bool;
/**
 * IS_VEHICLE_*
 * @param vehicle The vehicle to check
 * @return Is the given vehicle's radio enabled
 */
func (_client) N_0x0be4be946463f917(vehicle float64) bool;

func (_client) IsVehicleRadioLoud(vehicle float64) bool;

func (_client) IsVehicleRocketBoostActive(vehicle float64) bool;

/**
 * Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
 */
func (_client) IsVehicleSearchlightOn(vehicle float64) bool;

/**
 * Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
 * side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
 * onEnter = check if you can enter (true) or exit (false) a vehicle.
 * @param vehicle The vehicle to check.
 * @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
 */
func (_client) IsVehicleSeatAccessible(ped float64, vehicle float64, seatIndex float64, side bool, onEnter bool) bool;
/**
 * Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
 * side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
 * onEnter = check if you can enter (true) or exit (false) a vehicle.
 * @param vehicle The vehicle to check.
 * @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
 */
func (_client) N_0x639431e895b9aa57(ped float64, vehicle float64, seatIndex float64, side bool, onEnter bool) bool;

/**
 * Seat indices range from -1 to [`GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS`](#\_0xA7C4F2C6E744A550) minus one.
 * ```cpp
 * // CTaskExitVehicleSeat::eSeatPosition - 1
 * enum eSeatPosition
 * {
 * SF_FrontDriverSide = -1,
 * SF_FrontPassengerSide = 0,
 * SF_BackDriverSide = 1,
 * SF_BackPassengerSide = 2,
 * SF_AltFrontDriverSide = 3,
 * SF_AltFrontPassengerSide = 4,
 * SF_AltBackDriverSide = 5,
 * SF_AltBackPassengerSide = 6,
 * };
 * ```
 * ```
 * NativeDB Added Parameter 3: BOOL isTaskRunning
 * isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
 * ```
 * @param vehicle The vehicle to check.
 * @param seatIndex The eSeatPosition or -2 for **any** vehicle seat.
 */
func (_client) IsVehicleSeatFree(vehicle float64, seatIndex float64) bool;

func (_client) IsVehicleSirenAudioOn(vehicle float64) bool;
func (_client) N_0xb5cc40fbcb586380(vehicle float64) bool;
func (_client) IsVehicleSirenSoundOn(vehicle float64) bool;

func (_client) IsVehicleSirenOn(vehicle float64) bool;

func (_client) IsVehicleSlipstreamLeader(vehicle float64) bool;
func (_client) N_0x48c633e94a8142a7(vehicle float64) bool;

/**
 * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
 */
func (_client) IsVehicleSprayable(vehicle float64) bool;
/**
 * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
 */
func (_client) N_0x8d474c8faeff6cde(vehicle float64) bool;
/**
 * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
 */
func (_client) IsVehicleShopResprayAllowed(vehicle float64) bool;

func (_client) IsVehicleStolen(vehicle float64) bool;

/**
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 * @return True if the vehicle's speed is equal to, or less than 0.02 meters per second, or 0.05 meters per second, if the vehicle's handbrake is engaged.
 */
func (_client) IsVehicleStopped(vehicle float64) bool;

/**
 * Is this for red lights only  more testing required.
 */
func (_client) IsVehicleStoppedAtTrafficLights(vehicle float64) bool;

func (_client) IsVehicleStuckOnRoof(vehicle float64) bool;

/**
 * p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
 */
func (_client) IsVehicleStuckTimerUp(vehicle float64, p1 float64, p2 float64) bool;

/**
 * wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
 * completely - is to check if tire completely gone from rim.
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 */
func (_client) IsVehicleTyreBurst(vehicle float64, wheelID float64, completely bool) bool;

func (_client) IsVehicleVisible(vehicle float64) bool;

func (_client) IsVehicleWanted(vehicle float64) bool;

func (_client) IsVehicleWeaponDisabled(weaponHash interface{}, vehicle float64, owner float64) bool;
func (_client) N_0x563b65a643ed072e(weaponHash interface{}, vehicle float64, owner float64) bool;

/**
 * cpp
 * enum eWindowId {
 * VEH_EXT_WINDSCREEN = 0,
 * VEH_EXT_WINDSCREEN_R = 1,
 * VEH_EXT_WINDOW_LF = 2,
 * VEH_EXT_WINDOW_RF = 3,
 * VEH_EXT_WINDOW_LR = 4,
 * VEH_EXT_WINDOW_RR = 5,
 * VEH_EXT_WINDOW_LM = 6,
 * VEH_EXT_WINDOW_RM = 7,
 * }
 */
func (_client) IsVehicleWindowIntact(vehicle float64, windowIndex float64) bool;

func (_client) IsWarningMessageActive() bool;
func (_client) IsMedicalDisabled() bool;

/**
 * IS_WARNING_MESSAGE_*
 */
func (_client) IsWarningMessageActive_2() bool;
/**
 * IS_WARNING_MESSAGE_*
 */
func (_client) N_0xaf42195a42c63bba() bool;

func (_client) IsWaypointActive() bool;

func (_client) IsWaypointPlaybackGoingOnForPed(p0 float64) bool;

func (_client) IsWaypointPlaybackGoingOnForVehicle(vehicle float64) bool;

func (_client) IsWeaponValid(weaponHash interface{}) bool;

/**
 * Gets whether the world point the calling script is registered to is within desired range of the player.
 */
func (_client) IsWorldPointWithinBrainActivationRange() bool;

func (_client) IsXbox360Version() bool;

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) KnockOffPedProp(ped float64, p1 bool, p2 bool, p3 bool, p4 bool) {}

func (_client) KnockPedOffVehicle(ped float64) {}

/**
 * Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
 */
func (_client) LandingMenuIsActive() bool;
/**
 * Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
 */
func (_client) N_0x3bbbd13e5041a79e() bool;

func (_client) Leaderboards2ReadByHandle() (bool , float64,float64) { return false,0.0,0.0 }

func (_client) Leaderboards2ReadByPlatform(gamerHandleCsv string, platformName string)  (bool, float64){
	return false,0.0
}
func (_client) N_0xf1ae5dcdbfca2721(gamerHandleCsv string, platformName string)  (bool, float64){
	return false,0.0
}

func (_client) Leaderboards2ReadByRadius(p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) Leaderboards2ReadByRank(p1 float64, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) Leaderboards2ReadByRow(p2 float64, p4 float64, p6 float64): [boolean, number, number, number, number];

func (_client) Leaderboards2ReadByScoreFloat(p1 float64, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) Leaderboards2ReadByScoreInt(p1 float64, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) Leaderboards2ReadFriendsByRow(p2 float64, p3 bool, p4 float64, p5 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) Leaderboards2ReadRankPrediction(): [boolean, number, number, number];
func (_client) N_0xc38dc1e90d22547c(): [boolean, number, number, number];

func (_client) Leaderboards2WriteData(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) Leaderboards2WriteDataForEventType() (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xc980e62e33df1d5c() (bool , float64,float64) { return false,0.0,0.0 }

func (_client) LeaderboardsCacheDataRow(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) LeaderboardsClearCacheData() {}

func (_client) LeaderboardsDeaths(statName interface{}, value float64) {}
func (_client) N_0x428eaf89e24f6c36(statName interface{}, value float64) {}

func (_client) LeaderboardsGetCacheDataRow(p0 float64, p1 float64, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) LeaderboardsGetCacheExists(p0 float64) bool;

func (_client) LeaderboardsGetCacheNumberOfRows(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x58a651cd201d89ad(p0 float64) float64 {
	return 0.0
}

func (_client) LeaderboardsGetCacheTime(p0 float64) float64 {
	return 0.0
}

func (_client) LeaderboardsGetColumnId(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) LeaderboardsGetColumnType(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) LeaderboardsGetNumberOfColumns(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) LeaderboardsReadAnyPending() bool;
func (_client) N_0xa31fd15197b192bd() bool;

func (_client) LeaderboardsReadClear(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) LeaderboardsReadClearAll() float64 {
	return 0.0
}

func (_client) LeaderboardsReadPending(p0 float64, p1 float64, p2 float64) bool;

func (_client) LeaderboardsReadSuccessful(p0 float64, p1 float64, p2 float64) bool;

func (_client) LeaderboardsWriteAddColumn(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0x0bca1d2c47b0d269(p0 float64, p1 float64, p2 float64) {}

func (_client) LeaderboardsWriteAddColumnLong(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0x2e65248609523599(p0 float64, p1 float64, p2 float64) {}

/**
 * Leaves cursor mode. This function supports SDK infrastructure and is not intended to be used directly from your code.
 */
func (_client) LeaveCursorMode() {}

func (_client) LinkNamedRendertarget(modelHash interface{}) {}

/**
 * L* (LINK_*?)
 */
func (_client) LinkStaticEmitterToEntity(emitterName string, entity float64) {}
/**
 * L* (LINK_*?)
 */
func (_client) N_0x651d3228960d08af(emitterName string, entity float64) {}

func (_client) LoadAllObjectsNow() {}

/**
 * This native has been removed in v1180.
 * @param keepInMemory if true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit.
 */
func (_client) LoadAllPathNodes(keepInMemory bool) bool;

/**
 * The following cloudhats are useable:
 * altostratus
 * Cirrus
 * cirrocumulus
 * Clear 01
 * Cloudy 01
 * Contrails
 * Horizon
 * horizonband1
 * horizonband2
 * horizonband3
 * horsey
 * Nimbus
 * Puffs
 * RAIN
 * Snowy 01
 * Stormy 01
 * stratoscumulus
 * Stripey
 * shower
 * Wispy
 */
func (_client) LoadCloudHat(name string, transitionTime float64) {}
/**
 * The following cloudhats are useable:
 * altostratus
 * Cirrus
 * cirrocumulus
 * Clear 01
 * Cloudy 01
 * Contrails
 * Horizon
 * horizonband1
 * horizonband2
 * horizonband3
 * horsey
 * Nimbus
 * Puffs
 * RAIN
 * Snowy 01
 * Stormy 01
 * stratoscumulus
 * Stripey
 * shower
 * Wispy
 */
func (_client) SetCloudHatTransition(name string, transitionTime float64) {}

/**
 * From fm_deathmatch_creator and fm_race_creator:
 * FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
 * FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
 * NativeDB Introduced: v1604
 */
func (_client) LoadContentChangeSetGroup(hash interface{}) {}

/**
 * 0 - default
 * 1 - HeistIsland
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) LoadGlobalWaterType(waterType float64) {}

func (_client) LoadMissionCreatorPhoto(p0 string, p3 bool) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x4862437a486f91b0(p0 string, p3 bool) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) LoadMovieMeshSet(movieMeshSetName string) float64 {
	return 0.0
}

/**
 * Reads the contents of a text file in a specified resource.
 * If executed on the client, this file has to be included in `files` in the resource manifest.
 * Example: `local data = LoadResourceFile("devtools", "data.json")`
 * @param resourceName The resource name.
 * @param fileName The file in the resource.
 * @return The file contents
 */
func (_client) LoadResourceFile(resourceName string, fileName string) string;

/**
 * Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
 */
func (_client) LoadRopeData(ropeId float64, rope_preset string) {}

func (_client) LoadScene(x float64, y float64, z float64) {}

/**
 * Example:
 * AUDIO::LOAD_STREAM("CAR_STEAL_1_PASSBY", "CAR_STEAL_1_SOUNDSET");
 * All found occurrences in the b678d decompiled scripts: pastebin.com/3rma6w5w
 * Stream names often ends with "_MASTER", "_SMALL" or "_STREAM". Also "_IN", "_OUT" and numbers.
 * soundSet is often set to 0 in the scripts. These are common to end the soundSets: "_SOUNDS", "_SOUNDSET" and numbers.
 */
func (_client) LoadStream(streamName string, soundSet string) bool;

/**
 * Example:
 * AUDIO::LOAD_STREAM_WITH_START_OFFSET("STASH_TOXIN_STREAM", 2400, "FBI_05_SOUNDS");
 * Only called a few times in the scripts.
 */
func (_client) LoadStreamWithStartOffset(streamName string, startOffset float64, soundSet string) bool;

func (_client) LoadingscreenGetLoadFreemode() bool;
func (_client) N_0xef7d17bc6c85264c() bool;

func (_client) LoadingscreenGetLoadFreemodeWithEventName() bool;
func (_client) N_0x8aa464d4e0f6accd() bool;

func (_client) LoadingscreenIsLoadingFreemode() bool;
func (_client) N_0xc6dc823253fbb366() bool;
func (_client) IsUiLoadingMultiplayer() bool;

func (_client) LoadingscreenSetIsLoadingFreemode(toggle bool) {}
func (_client) N_0xc7e7181c09f33b69(toggle bool) {}

func (_client) LoadingscreenSetLoadFreemode(toggle bool) {}
func (_client) GetBroadcastFinshedLosSound(toggle bool) {}
func (_client) N_0xb0c56bd3d808d863(toggle bool) {}

/**
 * Only occurrence was false, in maintransition.
 */
func (_client) LoadingscreenSetLoadFreemodeWithEventName(toggle bool) {}
/**
 * Only occurrence was false, in maintransition.
 */
func (_client) N_0xfc309e94546fcdb5(toggle bool) {}
/**
 * Only occurrence was false, in maintransition.
 */
func (_client) IsInLoadingScreen(toggle bool) {}

/**
 * Possible return values: 0, 1, 2
 */
func (_client) LocalizationGetSystemDateFormat() float64 {
	return 0.0
}
/**
 * Possible return values: 0, 1, 2
 */
func (_client) GetUserLanguageId() float64 {
	return 0.0
}

/**
 * Same return values as GET_CURRENT_LANGUAGE
 */
func (_client) LocalizationGetSystemLanguage() float64 {
	return 0.0
}
/**
 * Same return values as GET_CURRENT_LANGUAGE
 */
func (_client) N_0x497420e022796b3f() float64 {
	return 0.0
}

/**
 * Locks the minimap to the specified angle in integer degrees.
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
 */
func (_client) LockMinimapAngle(angle float64) {}

/**
 * Locks the minimap to the specified world position.
 */
func (_client) LockMinimapPosition(x float64, y float64) {}

/**
 * Disables the radio station (hides it from the radio wheel).
 * NativeDB Introduced: v1493
 */
func (_client) LockRadioStation(radioStationName string, toggle bool) {}
/**
 * Disables the radio station (hides it from the radio wheel).
 * NativeDB Introduced: v1493
 */
func (_client) N_0x94f2e83ead7e6b82(radioStationName string, toggle bool) {}
/**
 * Disables the radio station (hides it from the radio wheel).
 * NativeDB Introduced: v1493
 */
func (_client) SetRadioStationDisabled(radioStationName string, toggle bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) LockRadioStationTrackList(radioStation string, trackListName string) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) Log10(value float64) float64 {
	return 0.0
}

/**
 * Not present in retail version of the game, actual definiton seems to be
 * _LOG_DEBUG_INFO(const char* category, const char* debugText);
 */
func (_client) LogDebugInfo(p0 string) {}
/**
 * Not present in retail version of the game, actual definiton seems to be
 * _LOG_DEBUG_INFO(const char* category, const char* debugText);
 */
func (_client) N_0x2162c446dfdf38fd(p0 string) {}

func (_client) LowerConvertibleRoof(vehicle float64, instantlyLower bool) {}

func (_client) LowerRetractableWheels(vehicle float64) {}
func (_client) N_0x5335be58c083e74e(vehicle float64) {}

/**
 * Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
 */
func (_client) MakePedReload(ped float64) bool;

/**
 * is this like setting is as no longer needed?
 */
func (_client) MarkObjectForDeletion(object float64) {}

func (_client) ModifyVehicleTopSpeed(vehicle float64, value float64) {}
func (_client) SetVehicleEnginePowerMultiplier(vehicle float64, value float64) {}

/**
 * Sets the water height for a given position and radius.
 */
func (_client) ModifyWater(x float64, y float64, radius float64, height float64) {}

func (_client) MoveVehicleDecals(p0 float64, p1 float64) {}

/**
 * Starts listening to the specified channel, when available.
 * @param channel A game voice channel ID.
 */
func (_client) MumbleAddVoiceChannelListen(channel float64) {}

/**
 * Adds the specified channel to the target list for the specified Mumble voice target ID.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
 * @param channel A game voice channel ID.
 */
func (_client) MumbleAddVoiceTargetChannel(targetId float64, channel float64) {}

/**
 * Adds the specified player to the target list for the specified Mumble voice target ID.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
 * @param player A game player index.
 */
func (_client) MumbleAddVoiceTargetPlayer(targetId float64, player float64) {}

/**
 * Adds the specified player to the target list for the specified Mumble voice target ID.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
 * @param serverId The player's server id.
 */
func (_client) MumbleAddVoiceTargetPlayerByServerId(targetId float64, serverId float64) {}

/**
 * Clears the target list for the specified Mumble voice target ID.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
 */
func (_client) MumbleClearVoiceTarget(targetId float64) {}

/**
 * Clears channels from the target list for the specified Mumble voice target ID.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
 */
func (_client) MumbleClearVoiceTargetChannels(targetId float64) {}

/**
 * Clears players from the target list for the specified Mumble voice target ID.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
 */
func (_client) MumbleClearVoiceTargetPlayers(targetId float64) {}

/**
 * Returns the mumble voice channel from a player's server id.
 * @param serverId The player's server id.
 * @return Int representing the identifier of the voice channel.
 */
func (_client) MumbleGetVoiceChannelFromServerId(serverId float64) float64 {
	return 0.0
}

/**
 * This native will return true if the user succesfully connected to the voice server.
 * If the user disabled the voice-chat setting it will return false.
 * @return True if the player is connected to a mumble server.
 */
func (_client) MumbleIsConnected() bool;

/**
 * Stops listening to the specified channel.
 * @param channel A game voice channel ID.
 */
func (_client) MumbleRemoveVoiceChannelListen(channel float64) {}

/**
 * Sets the current input distance. The player will be able to talk to other players within this distance.
 * @param distance The input distance.
 */
func (_client) MumbleSetAudioInputDistance(distance float64) {}

/**
 * Use this native to disable noise suppression and high pass filters.
 * The possible intents for this are as follows (backticks are used to represent hashes):
 * | Index | Description |
 * |-|-|
 * | \`speech\` | Default intent |
 * | \`music\` | Disable noise suppression and high pass filter |
 * @param intentHash The intent hash.
 */
func (_client) MumbleSetAudioInputIntent(intentHash interface{}) {}

/**
 * Sets the current output distance. The player will be able to hear other players talking within this distance.
 * @param distance The output distance.
 */
func (_client) MumbleSetAudioOutputDistance(distance float64) {}

/**
 * Changes the Mumble server address to connect to, and reconnects to the new address.
 * @param address The address of the mumble server.
 * @param port The port of the mumble server.
 */
func (_client) MumbleSetServerAddress(address string, port float64) {}

/**
 * Sets the audio submix ID for a specified player using Mumble 'Native Audio' functionality.
 * @param serverId The player's server ID.
 * @param submixId The submix ID.
 */
func (_client) MumbleSetSubmixForServerId(serverId float64, submixId float64) {}

/**
 * Sets the current Mumble voice target ID to broadcast voice to.
 * @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive). 0 disables voice targets, and 31 is server loopback.
 */
func (_client) MumbleSetVoiceTarget(targetId float64) {}

/**
 * Overrides the output volume for a particular player on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
 * Set to -1.0 to reset the Volume override.
 * @param player A game player index.
 * @param volume The volume, ranging from 0.0 to 1.0 (or above).
 */
func (_client) MumbleSetVolumeOverride(player float64, volume float64) {}

/**
 * Overrides the output volume for a particular player with the specified server id and player name on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
 * @param serverId The player's server id.
 * @param volume The volume, ranging from 0.0 to 1.0 (or above).
 */
func (_client) MumbleSetVolumeOverrideByServerId(serverId float64, volume float64) {}

/**
 * 2 matches in 1 script - am_hold_up
 * Used in multiplayer scripts?
 */
func (_client) N_0x0032a6dba562c518() {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x006e4b040ed37ec3(p0 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x0077f15613d36993(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x011883f41211432a(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p6 float64) {}

func (_client) N_0x0150b6ff25a9e2e5() {}

func (_client) N_0x015b03ee1c43e6ec(p0 float64) {}

func (_client) N_0x01708e8dd3ff8c65(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x0205f5365292d2eb(vehicle float64, p1 float64) {}

func (_client) N_0x0218ba067d249dea() {}

/**
 * some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799
 */
func (_client) N_0x0225778816fdc28c(p0 float64) {}

/**
 * DISABLE_S*
 */
func (_client) N_0x02369d5c8a51fdcf(toggle bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x023acab2dc9dc4a4() float64 {
	return 0.0
}

/**
 * Found in the scripts:
 * MISC::_02DEAAC8F8EA7FE7("");
 */
func (_client) N_0x02deaac8f8ea7fe7(p0 string) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x02e93c796abd3a97(p0 bool) {}

func (_client) N_0x03300b57fcac6ddb(p0 bool) {}

func (_client) N_0x0379daf89ba09aa5(p0 float64, p1 float64) {}

func (_client) N_0x0395cb47b022e62c(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x03c2eebb04b3fb72(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) N_0x03ea03af85a85cb7(ped float64, p1 bool, p2 bool, p3 bool, p4 bool, p5 bool, p6 bool, p7 bool, p8 float64) bool;

func (_client) N_0x03f1a106bda7dd3e() {}

func (_client) N_0x0419b167ee128f33(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0x041c7f2a6c9894e6(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

/**
 * SET_*
 */
func (_client) N_0x04655f9d075d0ae5(toggle bool) {}

func (_client) N_0x04918a41bc9b8157(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) N_0x0581730ab9380412(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) N_0x0596843b34b95ce5(p0 float64, p1 float64) {}

func (_client) N_0x06087579e7aa85a9(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) bool;

func (_client) N_0x061cb768363d6424(ped float64, toggle bool) {}

/**
 * FORCE_*
 */
func (_client) N_0x062d5ead4da2fa6a() {}

/**
 * A vehicle recording playback flag only used in jewelry_heist
 */
func (_client) N_0x063ae2b2cc273588(vehicle float64, p1 bool) {}

/**
 * CLEAR_*
 */
func (_client) N_0x06462a961e94b67c() {}

func (_client) N_0x065d03a9d6b2c6b5(p0 float64, p1 float64) {}

func (_client) N_0x06eaf70ae066441e(p0 float64) {}

func (_client) N_0x06ee9048fd080382(p0 bool) {}

func (_client) N_0x07c61676e5bb52cd(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x07dbd622d9533857(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x07eab372c8841d99(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) N_0x0811381ef5062fec(p0 float64) {}

/**
 * Returns false if amount > wallet balance or daily transfer limit has been hit.
 * NativeDB Introduced: v323
 */
func (_client) N_0x08e8eeadfd0dc4a0(amount float64) bool;

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x0a3f820a9a9a9ac5(vehicle float64, x float64, y float64, z float64) {}

/**
 * CLEAR_VEHICLE_*
 */
func (_client) N_0x0a436b8643716d14() {}

func (_client) N_0x0a9c7f36e5d7b683(p0 float64) {}

func (_client) N_0x0aa27680a0bd43fa() {}

func (_client) N_0x0ad9e8f87ff7c16f(p0 float64, p1 bool) {}

func (_client) N_0x0ae73d8df3a762b2(p0 bool) {}

func (_client) N_0x0b3e35ac043707d9(p0 float64, p1 float64) {}

func (_client) N_0x0b40ed49d7d6ff84() {}

func (_client) N_0x0b565b0aae56a0e8(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) N_0x0b568201dd99f0eb(p0 bool) {}

func (_client) N_0x0b8b7f74bf061c6d() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x0bbb9a7a8ffe931b(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x0c698d8f099174c7(p0 float64) {}

func (_client) N_0x0cf54f20de43879c(p0 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x0cf6cc51aa18f0f8(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

/**
 * 0 as param = weird black and green screen
 * 0.1 - 0.99 = Prevent rain effect from falling (still sound and effects on puddles) and prevent puddles from increase/decrease, seems than it prevent any weather change too
 * 1 and more = "Unfreeze" rain puddles but clear weather too
 * When 'freezing' is enabled, it seem to also freeze value getted with GetRainLevel
 */
func (_client) N_0x0cf97f497fe7d048(p0 float64) {}

func (_client) N_0x0d01d20616fc73fb(p0 float64, p1 float64) {}

func (_client) N_0x0d30eb83668e63c5(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NETWORK_SET_*
 */
func (_client) N_0x0d77a82dc2d0da59() (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x0dd362f14f18942a(amount float64, p1 float64, p2 float64) {}

func (_client) N_0x0e4299c549f0d1f1(toggle bool) {}

func (_client) N_0x0e4f77f7b9d74d84(p0 float64) {}

func (_client) N_0x0ede326d47cd0f3e(ped float64, player float64) bool;

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x0f1a4b45b7693b95(p0 float64, p1 float64) {}

func (_client) N_0x0f62619393661d6e(p0 float64, p1 float64, p2 float64) {}

/**
 * BG_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x0f6f1ebbc4e1d5e6(scriptIndex float64, p1 string) bool;

func (_client) N_0x0f73393bac7e6730() (bool , float64,float64) { return false,0.0,0.0 }

/**
 * Doesn't actually return anything.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) N_0x0ffb3c758e8c07b9(ped float64, p1 bool) float64 {
	return 0.0
}

/**
 * Returns some sort of index/offset for overlays/decorations.
 * ```
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 * ```
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) N_0x10144267dd22866c(overlayHash interface{}, p1 float64, character float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x107a473d7a6647a9(vehicle float64) {}

/**
 * UI3DSCENE_*
 */
func (_client) N_0x108be26959a9d9bb(toggle bool) {}

/**
 * In agency_heist3b.c4, its like this 90% of the time:
 * PED::_110F526AB784111F(ped, 0.099);
 * PED::SET_PED_ENVEFF_SCALE(ped, 1.0);
 * PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);
 * PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
 * and its like this 10% of the time:
 * PED::_110F526AB784111F(ped, 0.2);
 * PED::SET_PED_ENVEFF_SCALE(ped, 0.65);
 * PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);
 * PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
 */
func (_client) N_0x110f526ab784111f(ped float64, p1 float64) {}

func (_client) N_0x112209ce0290c03a(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x1153fa02a659051c() {}

func (_client) N_0x11579d940949c49e(p0 float64) {}

func (_client) N_0x116fb94dc4b79f17(p0 string) {}

func (_client) N_0x1171a97a3d3981b6(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x1178e104409fe58c(p0 float64, p1 float64) {}

/**
 * SET_TEXT_?? - Used in golf and golf_mp
 */
func (_client) N_0x1185a8087587322c(p0 bool) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x1216e0bfa72cc703(p0 float64, p1 float64) {}

/**
 * Hardcoded to only work in multiplayer.
 */
func (_client) N_0x12ded8ca53d47ea5(p0 float64) {}

func (_client) N_0x1312ddd8385aee4e(p0 float64, p1 float64) {}

func (_client) N_0x1398582b7f72b3ed(p0 float64) {}

func (_client) N_0x13b350b8ad0eee10() {}

func (_client) N_0x13c4b962653a5280() float64 {
	return 0.0
}

/**
 * SET_NETWORK_*
 */
func (_client) N_0x13f1fcb111b820b0(p0 bool) {}

func (_client) N_0x140e6a44870a11ce() {}

func (_client) N_0x144da052257ae7d8(p0 float64) {}

/**
 * NETWORK_IS_*
 */
func (_client) N_0x14922ed3e38761f0() bool;

func (_client) N_0x149aee66f0cb3a99(p0 float64, p1 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x14d29bb12d47f68c(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0x14e0b2d1ad1044e0() (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

func (_client) N_0x14eda9ee27bd1626(p0 float64) {}

func (_client) N_0x14fc5833464340a8() {}

/**
 * Checks some commerce stuff
 * NativeDB Introduced: v1290
 */
func (_client) N_0x155467aca0f55705() float64 {
	return 0.0
}

func (_client) N_0x159b7318403a1cd8(p0 float64) {}

func (_client) N_0x15e69e2802c24b8d(p0 float64) {}

func (_client) N_0x1612c45f9e3e0d44() {}

func (_client) N_0x162c23ca83ed0a62(p0 float64) bool;

func (_client) N_0x164c5ff663790845(p0 float64) {}

func (_client) N_0x16da8172459434aa() float64 {
	return 0.0
}

func (_client) N_0x170910093218c8b9(p0 float64)  (bool, float64){
	return false,0.0
}

/**
 * Related to displaying cash on the HUD
 * Always called before HUD::_SET_SINGLEPLAYER_HUD_CASH in decompiled scripts
 */
func (_client) N_0x170f541e1cadd1de(p0 bool) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x17c9e241111a674d(p0 float64, p1 float64) {}

func (_client) N_0x17fca7199a530203() float64 {
	return 0.0
}

func (_client) N_0x182f266c2d9e2beb(vehicle float64, p1 float64) {}

func (_client) N_0x1888694923ef4591() {}

func (_client) N_0x19853b5b17d77bca(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x1989c6e6f67e76a8(): [boolean, number, number, number];

func (_client) N_0x19af7ed9b9d23058() {}

/**
 * GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing
 */
func (_client) N_0x19bfed045c647c49(ped float64) bool;

/**
 * SET_ENTITY_*
 */
func (_client) N_0x1a092bb0c3808b96(entity float64, p1 bool) {}

/**
 * Only appears in lamar1 script.
 */
func (_client) N_0x1a330d297aac6bc1(ped float64, p1 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x1a6cbb06e2d0d79d(p0 float64, p1 float64) {}

func (_client) N_0x1a7ce7cd3e653485(p0 float64) {}

func (_client) N_0x1a8ea222f9c67dbb(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x1b0b4aeed5b9b41c(p0 float64) {}

/**
 * Sets a value that appears to affect door opening behavior when damaged.
 * SET_*
 */
func (_client) N_0x1b212b26dd3c04df(vehicle float64, toggle bool) {}

func (_client) N_0x1b7abe26cbcbf8c7(ped float64, p1 float64, p2 float64) {}

/**
 * SCRIPT_RACE_*
 */
func (_client) N_0x1bb299305c3e8c13(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x1bbc135a4d25edde(p0 bool) {}

/**
 * ENABLE_VEHICLE_*
 */
func (_client) N_0x1c073274e065c6d2(vehicle float64, toggle bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x1c57c94a6446492a(p0 float64, p1 float64) {}

/**
 * SET_TRA*
 */
func (_client) N_0x1cba05ae7bd7ee05(p0 float64) {}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 */
func (_client) N_0x1d12a56fc95be92e() bool;

func (_client) N_0x1d4446a62d35b0d0(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * IS_COMMERCE_*
 */
func (_client) N_0x1d4dc17c38feaff0() bool;

func (_client) N_0x1d610eb0fea716d9(p0 float64) bool;

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x1dc9b749e7ae282b(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x1e3f1b1b891a2aaa(p0 float64, p1 float64) {}

/**
 * GET_*
 */
func (_client) N_0x1e77fa7a62ee6c4c(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x1e9057a74fd73e23() {}

/**
 * Unsure about the use of this native but here's an example:
 * void sub_8709() {
 * MISC::_1EAE0A6E978894A2(0, 1);
 * MISC::_1EAE0A6E978894A2(1, 1);
 * MISC::_1EAE0A6E978894A2(2, 1);
 * MISC::_1EAE0A6E978894A2(3, 1);
 * MISC::_1EAE0A6E978894A2(4, 1);
 * MISC::_1EAE0A6E978894A2(5, 1);
 * MISC::_1EAE0A6E978894A2(6, 1);
 * MISC::_1EAE0A6E978894A2(7, 1);
 * MISC::_1EAE0A6E978894A2(8, 1);
 * }
 * So it appears that p0 ranges from 0 to 8.
 * ENABLE_DISPATCH_SERVICE, seems to have a similar layout.
 */
func (_client) N_0x1eae0a6e978894a2(p0 float64, p1 bool) {}

func (_client) N_0x1f2300cb7fa7b7f6() float64 {
	return 0.0
}

func (_client) N_0x1f34b0626c594380(p0 float64, p1 float64) {}

func (_client) N_0x1f351cf1c6475734(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x1f7bc3539f9e0224() {}

func (_client) N_0x1f8e00fb18239600(p0 float64) {}

func (_client) N_0x1f9fb66f3a3842d2(vehicle float64, p1 bool) {}

/**
 * SET_PED_STE*
 */
func (_client) N_0x2016c603d6b8987c(ped float64, toggle bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x202a5ed9ce01d6e7(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) {}

func (_client) N_0x20746f7b1032a3c7(p0 bool, p1 bool, p2 bool, p3 bool) {}

/**
 * -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
 * first one seems to be a string of a mission name, second one seems to be a bool/toggle
 * p1 was always 0.
 */
func (_client) N_0x208784099002bc30(missionNameLabel string, p1 float64) {}

func (_client) N_0x20c6c7e4eb082a7f(p0 bool) {}

/**
 * HAS_*
 */
func (_client) N_0x2107a3773771186d() bool;

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x211c4ef450086857() {}

/**
 * HAS_S*
 */
func (_client) N_0x214cd562a939246a() bool;

/**
 * GET_C*
 */
func (_client) N_0x21c235bc64831e5a(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 bool)  interface{} { return nil }

func (_client) N_0x225798743970412b(p0 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x226c284c830d0ca8(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * BG_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x22e21fbcfc88c149(scriptIndex float64, p1 string) float64 {
	return 0.0
}

func (_client) N_0x2302c0264ea58d31() {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x2310a8f9421ebf43(p0 float64) {}

func (_client) N_0x2311dd7159f00582(vehicle float64, p1 bool) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x23227df0b2115469() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x237440e46d918649(p0 float64) {}

func (_client) N_0x2382ab11450ae7ba(p0 float64, p1 float64) {}

/**
 * Hardcoded to return false.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 */
func (_client) N_0x23f09eadc01449d6(padIndex float64) bool;

/**
 * Only used once in scripts, in maintransition.
 * maintransition.c4, line ~82432:
 * if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {
 * g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
 * return 1;
 * }
 * Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
 * Most likely ARE_*
 */
func (_client) N_0x241fca5b1aa14f75() bool;

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x243296a510b562b6() {}

func (_client) N_0x247acbc4abbc9d1c(p0 bool) {}

func (_client) N_0x24a49beaf468dc90(p0 float64, p2 float64, p3 float64, p4 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x24c024ba8379a70a(p0 float64, p1 float64) {}

func (_client) N_0x24e4e51fc16305f9() float64 {
	return 0.0
}

func (_client) N_0x25361a96e0f7e419(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x2542269291c6ac84(p0 float64) float64 {
	return 0.0
}

/**
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 */
func (_client) N_0x2555cf7da5473794() float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: float* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 */
func (_client) N_0x2570e26be63964e3() bool;

func (_client) N_0x259ba6d4e6f808f1(p0 float64) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0x25aaa32bdc98f2a3() float64 {
	return 0.0
}

func (_client) N_0x25d990f8e0e3f13c() {}

func (_client) N_0x25fc3e33a31ad0c9(p0 bool) {}

func (_client) N_0x261e97ad7bcf3d40(p0 bool) {}

func (_client) N_0x265559da40b3f327(p0 float64) {}

func (_client) N_0x265635150fb0d82e() {}

/**
 * STATS::0x343B27E2(0);
 * STATS::0x343B27E2(1);
 * STATS::0x343B27E2(2);
 * STATS::0x343B27E2(3);
 * STATS::0x343B27E2(4);
 * STATS::0x343B27E2(5);
 * STATS::0x343B27E2(6);
 * STATS::0x343B27E2(7);
 * Identical in ingamehud & maintransition.
 */
func (_client) N_0x26d7399b9587fe89(p0 float64) {}

func (_client) N_0x26d99d5a82fd18e8(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x26e13d440e7f6064(vehicle float64, value float64) {}

func (_client) N_0x26f07dd83a5f7f98() float64 {
	return 0.0
}

func (_client) N_0x271017b9ba825366(p0 float64, p1 bool) {}

func (_client) N_0x271401846bd26e92(p0 bool, p1 bool) {}

func (_client) N_0x2735233a786b1bef(ped float64, p1 float64) {}

/**
 * SET_F*
 */
func (_client) N_0x2790f4b17d098e26(toggle bool) {}

func (_client) N_0x27aa1c973cacfe63(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

func (_client) N_0x27cfb1b1e078cb2d() {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x27f248c3febfaad3(p0 float64, p1 float64) {}

func (_client) N_0x27feb5254759cde3(textureDict string, p1 bool) bool;

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x2818ff6638cb09de(p0 float64) {}

func (_client) N_0x282b6739644f4347(p0 float64) {}

func (_client) N_0x283b6062a2c01e9b() {}

/**
 * [`SET_VEHICLE_STEER_BIAS`](#\_0x42A8EC77D5150CBE) for peds, e.g., `_SET_PED_STEER_BIAS`.
 */
func (_client) N_0x288df530c92dad6f(ped float64, value float64) {}

/**
 * F\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x28b022a17b068a3a(p0 float64, p1 float64) {}

func (_client) N_0x28ecb8ac2f607db2(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0x2916a928514c9827() {}

func (_client) N_0x293220da1b46cebc(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x29682e2ccf21e9b5(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64, p13 float64) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x2a251aa48b2b46db() {}

func (_client) N_0x2a5e0621dd815a9a(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x2a7cec72c3443bcc(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x2a893980e96b659a(p0 bool) bool;

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x2a93c46aab1eacc9(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x2acabed337622df2(p0 string) {}

func (_client) N_0x2afc2d19b50797f2(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x2b1c623823db0d9d(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}

func (_client) N_0x2b40a97646381508(p0 float64) {}

func (_client) N_0x2b51edbefc301339(p0 float64, p1 string) bool;

func (_client) N_0x2b694afcf64e6994(ped float64, p1 bool) {}

func (_client) N_0x2bf66d2e7414f686() float64 {
	return 0.0
}

/**
 * GET_BLIP_\*
 * Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0.
 * @param blip The blip to check.
 * @return Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0.
 */
func (_client) N_0x2c173ae2bdb9385e(blip float64) float64 {
	return 0.0
}

func (_client) N_0x2c1d8b3b19e517cc(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0x2c42340f916c5930(p0 float64) float64 {
	return 0.0
}

/**
 * SET_VEHICLE_W* (next character is either H or I)
 */
func (_client) N_0x2c4a1590abf43e8b(vehicle float64, p1 bool) {}

func (_client) N_0x2c9f302398e13141(p0 float64, p1 float64) {}

func (_client) N_0x2cd90358f67d0aa8(p0 float64) {}

func (_client) N_0x2ce9d95e4051aecd(p0 float64) {}

/**
 * Used in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)
 * NativeDB Introduced: v1290
 * @param textureDict inside script_txds.rpf, browse it with OpenIV
 * @param textureName textureName
 * @param x x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
 * @param y y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
 * @param width width 0.0 - 1.0 is the reasonable amount generally
 * @param height height 0.0 - 1.0 is the reasonable amount generally
 * @param p6 almost always 0.0
 * @param red red color
 * @param green green color
 * @param blue blue color
 * @param alpha alpha
 */
func (_client) N_0x2d3b147afad49de0(textureDict string, textureName string, x float64, y float64, width float64, height float64, p6 float64, red float64, green float64, blue float64, alpha float64, p11 float64) {}

func (_client) N_0x2d5dc831176d0114(p0 float64) bool;

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x2d7a9b577e72385e(p0 float64) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x2d874d4ae612a65f() float64 {
	return 0.0
}

func (_client) N_0x2da41ed6e1fcd7a5(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v463
 */
func (_client) N_0x2dd39bf3e2f9c47f() float64 {
	return 0.0
}

func (_client) N_0x2de6c5e2e996f178(p0 float64) {}

func (_client) N_0x2dfc81c9b9608549(ped float64, p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x2e0259babc27a327(p0 float64) {}

func (_client) N_0x2e0bf682cc778d49(p0 float64) bool;

func (_client) N_0x2e22fefa0100275e() bool;

func (_client) N_0x2e4c123d1c8a710e(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}

func (_client) N_0x2e89990ddff670c3(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * Appears to return whether the player is using the pause menu store. Can't be sure though.
 */
func (_client) N_0x2f057596f2bd0061() bool;

func (_client) N_0x2f074c904d85129e(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) N_0x2f137b508de238f2(p0 bool) {}

func (_client) N_0x2f3c3d9f50681de4(p0 float64, p1 bool) {}

func (_client) N_0x2f41a3bae005e5fa(p0 float64, p1 float64) {}

/**
 * Used with radios:
 * void sub_cf383(auto _a0) {
 * if ((a_0)==1) {
 * if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
 * PLAYER::_2F7CEB6520288061(0);
 * AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);
 * AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
 * AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);
 * }
 * sub_cf3f6(1);
 * } else {
 * if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
 * PLAYER::_2F7CEB6520288061(1);
 * AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);
 * AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
 * AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);
 * }
 * sub_cf3f6(0);
 * }
 * }
 * SET_PLAYER_S*
 */
func (_client) N_0x2f7ceb6520288061(p0 bool) {}

func (_client) N_0x2f7f2b26dd3f18ee(p0 float64, p1 float64) {}

func (_client) N_0x2fa2494b47fdd009(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x2fa3173480008493(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0x2fab6614ce22e196(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x2fcb133ca50a49eb(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x3001bef2feca3680() bool;

/**
 * GET_CURRENT_*
 * NativeDB Introduced: v1493
 */
func (_client) N_0x30432a0118736e00() float64 {
	return 0.0
}

func (_client) N_0x3044240d2e0fa842() bool;

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x30ca2ef91d15adf8() float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x31125fd509d9043f(p0 float64) {}

func (_client) N_0x3117d84efa60f77b(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x31574b1b41268673(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x316db59cd14c1774(p0 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x31ba138f6304fb9f(p0 float64, p1 float64) {}

func (_client) N_0x31e90b8873a4cd3b(player float64, p1 float64) {}

func (_client) N_0x31f924b53eaddf65(p0 bool) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x324c5aa411da7737(p0 float64) {}

func (_client) N_0x32cac93c9de73d32() float64 {
	return 0.0
}

func (_client) N_0x32ebd154cb6b8b99(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x32f34ff7f617643b(p0 float64, p1 float64) {}

func (_client) N_0x336b3d200ab007cb(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) float64 {
	return 0.0
}

func (_client) N_0x33d47e85b476abcd(p0 bool) bool;

func (_client) N_0x33d72899e24c3365(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Introduced: v323
 */
func (_client) N_0x33df47cc0642061b() bool;

func (_client) N_0x33e3c6c6f2f0b506(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x3441cad2f2231923(vehicle float64, p1 bool) {}

func (_client) N_0x346ef3ecaaab149e() {}

func (_client) N_0x34770b9ce0e03b91(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x352e2b5cf420bf3b(p0 float64, p1 float64) {}

func (_client) N_0x357b152ef96c30b6() float64 {
	return 0.0
}

func (_client) N_0x359af31a4b52f5ed() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x35a3cd97b2c0a6d2(blip float64) {}

func (_client) N_0x35bb21de06784373(p0 float64, p1 float64) {}

func (_client) N_0x35e0654f4bad7971(p0 bool) {}

func (_client) N_0x36391f397731595d(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x367ef5e2f439b4c6(p0 float64) {}

/**
 * ROPE_*
 */
func (_client) N_0x36ccb9be67b970fd(ropeId float64, p1 bool) {}

/**
 * Does nothing. It's a nullsub.
 * NativeDB Introduced: v1604
 */
func (_client) N_0x36de109527a2c0c4(toggle bool) {}

func (_client) N_0x36f1b38855f2a8df(player float64) {}

func (_client) N_0x36f32de87082343e(p0 float64, p1 float64) {}

func (_client) N_0x36f6626459d91457(p0 float64) {}

/**
 * I've had this return the player's ped handle sometimes, but also other random entities.
 * Whatever p0 is, it's at least not synced to other players.
 * At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
 * But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
 * @param p0 unknown.
 * @return Returns an entity handle or -1, value changes based on p0's value.
 */
func (_client) N_0x37d5f739fd494675(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x380b4968d1e09e55() {}

func (_client) N_0x38491439b6ba7f7d(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0x3855fb5eb2c5e8b2(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1734
 */
func (_client) N_0x38b7c51ab1edc7d8(entity float64, toggle bool) {}

/**
 * Sets profile setting 934
 */
func (_client) N_0x38baaa5dd4c9d19f(value float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x38c1cb1cb119a016(p0 float64, p1 float64) {}

func (_client) N_0x393bd2275ceb7793() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x39455bf4f4f55186(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64) float64 {
	return 0.0
}

func (_client) N_0x394cd08e31313c28() {}

func (_client) N_0x397baa01068baa96() float64 {
	return 0.0
}

func (_client) N_0x39917e1b4cb0f911(p0 bool) {}

func (_client) N_0x39a5fb7eaf150840(p0 float64, p1 float64) {}

func (_client) N_0x3a48ab4445d499be() float64 {
	return 0.0
}

/**
 * NativeDB Removed Parameter 3: int R
 * NativeDB Removed Parameter 4: int G
 * NativeDB Removed Parameter 5: int B
 * NativeDB Introduced: v757
 */
func (_client) N_0x3b2fd68db5f8331c(object float64, toggle bool, R float64, G float64, B float64) {}
/**
 * NativeDB Removed Parameter 3: int R
 * NativeDB Removed Parameter 4: int G
 * NativeDB Removed Parameter 5: int B
 * NativeDB Introduced: v757
 */
func (_client) SetObjectColour(object float64, toggle bool, R float64, G float64, B float64) {}

/**
 * Usually used alongside other vehicle door natives.
 */
func (_client) N_0x3b458ddb57038f08(vehicle float64, doorIndex float64, toggle bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x3bd770d281982db5(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * Sets some voice chat related value.
 * NETWORK_SET_*
 */
func (_client) N_0x3c5c1e2c2ff814b1(toggle bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x3c788e7f6438754d(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x3d9acb1eb139e702() float64 {
	return 0.0
}

func (_client) N_0x3de3aa516fb126a4(p0 float64) {}

/**
 * IS_*
 */
func (_client) N_0x3e38e28a1d80ddf6(ped float64) bool;

func (_client) N_0x3e9679c1dfcf422c(p0 float64, p1 float64) {}

func (_client) N_0x3ebeac6c3f81f6bd(p0 float64) {}

/**
 * NETWORK_HAS_*
 */
func (_client) N_0x3f9990bf5f22759c(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x3fa36981311fa4ff(netId float64, state bool) {}

/**
 * nullsub, doesn't do anything
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) N_0x3fc795691834481d(p0 float64, p1 float64) {}

func (_client) N_0x4008edf7d6e48175(p0 bool) {}

/**
 * Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
 */
func (_client) N_0x405dc2aef6af95b9(roomHashKey interface{}) {}

func (_client) N_0x40763ea7b9b783e7(p0 string, p1 float64, p2 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x407dc5e97db1a4d3(p0 float64, p1 float64) {}

func (_client) N_0x4128464231e3ca0b(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x41290b40fa63e6da(p0 float64) {}

func (_client) N_0x412f1364fa066cfb(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x41350b4fc28e3941(p0 bool) {}

func (_client) N_0x419615486bbf1956(p0 float64) {}

func (_client) N_0x4237e822315d8ba9() bool;

func (_client) N_0x425aecf167663f48(ped float64, p1 bool) {}

func (_client) N_0x4282e08174868be3() float64 {
	return 0.0
}

/**
 * SET_*
 */
func (_client) N_0x428ad3e26c8d9eb0(vehicle float64, x float64, y float64, z float64, p4 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x430a7631a84c9be7(p0 float64) {}

func (_client) N_0x4348bfda56023a2f(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0x43fa0dfc5df87815(vehicle float64, p1 bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x43fa7cbe20dab219(p0 float64) {}

/**
 * CLEAR_VEHICLE_*
 */
func (_client) N_0x4419966c9936071a(vehicle float64) {}

/**
 * related to:
 * NETWORK_BAIL
 * NETWORK_BAIL_TRANSITION
 * NETWORK_JOIN_GROUP_ACTIVITY
 * NETWORK_JOIN_TRANSITION
 * NETWORK_LAUNCH_TRANSITION
 * NETWORK_SESSION_HOST
 * NETWORK_SESSION_HOST_CLOSED
 * NETWORK_SESSION_HOST_FRIENDS_ONLY
 * NETWORK_SESSION_HOST_SINGLE_PLAYER
 * NETWORK_SESSION_VOICE_LEAVE
 */
func (_client) N_0x444c4525ece0a4b9() {}

func (_client) N_0x44919cc079bb60bf(p0 float64) {}

func (_client) N_0x44aca259d67651db(p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Introduced: v323
 */
func (_client) N_0x450819d8cf90c416() bool;

func (_client) N_0x45a83257ed02d9bc() {}

func (_client) N_0x45e816772e93a9db() float64 {
	return 0.0
}

/**
 * NETWORK_A\*
 * Similar structure as NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE but it includes this time a hash.
 * In casino_slots it is used one time in a synced scene involving a ped and the slot machine?
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x45f35c0edc33b03b(netScene float64, modelHash interface{}, x float64, y float64, z float64, p5 float64, p6 string, p7 float64, p8 float64, flags float64) {}

/**
 * This has been found in use in the decompiled files.
 */
func (_client) N_0x4669b3ed80f24b4e(player float64) {}

func (_client) N_0x466da42c89865553(p0 float64) {}

func (_client) N_0x469f2ecdec046337(p0 bool) {}

/**
 * Checks if the specified unknown flag is set in the ped's model.
 * The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).
 * Game scripts exclusively check for flags 1 and 4.
 */
func (_client) N_0x46b05bcae43856b0(ped float64, flag float64) bool;

func (_client) N_0x46d1a61a21f566fc(p0 float64) {}

func (_client) N_0x46f3add1e2d5baf2(p0 float64, p1 float64) {}

func (_client) N_0x472397322e92a856() {}

func (_client) N_0x4737980e8a283806(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x4811bbac21c5fcd5(p0 float64) {}

func (_client) N_0x483aca1176ca93f1() {}

func (_client) N_0x48621c9fca3ebd28(p0 float64) {}

func (_client) N_0x487912fd248efddf(p0 float64, p1 float64) bool;

/**
 * A*
 */
func (_client) N_0x4879e4fe39074cdf() bool;

func (_client) N_0x4895bdea16e7c080(p0 float64) {}
func (_client) EnableDeathbloodSeethrough(p0 float64) {}

/**
 * Only found 3 times in decompiled scripts. Not a whole lot to go off of.
 * MISC::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");
 * MISC::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");
 * MISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A -- [[6]] ], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
 */
func (_client) N_0x48f069265a0e4bec(name string) float64 {
	return 0.0
}

/**
 * Does nothing (essentially a nullsub).
 */
func (_client) N_0x490861b88f4fd846(p0 float64) {}

/**
 * SET_PED_ALLOW*
 */
func (_client) N_0x49e50bdb8ba4dab2(ped float64, toggle bool) {}

func (_client) N_0x4a7d6e727f941747(p0 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x4a9fde3a5a6d0437(toggle bool) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x4ad280eb48b2d8e6(vehicle float64, togle bool) {}

func (_client) N_0x4ad490ae1536933b(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0x4af92acd3141d96c() {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x4aff7e02e485e92b() {}

func (_client) N_0x4b5b620c9b59ed34(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x4c134b4df76025d0(p0 float64, p1 float64) {}

/**
 * Only used once in the entire game scripts.
 * Does not actually return anything.
 */
func (_client) N_0x4c2330e61d3deb56(interior float64) float64 {
	return 0.0
}

func (_client) N_0x4c2a9fdc22377075() {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x4c3b75694f7e0d9c(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x4c89fe2bdeb3f169() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x4c9034162368e206() float64 {
	return 0.0
}

/**
 * This function is hard-coded to always return 1.
 */
func (_client) N_0x4cebc1ed31e8925e(cutsceneName string) bool;

func (_client) N_0x4d02279c83be69fe() float64 {
	return 0.0
}

/**
 * Something like flush_all_scripts
 * Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()
 */
func (_client) N_0x4d953df78ebf8158() {}

func (_client) N_0x4d9d109f63fee1d4(p0 float64, p1 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x4dc416f246a41fc8(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x4dcdf92bf64236cd(p0 string, p1 string) {}

func (_client) N_0x4df7cfff471a7fb1(p0 float64) bool;

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x4e52e752c76e7e7a(p0 float64) {}

func (_client) N_0x4e74e62e0a97e901(vehicle float64, p1 bool) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x4ed9c8d6da297639() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x4fcd976da686580c(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x4fcdbd3f0a813c25(p0 float64, p1 float64) {}

/**
 * SET_PED_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x50276ef8172f5f12(ped float64) {}

func (_client) N_0x5068f488ddb54dd8() float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: float* p1
 * NativeDB Introduced: v323
 */
func (_client) N_0x50a8a36201dbf83e() bool;

/**
 * GET_*
 */
func (_client) N_0x511f1a683387c7e2(ped float64) float64 {
	return 0.0
}

func (_client) N_0x51db102f4a3ba5e0(toggle bool) {}

/**
 * Usex in decompiled scripts in combination with [`_GET_VEHICLE_SUSPENSION_BOUNDS`](#\_0xDF7E3EEB29642C38).
 * NativeDB Introduced: v1180
 * ```
 * // Example from fm_bj_race_controller.c
 * if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))
 * {
 * VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);
 * VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);
 * fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);
 * uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);
 * if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))
 * {
 * uParam0->f_12.f_3 = { uParam0->f_6 };
 * uParam0->f_12 = { uParam0->f_9 };
 * }
 * }
 * ```
 * @param vehicle the target vehicle
 * @param x vehicle location
 * @param y vehicle location
 * @param z vehicle location
 * @param rotX some kind of vehicle rotation value
 * @param rotY some kind of vehicle rotation value
 * @param rotZ some kind of vehicle rotation value
 * @param p7 usually 2
 * @param p8 usually 1
 * @return A BOOL value, purpose unknown.
 */
func (_client) N_0x51f30db60626a20e(vehicle float64, x float64, y float64, z float64, rotX float64, rotY float64, rotZ float64, p7 float64, p8 float64) bool;

func (_client) N_0x5324a0e3e4ce3570(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) N_0x53c10c8bd774f2c9() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x53c31853ec9531ff(p0 float64) {}

func (_client) N_0x53cae13e9b426993(p0 float64) {}

/**
 * Related to [`_CLEAR_VEHICLE_TASKS`](#\_0xDBBC7A2432524127) and requires more research (e.g., \_CLEAR_VEHICLE_SECONDARY_TASKS).
 * ```
 * CLEAR_*
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle The vehicle to have tasks cleared
 */
func (_client) N_0x53ddc75bc3ac0a90(vehicle float64) {}

func (_client) N_0x53f4892d18ec90a4(p0 float64) {}

func (_client) N_0x5407b7288d0478b7(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x547237aa71ab44de(p0 float64) {}

func (_client) N_0x54e22ea2c1956a8d(p0 float64) {}

/**
 * From the scripts:
 * MISC::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);
 * Related to tennis mode.
 * SET_*
 */
func (_client) N_0x54f157e0336a3822(ped float64, p1 string, p2 float64) {}

/**
 * Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION
 */
func (_client) N_0x5501b7a5cdb79d37(player float64) {}

/**
 * Sets profile setting 935
 */
func (_client) N_0x55384438fc55ad8e(value float64) {}

func (_client) N_0x5539c3ebf104a53a(p0 bool) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x5574637681911fda(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x55a1e095db052fa5(p0 float64, p1 float64) {}

func (_client) N_0x55a8becaf28a4eb7() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x55ecf4d13d9903b0(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x55f5a5f07134de60() {}

func (_client) N_0x55fcc0c390620314(player1 float64, player2 float64, toggle bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x560b423d73015e77(p0 float64) float64 {
	return 0.0
}

/**
 * STAT_SET_*
 */
func (_client) N_0x5688585e6d563cd8(p0 float64) {}

func (_client) N_0x56eb5e94318d3fb6(vehicle float64, p1 bool) {}

func (_client) N_0x577599cced639ca2(p0 float64) {}

/**
 * FORCE_*
 */
func (_client) N_0x57d760d55f54e071(p0 float64) {}

func (_client) N_0x583df8e3d4afbd98() float64 {
	return 0.0
}

func (_client) N_0x5845066d8a1ea7f7(vehicle float64, x float64, y float64, z float64, p4 float64) {}

func (_client) N_0x584770794d758c18(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x58bb377bec7cd5f4(p0 bool, p1 bool) {}

/**
 * IS_*
 */
func (_client) N_0x59328eb08c5ceb2b() bool;

func (_client) N_0x593feae1f73392d4() float64 {
	return 0.0
}

func (_client) N_0x59424bd75174c9b1() {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x59c3757b3b7408e8(vehicle float64, toggle bool, p2 float64) {}

func (_client) N_0x59d421683d31835a(p0 float64) {}

func (_client) N_0x5a34cd9c3c5bec44(p0 float64) bool;

func (_client) N_0x5a43c76f7fc7ba5f() {}

func (_client) N_0x5a556b229a169402() bool;

func (_client) N_0x5a7f62fda59759bd() {}

/**
 * Disables some other rendering (internal)
 */
func (_client) N_0x5ad3932daeb1e5d3() {}

func (_client) N_0x5b0316762afd4a64() float64 {
	return 0.0
}

func (_client) N_0x5b1f2e327b6b6fe1() float64 {
	return 0.0
}

func (_client) N_0x5b6010b3cbc29095(p0 float64, p1 bool) {}

func (_client) N_0x5b73c77d9eb66e24(p0 bool) {}

func (_client) N_0x5b9853296731e88d(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) N_0x5ba68a0840d546ac(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x5bbcf35bf6e456f7(toggle bool) {}

func (_client) N_0x5bd5f255321c4aaf(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x5bf29846c6527c54(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * Only called once in the scripts.
 * Related to weapon objects.
 */
func (_client) N_0x5c3b791d580e0bc2(entity float64, p1 float64) {}

func (_client) N_0x5c41e6babc9e2112(p0 float64) {}

/**
 * W*
 */
func (_client) N_0x5c48a1d6e3b33179(cam float64) bool;

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x5c497525f803486b() {}

func (_client) N_0x5c4ebffa98bdb41c(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x5cdaed54b34b0ed0(p0 float64) {}

func (_client) N_0x5d2bfaab8d956e0e() {}

/**
 * p1: 0..16
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) N_0x5d96cfb59da076a0(vehicle float64, p1 float64, p2 float64) {}

func (_client) N_0x5dbf05db5926d089(p0 float64) {}

func (_client) N_0x5debd9c4dc995692() {}

func (_client) N_0x5e3aa4ca2b6fb0ee(p0 float64) {}

func (_client) N_0x5e569ec46ec21cae(vehicle float64, toggle bool) {}

/**
 * DOES_*
 */
func (_client) N_0x5e657ef1099edd65(p0 float64) bool;

/**
 * example from completionpercentage_controller.ysc.c4
 * if (STATS::_5EAD2BF6484852E4()) {
 * MISC::SET_BIT(g_17b95._f20df._ff10, 15);
 * STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
 * }
 */
func (_client) N_0x5ead2bf6484852e4() bool;

func (_client) N_0x5ecd378ee64450ab(p0 float64) {}

func (_client) N_0x5edef0cf8c1dab3c() bool;

/**
 * Sets some health value. Looks like it's used for helis.
 */
func (_client) N_0x5ee5632f47ae9695(vehicle float64, health float64) {}

/**
 * SET_PLAYER_*
 */
func (_client) N_0x5f2013f8bc24ee69(p0 float64) {}

func (_client) N_0x5f456788b05faeac(p0 float64, p1 float64, p2 float64) {}

/**
 * DISABLE_*
 */
func (_client) N_0x5f6df3d92271e8a1(toggle bool) {}
/**
 * DISABLE_*
 */
func (_client) SetParticleFxBloodScale(toggle bool) {}

/**
 * Appears once in "re_dealgonewrong"
 */
func (_client) N_0x5fc472c501ccadb3(player float64) bool;

func (_client) N_0x5ff2c33b13a02a11(p0 float64) {}

func (_client) N_0x600f8cb31c7aab6e(p0 float64) {}

/**
 * Returns true if profile setting 901 is set to true and sets it to false.
 * NETWORK_C*
 */
func (_client) N_0x60edd13eb3ac1ff3() bool;

func (_client) N_0x60eedc12af66e846(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x6100b3cefd43452e(p0 float64) {}

func (_client) N_0x613f125ba3bd2eb9() bool;

/**
 * Unknown. Called after creating a checkpoint (type: 51) in the creators.
 */
func (_client) N_0x615d3925e87a3b26(checkpoint float64) {}

func (_client) N_0x61631f5df50d1c34(p0 bool) {}

/**
 * NETWORK_GET_NUM_*
 */
func (_client) N_0x617f49c2668e6155() float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x61f95e5bb3e0a8c6(p0 float64) {}

func (_client) N_0x62374889a4d59f72() {}

func (_client) N_0x62454a641b41f3c5(p0 float64) {}

func (_client) N_0x629526aba383bcaa() {}

func (_client) N_0x62e849b7eb28e770(p0 bool) {}

func (_client) N_0x62ecfcfdee7885d6() {}

func (_client) N_0x632b2940c67f4ea9(scaleformHandle float64): [boolean, number, number, number];

func (_client) N_0x63b406d7884bfa95() float64 {
	return 0.0
}

func (_client) N_0x63eb2b972a218cac() {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0x63ecf581bc70e363(p0 float64, p1 float64) {}

func (_client) N_0x641f272b52e2f0f8(p0 float64, p1 float64) {}

func (_client) N_0x6483c25849031c4f(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) N_0x649c97d52332341a(p0 float64) {}

/**
 * NETWORK_GET_*
 */
func (_client) N_0x64d779659bc37b19(entity float64)  interface{} { return nil }

/**
 * Hardcoded to return false.
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x64e5c4cc82847b73() bool;

func (_client) N_0x6501129c9e0ffa05(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x65482bfd0923c8a1(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) N_0x6551b1f7f6cd46ea(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x659f9d71f52843f8(p0 float64, p1 float64) {}

func (_client) N_0x65b080555ea48149(p0 float64) {}

/**
 * Sets GtaThread+0x14A
 * SET_S*
 */
func (_client) N_0x65d2ebb47e1cec21(toggle bool) {}

/**
 * SET_CAM_*
 */
func (_client) N_0x661b5c8654add825(cam float64, p1 bool) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x66972397e0757e7a(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x66a49d021870fe88() {}

func (_client) N_0x66e3aaface2d1eb8(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x66e7cb63c97b7d20() float64 {
	return 0.0
}

func (_client) N_0x675721c9f644d161() {}

func (_client) N_0x675d19c6067cae08(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x678f86d8fc040bdb(p0 float64) {}

func (_client) N_0x67fc09bc554a75e5() float64 {
	return 0.0
}

func (_client) N_0x68103e2247887242() {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x68b562e124cc0aef(p0 float64, p1 float64) {}

/**
 * IS_*
 */
func (_client) N_0x690a61a6d13583f6(player float64) bool;

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x690b76bd2763e068() float64 {
	return 0.0
}

func (_client) N_0x692d58df40657e8c(p0 float64, p1 float64, p2 float64, p4 float64, p5 bool)  (bool, float64){
	return false,0.0
}

func (_client) N_0x693478acbd7f18e7() {}

/**
 * SET_ENTITY_R*
 */
func (_client) N_0x694e00132f2823ed(entity float64, toggle bool) {}

func (_client) N_0x699e4a5c8c893a18(p0 float64, p1 string, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x69ef772b192614c1(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * SET_F*
 */
func (_client) N_0x6a51f78772175a51(toggle bool) {}

/**
 * Sets some voice chat related value.
 * NETWORK_SET_*
 */
func (_client) N_0x6a5d89d7769a40d8(toggle bool) {}

func (_client) N_0x6a60e43998228229(p0 float64) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x6a7f19756f1a9016() bool;

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x6a973569ba094650(vehicle float64, p1 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x6ad0bd5e087866cb(p0 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x6b7e4fb50d5f3d65(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0x6bc0acd0673acebe(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x6bccf9948492fd85(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0x6bfb12ce158e3dd4(p0 float64) bool;

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x6bff5f84102df80a(player float64) {}

func (_client) N_0x6cd79468a1e595c6(padIndex float64) bool;

func (_client) N_0x6cdd58146a436083(p0 float64) {}

func (_client) N_0x6ce50e47f5543d0c() {}

/**
 * Returns some sort of index/offset for props.
 * Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) N_0x6cebe002e58dee97(componentHash interface{}) float64 {
	return 0.0
}

/**
 * Possible values:
 * act_cinema
 * am_mp_carwash_launch
 * am_mp_carwash_control
 * am_mp_property_ext
 * chop
 * fairgroundHub
 * launcher_BasejumpHeli
 * launcher_BasejumpPack
 * launcher_CarWash
 * launcher_golf
 * launcher_Hunting_Ambient
 * launcher_MrsPhilips
 * launcher_OffroadRacing
 * launcher_pilotschool
 * launcher_Racing
 * launcher_rampage
 * launcher_rampage
 * launcher_range
 * launcher_stunts
 * launcher_stunts
 * launcher_tennis
 * launcher_Tonya
 * launcher_Triathlon
 * launcher_Yoga
 * ob_mp_bed_low
 * ob_mp_bed_med
 */
func (_client) N_0x6d6840cee8845831(action string) {}

func (_client) N_0x6dee77aff8c21bd1() (bool , float64,float64) { return false,0.0,0.0 }

func (_client) N_0x6e0a5253375c4584() float64 {
	return 0.0
}

func (_client) N_0x6e4361ff3e8cd7ca(p0 float64) float64 {
	return 0.0
}

/**
 * Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
 * Here are possible values of argument -
 * "ob_tv"
 * "launcher_Darts"
 */
func (_client) N_0x6e91b04e08773030(action string) {}

func (_client) N_0x6eaaefc76acc311f(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x6ebfb22d646ffc18(vehicle float64, p1 bool) {}

/**
 * Sets bit 3 in GtaThread+0x150
 * SET_T*
 */
func (_client) N_0x6f2135b6129620c1(toggle bool) {}

func (_client) N_0x6f361b8889a792a3() {}

func (_client) N_0x6fb7bb3607d27fa2() float64 {
	return 0.0
}

/**
 * This function is hard-coded to always return 1.
 */
func (_client) N_0x6fcf8ddea146c45b(p0 float64) bool;

func (_client) N_0x6fd97159fe3c971a(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 */
func (_client) N_0x6fd992c4a1c1b986() float64 {
	return 0.0
}

/**
 * SET_P*
 */
func (_client) N_0x6fddad856e36988a(vehicle float64, toggle bool) {}

/**
 * HAS_*
 * Probably something like "has game been started for the first time".
 */
func (_client) N_0x6fddf453c0c756ec() bool;

func (_client) N_0x700569dba175a77c(p0 float64) float64 {
	return 0.0
}

/**
 * Clears the fields sets by [N\_0xc7f29ca00f46350e](#\_0xC7F29CA00F46350E) (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
 * Related to its "Pre-networked state"?
 */
func (_client) N_0x701fda1e82076ba4() {}

func (_client) N_0x702bc4d605522539(p0 float64) {}

func (_client) N_0x7033eefd9b28088e(p0 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x703cc7f60cbb2b57(p0 float64) {}

func (_client) N_0x705a276ebff3133d() bool;

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x70a382adec069dd3(coordX float64, coordY float64, coordZ float64) {}

func (_client) N_0x70b8ec8fc108a634(p0 bool, p1 float64) {}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: int* p1
 * NativeDB Introduced: v323
 */
func (_client) N_0x710bcda8071eded1() bool;

func (_client) N_0x711794453cfd692b(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x7148e0f43d11f0d9() {}

func (_client) N_0x71b008056e5692d6() {}

/**
 * NETWORK_HAS_*
 */
func (_client) N_0x71dc455f5cd1c2b1(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x71e7b2e657449aad() float64 {
	return 0.0
}

func (_client) N_0x723c1ce13fbfdb67(p0 float64, p1 float64) {}

/**
 * Jenkins hash _might_ be 0xFC227584.
 */
func (_client) N_0x7241ccb7d020db69(entity float64, toggle bool) {}

/**
 * Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`.
 * Unknown what it does, couldn't find good examples in the decompiled scripts.
 */
func (_client) N_0x725012a415dba050(p0 float64, p2 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) N_0x72beccf4b829522e(p0 float64, p1 float64) {}

func (_client) N_0x72eb7ba9b69bf6ab() bool;

func (_client) N_0x73001e34f85137f8(p0 float64) {}

func (_client) N_0x733c87d4ce22bea2(ped float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x734e1714d077da9a(p0 float64, p1 float64) {}

func (_client) N_0x73561d4425a021a2(p0 float64, p1 float64) {}

func (_client) N_0x737e398138550fff(vehicle float64, toggle bool) {}

/**
 * Has something to do with a host request.
 * NETWORK_RE*
 */
func (_client) N_0x741a3d8380319a81() {}

func (_client) N_0x742b58f723233ed9(p0 float64) float64 {
	return 0.0
}

/**
 * NET_GAMESERVER_*
 */
func (_client) N_0x74a0fd0688f1ee45(p0 float64) float64 {
	return 0.0
}

/**
 * Hardcoded to return zero.
 * ==== PS4 specific info ====
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 * 0 = REASON_OTHER
 * 1 = REASON_SYSTEM_UPDATE
 * 2 = REASON_GAME_UPDATE
 * 3 = REASON_SIGNED_OUT
 * 4 = REASON_AGE
 * 5 = REASON_CONNECTION
 * =================================
 * @return Hard-coded to always return 0.
 */
func (_client) N_0x74fb3e29e6d10fa9() float64 {
	return 0.0
}

/**
 * Checks some commerce stuff
 * NativeDB Introduced: v1290
 */
func (_client) N_0x754615490a029508() float64 {
	return 0.0
}

func (_client) N_0x759650634f07b6b4(p0 float64) bool;

/**
 * REQUEST_*
 */
func (_client) N_0x75ba1cb3b7d40caf(ped float64, p1 bool) {}

/**
 * Sets bit 1 in GtaThread+0x154
 * BG_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x760910b49d2b98ea() {}

func (_client) N_0x762db2d380b48d04(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x76b3f29d3f967692(p0 float64, p1 float64) {}

/**
 * SET_VEHICLE_*
 */
func (_client) N_0x76d26a22750e849e(vehicle float64) {}

func (_client) N_0x77f16b447824da6c(p0 float64) {}

func (_client) N_0x77faddcbe3499df7(p0 float64) {}

func (_client) N_0x7808619f31ff22db() float64 {
	return 0.0
}

/**
 * SET_PICKUP_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x7813e8b8c4ae4799(pickup float64) {}

func (_client) N_0x78321bea235fd8cd(p0 float64, p1 bool) bool;

func (_client) N_0x78ceee41f49f421f(p0 float64, p1 float64) {}

/**
 * Related to cutscene entities. Unsure about the use.
 * SET_ENTITY_*
 */
func (_client) N_0x78e8e3a640178255(entity float64) {}

func (_client) N_0x793ff272d5b365f4() float64 {
	return 0.0
}

func (_client) N_0x796a877e459b99ea(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) N_0x79c0e43eb9b944e2(hash interface{}) bool;

/**
 * NET_GAMESERVER_*
 * Checks if the transaction status is equal to 3.
 * NativeDB Introduced: v1365
 */
func (_client) N_0x79edac677ca62f81(transactionId float64) bool;

/**
 * UI3DSCENE_*
 */
func (_client) N_0x7a42b2e236e71415() {}

func (_client) N_0x7ac24eab6d74118d(p0 bool) bool;

func (_client) N_0x7b18da61f6bae9d5(p0 float64) {}

func (_client) N_0x7b8a361c1813fbef() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x7bae68775557ae0b(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) N_0x7bbe7ff626a591fe(p0 float64) {}

func (_client) N_0x7c226d5346d4d10a(p0 float64) {}

func (_client) N_0x7c4fccd2e4deb394() bool;

func (_client) N_0x7d36291161859389(p0 float64) {}

func (_client) N_0x7d395ea61622e116(p0 bool) {}

/**
 * SET_VEHICLE_AL*
 */
func (_client) N_0x7d6f9a3ef26136a0(vehicle float64, toggle bool, p2 bool) {}

func (_client) N_0x7d8ba05688ad64c7(p0 float64) {}

func (_client) N_0x7db18ca8cad5b098() float64 {
	return 0.0
}

func (_client) N_0x7db53b37a2f211a0() float64 {
	return 0.0
}

func (_client) N_0x7e07c78925d5fd96(p0 float64) float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 * ```
 * Something to do with phone cameras.
 * startup.c4:
 * void sub_2a3d() {
 * UNK2::_7E2BD3EF6C205F09("No_Filter", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);
 * UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);
 * }
 * ```
 */
func (_client) N_0x7e2bd3ef6c205f09(p0 string, p1 bool) {}

func (_client) N_0x7e6946f68a38b74f(p0 float64) bool;

func (_client) N_0x7ec3c679d0e7e46b(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Possibly used to clear scenario points.
 * CLEAR_*
 */
func (_client) N_0x7ec6f9a478a6a512() {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x7ecdf98587e92dec(p0 float64) {}

/**
 * _PLAYSTATS_ROB_ARMOURD_TRUCK
 */
func (_client) N_0x7eec2a316c250073(p0 float64, p1 float64, p2 float64) {}

/**
 * IS_*
 */
func (_client) N_0x7ef7649b64d7ff10(entity float64) bool;

func (_client) N_0x7f2c4cdf2e82df4c(p0 float64) bool;

func (_client) N_0x7f8f6405f4777af6(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 bool) float64 {
	return 0.0
}

/**
 * SET_VEHICLE_*
 */
func (_client) N_0x7f96f23fa9b73327(modelHash interface{}) {}

func (_client) N_0x7fa5d82b8f58ec06() bool;

func (_client) N_0x7fcc39c46c3c03bd(p0 float64) bool;

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x7ffcbfee44ecfabf() float64 {
	return 0.0
}

/**
 * CLEAR_PED_*
 */
func (_client) N_0x80054d7fcc70eec6(ped float64) {}

/**
 * IS_*
 */
func (_client) N_0x801879a9b4f4b2fb() bool;

func (_client) N_0x80e3357fdef45c21(vehicle float64, toggle bool) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x810b5fcc52ec7ff0(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x8147fff6a718e1ad(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x814af7dcaacc597b(p0 float64) {}

/**
 * UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0 -- [[16]] ], &g_189F36._f10CD1[1 -- [[16]] ], &g_189F36._f10CD1[2 -- [[16]] ], &g_189F36._f10CD1[3 -- [[16]] ], &g_189F36._f10CD1[4 -- [[16]] ], &g_189F36._f10CD1[5 -- [[16]] ], &g_189F36._f10CD1[6 -- [[16]] ], &g_189F36._f10CD1[7 -- [[16]] ]);
 */
func (_client) N_0x817b86108eb94e51(p0 bool): [number, number, number, number, number, number, number, number];

func (_client) N_0x81cbae94390f9f89() {}

func (_client) N_0x820e9892a77e97cd(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x8235f1bead557629(vehicle float64, toggle bool) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x823ec8e82ba45986(p0 float64) {}

/**
 * Only found 2 times in decompiled scripts. Not a whole lot to go off of.
 * MISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0 -- [[8]] ], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
 * MISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A -- [[8]] ], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
 */
func (_client) N_0x8269816f6cfd40f8(name string) float64 {
	return 0.0
}

func (_client) N_0x826d1ee4d1cafc78(p0 float64, p1 float64) {}

/**
 * BG_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x829cd22e043a2577(p0 interface{}) float64 {
	return 0.0
}

func (_client) N_0x82acc484ffa3b05f(p0 float64) float64 {
	return 0.0
}

/**
 * Does nothing. It's a nullsub.
 * NativeDB Introduced: v1604
 */
func (_client) N_0x82e0ac411e41a5b4(toggle bool) {}

func (_client) N_0x82ebb79e258fa2b7(entity float64, interiorID float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x830c3a44eb3f2cf9(p0 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x834344a414c7c85d(p0 float64, p1 float64) {}

func (_client) N_0x83660b734994124d(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

/**
 * Returns true if bit 0 in GtaThread+0x154 is set.
 * BG_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x836b62713e0534ca() bool;

func (_client) N_0x83a169eabcdb10a2(p0 float64, p1 float64) {}

func (_client) N_0x83fe8d7229593017() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x8410c5e0cd847b9d() {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x8423541e8b3a1589(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x84a810b375e69c0e() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x84b418e93894ac1c() float64 {
	return 0.0
}

func (_client) N_0x84de3b5fb3e666f0(ropeId float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0x84dfc579c2fc214c(p0 float64) {}

func (_client) N_0x851cd923176eba7c() {}

func (_client) N_0x8533cafde1f0f336(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x858ec9fd25de04aa(p0 float64, p1 float64) {}

func (_client) N_0x85f6c9aba1de2bcf() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x86255b1fc929e33e(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x8634cef2522d987b(ped float64, p1 string, value float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x8664170ef165c4a6(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x870289a558348378(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x870b8b7a766615c8(p0 float64, p1 float64, p2 float64) {}

/**
 * SET_A*
 */
func (_client) N_0x87ddeb611b329a9c(multiplier float64) {}

func (_client) N_0x88087ee1f28024ae(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x8821196d91fa2de5(vehicle float64, toggle bool) {}

func (_client) N_0x88578f6ec36b4a3a(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0x887fa38787de8c72(vehicle float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x8881c98a31117998(p0 float64) {}
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0xa90e7227a9303fa9(p0 float64) {}

func (_client) N_0x88b588b41ff7868e() float64 {
	return 0.0
}

func (_client) N_0x88bc673ca9e0ae99(vehicle float64, p1 bool) {}

func (_client) N_0x892b6ab8f33606f5(p0 float64, entity float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x8951eb9c6906d3c8() {}

func (_client) N_0x8989cbd7b4e82534(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x8a4416c0db05fa66(p0 float64) bool;

func (_client) N_0x8aa9180de2fedd45(vehicle float64, p1 bool) {}

func (_client) N_0x8b0c2964ba471961() float64 {
	return 0.0
}

func (_client) N_0x8b4ffc790ca131ef(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) N_0x8b9cdbd6c566c38c() float64 {
	return 0.0
}

func (_client) N_0x8bf907833be275de(p0 float64, p1 float64) {}

func (_client) N_0x8c8d2739ba44af0f(p0 float64) bool;

func (_client) N_0x8c9d11605e59d955(p0 float64) {}

func (_client) N_0x8caab2bd3ea58bd4(p0 float64) {}

func (_client) N_0x8cc469ab4d349b7c(p0 float64, p1 string, p2 float64)  (bool, float64){
	return false,0.0
}

/**
 * Used only once in the scripts (taxi_clowncar)
 * SET_PARTICLE_FX_*
 */
func (_client) N_0x8cde909a0370bb3a(toggle bool) {}

/**
 * NativeDB Introduced: v757
 */
func (_client) N_0x8cff648fbd7330f1(p0 float64) {}

/**
 * I*
 */
func (_client) N_0x8d74e26f54b4e5c3(p0 string) {}

/**
 * SET_PLAYER_MAX_*
 */
func (_client) N_0x8d768602adef2245(player float64, p1 float64) {}

func (_client) N_0x8d8adb562f09a245(p0 float64) {}

/**
 * SET_SCRIPT_*
 * Sets the cutscene's owning thread ID.
 */
func (_client) N_0x8d9df6eca8768583(threadId float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x8dca505a5c196f05(p0 float64, p1 float64) {}

func (_client) N_0x8e243837643d9583(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0x8ec74ceb042e7cff(p0 float64) {}

/**
 * NETWORK_SET_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x8ef52acaecc51d9c(toggle bool) {}

func (_client) N_0x8f08017f9d7c47bd(p0 float64, p2 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x8f0d5ba1c2cc91d7(toggle bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x906ca41a4b74eca4() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x908311265d42a820(p0 float64) {}

/**
 * ADD_\*
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) N_0x9097eb6d4bb9a12a(player float64, entity float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x90cd7c6871fbf1b4(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) N_0x916ca67d26fd1e37(p0 string) {}

func (_client) N_0x91ef6ee6419e5b97(p0 bool) {}

func (_client) N_0x9237e334f6e43156(p0 float64) float64 {
	return 0.0
}

/**
 * DISABLE_*
 */
func (_client) N_0x9245e81072704b8a(p0 bool) {}

func (_client) N_0x92da6e70ef249bd1(p0 string, p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x92fc0eedfac04a14(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) N_0x930f504203f561c9(p0 float64) {}

/**
 * Probably IS_SWITCH_*
 */
func (_client) N_0x933bbeeb8c61b5f4() bool;

func (_client) N_0x94538037ee44f5cf(p0 bool) {}

func (_client) N_0x9465e683b12d3f6b() {}

func (_client) N_0x9489659372a81585() bool;

func (_client) N_0x949f397a288b28b3(p0 float64) {}

func (_client) N_0x95a7dabddbb78ae7(iplName1 string, iplName2 string) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x95baf97c82464629(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x9640e30a7f395e4b(vehicle float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0x9641588dab93b4b5(p0 float64) {}

/**
 * Returns some sort of index/offset for components.
 * Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) N_0x96e2929292a4db77(componentHash interface{}) float64 {
	return 0.0
}

func (_client) N_0x96e6d5150dbf1c09(p0 float64, p1 float64, p2 float64) {}

/**
 * GET_CUTSCENE_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x971d7b15bcdbef99() float64 {
	return 0.0
}

func (_client) N_0x973d76aa760a6cb6(p0 bool) {}

/**
 * SET_WEAPON_OBJECT_*
 */
func (_client) N_0x977ca98939e82e4b(weaponObject float64, p1 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0x97841634ef7df1d6(vehicle float64, toggle bool) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0x97e7e2c04245115b(p0 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x97ffb4adeed08066(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0x9849de24fcf23ccc(vehicle float64, toggle bool) {}

/**
 * GET_F*
 */
func (_client) N_0x98c3cf913d895111(_string string, length float64) string;

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x98d18905bf723b99() float64 {
	return 0.0
}

func (_client) N_0x98e2bc1ca26287c3() {}

/**
 * REQUEST_*
 */
func (_client) N_0x98edf76a7271e4f2() {}

func (_client) N_0x9911f4a24485f653(p0 bool) {}

func (_client) N_0x998e18ceb44487fc(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Does nothing. It's a nullsub.
 * NativeDB Introduced: v1604
 */
func (_client) N_0x99a05839c46ce316(toggle bool) {}

func (_client) N_0x99cad8e7afdb60fa(vehicle float64, p1 float64, p2 float64) {}

func (_client) N_0x9a62ec95ae10e011() float64 {
	return 0.0
}

/**
 * Related to car generators & CPlayerSwitchMgrLong
 * SET_VEHICLE_*
 * SET_VEHICLE_GENERATORS_EXPECTED_GAMEPLAY_PT ?
 */
func (_client) N_0x9a75585fb2e54fad(x float64, y float64, z float64, radius float64) {}

func (_client) N_0x9a77dfd295e29b09(ped float64, toggle bool) {}

func (_client) N_0x9ac92eed5e4793ab() {}

/**
 * FORCE_*
 */
func (_client) N_0x9b079e5221d984d3(p0 bool) {}

func (_client) N_0x9b4bd21d69b1e609() {}

/**
 * Hardcoded to return 0.
 * NativeDB Introduced: v323
 */
func (_client) N_0x9b5016a6433a68c5() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x9bd7bd55e4533183(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0x9bddc73cc6a115d4(vehicle float64, p1 bool, p2 bool) {}

func (_client) N_0x9becd4b9fef3f8a6(vehicle float64, p1 bool) {}

func (_client) N_0x9c6a6c19b6c0c496(ped float64, p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0x9d252648778160df(p0 float64) float64 {
	return 0.0
}

func (_client) N_0x9d30687c57baa0bb(p0 float64) {}

/**
 * SET_H*
 */
func (_client) N_0x9d3af56e94c9ae98(vehicle float64, p1 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x9d724b400a7e8ffc(p0 float64, p1 float64) {}

/**
 * Sets some voice chat related value.
 * NETWORK_SET_*
 */
func (_client) N_0x9d7afcbf21c51712(toggle bool) {}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Introduced: v323
 */
func (_client) N_0x9de5d2f723575ed0() bool;

/**
 * SET_FOLLOW_*
 */
func (_client) N_0x9dfe13ecdc1ec196(p0 bool, p1 bool) {}
/**
 * SET_FOLLOW_*
 */
func (_client) SetTimeIdleDrop(p0 bool, p1 bool) {}

func (_client) N_0x9e30e91fb03a2caf() (bool , float64,float64) { return false,0.0,0.0 }

/**
 * DISABLE_*
 */
func (_client) N_0x9e6542f0ce8e70a3(toggle bool) {}

/**
 * SET_*
 */
func (_client) N_0x9ebd751e5787baf2(p0 bool) {}

func (_client) N_0x9ec8858184cd253a() float64 {
	return 0.0
}

func (_client) N_0x9edd76e87d5d51ba(player float64) {}

/**
 * REMOVE_\*
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) N_0x9f260bfb59adbca3(player float64, entity float64) {}

func (_client) N_0x9f3f689b814f2599(vehicle float64, p1 bool) {}

/**
 * B\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x9f97da93681f87ea() {}

/**
 * SET_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0x9fcb3cbfb3ead69a(p0 float64, p1 float64) {}

func (_client) N_0x9fedf86898f100e9() float64 {
	return 0.0
}

func (_client) N_0xa01bc64dd4bfbbac(vehicle float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0xa08fe5e49bdc39dd(p0 float64, p1 float64, p2 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xa0ad167e4b39d9a2(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64, p13 float64) float64 {
	return 0.0
}

func (_client) N_0xa0cefcea390aab9b(p0 float64) {}

func (_client) N_0xa0f93d5465b3094d(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0xa0fa4ec6a05da44e() float64 {
	return 0.0
}

func (_client) N_0xa0fe76168a189ddb() float64 {
	return 0.0
}

func (_client) N_0xa12d3a5a3753cc23() float64 {
	return 0.0
}

func (_client) N_0xa17784fca9548d15(p0 float64, p1 float64, p2 float64) {}

/**
 * ROPE_\*
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) N_0xa1ae736541b0fca3(p1 bool) float64 {
	return 0.0
}

func (_client) N_0xa213b11dff526300() bool;

func (_client) N_0xa238192f33110615(): [boolean, number, number, number];

func (_client) N_0xa247f9ef01d8082e(p0 float64) {}

func (_client) N_0xa2767257a320fc82(p0 float64, p1 bool) {}

/**
 * CLEAR_*
 */
func (_client) N_0xa2c1f5e92afe49ed() {}

func (_client) N_0xa2c9ac24b4061285(ped float64, weaponHash interface{}) float64 {
	return 0.0
}

/**
 * Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
 * Example (XBOX 360):
 * // check current filter selection
 * if (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)
 * {
 * MOBILE::_0xC273BB4D(0); // FALSE
 * }
 * else
 * {
 * MOBILE::_0xC273BB4D(1); // TRUE
 * }
 */
func (_client) N_0xa2ccbe62cd4c91a4(toggle float64) {}

/**
 * Appears to set whether a transition should be started when the session is migrating.
 * NETWORK_SET_*
 */
func (_client) N_0xa2e9c1ab8a92e8cd(toggle bool) {}

func (_client) N_0xa306f470d1660581() float64 {
	return 0.0
}

func (_client) N_0xa3c53804bdb68ed2(p0 float64, p1 float64) {}

/**
 * Only called once in the scripts:
 * if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {
 * if (sub_52e3("RESNA_CELLR", 0)) {
 * PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
 * PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
 * PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
 * l_184 += 1;
 * }
 * }
 * Checks something related to the mobile phone task.
 * IS_*
 */
func (_client) N_0xa3f3564a5b3646c0(ped float64) bool;

/**
 * NativeDB Added Parameter 1: int p0
 * NativeDB Introduced: v323
 */
func (_client) N_0xa468e0be12b12c70() bool;

func (_client) N_0xa46b73faa3460ae1(p0 bool) {}

func (_client) N_0xa4822f1cf23f4810(p1 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64): [boolean, number[], number[]];

/**
 * GET_SAVE_*
 * GET_SAVE_UNLESS_CUSTOM_DOT ?
 */
func (_client) N_0xa4a0065e39c9f25c(): [boolean, number[], number, any /* actually bool */, any /* actually bool */];

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xa4a9a4c40e615885(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xa51338e0dccd4065(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0xa51b086b0b2c0f7a(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xa52d5247a4227e14(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xa5eafe473e45c442(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

func (_client) N_0xa660faf550eb37e5(p0 float64, p1 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xa6eef01087181edd(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0xa6f54bb2ffca35ea(p0 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xa6fceccf4721d679(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xa7092afe81944852() {}

func (_client) N_0xa736cf7fb7c5bff4() (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

func (_client) N_0xa761d4ac6115623d() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0xa770c8eec6fb2ac5() float64 {
	return 0.0
}

func (_client) N_0xa7862bc5ed1dfd7e(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * STATS::0xE3247582(0);
 * STATS::0xE3247582(1);
 * STATS::0xE3247582(2);
 * STATS::0xE3247582(3);
 * STATS::0xE3247582(4);
 * STATS::0xE3247582(5);
 * STATS::0xE3247582(6);
 */
func (_client) N_0xa78b8fa58200da56(p0 float64) {}

func (_client) N_0xa7dcdf4ded40a8f4(vehicle float64, p1 bool) {}

/**
 * Some property related to gates. Native name between `DOOR_SYSTEM_SET_AUTOMATIC_RATE` and `DOOR_SYSTEM_SET_DOOR_STATE`.
 */
func (_client) N_0xa85a21582451e951(doorHash interface{}, p1 bool) {}

func (_client) N_0xa8733668d1047b51(p0 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xa8a7d434afb4b97b(p0 string, p1 float64) {}

func (_client) N_0xa8acb6459542a8c8() float64 {
	return 0.0
}

func (_client) N_0xa943fd1722e11efd() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xa95cfb4e02390842(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0xa95f667a755725da(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xa9b61a329bfdcbea(p0 float64, p1 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xaa059c615de9dd03(p0 float64, p1 float64) {}

func (_client) N_0xaa19f5572c38b564(p0 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) N_0xaa525dff66bb82f5(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Added Parameter 1: Entity entity
 */
func (_client) N_0xaa5fafcd2c5f5e47()  interface{} { return nil }

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xaa653ae61924b0a0(vehicle float64, toggle bool) {}

func (_client) N_0xaa76052dda9bfc3e(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) N_0xaaa6a3698a69e048(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xaabd62873ffb1a33(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xaae9be70ec7c69ab(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64) {}

func (_client) N_0xab04325045427aae(vehicle float64, p1 bool) {}

/**
 * Used only once in the scripts (fm_mission_controller) like so:
 * TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");
 * SET_*
 */
func (_client) N_0xab13a5565480b6d9(ped float64, p1 string) float64 {
	return 0.0
}

func (_client) N_0xab31ef4de6800ce9(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xab6781a5f3101470(p0 float64, p1 float64) {}

func (_client) N_0xac2890471901861c(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xad27d957598e49e9(ped float64, p1 float64, p2 float64, hash interface{}, p4 float64, p5 float64) {}

/**
 * This has been found in use in the decompiled files.
 */
func (_client) N_0xad73ce5a09e42d12(player float64) {}

/**
 * gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.
 * Possibly waypoint?
 */
func (_client) N_0xadb57e5b663cca8b(p0 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xadd6627c4d325458(p0 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xadf084fb8f075d06(p0 float64) bool;

func (_client) N_0xae3fee8709b39dcb(vehicle float64) bool;

func (_client) N_0xae51bc858f32ba66(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0xaeab987727c5a8a4(p0 float64) bool;

/**
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 */
func (_client) N_0xaedf1bc1c133d6e3() float64 {
	return 0.0
}

/**
 * Exemple of use(carmod_shop.c4)
 * INTERIOR::_AF348AFCB575A441("V_CarModRoom");
 */
func (_client) N_0xaf348afcb575a441(roomName string) {}

func (_client) N_0xaf60e6a2936f982a(p0 float64, p1 float64) {}

/**
 * SET_PED_*
 */
func (_client) N_0xafc976fd0580c7b3(ped float64, toggle bool) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) N_0xafe24e4d29249e4a(object float64, p1 float64, p2 float64, p3 bool) bool;

func (_client) N_0xaff47709f1d5dcce() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xb1381b97f70c7b30() {}

func (_client) N_0xb13e88e655e5a3bc() {}

func (_client) N_0xb1577667c3708f9b() {}

func (_client) N_0xb17bc6453f6cf5ac(p0 float64, p1 float64) {}

func (_client) N_0xb1b6216ca2e7b55e(p0 float64, p1 bool, p2 bool) {}

func (_client) N_0xb1d2bb1e1631f5b1() bool;

/**
 * This native doesn't seem to do anything, might be a debug-only native.
 * Confirmed, it is a debug native.
 */
func (_client) N_0xb264c4d2f2b0a78b(vehicle float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Introduced: v1493
 */
func (_client) N_0xb26f670685631727(p0 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xb282749d5e028163(p0 float64, p1 float64) {}

func (_client) N_0xb2d0bde54f0e8e5a(object float64, toggle bool) {}

/**
 * SET_C*
 */
func (_client) N_0xb2e0c0d6922d31f2(vehicle float64, toggle bool) {}

func (_client) N_0xb2ebe8cbc58b90e9() float64 {
	return 0.0
}

func (_client) N_0xb309ebea797e001f(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xb37e4e6a2388ca7b() bool;

/**
 * Setter for 0xE59343E9E96529E7
 * SET_M*
 */
func (_client) N_0xb3c641f3630bf6da(p0 float64) {}

/**
 * This function is hard-coded to always return 1.
 * NETWORK_IS_*
 */
func (_client) N_0xb3da2606774a8e2d() bool;

/**
 * PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation
 * ***
 * In "am_hold_up.ysc" used once:
 * l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
 * PLAYER::_B45EFF719D8427A6((l_8d._f47));
 */
func (_client) N_0xb45eff719d8427a6(p0 float64) {}

func (_client) N_0xb4c2ec463672474e(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xb4deae67f35e2acd(p0 float64) {}

func (_client) N_0xb51b9ab9ef81868c(toggle bool) {}

func (_client) N_0xb542de8c3d1cb210(p0 bool) {}

func (_client) N_0xb552929b85fc27ec(p0 float64, p1 float64) {}

func (_client) N_0xb569f41f3e7e83a4(p0 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xb5b58e24868cb09e(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xb5b7742424bd4445(p0 float64, p1 float64) {}

func (_client) N_0xb5d3453c98456528() float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xb606e6cc59664972(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xb68cfaf83a02768d(vehicle float64, toggle bool) {}

/**
 * ROPE_*
 */
func (_client) N_0xb743f735c03d7810(ropeId float64, p1 float64) {}

func (_client) N_0xb746d20b17f2a229() (bool , float64,float64) { return false,0.0,0.0 }

/**
 * SET_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xb7b873520c84c118() {}

/**
 * Clears all areas created by 0xD4A7A435B3710D05
 * CLEAR_*
 * NativeDB Introduced: v1290
 */
func (_client) N_0xb7c6d80fb371659a() {}

func (_client) N_0xb81cf134aeb56ffb() {}

/**
 * Disables something. Used only once in R* scripts (freemode.ysc).
 * DISABLE_PLAYER_*
 */
func (_client) N_0xb885852c39cc265d() {}

func (_client) N_0xb8b52e498014f5b0(ped float64) bool;

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0xb9351a07a0d458b1(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xb9562064627ff9db(p0 float64, p1 float64) {}

/**
 * Returns profile setting 237.
 * GET_*
 */
func (_client) N_0xb9cf1f793a9f1bf1() bool;

func (_client) N_0xba0127da25fd54c9(p0 float64, p1 float64) {}

/**
 * SET_PARTICLE_FX_*
 */
func (_client) N_0xba3d194057c79a7b(p0 string) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xba4b8d83bdc75551(p0 float64) {}

func (_client) N_0xba7f0b77d80a4eb7(p0 float64, p1 float64) {}

/**
 * FORCE_*
 */
func (_client) N_0xba8d65c1c65702e5(toggle bool) {}

func (_client) N_0xba91d045575699ad(vehicle float64) bool;

func (_client) N_0xba9749cc94c1fd85() float64 {
	return 0.0
}

func (_client) N_0xbaa2f0490e146be8(p0 float64) {}

func (_client) N_0xbb2333bb87ddd87f(p0 float64, p1 float64) {}

func (_client) N_0xbb90e12cac1dab25(p0 float64) {}

/**
 * var num3 = PLAYER::GET_PLAYER_PED(l_2171); // proof l_2171 is a player
 * var num17 = PLAYER::0x9DF75B2A(l_2171, 100, 0); // l_2171
 * .ysc:
 * if (PLAYER::GET_PLAYER_WANTED_LEVEL(l_6EF) < v_4) { // l_6EF is a player
 * PLAYER::SET_PLAYER_WANTED_LEVEL(l_6EF, v_4, 0); // l_6EF
 * PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(l_6EF, 0); // l_6EF
 * } else {
 * PLAYER::_4669B3ED80F24B4E(l_6EF); // l_6EF
 * HUD::_BA8D65C1C65702E5(1);
 * a_0 = 1;
 * }
 * if (l_4B24[l_6F2 -- [[156]] ]._f8C != PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0)) { // l_6EF
 * l_4B24[l_6F2 -- [[156]] ]._f8C = PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0); // l_6EF
 * }
 * Both was taken from fm_mission_controller
 * GET_PLAYER_*
 */
func (_client) N_0xbc0753c9ca14b506(player float64, p1 float64, p2 bool) bool;

/**
 * Most likely ROPE_ATTACH_*
 */
func (_client) N_0xbc0ce682d4d05650(ropeId float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64, p13 float64) {}

/**
 * Seems to only appear in scripts used in Singleplayer.
 * Always used like this in scripts
 * PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());
 */
func (_client) N_0xbc9490ca15aea8fb(player float64) {}

func (_client) N_0xbcedb009461da156() float64 {
	return 0.0
}

func (_client) N_0xbd0efb25cca8f97a(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xbd545d44cce70597() bool;

/**
 * NETWORK_SESSION_IS_*
 */
func (_client) N_0xbdb6f89c729cf388() bool;

/**
 * This function is hard-coded to always return 0.
 */
func (_client) N_0xbe197eaa669238f4(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) N_0xbe3db208333d9844() float64 {
	return 0.0
}

func (_client) N_0xbe5c1255a1830ff5(vehicle float64, toggle bool) {}

func (_client) N_0xbeb2d9a1d9a8f55a(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xbed8ca5ff5e04113(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xbed9f5693f34ed17(statName interface{}, p1 float64, outValue float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0xbef34b1d9624d5dd(p0 bool) {}

func (_client) N_0xbf22e0f32968e967(player float64, p1 bool) {}

func (_client) N_0xbf371cd2b64212fd(p0 float64) {}

func (_client) N_0xbf4dc1784be94dfa(ped float64, p1 bool, hash interface{}) {}

func (_client) N_0xbf4f34a85ca2970c() {}

func (_client) N_0xbf72910d0f26f025() float64 {
	return 0.0
}

func (_client) N_0xbfafdb5faaa5c5ab(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xbffe53ae7e67fcdc(p0 float64, p1 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 * ```
 * NativeDB Introduced: v2372
 * ```
 */
func (_client) N_0xc01d2470f22cde5a() {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xc03fab2c2f92289b(p0 float64) {}

/**
 * GOLF_TRAIL_SET_*
 */
func (_client) N_0xc0416b061f2b7e5e(p0 bool) {}

func (_client) N_0xc0e0d686ddfc6eae() float64 {
	return 0.0
}

func (_client) N_0xc0ed6438e6d39ba8(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0xc13c38e47ea5df31(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0xc141b8917e0017ec() {}

/**
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Introduced: v1493
 */
func (_client) N_0xc14bd9f5337219b2(p0 float64) {}

/**
 * SET_VEH*
 */
func (_client) N_0xc1805d05e6d4fe10(vehicle float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xc1e963c58664b556(p0 float64) {}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Introduced: v323
 */
func (_client) N_0xc2c97ea97711d1ae() bool;

/**
 * Getter for 0xCD74233600C4EA6B
 * GET_*
 */
func (_client) N_0xc2d2ad9eaae265b8() bool;

func (_client) N_0xc2ee020f5fb4db53(ped float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xc30bdaee47256c13(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xc32ea7a2f6ca7557() float64 {
	return 0.0
}

/**
 * - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
 */
func (_client) N_0xc3376f42b1faccc6(player float64) {}
/**
 * - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
 */
func (_client) SetAreasGeneratorOrientation(player float64) {}

/**
 * SET_ENTITY_*
 */
func (_client) N_0xc34bc448da29f5e9(entity float64, toggle bool) {}

func (_client) N_0xc35a6d07c93802b2() {}

func (_client) N_0xc361aa040d6637a8(vehicle float64, p1 bool) {}

func (_client) N_0xc42dd763159f3461() bool;

func (_client) N_0xc434133d9ba52777(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * GET_IS_LOADING_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xc4637a6d03c24cc3() bool;

func (_client) N_0xc4b3347bd68bd609(p0 float64) {}

/**
 * SET_VEHICLE_LI*
 */
func (_client) N_0xc50ce861b55eab8b(vehicle float64, p1 bool) {}

func (_client) N_0xc56fbf2f228e1dac(modelHash interface{}, p1 float64, p2 float64) float64 {
	return 0.0
}

/**
 * NETWORK_IS_TRANSITION_*
 */
func (_client) N_0xc571d0e77d8bbc29() bool;

func (_client) N_0xc594b315edf2d4af(ped float64) {}

/**
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Added Parameter 3: float* p2
 * NativeDB Introduced: v323
 */
func (_client) N_0xc5a35c73b68f3c49() bool;

func (_client) N_0xc5c8f970d4edff71(p0 float64) {}

func (_client) N_0xc6033d32241f6fb5(object float64, toggle bool) {}

/**
 * Toggles a value (bool) for cutscenes.
 * SET_*
 */
func (_client) N_0xc61b86c9f61eb404(toggle bool) {}

/**
 * GET_NE*
 * NativeDB Introduced: v1493
 */
func (_client) N_0xc64a06d939f826f5(): [boolean, number, number, number];

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xc67db108a9ade3be(p0 float64, p1 float64) {}

/**
 * Sets profile setting 939
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xc67e2da1cbe759e2() {}

func (_client) N_0xc6e0e2616a7576bb() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xc6e74cf8c884c880(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

/**
 * See [`N_0x701fda1e82076ba4`](#\_0x701FDA1E82076BA4).
 */
func (_client) N_0xc7f29ca00f46350e(p0 bool) {}

/**
 * NET_GAMESERVER_*
 * Checks if the transaction status is equal to 1.
 * NativeDB Introduced: v1365
 */
func (_client) N_0xc830417d630a50f9(transactionId float64) bool;

func (_client) N_0xc8391c309684595a() {}

func (_client) N_0xc847b43f369ac0b5() {}

/**
 * NativeDB Introduced: v323
 */
func (_client) N_0xc85a7127e7ad02aa() float64 {
	return 0.0
}

func (_client) N_0xc87e740d9f3872cc() float64 {
	return 0.0
}

/**
 * IS_MOBILE_PHONE_*
 */
func (_client) N_0xc8b1b2425604cdd0() bool;

func (_client) N_0xc8b5c4a79cc18b94(cam float64) {}

func (_client) N_0xc8e1071177a23be5(): [boolean, number, number, number];

func (_client) N_0xc8ede9bdbccba6d4(p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) N_0xc9b43a33d09cada7(p0 float64) {}

func (_client) N_0xca465d9cc0d231ba(p0 float64) {}

func (_client) N_0xca4ae345a153d573(p0 bool) {}

func (_client) N_0xca575c391fea25cc(p0 float64) {}

/**
 * NETWORK_S\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xca59ccae5d01e4ce() {}

func (_client) N_0xca6b2f7ce32ab653(p0 float64, p2 float64)  (bool, float64){
	return false,0.0
}

/**
 * Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".
 */
func (_client) N_0xcac57395b151135f(player float64, p1 bool) {}

func (_client) N_0xcb0360efefb2580d(padIndex float64) {}

/**
 * Returns profile setting 243.
 * GET_*
 */
func (_client) N_0xcb645e85e97ea48b() bool;

func (_client) N_0xcb82a0bf0e3e3265(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xcc25a4553dfbf9ea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * RESET_*
 */
func (_client) N_0xcc6e963682533882(object float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xccd078c2665d2973(p0 bool) {}

/**
 * REQUEST_*
 */
func (_client) N_0xcd018c591f94cb43(ped float64, p1 bool) {}

/**
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 */
func (_client) N_0xcd0f5b5d932ae473() {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xcd4d66b43b1dd28d(p0 float64, p1 float64, p2 float64) {}

/**
 * Setter for 0xC2D2AD9EAAE265B8
 * SET_*
 */
func (_client) N_0xcd74233600c4ea6b(toggle bool) {}

func (_client) N_0xcdca26e80faecb8f() {}

func (_client) N_0xcea7c8e1b48ff68c(p0 float64, p1 float64) {}

func (_client) N_0xced08cbe8ebb97c7(p0 float64, p1 float64) {}

func (_client) N_0xceda60a74219d064(p0 float64, p1 bool) {}

func (_client) N_0xcf9159024555488c(p0 float64) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0xcfd16f0db5a3535c(toggle bool) {}

/**
 * what does this do?
 */
func (_client) N_0xcfd778e7904c255e(vehicle float64) {}

func (_client) N_0xcfeb46dcd7d8d5eb(p0 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xd05a3241b9a86f19(p0 float64, p1 float64) {}

func (_client) N_0xd0ee05fe193646ea(): [boolean, number, number, number];

func (_client) N_0xd10282b6e3751ba0() float64 {
	return 0.0
}

/**
 * PLAYSTATS_S*
 */
func (_client) N_0xd1032e482629049e(p0 float64) {}

func (_client) N_0xd1942374085c8469(p0 float64) {}

func (_client) N_0xd1a1ee3b4fa8e760(p0 float64) {}

/**
 * SET_TV_???
 */
func (_client) N_0xd1c55b110e4df534(p0 float64) {}

func (_client) N_0xd1c7cb175e012964(scaleformHandle float64) bool;

func (_client) N_0xd1c9b92bdd3f151d(p0 float64, p1 float64, p2 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xd2049635deb9c375() {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xd29334ed1a256dbf(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0xd2dccd8e16e20997(p0 float64) {}

func (_client) N_0xd302e99edf0449cf(p0 float64) float64 {
	return 0.0
}

/**
 * NETWORK_SESSION_IS_*
 */
func (_client) N_0xd313de83394af134() bool;

func (_client) N_0xd3301660a57c9272(p0 float64) {}

func (_client) N_0xd33daa36272177c4(ped float64) {}

func (_client) N_0xd3e51c0ab8c26eee(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) N_0xd4196117af7bb974(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xd4367d310f079db0(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Adds an area that seems to be related to pickup physics behavior.
 * Max amount of areas is 10. Only works in multiplayer.
 * ADD_*
 * NativeDB Introduced: v1290
 */
func (_client) N_0xd4a7a435b3710d05(x float64, y float64, z float64, radius float64) {}

/**
 * Only used like this:
 * if (VEHICLE::_D4C4642CB7F50B5D(ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_3))) {                                                        sub_157e9c(g_40001._f1868, 0);
 * }
 */
func (_client) N_0xd4c4642cb7f50b5d(vehicle float64) bool;

func (_client) N_0xd558bec0bba7e8d2(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0xd565f438137f0e10(p0 float64, p1 float64) {}

func (_client) N_0xd642319c54aadeb6() float64 {
	return 0.0
}

func (_client) N_0xd6ade981781fca09(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xd6ca58b3b53a0f22(p0 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xd6d7478ca62b8d41(p0 float64, p1 float64) {}

func (_client) N_0xd7360051c885628b() float64 {
	return 0.0
}

func (_client) N_0xd7b6c73cad419bcf(p0 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xd7b80e7c3befc396(p0 float64, p1 float64) {}

func (_client) N_0xd8122c407663b995() float64 {
	return 0.0
}

func (_client) N_0xd821056b9acf8052(player float64, p1 float64) {}

func (_client) N_0xd9454b5752c857dc() {}

/**
 * RESET_*
 */
func (_client) N_0xd9f692d349249528() {}

func (_client) N_0xda07819e452ffe8f(p0 float64) {}

func (_client) N_0xdaf80797fc534bec(p0 float64) {}

func (_client) N_0xdaf87174be7454ff(p0 float64) bool;

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xdb1ea9411c8911ec(p0 float64) {}

func (_client) N_0xdb41d07a45a6d4b7(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1734
 */
func (_client) N_0xdb663cc9ff3407a9(player float64) float64 {
	return 0.0
}

func (_client) N_0xdb90c6cca48940f1(p0 bool) {}

/**
 * Related to locking the vehicle or something similar.
 * In the decompiled scripts, its always called after
 * VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);
 * VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);
 * VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);
 */
func (_client) N_0xdbc631f109350b8c(vehicle float64, p1 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xdbf860cf1db8e599(p0 float64) float64 {
	return 0.0
}

/**
 * SET_*
 * Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
 * Ran after these 2 natives,
 * set_object_targettable(uParam0, 0);
 * set_entity_invincible(uParam0, 1);
 */
func (_client) N_0xdc6f8601faf2e893(entity float64, toggle bool) {}

func (_client) N_0xdc9da9e8789f5246() {}

/**
 * Always returns false.
 * ```
 * NativeDB Introduced: v1868
 * ```
 */
func (_client) N_0xdcc07526b8ec45af(player float64) bool;

/**
 * NativeDB Added Parameter 1: Vehicle vehicle
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0xdce97bdf8a0eabc8() {}

/**
 * 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
 */
func (_client) N_0xdd2620b7b9d16ff1(player float64, p1 float64) bool;

/**
 * Tune Backwards... ?
 * SET_RADIO_*
 */
func (_client) N_0xdd6bcf9e94425df9() {}

func (_client) N_0xdd79df9f4d26e1c9() {}

func (_client) N_0xde03620f8703a9df() float64 {
	return 0.0
}

func (_client) N_0xde45d1a1ef45ee61(player float64, toggle bool) {}
func (_client) SetHudAnimStopLevel(player float64, toggle bool) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0xde68e30d89f97132(amount float64, p1 float64) {}

func (_client) N_0xdeaaf77eb3687e97(p0 float64, p1 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) N_0xdf4b952f7d381b95() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xdfbd93bf2943e29b(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xdfcdb14317a9b361(p0 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xdfe68c4b787e1bfb(ped float64) {}

func (_client) N_0xe058175f8eafe79a(p0 bool) {}

func (_client) N_0xe05dd0e9707003a3(p0 float64, p1 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xe05f6aeefeb0bb02(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xe0f82d68c7039158(p0 float64) {}

func (_client) N_0xe111a7c0d200cbc5(p0 float64, p1 float64) {}

/**
 * This function is hard-coded to always return 1.
 */
func (_client) N_0xe154b48b68ef72bc(p0 float64) bool;

func (_client) N_0xe16142b94664defd(vehicle float64, p1 bool) {}

/**
 * Used with IS_LOOK_INVERTED() and negates its affect.
 * --
 * Not sure how the person above got that description, but here's an actual example:
 * if (PAD::_GET_LAST_INPUT_METHOD(2)) {
 * if (a_5) {
 * if (PAD::IS_LOOK_INVERTED()) {
 * a_3 *= -1;
 * }
 * if (PAD::_E1615EC03B3BB4FD()) {
 * a_3 *= -1;
 * }
 * }
 * }
 */
func (_client) N_0xe1615ec03b3bb4fd() bool;

func (_client) N_0xe16aa70ce9beedc3(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xe23adc6fcb1f29ae(p0 float64, p1 float64, p2 float64) {}

func (_client) N_0xe2892e7e55d7073a(p0 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0xe2bb399d90942091(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0xe2e244ab823b4483(amount float64, p1 float64) {}

/**
 * RESET_*
 * Resets the effect of 0x428AD3E26C8D9EB0
 */
func (_client) N_0xe2f53f172b45ede1() {}

func (_client) N_0xe3261d791eb44acb(p0 float64) {}

func (_client) N_0xe36a98d8ab3d3c66(p0 bool) {}

/**
 * sets something to 1
 */
func (_client) N_0xe3d969d2785ffb5e() {}

/**
 * Sets an unknown value related to timecycles.
 */
func (_client) N_0xe3e2c1b4c59dbc77(unk float64) {}

func (_client) N_0xe3e5a7c64ca2c6ed() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xe42d626eec94e5d9(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) N_0xe496a53ba5f50a56(p0 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xe4c3b169876d33d7(p0 float64) {}

func (_client) N_0xe4dcec7fd5b739a5(ped float64) {}

/**
 * STOP_S*
 */
func (_client) N_0xe4e6dd5566d28c82() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xe4f6e8d07a2f0f51(p0 float64) float64 {
	return 0.0
}

/**
 * SET_*
 */
func (_client) N_0xe532ec1a63231b4f(p0 float64, p1 float64) {}

func (_client) N_0xe5810ac70602f2f5(vehicle float64, p1 float64) {}

/**
 * Getter for 0xB3C641F3630BF6DA
 * GET_M*
 */
func (_client) N_0xe59343e9e96529e7() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xe5e9746a66359f9d() float64 {
	return 0.0
}

/**
 * TOGGLE_*
 */
func (_client) N_0xe63d7c6eececb66b(toggle bool) {}

/**
 * SET_ENTITY_M\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xe66377cddada4810(entity float64, p1 bool) {}

func (_client) N_0xe6717e652b8c8d8a(p0 float64, p1 float64) {}

func (_client) N_0xe67c6dfd386ea5e7(p0 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xe6d2cedd370ff98e(p0 float64, p1 float64) {}

/**
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: int* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 */
func (_client) N_0xe75a4a2e5e316d86() bool;

/**
 * This function is hard-coded to always return 0.
 */
func (_client) N_0xe791df1f73ed2c8b(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xe851e480b814d4ba(vehicle float64, p1 bool) {}

/**
 * GET_H*
 * NativeDB Introduced: v1604
 */
func (_client) N_0xe8718faf591fd224(vehicle float64) bool;

func (_client) N_0xe8853fbce7d8d0d6() float64 {
	return 0.0
}

func (_client) N_0xe906ec930f5fe7c8(p0 float64, p1 float64) {}

/**
 * Related to tennis mode. Checks for `0x0FCED5ADF = swung`
 */
func (_client) N_0xe95b0c7d5ba3b96b(ped float64) bool;

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xea8c0ddb10e2822a(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xea95c0853a27888e() {}

func (_client) N_0xea9960d07dadcf10(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xeaf0fa793d05c592() float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xeb078ca2b5e82add(p0 float64, p1 float64) {}

func (_client) N_0xeb2104e905c6f2e9() float64 {
	return 0.0
}

func (_client) N_0xeb6f1a9b5510a5d2(p0 float64, p1 bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xeb81a3dadd503187() {}

func (_client) N_0xebcab9e5048434f4() float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) N_0xebd3205a207939ed(p0 float64) {}

func (_client) N_0xebf8284d8cadeb53() {}

func (_client) N_0xebfa8d50addc54c4(p0 float64) bool;

/**
 * SET_PED_*
 * Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.
 */
func (_client) N_0xec4b4b3b9908052a(ped float64, unk float64) {}

/**
 * This function is hard-coded to always return 0.
 */
func (_client) N_0xec72c258667be5ea(p0 float64) float64 {
	return 0.0
}

/**
 * STAT_LOAD_*
 */
func (_client) N_0xecb41ac6ab754401() bool;

/**
 * FORCE_*
 */
func (_client) N_0xed3c76adfa6d07c4(ped float64) {}

func (_client) N_0xed5ede9e676643c9(p0 float64, p1 float64) {}

func (_client) N_0xed5fd7af10f5e262(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xed76d195e6e3bf7f(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xedbc8405b3895cc9(p0 float64, p1 float64) {}

func (_client) N_0xedbf6c9b0d2c65c8(p0 float64) {}

/**
 * Some kind of flags.
 */
func (_client) N_0xeebfc7a7efdc35b4(vehicle float64) float64 {
	return 0.0
}

func (_client) N_0xef398beee4ef45f9(p0 bool) {}

func (_client) N_0xef39ee20c537e98c(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * AD*
 */
func (_client) N_0xefabc7722293da7c() {}

/**
 * GET_*
 */
func (_client) N_0xf033419d1b81fae8(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xf051d9bfb6ba39c0(p0 float64) {}

func (_client) N_0xf06a6f41cb445443(p0 float64) {}

func (_client) N_0xf06ebb91a81e09e3(p0 bool) {}

/**
 * NETWORK_RE*
 */
func (_client) N_0xf083835b70ba9bfe() {}

/**
 * Only 1 occurrence. p1 was 2.
 */
func (_client) N_0xf10b44fd479d69f3(player float64, p1 float64) bool;

func (_client) N_0xf11f01d98113536a(p0 float64) float64 {
	return 0.0
}

func (_client) N_0xf13fe2a80c05c561() bool;

/**
 * Sets profile setting 933
 */
func (_client) N_0xf1a1803d3476f215(value float64) {}

func (_client) N_0xf1e22dc13f5eebad(p0 float64) {}

/**
 * 2 calls found in the b617d scripts:
 * AUDIO::_F1F8157B8C3F171C(l_A42, "Franklin_Bike_Rev", "BIG_SCORE_3A_SOUNDS");
 * AUDIO::_F1F8157B8C3F171C(l_166, "Trevor_Revs_Off", "PALETO_SCORE_SETUP_SOUNDS");
 */
func (_client) N_0xf1f8157b8c3f171c(vehicle float64, p1 string, p2 string) {}

func (_client) N_0xf22ca0fd74b80e7a(p0 float64) bool;

/**
 * Initial guess of native: `_IS_PED_WEARING_MOTORCYCLE_HELMET`.
 */
func (_client) N_0xf2385935bffd4d92(ped float64) bool;

func (_client) N_0xf239400e16c23e08(padIndex float64, p1 float64) {}

func (_client) N_0xf25e02cb9c5818f8() {}

func (_client) N_0xf284ac67940c6812() float64 {
	return 0.0
}

func (_client) N_0xf287f506767cc8a9() float64 {
	return 0.0
}

/**
 * SET_PED_ALLOW*
 * toggle was always false except in one instance (b678).
 * The one time this is set to true seems to do with when you fail the mission.
 */
func (_client) N_0xf2bebcdfafdaa19e(toggle bool) {}

func (_client) N_0xf2ca003f167e21d2() float64 {
	return 0.0
}
func (_client) ReturnZero() float64 {
	return 0.0
}

func (_client) N_0xf2e07819ef1a5289() bool;

func (_client) N_0xf3162836c28f9da5(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

/**
 * SET_VEHICLE_*
 */
func (_client) N_0xf3365489e0dd50f9(vehicle float64, toggle bool) {}

func (_client) N_0xf3b0e0aed097a3f5(p0 float64, p1 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xf3f776ada161e47d(p0 float64, p1 float64) {}

func (_client) N_0xf49abc20d8552257(p0 float64) {}

func (_client) N_0xf4a0dadb70f57fa6() {}

func (_client) N_0xf51d36185993515d(checkpoint float64, posX float64, posY float64, posZ float64, unkX float64, unkY float64, unkZ float64) {}

func (_client) N_0xf534d94dfa2ead26(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) N_0xf55e4046f6f831dc(p0 float64, p1 float64) {}

func (_client) N_0xf56dfb7b61be7276(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0xf5bb8dac426a52c0() (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

func (_client) N_0xf6baaaf762e1bf40(p0 string, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) N_0xf6f4383b7c92f11a(p0 float64) {}

func (_client) N_0xf78b803082d4386f(p0 float64) {}

func (_client) N_0xf78f94d60248c737(vehicle float64, p1 bool) bool;

func (_client) N_0xf814fec6a19fd6e0() {}

func (_client) N_0xf8155a7f03ddfc8e(p0 float64) {}

/**
 * NativeDB Added Parameter 9: Any p8
 * NativeDB Introduced: v1290
 */
func (_client) N_0xf83d0febe75e62c9(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64) {}

func (_client) N_0xf854439efbb3b583() {}

/**
 * BL\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xf8ad2eed7c47e8fe(ped float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0xf8b49f5ba7f850e7(vehicle float64, p1 float64) {}

func (_client) N_0xf8c54a461c3e11dc() (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

/**
 * NativeDB Introduced: v1868
 */
func (_client) N_0xf9096193df1f99d4(p0 float64) {}

func (_client) N_0xf92099527db8e2a7(p0 float64, p1 float64) {}

/**
 * p1 was always 1 (true).
 * Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
 * Actual name begins with 'S'
 */
func (_client) N_0xf9acf4a08098ea25(ped float64, p1 bool) {}

func (_client) N_0xf9c1681347c8bd15(object float64) {}

func (_client) N_0xf9f2922717b819ec() float64 {
	return 0.0
}

func (_client) N_0xfa07759e6fddd7cf(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xfa1e0e893d915215(toggle bool) {}

func (_client) N_0xfa2888e3833c8e96() {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0xfa3ffb0eebc288a3(p0 bool) {}

/**
 * REMOVE_*
 * NativeDB Introduced: v1493
 */
func (_client) N_0xfa83ca6776038f64(x float64, y float64, z float64) {}

/**
 * Another unknown label type...
 * MISC::_FAA457EF263E8763(a_0, "Thumb_label");
 * MISC::_FAA457EF263E8763(&a_0._f10, "Photo_label");
 * MISC::_FAA457EF263E8763(a_0, "GXTlabel");
 * MISC::_FAA457EF263E8763(&a_0._f21, "StringComp");
 * MISC::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");
 * MISC::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");
 * MISC::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");
 * MISC::_FAA457EF263E8763(&a_0._f726[v_1A -- [[16]] ], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
 * MISC::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");
 * MISC::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");
 */
func (_client) N_0xfaa457ef263e8763(name string) float64 {
	return 0.0
}

/**
 * SET_A\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xfab944d4d481accb(ped float64, toggle bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xfac18e7356bd3210() {}

func (_client) N_0xfac75988a7d078d3(player float64) {}

func (_client) N_0xfae628f1e9adb239(p0 interface{}, p1 float64, p2 interface{}) {}

func (_client) N_0xfaf2a78061fd9ef4(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) N_0xfb00ca71da386228() {}

func (_client) N_0xfb199266061f820a() bool;

/**
 * p0 is always 0. p1 is pointing to a global.
 */
func (_client) N_0xfb1f9381e80fa13f(p0 float64, p1 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) N_0xfb680d403909dc70(p0 float64, p1 float64) {}

/**
 * Toggles some stunt jump stuff.
 */
func (_client) N_0xfb80ab299d2ee1bd(toggle bool) {}

func (_client) N_0xfcc228e07217fcac(p0 float64) {}

/**
 * SET_CHECKPOINT_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xfcf6788fc4860cd4(checkpoint float64) {}

func (_client) N_0xfd3151cd37ea2245(entity float64) {}

func (_client) N_0xfd325494792302d7(ped float64, toggle bool) {}
func (_client) SetTimeExclusiveDisplayTexture(ped float64, toggle bool) {}

func (_client) N_0xfd75dabc0957bf33(p0 bool) {}

/**
 * A\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) N_0xfdc07c58e8aab715(pickupHash interface{}) {}

func (_client) N_0xfe4c1d0d3b9cc17e(p0 float64, p1 bool) bool;

/**
 * Native to check whether [`_SET_PED_SCUBA_GEAR_VARIATION`](#\_0x36c6984c3ed0c911) is enabled/actived.
 */
func (_client) N_0xfec9a3b1820f3331(ped float64) bool;

/**
 * Tune Forward... ?
 * SET_RADIO_*
 */
func (_client) N_0xff266d1d0eb1195d() {}

/**
 * Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
 */
func (_client) N_0xff4803bc019852d9(p0 float64, p1 float64) {}

func (_client) N_0xff8f3a92b75ed67a() float64 {
	return 0.0
}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0xffee8fa29ab9a18e(player float64) {}

func (_client) NetGameserverBasketAddItem(quantity float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xf30980718c8ed876(quantity float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkShopBasketAddItem(quantity float64)  (bool, float64){
	return false,0.0
}

func (_client) NetGameserverBasketApplyServerData(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xe1a0450ed46a7812(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkShopBasketApplyServerData(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Introduced: v372
 */
func (_client) NetGameserverBasketDelete() bool;

func (_client) NetGameserverBasketEnd() bool;
func (_client) N_0xa65568121df2ea26() bool;
func (_client) N_0xe547e9114277098f() bool;
func (_client) NetworkShopBasketEnd() bool;

func (_client) NetGameserverBasketIsFull() bool;
func (_client) N_0x27f76cc6c55ad30e() bool;
func (_client) NetworkShopBasketIsFull() bool;

func (_client) NetGameserverBasketStart(categoryHash interface{}, actionHash interface{}, flags float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkShopBasketStart(categoryHash interface{}, actionHash interface{}, flags float64)  (bool, float64){
	return false,0.0
}

func (_client) NetGameserverBeginService(categoryHash interface{}, itemHash interface{}, actionTypeHash interface{}, value float64, flags float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x3c5fd37b5499582e(categoryHash interface{}, itemHash interface{}, actionTypeHash interface{}, value float64, flags float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkShopBeginService(categoryHash interface{}, itemHash interface{}, actionTypeHash interface{}, value float64, flags float64)  (bool, float64){
	return false,0.0
}

func (_client) NetGameserverCatalogIsReady() bool;
func (_client) N_0x3c4487461e9b0dcb() bool;

func (_client) NetGameserverCatalogItemExists(name string) bool;
func (_client) N_0xbd4d7eaf8a30f637(name string) bool;
func (_client) NetworkShopIsItemUnlocked(name string) bool;
func (_client) NetworkShopDoesItemExist(name string) bool;

func (_client) NetGameserverCatalogItemExistsHash(hash interface{}) bool;
func (_client) N_0x247f0f73a182ea0b(hash interface{}) bool;
func (_client) NetworkShopIsItemUnlockedHash(hash interface{}) bool;
func (_client) NetworkShopDoesItemExistHash(hash interface{}) bool;

func (_client) NetGameserverCheckoutStart(transactionId float64) bool;
func (_client) N_0x39be7cea8d9cc8e6(transactionId float64) bool;
func (_client) NetworkShopCheckoutStart(transactionId float64) bool;

func (_client) NetGameserverDeleteCharacterSlot(slot float64, transfer bool, reason interface{}) bool;
func (_client) N_0x51f1a8e48c3d2f6d(slot float64, transfer bool, reason interface{}) bool;

func (_client) NetGameserverDeleteCharacterSlotGetStatus() float64 {
	return 0.0
}
func (_client) N_0x0a6d923dffc9bd89() float64 {
	return 0.0
}

func (_client) NetGameserverDeleteSetTelemetryNonceSeed() bool;
func (_client) N_0x112cef1615a1139f() bool;
func (_client) NetworkShopDeleteSetTelemetryNonceSeed() bool;

func (_client) NetGameserverEndService(transactionId float64) bool;
func (_client) N_0xe2a99a9b524befff(transactionId float64) bool;
func (_client) NetworkShopEndService(transactionId float64) bool;
func (_client) NetworkShopTerminateService(transactionId float64) bool;

/**
 * Note: only one of the arguments can be set to true at a time
 */
func (_client) NetGameserverGetBalance(inventory bool, playerbalance bool) bool;
/**
 * Note: only one of the arguments can be set to true at a time
 */
func (_client) N_0x35a1b3e1d1315cfa(inventory bool, playerbalance bool) bool;

func (_client) NetGameserverGetCatalogState(state float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xcf38dafbb49ede5e(state float64)  (bool, float64){
	return false,0.0
}

/**
 * bool is always true in game scripts
 */
func (_client) NetGameserverGetPrice(itemHash interface{}, categoryHash interface{}, p2 bool) float64 {
	return 0.0
}
/**
 * bool is always true in game scripts
 */
func (_client) NetworkShopGetPrice(itemHash interface{}, categoryHash interface{}, p2 bool) float64 {
	return 0.0
}

func (_client) NetGameserverGetTransactionManagerData(): [boolean, number, any /* actually bool */];
func (_client) N_0x897433d292b44130(): [boolean, number, any /* actually bool */];

func (_client) NetGameserverIsCatalogValid() bool;
func (_client) N_0x2b949a1e6aec8f6a() bool;

func (_client) NetGameserverIsSessionRefreshPending() bool;
func (_client) N_0x810e8431c0614bf9() bool;
func (_client) NetworkShopGetTransactionsDisabled() bool;

func (_client) NetGameserverIsSessionValid(charSlot float64) bool;
func (_client) N_0xb24f0944da203d9e(charSlot float64) bool;
func (_client) NetworkShopGetTransactionsEnabledForCharacter(charSlot float64) bool;

func (_client) NetGameserverSessionApplyReceivedData(charSlot float64) bool;
func (_client) N_0x2f41d51ba3bcd1f1(charSlot float64) bool;
func (_client) NetworkShopSessionApplyReceivedData(charSlot float64) bool;

func (_client) NetGameserverSetTelemetryNonceSeed(p0 float64) bool;
func (_client) N_0x9507d4271988e1ae(p0 float64) bool;
func (_client) NetworkShopSetTelemetryNonceSeed(p0 float64) bool;

func (_client) NetGameserverStartSession(charSlot float64) bool;
func (_client) N_0xa135ac892a58fc07(charSlot float64) bool;
func (_client) NetworkShopStartSession(charSlot float64) bool;

func (_client) NetGameserverTransferBankToWallet(charSlot float64, amount float64) bool;
func (_client) N_0xd47a2c1ba117471d(charSlot float64, amount float64) bool;
func (_client) NetworkTransferBankToWallet(charSlot float64, amount float64) bool;

/**
 * Same as 0x350AA5EBC03D3BD2
 */
func (_client) NetGameserverTransferCashGetStatus() float64 {
	return 0.0
}
/**
 * Same as 0x350AA5EBC03D3BD2
 */
func (_client) N_0x23789e777d14ce44() float64 {
	return 0.0
}

/**
 * Same as 0x23789E777D14CE44
 */
func (_client) NetGameserverTransferCashGetStatus_2() float64 {
	return 0.0
}
/**
 * Same as 0x23789E777D14CE44
 */
func (_client) N_0x350aa5ebc03d3bd2() float64 {
	return 0.0
}

/**
 * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
 */
func (_client) NetGameserverTransferCashSetTelemetryNonceSeed() bool;
/**
 * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
 */
func (_client) N_0x498c1e05ce5f7877() bool;
/**
 * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
 */
func (_client) NetworkShopCashTransferSetTelemetryNonceSeed() bool;

func (_client) NetGameserverTransferWalletToBank(charSlot float64, amount float64) bool;
func (_client) N_0xc2f7fe5309181c7d(charSlot float64, amount float64) bool;
func (_client) NetworkTransferWalletToBank(charSlot float64, amount float64) bool;

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetGameserverUseServerTransactions() bool;

/**
 * gets the entity id of a network id
 */
func (_client) NetToEnt(netHandle float64) float64 {
	return 0.0
}

/**
 * gets the object id of a network id
 */
func (_client) NetToObj(netHandle float64) float64 {
	return 0.0
}

/**
 * gets the ped id of a network id
 */
func (_client) NetToPed(netHandle float64) float64 {
	return 0.0
}

func (_client) NetToVeh(netHandle float64) float64 {
	return 0.0
}

/**
 * NETWORK_RE*
 * Triggers a CEventNetworkInviteConfirmed event
 */
func (_client) NetworkAcceptInvite() bool;
/**
 * NETWORK_RE*
 * Triggers a CEventNetworkInviteConfirmed event
 */
func (_client) N_0x62a0296c1bb1ceb3() bool;

func (_client) NetworkAcceptPresenceInvite(p0 float64) bool;

func (_client) NetworkAccessTunableBool(tunableContext string, tunableName string) bool;
func (_client) N_0xaa6a47a573abb75a(tunableContext string, tunableName string) bool;

func (_client) NetworkAccessTunableBoolHash(tunableContext interface{}, tunableName interface{}) bool;
func (_client) N_0xea16b69d93d71a45(tunableContext interface{}, tunableName interface{}) bool;
func (_client) NetworkAccessTunableBoolHash(tunableContext interface{}, tunableName interface{}) bool;

func (_client) NetworkAccessTunableFloat(tunableContext string, tunableName string, value float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xe5608ca7bc163a5f(tunableContext string, tunableName string, value float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkAccessTunableFloatHash(tunableContext interface{}, tunableName interface{}, value float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x972bc203bbc4c4d5(tunableContext interface{}, tunableName interface{}, value float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkAccessTunableFloatHash(tunableContext interface{}, tunableName interface{}, value float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkAccessTunableInt(tunableContext string, tunableName string, value float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x8be1146dfd5d4468(tunableContext string, tunableName string, value float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkAccessTunableIntHash(tunableContext interface{}, tunableName interface{}, value float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x40fce03e50e8dbe8(tunableContext interface{}, tunableName interface{}, value float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkAccessTunableIntHash(tunableContext interface{}, tunableName interface{}, value float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkActionFollowInvite() float64 {
	return 0.0
}
func (_client) N_0xc88156ebb786f8d5() float64 {
	return 0.0
}

/**
 * To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) NetworkAddEntityAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) float64 {
	return 0.0
}
/**
 * To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) N_0x376c6375ba60293a(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) float64 {
	return 0.0
}
/**
 * To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) NetworkAddEntityAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) float64 {
	return 0.0
}

func (_client) NetworkAddEntityArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) float64 {
	return 0.0
}

func (_client) NetworkAddEntityDisplayedBoundaries(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) float64 {
	return 0.0
}
func (_client) N_0x25b99872d588a101(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) float64 {
	return 0.0
}

func (_client) NetworkAddEntityToSynchronisedScene(entity float64, netScene float64, animDict string, animName string, speed float64, speedMulitiplier float64, flag float64) {}

/**
 * ..
 */
func (_client) NetworkAddFollowers(p1 float64) float64 {
	return 0.0
}
/**
 * ..
 */
func (_client) N_0x236406f60cf216d6(p1 float64) float64 {
	return 0.0
}

func (_client) NetworkAddFriend(message string)  (bool, float64){
	return false,0.0
}

func (_client) NetworkAddPedToSynchronisedScene(ped float64, netScene float64, animDict string, animnName string, blendInSpeed float64, blendOutSpeed float64, duration float64, flag float64, playbackRate float64, p9 float64) {}

func (_client) NetworkAddSynchronisedSceneCamera(netScene float64, animDict string, animName string) {}
func (_client) N_0xcf8bd3b0bd6d42d7(netScene float64, animDict string, animName string) {}
func (_client) NetworkForceLocalUseOfSyncedSceneCamera(netScene float64, animDict string, animName string) {}

func (_client) NetworkAllocateTunablesRegistrationDataMap() bool;
func (_client) N_0xfafc23aee23868db() bool;

func (_client) NetworkAllowLocalEntityAttachment(entity float64, toggle bool) {}
func (_client) N_0x267c78c60e806b9a(entity float64, toggle bool) {}

func (_client) NetworkAmIBlockedByGamer(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkAmIBlockedByPlayer(player float64) bool;

func (_client) NetworkAmIMutedByGamer(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkAmIMutedByPlayer(player float64) bool;

func (_client) NetworkApplyCachedPlayerHeadBlendData(ped float64, player float64) bool;
func (_client) N_0x99b72c7abde5c910(ped float64, player float64) bool;
func (_client) NetworkCopyPedBlendData(ped float64, player float64) bool;

func (_client) NetworkApplyPedScarData(ped float64, p1 float64) {}
func (_client) N_0xe66c690248f11150(ped float64, p1 float64) {}

func (_client) NetworkApplyTransitionParameter(p0 float64, p1 float64) {}
func (_client) N_0x521638ada1ba0d18(p0 float64, p1 float64) {}

func (_client) NetworkApplyTransitionParameterString(p0 float64, _string string, p2 bool) {}
func (_client) N_0xebefc2e77084f599(p0 float64, _string string, p2 bool) {}

func (_client) NetworkApplyVoiceProximityOverride(x float64, y float64, z float64) {}
func (_client) IsNetworkVehicleBeenDamagedByAnyObject(x float64, y float64, z float64) {}

func (_client) NetworkAreHandlesTheSame() (bool , float64,float64) { return false,0.0,0.0 }

func (_client) NetworkAreSocialClubPoliciesCurrent() bool;
func (_client) N_0xba9775570db788cf() bool;

func (_client) NetworkAreTransitionDetailsValid(p0 float64) bool;
func (_client) N_0x2615aa2a695930c1(p0 float64) bool;

func (_client) NetworkAttachSynchronisedSceneToEntity(netScene float64, entity float64, bone float64) {}

/**
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int p2
 */
func (_client) NetworkBail() {}

/**
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int p2
 */
func (_client) NetworkBailTransition() {}

func (_client) NetworkBlockInvites(toggle bool) {}

func (_client) NetworkBlockJoinQueueInvites(toggle bool) {}
func (_client) N_0xcfeb8af24fc1d0bb(toggle bool) {}
func (_client) NetworkBlockInvites_2(toggle bool) {}

func (_client) NetworkBlockKickedPlayers(p0 bool) {}
func (_client) N_0x6b07b9ce4d390375(p0 bool) {}

/**
 * p1 = 0 (always)
 * p2 = 1 (always)
 */
func (_client) NetworkBuyAirstrike(cost float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkBuyBackupGang(p0 float64, p1 float64, p2 bool, p3 bool) {}

/**
 * p1 is just an assumption. p2 was false and p3 was true.
 */
func (_client) NetworkBuyBounty(amount float64, victim float64, p2 bool, p3 bool) {}

func (_client) NetworkBuyContraband(p0 float64, p1 float64, p2 interface{}, p3 bool, p4 bool) {}
func (_client) N_0x30fd873ece50e9f6(p0 float64, p1 float64, p2 interface{}, p3 bool, p4 bool) {}

/**
 * The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
 * The last 3 parameters are,
 * 2,0,1 in the am_ferriswheel.c
 * 1,0,1 in the am_rollercoaster.c
 */
func (_client) NetworkBuyFairgroundRide(amountSpent float64, p1 float64, p2 bool, p3 bool) {}
/**
 * The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
 * The last 3 parameters are,
 * 2,0,1 in the am_ferriswheel.c
 * 1,0,1 in the am_rollercoaster.c
 */
func (_client) N_0x8a7b3952dd64d2b5(amountSpent float64, p1 float64, p2 bool, p3 bool) {}

func (_client) NetworkBuyHealthcare(cost float64, p1 bool, p2 bool) {}

/**
 * p1 = 0 (always)
 * p2 = 1 (always)
 */
func (_client) NetworkBuyHeliStrike(cost float64, p1 bool, p2 bool) {}

func (_client) NetworkBuyItem(amount float64, item interface{}, p2 float64, p3 float64, p4 bool, item_name string, p6 float64, p7 float64, p8 float64, p9 bool) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkBuyLotteryTicket(p0 float64, p1 float64, p2 bool, p3 bool) {}

func (_client) NetworkBuyProperty(propertyCost float64, propertyName interface{}, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkBuySmokes(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkCacheLocalPlayerHeadBlendData() {}
func (_client) N_0xbd0be0bfc927eac1() {}

/**
 * 11 - Need to download tunables.
 * 12 - Need to download background script.
 * Returns 1 if the multiplayer is loaded, otherwhise 0.
 */
func (_client) NetworkCanAccessMultiplayer(loadingState float64)  (bool, float64){
	return false,0.0
}
/**
 * 11 - Need to download tunables.
 * 12 - Need to download background script.
 * Returns 1 if the multiplayer is loaded, otherwhise 0.
 */
func (_client) N_0xaf50da1a3f8b1ba4(loadingState float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCanBail() bool;

func (_client) NetworkCanBet(amount float64) bool;
func (_client) N_0x3a54e33660ded67f(amount float64) bool;

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkCanBuyLotteryTicket(cost float64) bool;

func (_client) NetworkCanCommunicateWithGamer(networkHandle float64)  (bool, float64){
	return false,0.0
}

/**
 * Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
 * NETWORK_CAN_*
 */
func (_client) NetworkCanCommunicateWithGamer_2(networkHandle float64)  (bool, float64){
	return false,0.0
}
/**
 * Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
 * NETWORK_CAN_*
 */
func (_client) N_0x8f5d1ad832aeb06c(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCanEnterMultiplayer() bool;

func (_client) NetworkCanGamerPlayMultiplayerWithMe(networkHandle float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x135f9b7b7add2185(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCanPlayMultiplayerWithGamer(networkHandle float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x07dd29d5e22763f1(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCanReceivePlayerCash(p0 float64, p1 float64, p2 float64, p3 float64) bool;

func (_client) NetworkCanSessionEnd() bool;

func (_client) NetworkCanSetWaypoint() bool;

func (_client) NetworkCanShareJobCash() bool;
func (_client) N_0x1c2473301b1c66ba() bool;

/**
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) NetworkCanSpendMoney(p0 float64, p1 bool, p2 bool, p3 bool, p4 float64) bool;
/**
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) N_0xab3caa6b422164da(p0 float64, p1 bool, p2 bool, p3 bool, p4 float64) bool;

/**
 * NETWORK_CAN_R?? or NETWORK_CAN_S???
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 */
func (_client) NetworkCanSpendMoney_2(p0 float64, p1 bool, p2 bool, p3 bool, p5 float64)  (bool, float64){
	return false,0.0
}
/**
 * NETWORK_CAN_R?? or NETWORK_CAN_S???
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 */
func (_client) N_0x7303e27cc6532080(p0 float64, p1 bool, p2 bool, p3 bool, p5 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCanViewGamerUserContent(networkHandle float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xb57a49545ba53ce7(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCancelRespawnSearch() {}
func (_client) N_0xfb8f2a6f3df08cbe() {}

/**
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) NetworkCasinoCanGamble(p0 float64) bool;

/**
 * Same as 0x8968D4D8C6C40C11.
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) NetworkCasinoCanPurchaseChipsWithPvc() bool;

/**
 * Same as 0x394DCDB9E836B7A9.
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) NetworkCasinoCanPurchaseChipsWithPvc_2() bool;

/**
 * GTAO_CASINO_HOUSE
 * GTAO_CASINO_INSIDETRACK
 * GTAO_CASINO_LUCKYWHEEL
 * GTAO_CASINO_BLACKJACK
 * GTAO_CASINO_ROULETTE
 * GTAO_CASINO_SLOTS
 * GTAO_CASINO_PURCHASE_CHIPS
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) NetworkCasinoCanUseGamblingType(hash interface{}) bool;

/**
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) NetworkCasinoPurchaseChips(p0 float64, p1 float64) bool;

/**
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) NetworkCasinoSellChips(p0 float64, p1 float64) bool;

func (_client) NetworkChangeTransitionSlots(p0 float64, p1 float64) {}
func (_client) N_0xeeeda5e6d7080987(p0 float64, p1 float64) {}

func (_client) NetworkCheckCommunicationPrivileges(p0 float64, p1 float64, p2 bool) bool;
func (_client) N_0x83f28ce49fbbffba(p0 float64, p1 float64, p2 bool) bool;

func (_client) NetworkCheckDataManagerSucceededForHandle(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x44b37cdcae765aae(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkCheckUserContentPrivileges(p0 float64, p1 float64, p2 bool) bool;
func (_client) N_0x595f028698072dd9(p0 float64, p1 float64, p2 bool) bool;

/**
 * Only documented...
 */
func (_client) NetworkClanAnimation(animDict string, animName string) bool;
/**
 * Only documented...
 */
func (_client) N_0x729e3401f0430686(animDict string, animName string) bool;

func (_client) NetworkClanAnyDownloadMembershipPending() bool;
func (_client) N_0xb3f64a6a91432477() bool;
func (_client) NetworkIsClanMembershipFinishedDownloading() bool;

func (_client) NetworkClanDownloadMembership(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkClanDownloadMembershipPending(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkClanGetEmblemTxdName(txdName string)  (bool, float64){
	return false,0.0
}
func (_client) N_0x5835d9cd92e83184(txdName string)  (bool, float64){
	return false,0.0
}
func (_client) NetworkGetPlayerCrewEmblemTxdName(txdName string)  (bool, float64){
	return false,0.0
}

func (_client) NetworkClanGetLocalMembershipsCount() float64 {
	return 0.0
}
func (_client) N_0x1f471b79acc90bef() float64 {
	return 0.0
}
func (_client) GetNumMembershipDesc() float64 {
	return 0.0
}
func (_client) NetworkClanGetNumMembershipDesc() float64 {
	return 0.0
}

/**
 * BOOL DEBUG_MEMBRESHIP(int Param)
 * {
 * int membership;
 * networkHandleMgr handle;
 * NETWORK_HANDLE_FROM_PLAYER(iSelectedPlayer, &handle.netHandle, 13);
 * if (!_NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING())
 * {
 * if (NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(&Param))
 * {
 * if (NETWORK_CLAN_GET_MEMBERSHIP_COUNT(&Param) > 0)
 * {
 * if (NETWORK_CLAN_GET_MEMBERSHIP_VALID(&Param, 0))
 * {
 * if (NETWORK_CLAN_GET_MEMBERSHIP(&Param, &membership, -1))
 * {
 * _0xF633805A(&membership, 35, &handle.netHandle);
 * }
 * }
 * }
 * }
 * }
 * else
 * {
 * NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(&handle.netHandle);
 * }
 * }
 */
func (_client) NetworkClanGetMembership(p2 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) NetworkClanGetMembershipCount(p0 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkClanGetMembershipDesc(p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * Checks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid.
 * @param networkHandle A player network handle.
 * @param membershipIndex If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
 * @return Returns true if valid, false otherwise.
 */
func (_client) NetworkClanGetMembershipValid(membershipIndex float64)  (bool, float64){
	return false,0.0
}

/**
 * bufferSize is 35 in the scripts.
 */
func (_client) NetworkClanGetUiFormattedTag(bufferSize float64, formattedTag string) float64 {
	return 0.0
}
/**
 * bufferSize is 35 in the scripts.
 */
func (_client) N_0xf45352426ff3a4f0(bufferSize float64, formattedTag string) float64 {
	return 0.0
}

func (_client) NetworkClanIsEmblemReady(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xa134777ff7f33331(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * bufferSize is 35 in the scripts.
 */
func (_client) NetworkClanIsRockstarClan(bufferSize float64)  (bool, float64){
	return false,0.0
}
/**
 * bufferSize is 35 in the scripts.
 */
func (_client) N_0x7543bb439f63792b(bufferSize float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkClanJoin(clanDesc float64) bool;

/**
 * bufferSize is 35 in the scripts.
 * bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.
 * the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
 * pastebin.com/cSZniHak
 */
func (_client) NetworkClanPlayerGetDesc(bufferSize float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) NetworkClanPlayerIsActive(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkClanReleaseEmblem(p0 float64) {}
func (_client) N_0x113e6e3e50e286b0(p0 float64) {}

func (_client) NetworkClanRemoteMembershipsAreInCache(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkClanRequestEmblem(p0 float64) bool;
func (_client) N_0x13518ff1c6b28938(p0 float64) bool;

func (_client) NetworkClanServiceIsValid() bool;
func (_client) NetworkPlayerIsInClan() bool;

func (_client) NetworkClearCharacterWallet(characterSlot float64) {}
func (_client) N_0xa921ded15fdf28f5(characterSlot float64) {}

func (_client) NetworkClearClockTimeOverride() {}
func (_client) N_0xd972df67326f966e() {}

func (_client) NetworkClearFollowInvite() float64 {
	return 0.0
}
func (_client) N_0x439bfde3cd0610f6() float64 {
	return 0.0
}

func (_client) NetworkClearFollowers() {}
func (_client) N_0x058f43ec59a8631a() {}

func (_client) NetworkClearFoundGamers() {}

func (_client) NetworkClearGetGamerStatus() {}
func (_client) N_0x86e0660e4f5c956d() {}

func (_client) NetworkClearPropertyId() {}
func (_client) N_0xc2b82527ca77053e() {}

func (_client) NetworkClearTransitionCreatorHandle() {}

func (_client) NetworkClearVoiceChannel() {}
func (_client) N_0xe036a705f989e049() {}

func (_client) NetworkClearVoiceProximityOverride() {}
func (_client) N_0xf03755696450470c() {}

func (_client) NetworkCloseTransitionMatchmaking() {}
func (_client) N_0x43f4dba69710e01e() {}

func (_client) NetworkConcealEntity(entity float64, toggle bool) {}

/**
 * This is what R\* uses to hide players in MP interiors.
 */
func (_client) NetworkConcealPlayer(player float64, toggle bool, p2 bool) {}

func (_client) NetworkCreateSynchronisedScene(x float64, y float64, z float64, xRot float64, yRot float64, zRot float64, rotationOrder float64, holdLastFrame bool, looped bool, p9 float64, animTime float64, animSpeed float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkDeductCash(amount float64, p1 string, p2 string, p3 bool, p4 bool, p5 bool) {}

/**
 * Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
 */
func (_client) NetworkDeleteCharacter(characterSlot float64, p1 bool, p2 bool) {}

func (_client) NetworkDidFindGamersSucceed() bool;
func (_client) N_0xf9b83b77929d8863() bool;

func (_client) NetworkDidGetGamerStatusSucceed() bool;
func (_client) N_0x5ae17c6b0134b7f1() bool;

func (_client) NetworkDisableInvincibleFlashing(player float64, toggle bool) {}
func (_client) N_0x9dd368bf06983221(player float64, toggle bool) {}

func (_client) NetworkDisableLeaveRemotePedBehind(toggle bool) {}
func (_client) N_0xc505036a35afd01b(toggle bool) {}

func (_client) NetworkDisableProximityMigration(netID float64) {}
func (_client) N_0x407091cf6037118e(netID float64) {}

/**
 * Hardcoded to return -1.
 */
func (_client) NetworkDisplaynamesFromHandlesStart(p1 float64) (float64, float64) { return 0.0, 0.0 };
/**
 * Hardcoded to return -1.
 */
func (_client) N_0xd66c9e72b3cc4982(p1 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) NetworkDoTransitionQuickmatch(p0 float64, p1 float64, p2 float64, p3 float64) bool;
/**
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) N_0x71fb0ebcd4915d56(p0 float64, p1 float64, p2 float64, p3 float64) bool;

/**
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) NetworkDoTransitionQuickmatchAsync(p0 float64, p1 float64, p2 float64, p3 float64) bool;
/**
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) N_0xa091a5e44f0072e5(p0 float64, p1 float64, p2 float64, p3 float64) bool;

/**
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) NetworkDoTransitionQuickmatchWithGroup(p0 float64, p1 float64, p2 float64, p3 float64, p5 float64)  (bool, float64){
	return false,0.0
}

/**
 * p2 is true 3/4 of the occurrences I found.
 * 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
 */
func (_client) NetworkDoTransitionToFreemode(p1 float64, p2 bool, players float64, p4 bool)  (bool, float64){
	return false,0.0
}

func (_client) NetworkDoTransitionToGame(p0 bool, maxPlayers float64) bool;

func (_client) NetworkDoTransitionToNewFreemode(players float64, p3 bool, p4 bool, p5 bool) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) NetworkDoTransitionToNewGame(p0 bool, maxPlayers float64, p2 bool) bool;

func (_client) NetworkDoesEntityExistWithNetworkId(netId float64) bool;

func (_client) NetworkDoesNetworkIdExist(netId float64) bool;

func (_client) NetworkDoesTunableExist(tunableContext string, tunableName string) bool;

func (_client) NetworkDoesTunableExistHash(tunableContext interface{}, tunableName interface{}) bool;
func (_client) N_0xe4e53e1419d81127(tunableContext interface{}, tunableName interface{}) bool;
func (_client) NetworkDoesTunableExistHash(tunableContext interface{}, tunableName interface{}) bool;

func (_client) NetworkEarnBoss(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0x08b0ca7a6ab3ac32(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkEarnBossAgency(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x0cb1be0633c024a8(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnBountyHunterReward(p0 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xf6b170f9a02e9e87(p0 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) NetworkEarnCasinoHeist(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) NetworkEarnCasinoHeistBonus(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) NetworkEarnCollectableCompletedCollection(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFmbbWageBonus(p0 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xfffba1b1f7c0b6f4(p0 float64) {}

/**
 * DSPORT
 */
func (_client) NetworkEarnFromAiTargetKill(p0 float64, p1 float64) {}
/**
 * DSPORT
 */
func (_client) N_0x515b4a22e4d3c6d7(p0 float64, p1 float64) {}

/**
 * Example for p1: "AM_DISTRACT_COPS"
 */
func (_client) NetworkEarnFromAmbientJob(p0 float64, p1 string, p2 float64) float64 {
	return 0.0
}
/**
 * Example for p1: "AM_DISTRACT_COPS"
 */
func (_client) N_0xfb6db092fbae29e6(p0 float64, p1 string, p2 float64) float64 {
	return 0.0
}
/**
 * Example for p1: "AM_DISTRACT_COPS"
 */
func (_client) NetworkEarnFromAmbientJob(p0 float64, p1 string, p2 float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromArenaCareerProgression(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromArenaSkillLevelProgression(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromArenaWar(amount float64, p1 float64, p2 float64, p3 float64) {}

/**
 * For the money bags that drop a max of $40,000. Often called 40k bags.
 * Most likely NETWORK_EARN_FROM_ROB***
 */
func (_client) NetworkEarnFromArmourTruck(amount float64) {}
/**
 * For the money bags that drop a max of $40,000. Often called 40k bags.
 * Most likely NETWORK_EARN_FROM_ROB***
 */
func (_client) N_0xf514621e8ea463d0(amount float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromAssassinateTargetKilled(amount float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromAssassinateTargetKilled_2(amount float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromAutoshopBusiness(p0 float64, p1 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x36a7fd5a7194b03e(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromAutoshopIncome(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xc66d1cf99ed7fe25(p0 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromBbEventBonus(amount float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromBbEventCargo(amount float64) {}

func (_client) NetworkEarnFromBendJob(amount float64, heistHash string) {}
func (_client) N_0x61326ee6df15b0ca(amount float64, heistHash string) {}
func (_client) NetworkEarnFromMissionH(amount float64, heistHash string) {}

func (_client) NetworkEarnFromBetting(amount float64, p1 string) {}

func (_client) NetworkEarnFromBounty(amount float64, p3 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFromBusinessBattle(p0 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x42fce14f50f27291(p0 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFromBusinessHubSell(p0 float64, p1 float64, p2 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x0b39cf0d53f1c883(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkEarnFromBusinessProduct(amount float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x8586789730b10caf(amount float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromCarclubMembership(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xbc6227792a188e2e(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromCashingOut(amount float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCasinoAward(amount float64, hash interface{}) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCasinoMissionParticipation(amount float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCasinoMissionReward(amount float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCasinoStoryMissionReward(amount float64) {}

func (_client) NetworkEarnFromChallengeWin(p0 float64, p2 bool) float64 {
	return 0.0
}
func (_client) N_0x2b171e6b2f64d8df(p0 float64, p2 bool) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFromClubManagementParticipation(p0 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xa75eac69f59e96e7(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCollectablesActionFigures(amount float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCollectionItem(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromCompleteCollection(amount float64) {}

func (_client) NetworkEarnFromContraband(amount float64, p1 float64) {}
func (_client) N_0xeca658ce2a4e5a72(amount float64, p1 float64) {}

func (_client) NetworkEarnFromCrateDrop(amount float64) {}
func (_client) N_0xb1cc1b9ec3007a2a(amount float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromCriminalMastermindBonus(p0 float64, p1 float64, p2 float64) {}
/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0xd20d79671a598594(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromDailyObjectiveEvent(amount float64) {}

func (_client) NetworkEarnFromDailyObjectives(p0 float64, p1 string, p2 float64) {}
func (_client) N_0x6ea318c91c1a8786(p0 float64, p1 string, p2 float64) {}
func (_client) NetworkEarnFromDailyObjective(p0 float64, p1 string, p2 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromDarChallenge(amount float64, p1 float64) {}

func (_client) NetworkEarnFromDestroyingContraband(p0 float64) {}
func (_client) N_0x84c0116d012e8fc2(p0 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromDoomsdayFinaleBonus(amount float64, vehicleHash interface{}) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFromFmbbBossWork(p0 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x1fda0aa679c9919b(p0 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFromFmbbPhonecallMission(p0 float64) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0xc5156361f26e2212(p0 float64) {}

func (_client) NetworkEarnFromGangPickup(amount float64) {}
func (_client) N_0xa03d4ace0a3284ce(amount float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsAwards(amount float64, unk string, p2 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsElite(amount float64, unk string, actIndex float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsJobsFinale(amount float64, unk string) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsJobsPrepParticipation(amount float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsJobsSetup(amount float64, unk string) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsWages(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromGangopsWagesBonus(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkEarnFromHackerTruckMission(p0 float64, amount float64, p2 float64, p3 float64) {}

func (_client) NetworkEarnFromHoldups(amount float64) {}

func (_client) NetworkEarnFromImportExport(amount float64, modelHash interface{}) {}

func (_client) NetworkEarnFromJob(amount float64, p1 string) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkEarnFromJobBonus(p0 float64) (float64, float64) { return 0.0, 0.0 };
/**
 * NativeDB Introduced: v323
 */
func (_client) N_0x6816fb4416760775(p0 float64) (float64, float64) { return 0.0, 0.0 };
/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkEarnFromJobBonus(p0 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromJobX2(amount float64, p1 string) {}

func (_client) NetworkEarnFromNotBadsport(amount float64) {}
func (_client) N_0x4337511fa8221d36(amount float64) {}

func (_client) NetworkEarnFromPersonalVehicle(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) {}
func (_client) N_0x3f4d00167e41e0ad(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) {}

func (_client) NetworkEarnFromPickup(amount float64) {}

func (_client) NetworkEarnFromPremiumJob(amount float64, p1 string) {}
func (_client) N_0xc8407624cef2354b(amount float64, p1 string) {}

func (_client) NetworkEarnFromProperty(amount float64, propertyName interface{}) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromRcTimeTrial(amount float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromRdrBonus(amount float64, p1 float64) {}

func (_client) NetworkEarnFromRockstar(amount float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromSellBase(amount float64, baseNameHash interface{}) {}

func (_client) NetworkEarnFromSellBunker(amount float64, bunkerHash interface{}) {}
func (_client) N_0x9251b6abf2d0a5b4(amount float64, bunkerHash interface{}) {}

/**
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromSellingVehicle(amount float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkEarnFromSmuggling(amount float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkEarnFromSpinTheWheelCash(amount float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnFromTargetRefund(amount float64, p1 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkEarnFromTimeTrialWin(amount float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromTunerAward(p0 float64, p1 float64, p2 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xb846f547d3792df6(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromTunerFinale(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xbcb266247193ac61(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromUpgradeAutoshopLocation(p0 float64, p1 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xc10322a8d3e061ee(p0 float64, p1 float64) {}

func (_client) NetworkEarnFromVehicle(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromVehicleAutoshop(p0 float64, p1 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x533073e8a596008c(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkEarnFromVehicleAutoshopBonus(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xfe65afe7308e32b2(p0 float64) {}

func (_client) NetworkEarnFromVehicleExport(amount float64, p1 float64, p2 float64) {}
func (_client) N_0xedead9a91ec768b3(amount float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkEarnFromWagePayment(amount float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkEarnFromWagePaymentBonus(amount float64) {}

/**
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: int id
 */
func (_client) NetworkEarnFromWarehouse() {}
/**
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: int id
 */
func (_client) N_0x3e4adaff1830f146() {}

func (_client) NetworkEarnGoon(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0xcda1c62be2777802(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkEarnIslandHeist(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnJobBonusFirstTimeBonus(p0 float64, p1 float64, p2 float64) {}
/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x11b0a20c493f7e36(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkEarnJobBonusHeistAward(p0 float64, p1 float64, p2 float64) {}
/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x9d4fdbb035229669(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkEndTutorialSession() {}

func (_client) NetworkEntityAreaDoesExist(areaHandle float64) bool;
func (_client) N_0xe64a3ca08dfa37a9(areaHandle float64) bool;

func (_client) NetworkEntityAreaIsOccupied(areaHandle float64) bool;
func (_client) N_0x4a2d4e8bf4265b0f(areaHandle float64) bool;

/**
 * In the console script dumps, this is only referenced once.
 * NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);
 * ^^^^^ That must be PC script dumps In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
 * Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
 * am_plane_takedown.c
 * network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
 * armenian2.c
 * network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
 * fm_horde_controler.c
 * network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
 * fm_mission_controller.c, has 6 hits so not going to list them.
 * Side note, setting the first parameter to 0 seems to mute sound or so?
 * Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
 */
func (_client) NetworkExplodeVehicle(vehicle float64, isAudible bool, isInvisible bool, p3 bool) {}

/**
 * state - 0 does 5 fades
 * state - 1 does 6 fades
 * native is missing third argument, also boolean, setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
 * ```
 * ```
 * NativeDB Added Parameter 3: BOOL slow
 */
func (_client) NetworkFadeInEntity(entity float64, state bool) {}

/**
 * normal - transition like when your coming out of LSC
 * slow - transition like when you walk into a mission
 */
func (_client) NetworkFadeOutEntity(entity float64, normal bool, slow bool) {}

func (_client) NetworkFindGamersInCrew(p0 float64) bool;
func (_client) N_0xe532d6811b3a4d2a(p0 float64) bool;
func (_client) NetworkXAffectsGamers(p0 float64) bool;

func (_client) NetworkFindMatchedGamers(p0 float64, p1 float64, p2 float64, p3 float64) bool;
func (_client) N_0xf7b2cfde5c9f700d(p0 float64, p1 float64, p2 float64, p3 float64) bool;

func (_client) NetworkFinishBroadcastingData() {}
func (_client) N_0x64f62afb081e260d() {}

func (_client) NetworkGamerHasHeadset(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGamertagFromHandlePending() bool;

func (_client) NetworkGamertagFromHandleStart(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGamertagFromHandleSucceeded() bool;

func (_client) NetworkGetActivityPlayerNum(p0 bool) float64 {
	return 0.0
}

func (_client) NetworkGetAgeGroup() float64 {
	return 0.0
}
func (_client) N_0x9614b71f8adb982b() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetAverageLatencyForPlayer(player float64) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v323
 */
func (_client) N_0xd414be129bb81b32(player float64) float64 {
	return 0.0
}

/**
 * Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
 * ```
 * ```
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetAverageLatencyForPlayer_2(player float64) float64 {
	return 0.0
}
/**
 * Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
 * ```
 * ```
 * NativeDB Introduced: v323
 */
func (_client) N_0x0e3a041ed6ac2b45(player float64) float64 {
	return 0.0
}

/**
 * NETWORK_GET_*
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetAveragePacketLossForPlayer(player float64) float64 {
	return 0.0
}
/**
 * NETWORK_GET_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x350c23949e43686c(player float64) float64 {
	return 0.0
}

func (_client) NetworkGetBackgroundLoadingRecipients(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x97a770beef227e2b(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * Return the content modifier id (the tunables context if you want) of a specific content.
 * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
 * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
 * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
 */
func (_client) NetworkGetContentModifierListId(contentHash interface{}) float64 {
	return 0.0
}
/**
 * Return the content modifier id (the tunables context if you want) of a specific content.
 * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
 * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
 * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
 */
func (_client) N_0x187382f8a3e0a6c3(contentHash interface{}) float64 {
	return 0.0
}
/**
 * Return the content modifier id (the tunables context if you want) of a specific content.
 * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
 * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
 * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
 */
func (_client) GetTunablesContentModifierId(contentHash interface{}) float64 {
	return 0.0
}

func (_client) NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGetDestroyerOfEntity(p0 float64, p1 float64, weaponHash float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x4caca84440fa26f6(p0 float64, p1 float64, weaponHash float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkGetDesroyerOfEntity(p0 float64, p1 float64, weaponHash float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGetDestroyerOfNetworkId(netId float64, weaponHash float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkGetDisplaynamesFromHandles(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}
func (_client) N_0x58cc181719256197(p0 float64, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) NetworkGetEntityFromNetworkId(netId float64) float64 {
	return 0.0
}

func (_client) NetworkGetEntityIsLocal(entity float64) bool;

func (_client) NetworkGetEntityIsNetworked(entity float64) bool;
func (_client) N_0xc7827959479dcc78(entity float64) bool;

func (_client) NetworkGetEntityKillerOfPlayer(player float64, weaponHash float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkGetEntityNetScriptId(entity float64) float64 {
	return 0.0
}
func (_client) N_0x815f18ad865f057f(entity float64) float64 {
	return 0.0
}

/**
 * Returns the owner ID of the specified entity.
 * @param entity The entity to get the owner for.
 * @return On the server, the server ID of the entity owner. On the client, returns the player/slot ID of the entity owner.
 */
func (_client) NetworkGetEntityOwner(entity float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetEvcBalance() float64 {
	return 0.0
}

func (_client) NetworkGetFoundGamer(p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGetFriendCount() float64 {
	return 0.0
}

func (_client) NetworkGetFriendName(friendIndex float64) string;

func (_client) NetworkGetFriendNameFromIndex(friendIndex float64) string;
func (_client) NetworkGetFriendName(friendIndex float64) string;

func (_client) NetworkGetGamerStatusFromQueue() bool;
func (_client) N_0x2cc848a861d01493() bool;

func (_client) NetworkGetGamerStatusResult(p1 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x02a8bec6fd9af660(p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGetGamertagFromHandle(networkHandle float64)  (string, float64){
	return false,0.0
}

func (_client) NetworkGetGlobalMultiplayerClock() (float64,float64,float64) { return 0.0,0.0,0.0}
func (_client) N_0x6d03bfbd643b2a02() (float64,float64,float64) { return 0.0,0.0,0.0}
func (_client) NetworkGetServerTime() (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * scriptName examples:
 * "freemode", "AM_CR_SecurityVan", ...
 * Most of the time, these values are used:
 * p1 = -1
 * p2 = 0
 */
func (_client) NetworkGetHostOfScript(scriptName string, p1 float64, p2 float64) float64 {
	return 0.0
}

func (_client) NetworkGetHostOfThisScript() float64 {
	return 0.0
}

func (_client) NetworkGetInstanceIdOfThisScript() float64 {
	return 0.0
}
func (_client) N_0x638a3a81733086db() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetIsHighEarner() bool;

/**
 * Used by NetBlender
 */
func (_client) NetworkGetLastVelocityReceived(entity float64)  interface{} { return nil }
/**
 * Used by NetBlender
 */
func (_client) N_0x33de49edf4dde77a(entity float64)  interface{} { return nil }

/**
 * Retrieves the local player's NetworkHandle* and stores it in the given buffer.
 * * Currently unknown struct
 */
func (_client) NetworkGetLocalHandle(bufferSize float64) float64 {
	return 0.0
}

func (_client) NetworkGetLocalSceneFromNetworkId(netId float64) float64 {
	return 0.0
}
func (_client) N_0x02c40bf885c567b6(netId float64) float64 {
	return 0.0
}
func (_client) NetworkUnlinkNetworkedSynchronisedScene(netId float64) float64 {
	return 0.0
}
func (_client) NetworkConvertSynchronisedSceneToSynchronizedScene(netId float64) float64 {
	return 0.0
}

func (_client) NetworkGetMaxFriends() float64 {
	return 0.0
}

/**
 * Seems to always return 0, but it's used in quite a few loops.
 * for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
 * {
 * if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
 * {
 * var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
 */
func (_client) NetworkGetMaxNumParticipants() float64 {
	return 0.0
}
/**
 * Seems to always return 0, but it's used in quite a few loops.
 * for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
 * {
 * if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
 * {
 * var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
 */
func (_client) NetworkGetNumParticipantsHost() float64 {
	return 0.0
}

func (_client) NetworkGetNetworkIdFromEntity(entity float64) float64 {
	return 0.0
}

func (_client) NetworkGetNumBodyTrackers() float64 {
	return 0.0
}
func (_client) N_0xd38c4a6d047c019d() float64 {
	return 0.0
}

/**
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.
 */
func (_client) NetworkGetNumConnectedPlayers() float64 {
	return 0.0
}

func (_client) NetworkGetNumFoundGamers() float64 {
	return 0.0
}

func (_client) NetworkGetNumParticipants() float64 {
	return 0.0
}

func (_client) NetworkGetNumPresenceInvites() float64 {
	return 0.0
}
func (_client) N_0xcefa968912d0f78d() float64 {
	return 0.0
}

func (_client) NetworkGetNumScriptParticipants(p1 float64, p2 float64) (float64, float64) { return 0.0, 0.0 };
func (_client) N_0x3658e8cd94fc121a(p1 float64, p2 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetNumUnackedForPlayer(player float64) float64 {
	return 0.0
}

/**
 * NETWORK_GET_*
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetOldestResendCountForPlayer(player float64) float64 {
	return 0.0
}

func (_client) NetworkGetParticipantIndex(index float64) float64 {
	return 0.0
}

func (_client) NetworkGetPlatformPartyMembers(dataSize float64) (float64, float64) { return 0.0, 0.0 };
func (_client) N_0x120364de2845daf8(dataSize float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkGetPlatformPartyUnk() float64 {
	return 0.0
}
func (_client) N_0x01abce5e7cbda196() float64 {
	return 0.0
}

/**
 * Returns the coordinates of another player.
 * Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
 * @param player The player id, MUST be another player.
 * @return A Vector3 containing the coordinates of another player.
 */
func (_client) NetworkGetPlayerCoords(player float64)  interface{} { return nil }
/**
 * Returns the coordinates of another player.
 * Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
 * @param player The player id, MUST be another player.
 * @return A Vector3 containing the coordinates of another player.
 */
func (_client) N_0x125e6d638b8605d4(player float64)  interface{} { return nil }

func (_client) NetworkGetPlayerFromGamerHandle(networkHandle float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkGetPlayerIndex(player float64) float64 {
	return 0.0
}

/**
 * Returns the Player associated to a given Ped when in an online session.
 */
func (_client) NetworkGetPlayerIndexFromPed(ped float64) float64 {
	return 0.0
}
/**
 * Returns the Player associated to a given Ped when in an online session.
 */
func (_client) N_0x6c0e2e0125610278(ped float64) float64 {
	return 0.0
}

func (_client) NetworkGetPlayerLoudness(player float64) float64 {
	return 0.0
}

func (_client) NetworkGetPlayerOwnsWaypoint(player float64) bool;
func (_client) N_0x82377b65e943f72d(player float64) bool;

func (_client) NetworkGetPlayerTutorialSessionInstance(player float64) float64 {
	return 0.0
}
func (_client) N_0x3b39236746714134(player float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkGetPositionHashOfThisScript() float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x257ed0fadf750bcf() float64 {
	return 0.0
}

func (_client) NetworkGetPresenceInviteContentId(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x24409fc4c55cb22d(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetPresenceInviteFromAdmin(p0 float64) bool;
func (_client) N_0x3dbf2df0aeb7d289(p0 float64) bool;

func (_client) NetworkGetPresenceInviteHandle(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGetPresenceInviteId(p0 float64) float64 {
	return 0.0
}
func (_client) N_0xdff09646e12ec386(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetPresenceInviteInviter(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x4962cc4aa2f345b7(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetPresenceInviteIsTournament(p0 float64) bool;
func (_client) N_0x8806cebfabd3ce05(p0 float64) bool;

func (_client) NetworkGetPresenceInvitePlaylistCurrent(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x728c4cc7920cd102(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetPresenceInvitePlaylistLength(p0 float64) float64 {
	return 0.0
}
func (_client) N_0xd39b3fff8ffdd5bf(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetPresenceInviteSessionId(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x26e1cd96b0903d60(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetPrimaryClanDataCancel() {}
func (_client) N_0x042e4b70b93e6054() {}

func (_client) NetworkGetPrimaryClanDataClear() float64 {
	return 0.0
}
func (_client) N_0x9aa46badad0e27ed() float64 {
	return 0.0
}

func (_client) NetworkGetPrimaryClanDataNew() (bool , float64,float64) { return false,0.0,0.0 }

func (_client) NetworkGetPrimaryClanDataPending() float64 {
	return 0.0
}
func (_client) N_0xb5074db804e28ce7() float64 {
	return 0.0
}

func (_client) NetworkGetPrimaryClanDataStart(p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkGetPrimaryClanDataSuccess() float64 {
	return 0.0
}
func (_client) N_0x5b4f04f19376a0ba() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetPvcBalance() float64 {
	return 0.0
}

/**
 * Same as 0xEA560AC9EEB1E19B.
 * ```
 * ```
 * Same as 0xEA560AC9EEB1E19B.
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetPvcTransferBalance() float64 {
	return 0.0
}
/**
 * Same as 0xEA560AC9EEB1E19B.
 * ```
 * ```
 * Same as 0xEA560AC9EEB1E19B.
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetRemainingVcDailyTransfers() float64 {
	return 0.0
}

func (_client) NetworkGetRandomInt() float64 {
	return 0.0
}
func (_client) N_0x599e4fa1f87eb5ff() float64 {
	return 0.0
}

/**
 * Same as GET_RANDOM_INT_IN_RANGE
 */
func (_client) NetworkGetRandomIntRanged(rangeStart float64, rangeEnd float64) float64 {
	return 0.0
}
/**
 * Same as GET_RANDOM_INT_IN_RANGE
 */
func (_client) N_0xe30cf56f1efa5f43(rangeStart float64, rangeEnd float64) float64 {
	return 0.0
}
/**
 * Same as GET_RANDOM_INT_IN_RANGE
 */
func (_client) NetworkGetRandomIntInRange(rangeStart float64, rangeEnd float64) float64 {
	return 0.0
}

/**
 * Same as 0x13A8DE2FD77D04F3.
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetRemainingTransferBalance() float64 {
	return 0.0
}
/**
 * Same as 0x13A8DE2FD77D04F3.
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetRemainingVcDailyTransfers_2() float64 {
	return 0.0
}

/**
 * Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
 */
func (_client) NetworkGetRespawnResult(randomInt float64)  (interface{}, float64){
	return nil,0.0
}

func (_client) NetworkGetRespawnResultFlags(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x6c34f1208b8923fd(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkGetRosPrivilege_24() bool;
func (_client) N_0x593570c289a77688() bool;

func (_client) NetworkGetRosPrivilege_25() bool;
func (_client) N_0x91b87c55093de351() bool;

func (_client) NetworkGetRosPrivilege_9() bool;
func (_client) N_0x66b59cffd78467af() bool;

func (_client) NetworkGetScriptStatus() float64 {
	return 0.0
}

func (_client) NetworkGetStringBankBalance() string;
func (_client) N_0xa6fa3979bed01b81() string;
func (_client) NetworkGetBankBalanceString() string;

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetStringBankWalletBalance() string;

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetStringWalletBalance(characterSlot float64) string;

func (_client) NetworkGetTalkerProximity() float64 {
	return 0.0
}

func (_client) NetworkGetTargetingMode() float64 {
	return 0.0
}
func (_client) N_0xdffa5be8381c3314() float64 {
	return 0.0
}

func (_client) NetworkGetThisScriptIsNetworkScript() bool;

func (_client) NetworkGetTimeoutTime() float64 {
	return 0.0
}
func (_client) N_0x5ed0356a0ce3a34f() float64 {
	return 0.0
}

func (_client) NetworkGetTotalNumPlayers() float64 {
	return 0.0
}
func (_client) N_0xcf61d4b4702ee9eb() float64 {
	return 0.0
}

func (_client) NetworkGetTransitionHost(networkHandle float64)  (bool, float64){
	return false,0.0
}

/**
 * Returns count.
 */
func (_client) NetworkGetTransitionMembers(dataCount float64) (float64, float64) { return 0.0, 0.0 };

/**
 * Actually returns the version (TUNABLE_VERSION)
 */
func (_client) NetworkGetTunableCloudCrc() float64 {
	return 0.0
}
/**
 * Actually returns the version (TUNABLE_VERSION)
 */
func (_client) N_0x10bd227a753b0d84() float64 {
	return 0.0
}
/**
 * Actually returns the version (TUNABLE_VERSION)
 */
func (_client) NetworkGetTunablesVersion() float64 {
	return 0.0
}

/**
 * NETWORK_*
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetUnreliableResendCountForPlayer(player float64) float64 {
	return 0.0
}
/**
 * NETWORK_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x3765c3a3e8192e10(player float64) float64 {
	return 0.0
}

func (_client) NetworkGetVcBalance() float64 {
	return 0.0
}
func (_client) N_0x5cbad97e059e1b94() float64 {
	return 0.0
}

func (_client) NetworkGetVcBankBalance() float64 {
	return 0.0
}
func (_client) N_0x76ef28da05ea395a() float64 {
	return 0.0
}

/**
 * Returns true if bank balance >= amount.
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetVcBankBalanceIsNotLessThan(amount float64) bool;

/**
 * Returns true if bank balance + wallet balance >= amount.
 */
func (_client) NetworkGetVcBankWalletBalanceIsNotLessThan(amount float64, characterSlot float64) bool;
/**
 * Returns true if bank balance + wallet balance >= amount.
 */
func (_client) N_0xdc18531d7019a535(amount float64, characterSlot float64) bool;

func (_client) NetworkGetVcWalletBalance(characterSlot float64) float64 {
	return 0.0
}
func (_client) N_0xa40f9c2623f6a8b5(characterSlot float64) float64 {
	return 0.0
}

/**
 * Returns true if wallet balance >= amount.
 * NativeDB Introduced: v323
 */
func (_client) NetworkGetVcWalletBalanceIsNotLessThan(amount float64, characterSlot float64) bool;

func (_client) NetworkGivePlayerJobshareCash(amount float64, networkHandle float64) float64 {
	return 0.0
}

func (_client) NetworkHandleFromFriend(friendIndex float64, bufferSize float64) float64 {
	return 0.0
}

/**
 * Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.
 * * Currently unknown struct
 */
func (_client) NetworkHandleFromMemberId(memberId string, bufferSize float64) float64 {
	return 0.0
}

/**
 * Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.
 * * Currently unknown struct
 * Example:
 * std::vector<UINT64> GetPlayerNetworkHandle(Player player) {
 * const int size = 13;
 * uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();
 * NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);
 * for (int i = 0; i < size; i++) {
 * Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);
 * }
 * std::vector<UINT64> result(buffer, buffer + sizeof(buffer));
 * return result;
 * }
 */
func (_client) NetworkHandleFromPlayer(player float64, bufferSize float64) float64 {
	return 0.0
}

/**
 * Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.
 * * Currently unknown struct
 */
func (_client) NetworkHandleFromUserId(userId string, bufferSize float64) float64 {
	return 0.0
}

func (_client) NetworkHasAgeRestrictedProfile() bool;
func (_client) N_0x1353f87e89946207() bool;

func (_client) NetworkHasCachedPlayerHeadBlendData(player float64) bool;
func (_client) N_0x237d5336a9a54108(player float64) bool;

func (_client) NetworkHasControlOfDoor(doorHash interface{}) bool;

func (_client) NetworkHasControlOfEntity(entity float64) bool;

func (_client) NetworkHasControlOfNetworkId(netId float64) bool;

func (_client) NetworkHasControlOfPickup(pickup float64) bool;

func (_client) NetworkHasEntityBeenRegisteredWithThisThread(entity float64) bool;
func (_client) N_0xb07d3185e11657a5(entity float64) bool;

func (_client) NetworkHasFollowInvite() bool;
func (_client) N_0x76d9b976c4c09fde() bool;

/**
 * Returns true if dinput8.dll is present in the game directory.
 * You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
 */
func (_client) NetworkHasGameBeenAltered() bool;
/**
 * Returns true if dinput8.dll is present in the game directory.
 * You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
 */
func (_client) N_0x659cf2ef7f550c4f() bool;

func (_client) NetworkHasHeadset() bool;

func (_client) NetworkHasInvitedGamer(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkHasInvitedGamerToTransition(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkHasPendingInvite() bool;

func (_client) NetworkHasPlayerStartedTransition(player float64) bool;

func (_client) NetworkHasReceivedHostBroadcastData() bool;
func (_client) N_0x5d10b3795f3fc886() bool;

/**
 * index is always 18 in scripts
 */
func (_client) NetworkHasRosPrivilege(index float64) bool;
/**
 * index is always 18 in scripts
 */
func (_client) N_0xa699957e60d80214(index float64) bool;

func (_client) NetworkHasRosPrivilegeEndDate(privilege float64) (bool,float64,interface{}) { return false,0.0,nil}
func (_client) N_0xc22912b1d85f26b1(privilege float64) (bool,float64,interface{}) { return false,0.0,nil}
func (_client) NetworkGetBanData(privilege float64) (bool,float64,interface{}) { return false,0.0,nil}

func (_client) NetworkHasSocialClubAccount() bool;
func (_client) N_0x67a5589628e0cff6() bool;

func (_client) NetworkHasSocialNetworkingSharingPriv() bool;
func (_client) N_0x76bf03fadbf154f5() bool;

/**
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 */
func (_client) NetworkHasValidRosCredentials() bool;
/**
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 */
func (_client) N_0x85443ff4c328f53b() bool;
/**
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 */
func (_client) NetworkAreRosAvailable() bool;
/**
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 */
func (_client) NetworkHaveJustUploadLater() bool;

func (_client) NetworkHasViewGamerUserContentResult(networkHandle float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xcca4318e1ab03f1f(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkHashFromGamerHandle(networkHandle float64) (float64, float64) { return 0.0, 0.0 };
func (_client) N_0x58575ac3cf2ca8ec(networkHandle float64) (float64, float64) { return 0.0, 0.0 };
func (_client) NetworkHashFromGamerHandle(networkHandle float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkHashFromPlayerHandle(player float64) float64 {
	return 0.0
}
func (_client) N_0xbc1d768f2f5d6c05(player float64) float64 {
	return 0.0
}
func (_client) NetworkHashFromPlayerHandle(player float64) float64 {
	return 0.0
}

func (_client) NetworkHaveCommunicationPrivileges(p0 float64, player float64) bool;
func (_client) N_0xaeef48cdf5b6ce7c(p0 float64, player float64) bool;

func (_client) NetworkHaveOnlinePrivilege_2() bool;
func (_client) N_0x5ea784d197556507() bool;

func (_client) NetworkHaveOnlinePrivileges() bool;

func (_client) NetworkHaveRosBannedPriv() bool;
func (_client) IsRockstarBanned() bool;
func (_client) NetworkHasPlayerBeenBanned() bool;

func (_client) NetworkHaveRosCreateTicketPriv() bool;
func (_client) IsSocialclubBanned() bool;
func (_client) NetworkHaveSocialClubPrivilege() bool;

func (_client) NetworkHaveRosLeaderboardWritePriv() bool;
func (_client) N_0x422d396f80a96547() bool;
func (_client) NetworkGetRosPrivilege_4() bool;

func (_client) NetworkHaveRosMultiplayerPriv() bool;
func (_client) IsPlayerBanned() bool;
func (_client) CanPlayOnline() bool;
func (_client) NetworkGetRosPrivilege_3() bool;

func (_client) NetworkHaveRosSocialClubPriv() bool;
func (_client) N_0x606e4d3e3cccf3eb() bool;
func (_client) NetworkGetRosPrivilege_10() bool;

func (_client) NetworkHaveUserContentPrivileges(p0 float64) bool;
func (_client) N_0x72d918c99bcacc54(p0 float64) bool;

/**
 * From what I can tell it looks like it does the following:
 * Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
 * You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
 * @param p0 Unknown int
 * @param p1 Unknown int
 * @param p2 Unknown int
 * @param p3 Unknown int
 * @param p4 Unknown always 0 in decompiled scripts
 * @param p5 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
 * @param p6 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
 * @param p7 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
 * @param p8 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
 * @param p9 Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
 * @return Probably a bool indicating if the transition was created.
 */
func (_client) NetworkHostTransition(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 bool, p6 bool, p7 float64, p8 float64, p9 float64) bool;

func (_client) NetworkInitializeCash(wallet float64, bank float64) {}
func (_client) N_0x3da5ecd1a56cba6d(wallet float64, bank float64) {}

func (_client) NetworkInviteGamers(p1 float64): [boolean, number, number, number];

func (_client) NetworkInviteGamersToTransition(p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsActivitySession() bool;

func (_client) NetworkIsActivitySpectator() bool;

func (_client) NetworkIsActivitySpectatorFromHandle(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsAddingFriend() float64 {
	return 0.0
}

func (_client) NetworkIsCableConnected() bool;
func (_client) N_0xeffb25453d8600f9() bool;

/**
 * This would be nice to see if someone is in party chat, but 2 sad notes.
 * 1) It only becomes true if said person is speaking in that party at the time.
 * 2) It will never, become true unless you are in that party with said person.
 */
func (_client) NetworkIsChattingInPlatformParty(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsClockTimeOverridden() bool;
func (_client) N_0xd7c95d322ff57522() bool;

func (_client) NetworkIsCloudAvailable() bool;

func (_client) NetworkIsCloudBackgroundScriptRequestPending() bool;
func (_client) N_0x8132c0eb8b2b3293() bool;
func (_client) HasBgScriptBeenDownloaded() bool;
func (_client) NetworkIsCloudBackgroundScriptsRequestPending() bool;

/**
 * NETWORK_IS_*
 * NativeDB Introduced: v323
 */
func (_client) NetworkIsConnectionEndpointRelayServer(player float64) bool;
/**
 * NETWORK_IS_*
 * NativeDB Introduced: v323
 */
func (_client) N_0x16d3d49902f697bb(player float64) bool;

func (_client) NetworkIsDoorNetworked(doorHash interface{}) bool;
func (_client) N_0xc01e93fac20c3346(doorHash interface{}) bool;
func (_client) NetworkHasControlOfPavementStats(doorHash interface{}) bool;

/**
 * Note: This only works for vehicles, which appears to be a bug (since the setter *does* work for every entity type and the name is 99% correct).
 */
func (_client) NetworkIsEntityConcealed(entity float64) bool;

func (_client) NetworkIsEntityFading(entity float64) bool;
func (_client) N_0x422f32cc7e56abad(entity float64) bool;

func (_client) NetworkIsFindingGamers() bool;

func (_client) NetworkIsFriend(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsFriendHandleOnline(networkHandle float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x87eb7a3ffcb314db(networkHandle float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkIsFriendOnline_2(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsFriendInMultiplayer(friendName string) bool;

/**
 * In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
 */
func (_client) NetworkIsFriendInSameTitle(friendName string) bool;

func (_client) NetworkIsFriendIndexOnline(friendIndex float64) bool;
func (_client) N_0xbad8f2a42b844821(friendIndex float64) bool;

func (_client) NetworkIsFriendOnline(name string) bool;

func (_client) NetworkIsGameInProgress() bool;

func (_client) NetworkIsGamerBlockedByMe(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsGamerInMySession(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsGamerMutedByMe(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsGamerTalking(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsGettingGamerStatus() bool;
func (_client) N_0x94a8394d150b013a() bool;

func (_client) NetworkIsHandleValid(bufferSize float64)  (bool, float64){
	return false,0.0
}

/**
 * If you are host, returns true else returns false.
 */
func (_client) NetworkIsHost() bool;

func (_client) NetworkIsHostOfThisScript() bool;

func (_client) NetworkIsInMpCutscene() bool;

/**
 * Note according to IDA TU27 X360(Console),
 * This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
 * Side note: This location just stops where it's at once jumped to.
 * Screenshot for side note,
 * h t t p ://i.imgur.com/m2ci1mF.png
 * h t t p://i.imgur.com/Z0Wx2B6.png
 */
func (_client) NetworkIsInParty() bool;

/**
 * Hardcoded to return false.
 */
func (_client) NetworkIsInPlatformParty() bool;
/**
 * Hardcoded to return false.
 */
func (_client) N_0x2fc5650b0271cb57() bool;

/**
 * Hardcoded to return false.
 */
func (_client) NetworkIsInPlatformPartyChat() bool;
/**
 * Hardcoded to return false.
 */
func (_client) N_0xfd8b834a8ba05048() bool;

func (_client) NetworkIsInSession() bool;

func (_client) NetworkIsInSpectatorMode() bool;

func (_client) NetworkIsInTransition() bool;

func (_client) NetworkIsInTutorialSession() bool;

func (_client) NetworkIsInactiveProfile(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsLocalPlayerInvincible() bool;

func (_client) NetworkIsLocalTalking() bool;
func (_client) N_0xc0d2af00bcc234ca() bool;

func (_client) NetworkIsMultiplayerDisabled() bool;
func (_client) N_0x9747292807126eda() bool;

/**
 * Returns true if the specified network id is controlled by someone else.
 * @param netId The network id for an object or entity.
 * @return Probably a bool, returns 1 if you don't have control over the netId entity.
 */
func (_client) NetworkIsNetworkIdAClone(netId float64) bool;
/**
 * Returns true if the specified network id is controlled by someone else.
 * @param netId The network id for an object or entity.
 * @return Probably a bool, returns 1 if you don't have control over the netId entity.
 */
func (_client) N_0x7242f8b741ce1086(netId float64) bool;

func (_client) NetworkIsOfflineInvitePending() bool;
func (_client) N_0x74698374c45701d2() bool;

func (_client) NetworkIsParticipantActive(p0 float64) bool;

/**
 * Note according to IDA TU27 X360(Console),
 * This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
 * Side note: This location just stops where it's at once jumped to.
 * Screenshot for side note,
 * h t t p ://i.imgur.com/m2ci1mF.png
 * h t t p://i.imgur.com/Z0Wx2B6.png
 */
func (_client) NetworkIsPartyMember(networkHandle float64)  (bool, float64){
	return false,0.0
}

/**
 * This function is hard-coded to always return 0.
 */
func (_client) NetworkIsPendingFriend(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkIsPlayerAParticipant(player float64) bool;

func (_client) NetworkIsPlayerAParticipantOnScript(player1 float64, script string, player2 float64) bool;
func (_client) N_0x1ad5b71586b94820(player1 float64, script string, player2 float64) bool;

func (_client) NetworkIsPlayerActive(player float64) bool;

func (_client) NetworkIsPlayerBlockedByMe(player float64) bool;

func (_client) NetworkIsPlayerConcealed(player float64) bool;

func (_client) NetworkIsPlayerConnected(player float64) bool;

/**
 * NETWORK_ARE_*
 */
func (_client) NetworkIsPlayerEqualToIndex(player float64, index float64) bool;
/**
 * NETWORK_ARE_*
 */
func (_client) N_0x9de986fc9a87c474(player float64, index float64) bool;

func (_client) NetworkIsPlayerFading(player float64) bool;
func (_client) N_0x631dc5dff4b110e3(player float64) bool;

func (_client) NetworkIsPlayerInMpCutscene(player float64) bool;

func (_client) NetworkIsPlayerMutedByMe(player float64) bool;

/**
 * returns true if someone is screaming or talking in a microphone
 */
func (_client) NetworkIsPlayerTalking(player float64) bool;

func (_client) NetworkIsPsnAvailable() bool;
func (_client) N_0x8d11e61a4abf49cc() bool;

func (_client) NetworkIsScriptActive(scriptName string, player float64, p2 bool, p3 float64) bool;

/**
 * NativeDB Introduced: v2245
 */
func (_client) NetworkIsScriptActiveByHash(scriptHash interface{}, p1 float64, p2 bool, p3 float64) bool;

func (_client) NetworkIsSessionActive() bool;

func (_client) NetworkIsSessionBusy() bool;

/**
 * This checks if player is playing on gta online or not.
 * Please add an if and block your mod if this is "true".
 */
func (_client) NetworkIsSessionStarted() bool;

/**
 * Returns whether the player is signed into Social Club.
 */
func (_client) NetworkIsSignedIn() bool;

/**
 * Returns whether the game is not in offline mode.
 * seemed not to work for some ppl
 */
func (_client) NetworkIsSignedOnline() bool;

/**
 * Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
 */
func (_client) NetworkIsTextChatActive() bool;

func (_client) NetworkIsThisScriptMarked(p0 float64, p1 bool, p2 float64) bool;
func (_client) N_0xd1110739eeadb592(p0 float64, p1 bool, p2 float64) bool;
func (_client) NetworkSetThisScriptMarked(p0 float64, p1 bool, p2 float64) bool;

func (_client) NetworkIsTransitionBusy() bool;

func (_client) NetworkIsTransitionClosedCrew() bool;
func (_client) N_0x0dbd5d7e3c5bec3b() bool;

func (_client) NetworkIsTransitionClosedFriends() bool;
func (_client) N_0x6512765e3be78c50() bool;

func (_client) NetworkIsTransitionHost() bool;

func (_client) NetworkIsTransitionHostFromHandle(networkHandle float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkIsTransitionMatchmaking() bool;
func (_client) N_0x292564c735375edf() bool;

func (_client) NetworkIsTransitionOpenToMatchmaking() bool;
func (_client) N_0x37a4494483b9f5c9() bool;

func (_client) NetworkIsTransitionPrivate() bool;
func (_client) N_0x5a6aa44ff8e931e6() bool;

func (_client) NetworkIsTransitionSolo() bool;
func (_client) N_0x5dc577201723960a() bool;

func (_client) NetworkIsTransitionStarted() bool;

func (_client) NetworkIsTransitionToGame() bool;

func (_client) NetworkIsTransitionVisibilityLocked() bool;
func (_client) N_0xd0a484cb2f829fbe() bool;

func (_client) NetworkIsTunableCloudRequestPending() bool;
func (_client) N_0x0467c11ed88b7d28() bool;
func (_client) HasTunablesBeenDownloaded() bool;

func (_client) NetworkIsTutorialSessionChangePending() bool;
func (_client) N_0x35f0b98a8387274d() bool;

func (_client) NetworkJoinGroupActivity() float64 {
	return 0.0
}
func (_client) N_0xa06509a691d12be4() float64 {
	return 0.0
}

func (_client) NetworkJoinPreviouslyFailedSession() bool;
func (_client) N_0x59df79317f85a7e0() bool;

func (_client) NetworkJoinPreviouslyFailedTransition() bool;
func (_client) N_0xffe1e5b792d92b34() bool;

/**
 * int handle[76];
 * NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
 * Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
 * NETWORK_JOIN_TRANSITION(uVar2);
 * nothing doin.
 */
func (_client) NetworkJoinTransition(player float64) bool;

func (_client) NetworkLaunchTransition() bool;

func (_client) NetworkLeaveTransition() bool;

func (_client) NetworkManualDeleteCharacter(characterSlot float64) {}
func (_client) N_0x821418c727fcacd7(characterSlot float64) {}

func (_client) NetworkMarkTransitionGamerAsFullyJoined(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkMemberIdFromGamerHandle(networkHandle float64)  (string, float64){
	return false,0.0
}

func (_client) NetworkMoneyCanBet(amount float64, p1 bool, p2 bool) bool;
func (_client) N_0x81404f3dc124fe5b(amount float64, p1 bool, p2 bool) bool;

func (_client) NetworkOpenTransitionMatchmaking() {}
func (_client) N_0x2b3a8f7ca3a38fde() {}

/**
 * Could possibly bypass being muted or automatically muted
 */
func (_client) NetworkOverrideChatRestrictions(player float64, toggle bool) {}
/**
 * Could possibly bypass being muted or automatically muted
 */
func (_client) N_0x3039ae5ad2c9c0c4(player float64, toggle bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkOverrideClockMillisecondsPerGameMinute(ms float64) {}

/**
 * Works in Singleplayer too.
 * Passing wrong data (e.g. hours above 23) will cause the game to crash.
 */
func (_client) NetworkOverrideClockTime(hours float64, minutes float64, seconds float64) {}

func (_client) NetworkOverrideCoordsAndHeading(entity float64, x float64, y float64, z float64, heading float64) {}
func (_client) N_0xa7e30de9272b6d49(entity float64, x float64, y float64, z float64, heading float64) {}

/**
 * R* uses this to hear all player when spectating.
 * It allows you to hear other online players when their chat is on none, crew and or friends
 */
func (_client) NetworkOverrideReceiveRestrictions(player float64, toggle bool) {}
/**
 * R* uses this to hear all player when spectating.
 * It allows you to hear other online players when their chat is on none, crew and or friends
 */
func (_client) N_0xddf73e2b1fec5ab4(player float64, toggle bool) {}

/**
 * p0 is always false in scripts.
 */
func (_client) NetworkOverrideReceiveRestrictionsAll(toggle bool) {}
/**
 * p0 is always false in scripts.
 */
func (_client) N_0x0ff2862b61a58af9(toggle bool) {}

/**
 * This is used alongside the native,
 * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
 */
func (_client) NetworkOverrideSendRestrictions(player float64, toggle bool) {}
/**
 * This is used alongside the native,
 * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
 */
func (_client) N_0x97dd4c5944cc2e6a(player float64, toggle bool) {}
/**
 * This is used alongside the native,
 * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
 */
func (_client) NetworkOverrideSendRestrictions(player float64, toggle bool) {}

func (_client) NetworkOverrideSendRestrictionsAll(toggle bool) {}
func (_client) N_0x57b192b4d4ad23d5(toggle bool) {}
func (_client) NetworkChatMute(toggle bool) {}

func (_client) NetworkOverrideTeamRestrictions(team float64, toggle bool) {}
func (_client) N_0x6f697a66ce78674e(team float64, toggle bool) {}

func (_client) NetworkOverrideTransitionChat(p0 bool) {}
func (_client) N_0xaf66059a131aa269(p0 bool) {}

func (_client) NetworkPayEmployeeWage(p0 float64, p1 bool, p2 bool) {}
func (_client) N_0x5fd5ed82cbbe9989(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkPayMatchEntryFee(amount float64, matchId string, p2 bool, p3 bool) {}
func (_client) N_0x9346e14f2af74d46(amount float64, matchId string, p2 bool, p3 bool) {}

func (_client) NetworkPayUtilityBill(amount float64, p1 bool, p2 bool) {}
func (_client) N_0xafe08b35ec0c9eae(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkPedForceGameStateUpdate(ped float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xf0bc9bcd24a511d5(ped float64) {}

func (_client) NetworkPlayerGetCheaterReason() float64 {
	return 0.0
}
func (_client) N_0x172f75b6ee2233ba() float64 {
	return 0.0
}
func (_client) NetworkPlayerIsUnk() float64 {
	return 0.0
}

/**
 * Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 */
func (_client) NetworkPlayerGetName(player float64) string;

/**
 * Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 */
func (_client) NetworkPlayerGetUserid(player float64, userID float64)  (string, float64){
	return false,0.0
}
/**
 * Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 */
func (_client) NetworkPlayerGetUserId(player float64, userID float64)  (string, float64){
	return false,0.0
}

func (_client) NetworkPlayerHasHeadset(player float64) bool;

/**
 * Does exactly the same thing as PLAYER_ID()
 */
func (_client) NetworkPlayerIdToInt() float64 {
	return 0.0
}

func (_client) NetworkPlayerIndexIsCheater(player float64) bool;
func (_client) N_0x565e430db3b05bec(player float64) bool;
func (_client) NetworkPlayerSomething(player float64) bool;

func (_client) NetworkPlayerIsBadsport() bool;

func (_client) NetworkPlayerIsCheater() bool;

/**
 * Checks if a specific value (BYTE) in CPlayerInfo is nonzero.
 * Returns always false in Singleplayer.
 * No longer used for dev checks since first mods were released on PS3 & 360.
 * R* now checks with the is_dlc_present native for the dlc hash 2532323046,
 * if that is present it will unlock dev stuff.
 */
func (_client) NetworkPlayerIsRockstarDev(player float64) bool;

func (_client) NetworkQueryRespawnResults(p0 float64) (float64, float64) { return 0.0, 0.0 };
func (_client) N_0x3c891a251567dfce(p0 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) NetworkQueueGamerForStatus(p0 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x85a0ef54a500882c(p0 float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkGetGamerStatus(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkReceivePlayerJobshareCash(value float64, networkHandle float64) float64 {
	return 0.0
}

/**
 * index
 * -------
 * See function sub_1005 in am_boat_taxi.ysc
 * context
 * ----------
 * "BACKUP_VAGOS"
 * "BACKUP_LOST"
 * "BACKUP_FAMILIES"
 * "HIRE_MUGGER"
 * "HIRE_MERCENARY"
 * "BUY_CARDROPOFF"
 * "HELI_PICKUP"
 * "BOAT_PICKUP"
 * "CLEAR_WANTED"
 * "HEAD_2_HEAD"
 * "CHALLENGE"
 * "SHARE_LAST_JOB"
 * "DEFAULT"
 * reason
 * ---------
 * "NOTREACHTARGET"
 * "TARGET_ESCAPE"
 * "DELIVERY_FAIL"
 * "NOT_USED"
 * "TEAM_QUIT"
 * "SERVER_ERROR"
 * "RECEIVE_LJ_L"
 * "CHALLENGE_PLAYER_LEFT"
 * "DEFAULT"
 * unk
 * -----
 * Unknown bool value
 */
func (_client) NetworkRefundCash(index float64, context string, reason string, unk bool) {}
/**
 * index
 * -------
 * See function sub_1005 in am_boat_taxi.ysc
 * context
 * ----------
 * "BACKUP_VAGOS"
 * "BACKUP_LOST"
 * "BACKUP_FAMILIES"
 * "HIRE_MUGGER"
 * "HIRE_MERCENARY"
 * "BUY_CARDROPOFF"
 * "HELI_PICKUP"
 * "BOAT_PICKUP"
 * "CLEAR_WANTED"
 * "HEAD_2_HEAD"
 * "CHALLENGE"
 * "SHARE_LAST_JOB"
 * "DEFAULT"
 * reason
 * ---------
 * "NOTREACHTARGET"
 * "TARGET_ESCAPE"
 * "DELIVERY_FAIL"
 * "NOT_USED"
 * "TEAM_QUIT"
 * "SERVER_ERROR"
 * "RECEIVE_LJ_L"
 * "CHALLENGE_PLAYER_LEFT"
 * "DEFAULT"
 * unk
 * -----
 * Unknown bool value
 */
func (_client) N_0xf9c812cd7c46e817(index float64, context string, reason string, unk bool) {}

func (_client) NetworkRegisterEntityAsNetworked(entity float64) {}
func (_client) N_0x06faacd625d80caa(entity float64) {}

func (_client) NetworkRegisterHostBroadcastVariables(numVars float64) float64 {
	return 0.0
}

func (_client) NetworkRegisterPlayerBroadcastVariables(numVars float64) float64 {
	return 0.0
}

func (_client) NetworkRegisterTunableBoolHash(contextHash interface{}, nameHash interface{})  (bool,interface{}){
	return false,nil
}
func (_client) N_0x697f508861875b42(contextHash interface{}, nameHash interface{})  (bool,interface{}){
	return false,nil
}

func (_client) NetworkRegisterTunableFloatHash(contextHash interface{}, nameHash interface{}, value float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x1950dae9848a4739(contextHash interface{}, nameHash interface{}, value float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkRegisterTunableIntHash(contextHash interface{}, nameHash interface{}, value float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x3a8b55fda4c8ddef(contextHash interface{}, nameHash interface{}, value float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkRemoveAllTransitionInvite() {}
func (_client) N_0x726e0375c7a26368() {}

func (_client) NetworkRemoveEntityArea(p0 float64) bool;

func (_client) NetworkRemovePresenceInvite(p0 float64) bool;
func (_client) N_0xf0210268db0974b1(p0 float64) bool;

func (_client) NetworkRemoveTransitionInvite(p0 float64) {}

func (_client) NetworkReportMyself() {}
func (_client) N_0x5626d9d6810730d5() {}

func (_client) NetworkRequestCloudBackgroundScripts() bool;
func (_client) N_0x924426bffd82e915() bool;
func (_client) NetworkRequestCloudBackgroundScripts() bool;

func (_client) NetworkRequestCloudTunables() {}
func (_client) N_0x42fb3b532d526e6c() {}

func (_client) NetworkRequestControlOfDoor(doorID float64) bool;

func (_client) NetworkRequestControlOfEntity(entity float64) bool;

func (_client) NetworkRequestControlOfNetworkId(netId float64) bool;

func (_client) NetworkResetBodyTracker() {}

/**
 * p4 and p5 are always 0 in scripts
 */
func (_client) NetworkRespawnCoords(player float64, x float64, y float64, z float64, p4 bool, p5 bool) {}
/**
 * p4 and p5 are always 0 in scripts
 */
func (_client) N_0x9769f811d1785b03(player float64, x float64, y float64, z float64, p4 bool, p5 bool) {}

/**
 * NativeDB Added Parameter 7: Any p6
 */
func (_client) NetworkResurrectLocalPlayer(x float64, y float64, z float64, heading float64, unk bool, changetime bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkRivalDeliveryCompleted(earnedMoney float64) {}

func (_client) NetworkSeedRandomNumberGenerator(seed float64) {}
func (_client) N_0xf1b84178f8674195(seed float64) {}

func (_client) NetworkSendInviteViaPresence(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xc3c7a6afdb244624(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) NetworkSendPresenceInvite(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.
 */
func (_client) NetworkSendPresenceTransitionInvite(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }
/**
 * String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.
 */
func (_client) N_0xc116ff9b4d488291(p2 float64, p3 float64) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * Message is limited to 64 characters.
 */
func (_client) NetworkSendTextMessage(message string, networkHandle float64)  (bool, float64){
	return false,0.0
}

/**
 * the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1
 * does this send an invite to a player?
 */
func (_client) NetworkSendTransitionGamerInstruction(p1 string, p2 float64, p3 float64, p4 bool)  (bool, float64){
	return false,0.0
}

func (_client) NetworkSessionActivityQuickmatch(p0 float64, p1 float64, p2 float64, p3 float64) bool;
func (_client) N_0xbe3e347a87aceb82(p0 float64, p1 float64, p2 float64, p3 float64) bool;

func (_client) NetworkSessionAddActiveMatchmakingGroup(groupId float64) {}
func (_client) N_0xcae55f48d3d7875c(groupId float64) {}

func (_client) NetworkSessionBlockJoinRequests(toggle bool) {}
func (_client) N_0xa73667484d7037c3(toggle bool) {}

func (_client) NetworkSessionCancelInvite() {}

func (_client) NetworkSessionChangeSlots(p0 float64, p1 bool) {}
func (_client) N_0xb4ab419e0d86acae(p0 float64, p1 bool) {}

func (_client) NetworkSessionCrewMatchmaking(p0 float64, p1 float64, p2 float64, maxPlayers float64, p4 bool) bool;
func (_client) N_0x94bc51e9449d917f(p0 float64, p1 float64, p2 float64, maxPlayers float64, p4 bool) bool;

/**
 * p0 is always false and p1 varies.
 * NETWORK_SESSION_END(0, 1)
 * NETWORK_SESSION_END(0, 0)
 * Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."
 */
func (_client) NetworkSessionEnd(p0 bool, p1 bool) bool;

/**
 * unknown params
 * p0 = 0, 2, or 999 (The global is 999 by default.)
 * p1 = 0 (Always in every script it's found in atleast.)
 * p2 = 0, 3, or 4 (Based on a var that is determined by a function.)
 * p3 = maxPlayers (It's obvious in x360 scripts it's always 18)
 * p4 = 0 (Always in every script it's found in atleast.)
 * p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)
 * p5 is reset to 0 if,
 * Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.
 */
func (_client) NetworkSessionEnter(p0 float64, p1 float64, p2 float64, maxPlayers float64, p4 float64, p5 float64) float64 {
	return 0.0
}

func (_client) NetworkSessionForceCancelInvite() {}
func (_client) N_0xa29177f7703b5644() {}

func (_client) NetworkSessionFriendMatchmaking(p0 float64, p1 float64, maxPlayers float64, p3 bool) bool;
func (_client) N_0x2cfc76e0d087c994(p0 float64, p1 float64, maxPlayers float64, p3 bool) bool;

func (_client) NetworkSessionGetInviter(networkHandle float64) {}

func (_client) NetworkSessionGetKickVote(player float64) bool;
func (_client) NetworkSessionArePlayersVotingToKick(player float64) bool;
func (_client) NetworkSessionIsPlayerVotedToKick(player float64) bool;

func (_client) NetworkSessionGetMatchmakingGroupFree(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x56ce820830ef040b(p0 float64) float64 {
	return 0.0
}
func (_client) NetworkSessionGetUnk(p0 float64) float64 {
	return 0.0
}

func (_client) NetworkSessionGetPrivateSlots() float64 {
	return 0.0
}
func (_client) N_0x53afd64c6758f2f9() float64 {
	return 0.0
}

/**
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
 */
func (_client) NetworkSessionHost(p0 float64, maxPlayers float64, p2 bool) bool;

func (_client) NetworkSessionHostClosed(p0 float64, maxPlayers float64) bool;
func (_client) N_0xed34c0c02c098bb7(p0 float64, maxPlayers float64) bool;

/**
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
 */
func (_client) NetworkSessionHostFriendsOnly(p0 float64, maxPlayers float64) bool;

/**
 * Loads up the map that is loaded when beeing in mission creator
 * Player gets placed in a mix between online/offline mode
 * p0 is always 2 in R* scripts.
 * Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
 */
func (_client) NetworkSessionHostSinglePlayer(p0 float64) {}

func (_client) NetworkSessionIsClosedCrew() bool;
func (_client) N_0x74732c6ca90da2b4() bool;

func (_client) NetworkSessionIsClosedFriends() bool;
func (_client) N_0xfbcfa2ea2e206890() bool;

func (_client) NetworkSessionIsInVoiceSession() bool;
func (_client) N_0x855bc38818f6f684() bool;

func (_client) NetworkSessionIsPrivate() bool;
func (_client) N_0xcef70aa5b3f89ba1() bool;

func (_client) NetworkSessionIsSolo() bool;
func (_client) N_0xf3929c2379b60cce() bool;

func (_client) NetworkSessionIsVisible() bool;
func (_client) N_0xba416d68c631496a() bool;

func (_client) NetworkSessionIsVoiceSessionBusy() bool;
func (_client) N_0xef0912ddf7c4cb4b() bool;

func (_client) NetworkSessionJoinInvite() {}
func (_client) NetworkIsPlayerAnimationDrawingSynchronized() {}

/**
 * Only works as host.
 */
func (_client) NetworkSessionKickPlayer(player float64) {}

func (_client) NetworkSessionLeaveSinglePlayer() {}

func (_client) NetworkSessionMarkVisible(toggle bool) {}
func (_client) N_0x271cc6ab59ebf9a5(toggle bool) {}

func (_client) NetworkSessionSetMatchmakingGroup(matchmakingGroup float64) {}
func (_client) N_0x49ec8030f5015f8b(matchmakingGroup float64) {}
func (_client) NetworkSctvSlots(matchmakingGroup float64) {}

/**
 * playerTypes:
 * 0 = regular joiner
 * 4 = spectator
 * 8 = unknown
 */
func (_client) NetworkSessionSetMatchmakingGroupMax(playerType float64, playerCount float64) {}
/**
 * playerTypes:
 * 0 = regular joiner
 * 4 = spectator
 * 8 = unknown
 */
func (_client) N_0x8b6a4dd0af9ce215(playerType float64, playerCount float64) {}
/**
 * playerTypes:
 * 0 = regular joiner
 * 4 = spectator
 * 8 = unknown
 */
func (_client) NetworkSessionSetMaxPlayers(playerType float64, playerCount float64) {}

func (_client) NetworkSessionSetMatchmakingMentalState(p0 float64) {}
func (_client) N_0xf1eea2dda9ffa69d(p0 float64) {}

func (_client) NetworkSessionSetMatchmakingPropertyId(p0 bool) {}
func (_client) N_0x3f52e880aaf6c8ca(p0 bool) {}

func (_client) NetworkSessionValidateJoin(p0 bool) {}
func (_client) N_0xc19f6c8e7865a6ff(p0 bool) {}
func (_client) NetworkSessionHosted(p0 bool) {}

/**
 * Only one occurence in the scripts:
 * auto sub_cb43(auto a_0, auto a_1) {
 * if (g_2594CB._f1) {
 * if (NETWORK::_855BC38818F6F684()) {
 * NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
 * g_2594CB._f14 -- [[{13}]]  = a_0._fB93;
 * g_2594CB._f4 -- [["64"]]  = a_1;
 * return 1;
 * }
 * }
 * return 0;
 * }
 * other:
 * looks like it passes a player in the paramater
 * Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
 */
func (_client) NetworkSessionVoiceConnectToPlayer(globalPtr float64) {}
/**
 * Only one occurence in the scripts:
 * auto sub_cb43(auto a_0, auto a_1) {
 * if (g_2594CB._f1) {
 * if (NETWORK::_855BC38818F6F684()) {
 * NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
 * g_2594CB._f14 -- [[{13}]]  = a_0._fB93;
 * g_2594CB._f4 -- [["64"]]  = a_1;
 * return 1;
 * }
 * }
 * return 0;
 * }
 * other:
 * looks like it passes a player in the paramater
 * Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
 */
func (_client) N_0xabd5e88b8a2d3db2(globalPtr float64) {}
/**
 * Only one occurence in the scripts:
 * auto sub_cb43(auto a_0, auto a_1) {
 * if (g_2594CB._f1) {
 * if (NETWORK::_855BC38818F6F684()) {
 * NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
 * g_2594CB._f14 -- [[{13}]]  = a_0._fB93;
 * g_2594CB._f4 -- [["64"]]  = a_1;
 * return 1;
 * }
 * }
 * return 0;
 * }
 * other:
 * looks like it passes a player in the paramater
 * Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
 */
func (_client) NetworkVoiceConnectToPlayer(globalPtr float64) {}

func (_client) NetworkSessionVoiceHost() {}

func (_client) NetworkSessionVoiceLeave() {}

func (_client) NetworkSessionVoiceRespondToRequest(p0 bool, p1 float64) {}
func (_client) NetworkSetKeepFocuspoint(p0 bool, p1 float64) {}

func (_client) NetworkSessionVoiceSetTimeout(timeout float64) {}
func (_client) N_0x5b8ed3db018927b1(timeout float64) {}

func (_client) NetworkSessionWasInvited() bool;
func (_client) N_0x23dfb504655d0ce4() bool;

func (_client) NetworkSetActivitySpectator(toggle bool) {}

func (_client) NetworkSetActivitySpectatorMax(maxSpectators float64) {}

func (_client) NetworkSetChoiceMigrateOptions(toggle bool, player float64) {}
func (_client) N_0x5c707a667df8b9fa(toggle bool, player float64) {}

func (_client) NetworkSetCurrentDataManagerHandle(p0 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x796a87b3b68d1f3d(p0 float64)  (bool, float64){
	return false,0.0
}
func (_client) NetworkCheckDataManagerForHandle(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(p0 float64)  (bool, float64){
	return false,0.0
}

func (_client) NetworkSetEntityCanBlend(entity float64, toggle bool) {}

func (_client) NetworkSetEntityGhostedWithOwner(entity float64, p1 bool) {}
func (_client) N_0x4ba166079d658ed4(entity float64, p1 bool) {}

/**
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 * pc or last gen?
 * ^^ last-gen
 */
func (_client) NetworkSetEntityInvisibleToNetwork(entity float64, toggle bool) {}
/**
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 * pc or last gen?
 * ^^ last-gen
 */
func (_client) N_0xf1ca12b18aef5298(entity float64, toggle bool) {}
/**
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 * pc or last gen?
 * ^^ last-gen
 */
func (_client) NetworkSetEntityVisibleToNetwork(entity float64, toggle bool) {}

func (_client) NetworkSetFriendlyFireOption(toggle bool) {}

func (_client) NetworkSetGamerInvitedToTransition(networkHandle float64) {}

func (_client) NetworkSetInFreeCamMode(toggle bool) {}
func (_client) N_0xfc18db55ae19e046(toggle bool) {}

func (_client) NetworkSetInMpCutscene(p0 bool, p1 bool) {}

func (_client) NetworkSetInSpectatorMode(toggle bool, playerPed float64) {}

func (_client) NetworkSetInSpectatorModeExtended(toggle bool, playerPed float64, p2 bool) {}
func (_client) N_0x419594e137637120(toggle bool, playerPed float64, p2 bool) {}

func (_client) NetworkSetInviteOnCallForInviteMenu(p0 float64) {}
func (_client) N_0x66f010a4b031a331(p0 float64) {}

func (_client) NetworkSetLocalPlayerInvincibleTime(time float64) {}

func (_client) NetworkSetLocalPlayerSyncLookAt(toggle bool) {}
func (_client) N_0x524ff0aeff9c3973(toggle bool) {}

func (_client) NetworkSetMissionFinished() {}

func (_client) NetworkSetNoSpectatorChat(toggle bool) {}
func (_client) N_0xf46a1e03e8755980(toggle bool) {}

func (_client) NetworkSetOverrideSpectatorMode(toggle bool) {}

func (_client) NetworkSetPlayerIsPassive(toggle bool) {}
func (_client) N_0x1b857666604b1a74(toggle bool) {}

/**
 * value must be < 255
 */
func (_client) NetworkSetPropertyId(id float64) {}

/**
 * On PC it's a nullsub which means it does absolutely nothing.
 * Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...
 */
func (_client) NetworkSetRichPresence(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * This native does absolutely nothing, just a nullsub
 */
func (_client) NetworkSetRichPresenceString(p0 float64, textLabel string) {}
/**
 * This native does absolutely nothing, just a nullsub
 */
func (_client) N_0x3e200c2bcf4164eb(p0 float64, textLabel string) {}
/**
 * This native does absolutely nothing, just a nullsub
 */
func (_client) NetworkSetRichPresence_2(p0 float64, textLabel string) {}

func (_client) NetworkSetScriptIsSafeForNetworkGame() {}

func (_client) NetworkSetScriptReadyForEvents(toggle bool) {}
func (_client) N_0x7ac752103856fb20(toggle bool) {}

func (_client) NetworkSetTalkerProximity(value float64) {}

func (_client) NetworkSetTeamOnlyChat(toggle bool) {}

func (_client) NetworkSetThisScriptIsNetworkScript(maxNumMissionParticipants float64, p1 bool, instanceId float64) {}

func (_client) NetworkSetTransitionActivityId(p0 float64) {}
func (_client) N_0x30de938b516f0ad2(p0 float64) {}

func (_client) NetworkSetTransitionCreatorHandle(p0 float64) {}

func (_client) NetworkSetTransitionVisibilityLock(p0 bool, p1 bool) {}
func (_client) N_0x0c978fda19692c2c(p0 bool, p1 bool) {}

/**
 * Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
 * ```
 * ```
 * NativeDB Introduced: v1365
 */
func (_client) NetworkSetVehicleWheelsDestructible(vehicle float64, toggle bool) {}
/**
 * Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
 * ```
 * ```
 * NativeDB Introduced: v1365
 */
func (_client) N_0x890e2c5abed7236d(vehicle float64, toggle bool) {}

func (_client) NetworkSetVoiceActive(toggle bool) {}

func (_client) NetworkSetVoiceChannel(channel float64) {}

/**
 * Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
 */
func (_client) NetworkShouldShowConnectivityTroubleshooting() bool;
/**
 * Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
 */
func (_client) N_0x82a2b386716608f1() bool;

/**
 * Example:
 * int playerHandle;
 * NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);
 * NETWORK_SHOW_PROFILE_UI(&playerHandle);
 */
func (_client) NetworkShowProfileUi(networkHandle float64) {}

func (_client) NetworkSpentAmmoDrop(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) NetworkSpentArcadeGame(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) NetworkSpentArcadeGeneric(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkSpentArenaJoinSpectator(amount float64, p1 float64, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkSpentArenaPremium(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkSpentArenaSpectatorBox(amount float64, p1 float64, p2 bool, p3 bool) {}

func (_client) NetworkSpentArrestBail(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentAutoshopModifications(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x9bea350d7c48061b(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentAutoshopPropertyUtilityFee(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xb40f96d6d252839b(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentBaService(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
func (_client) N_0xd7cccba28c4ecaf0(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) NetworkSpentBallisticEquipment(amount float64, p1 bool, p2 bool) {}
func (_client) N_0x5d97630a8a0ef123(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkSpentBankInterest(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkSpentBeachPartyGeneric(p0 float64) {}

func (_client) NetworkSpentBetting(amount float64, p1 float64, matchId string, p3 bool, p4 bool) {}

func (_client) NetworkSpentBoatPickup(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: BOOL p1
 * NativeDB Added Parameter 3: BOOL p2
 */
func (_client) NetworkSpentBoss() bool;
/**
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: BOOL p1
 * NativeDB Added Parameter 3: BOOL p2
 */
func (_client) N_0xffbe02cd385356bd() bool;

func (_client) NetworkSpentBounty(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkSpentBountyHunterMission(amount float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentBullShark(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentBusiness(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x0035bb914316f1e3(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkSpentBuyArena(amount float64, p1 bool, p2 bool, p3 string) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentBuyAutoshop(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xeeb7e5d1feb20869(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentBuyBase(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentBuyBunker(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x12d148d26538d0f9(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkSpentBuyCasino(amount float64, p1 bool, p2 bool, data float64) float64 {
	return 0.0
}

func (_client) NetworkSpentBuyOfftheradar(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentBuyPassiveMode(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentBuyRevealPlayers(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentBuyTiltrotor(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentBuyTruck(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0xac272c0ae01b4bd8(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentBuyWantedlevel(p0 float64, p2 bool, p3 bool) float64 {
	return 0.0
}

func (_client) NetworkSpentCallPlayer(p0 float64, p2 bool, p3 bool) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentCarclub(p0 float64, p1 bool, p2 bool, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x925227803a0eaa1b(p0 float64, p1 bool, p2 bool, p3 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentCarclubMembership(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x1464e17207cd36e2(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentCarclubTakeover(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xd1e46824e6fb92b5(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentCarwash(p0 float64, p1 float64, p2 float64, p3 bool, p4 bool) {}

func (_client) NetworkSpentCashDrop(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkSpentCasinoClubGeneric(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkSpentCasinoGeneric(amount float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) NetworkSpentCasinoHeist(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) NetworkSpentCasinoHeistSkipMission(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkSpentCasinoMembership(amount float64, p1 bool, p2 bool, p3 float64) {}

func (_client) NetworkSpentCinema(p0 float64, p1 float64, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentEmployAssassins(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentFromBank(p0 float64, p1 float64, p2 float64, p3 bool) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xb9f7a469460e7a4a(p0 float64, p1 float64, p2 float64, p3 bool) {}

func (_client) NetworkSpentFromRockstar(bank float64, p1 bool, p2 bool) {}
func (_client) N_0x6a445b64ed7abeb5(bank float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentGangopsCannon(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentGangopsStartMission(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentGangopsStartStrand(_type float64, amount float64, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentGangopsTripSkip(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkSpentHangarStaffCharges(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkSpentHangarUtilityCharges(amount float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentHeliPickup(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentHireMercenary(p0 float64, p1 bool, p2 bool) {}

/**
 * Only used once in a script (am_contact_requests)
 * p1 = 0
 * p2 = 1
 */
func (_client) NetworkSpentHireMugger(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentHoldups(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentImAbility(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x93aa4165cb67e925(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentImportExportRepair(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0xc1952f3773ba18fe(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkSpentInStripclub(p0 float64, p1 bool, p2 float64, p3 bool) {}
func (_client) N_0xee99784e4467689c(p0 float64, p1 bool, p2 float64, p3 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkSpentIslandHeist(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) NetworkSpentJobSkip(amount float64, matchId string, p2 bool, p3 bool) {}

func (_client) NetworkSpentJukebox(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x5bcde0f640c773d2(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkSpentMakeItRain(amount float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentMoveYacht(amount float64, p1 bool, p2 bool) {}
func (_client) N_0xe7df4e0545dfb56e(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkSpentNightclubBarDrink(amount float64, p1 float64, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkSpentNightclubEntryFee(player float64, amount float64, p1 float64, p2 bool, p3 bool) {}

func (_client) NetworkSpentNoCops(p0 float64, p1 bool, p2 bool) {}
func (_client) N_0xd5bb406f4e04019f(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentOrderBodyguardVehicle(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0xe8b0b270b6e7c76e(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentOrderWarehouseVehicle(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x05f04155a226fbbf(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentPaServiceDancer(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0xb49eca122467d05f(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentPaServiceHeliPickup(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x0fe8e1fcd2b86b33(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentPayBoss(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0xdbc966a01c02bca7(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkSpentPayGoon(p0 float64, p1 float64, amount float64) {}
func (_client) N_0x08a1b82b91900682(p0 float64, p1 float64, amount float64) {}

/**
 * According to how I understood this in the freemode script alone,
 * The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
 * The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
 * The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
 * The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
 * The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
 * bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.
 */
func (_client) NetworkSpentPayVehicleInsurancePremium(amount float64, vehicleModel interface{}, notBankrupt bool, hasTheMoney bool) float64 {
	return 0.0
}

func (_client) NetworkSpentPlayerHealthcare(p0 float64, p1 float64, p2 bool, p3 bool) {}
func (_client) N_0x7c99101f7fce2ee5(p0 float64, p1 float64, p2 bool, p3 bool) {}

func (_client) NetworkSpentProstitutes(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkSpentPurchaseHangar(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentPurchaseWarehouse(amount float64, data float64, p2 bool, p3 bool) {}
func (_client) N_0x33981d6804e62f49(amount float64, data float64, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkSpentRdrhatchetBonus(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) NetworkSpentRehireDj(amount float64, p1 float64, p2 bool, p3 bool) {}

func (_client) NetworkSpentRenameOrganization(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0xfc4ee00a7b3bfb76(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkSpentRequestHeist(p0 float64, p1 bool, p2 bool) {}
func (_client) N_0x9d26502bb97bfe62(p0 float64, p1 bool, p2 bool) {}
func (_client) NetworkSpentRequestHeist(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentRequestJob(p0 float64, p1 bool, p2 bool) {}
func (_client) N_0x8204da7934df3155(p0 float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentRobbedByMugger(amount float64, p1 bool, p2 bool) {}
func (_client) N_0x995a65f15f581359(amount float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1604
 * NativeDB Removed Parameter 4: BOOL p3
 */
func (_client) NetworkSpentSpinTheWheelPayment(amount float64, p1 float64, p2 bool, p3 bool) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkSpentSubmarine(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) NetworkSpentTaxi(amount float64, p1 bool, p2 bool) {}

func (_client) NetworkSpentTelescope(p0 float64, p1 bool, p2 bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) NetworkSpentUpgradeArena(amount float64, p1 bool, p2 bool, p3 string) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkSpentUpgradeAutoshop(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xdd829aa198fdc46c(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentUpgradeBase(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentUpgradeBunker(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x0c82d21a77c22d49(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) NetworkSpentUpgradeCasino(amount float64, p1 bool, p2 bool, data float64) float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v1180
 */
func (_client) NetworkSpentUpgradeHangar(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) NetworkSpentUpgradeSub(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2189
 */
func (_client) N_0x89049a84065ce68e(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) NetworkSpentUpgradeTiltrotor(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentUpgradeTruck(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x365e877c61d6988b(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) NetworkSpentVehicleExportMods(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}
func (_client) N_0xa75ccf58a60a5fd1(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

func (_client) NetworkSpentVipUtilityCharges(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0x5182a339a3474510(p0 float64, p1 float64, p2 float64) {}

func (_client) NetworkSpentWager(p0 float64, p1 float64, amount float64) {}
func (_client) N_0xd99db210089617fe(p0 float64, p1 float64, amount float64) {}

/**
 * ```
 * One of the first things it does is get the players ped.
 * Then it calls a function that is used in some tasks and ped based functions.
 * ```
 * p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS`, in the decompiled scripts.
 */
func (_client) NetworkStartRespawnSearchForPlayer(player float64, x float64, y float64, z float64, radius float64, p5 float64, p6 float64, p7 float64, flags float64) bool;
/**
 * ```
 * One of the first things it does is get the players ped.
 * Then it calls a function that is used in some tasks and ped based functions.
 * ```
 * p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS`, in the decompiled scripts.
 */
func (_client) N_0x5a6ffa2433e2f14c(player float64, x float64, y float64, z float64, radius float64, p5 float64, p6 float64, p7 float64, flags float64) bool;

/**
 * p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS` in the decompiled scripts.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) NetworkStartRespawnSearchInAngledAreaForPlayer(player float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, p8 float64, p9 float64, p10 float64, flags float64) bool;
/**
 * p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS` in the decompiled scripts.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) N_0x4ba92a18502bca61(player float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, p8 float64, p9 float64, p10 float64, flags float64) bool;

func (_client) NetworkStartSoloTutorialSession() {}
func (_client) N_0x17e0198b3882c2cb() {}

func (_client) NetworkStartSynchronisedScene(netScene float64) {}

/**
 * Always returns -1. Seems to be XB1 specific.
 */
func (_client) NetworkStartUserContentPermissionsCheck(netHandle float64) float64 {
	return 0.0
}
/**
 * Always returns -1. Seems to be XB1 specific.
 */
func (_client) N_0xdeb2b99a1af1a2a6(netHandle float64) float64 {
	return 0.0
}

func (_client) NetworkStopLoadScene() {}

func (_client) NetworkStopSynchronisedScene(netScene float64) {}

func (_client) NetworkSuppressInvite(toggle bool) {}

func (_client) NetworkTransitionTrack(hash interface{}, p1 float64, p2 float64, state float64, p4 float64) {}
func (_client) N_0xc3bfed92026a2aad(hash interface{}, p1 float64, p2 float64, state float64, p4 float64) {}

/**
 * Returns defaultValue if the tunable doesn't exist.
 */
func (_client) NetworkTryAccessTunableBoolHash(tunableContext interface{}, tunableName interface{}, defaultValue bool) bool;
/**
 * Returns defaultValue if the tunable doesn't exist.
 */
func (_client) N_0xc7420099936ce286(tunableContext interface{}, tunableName interface{}, defaultValue bool) bool;
/**
 * Returns defaultValue if the tunable doesn't exist.
 */
func (_client) NetworkAccessTunableBoolHashFailVal(tunableContext interface{}, tunableName interface{}, defaultValue bool) bool;

/**
 * NativeDB Introduced: v2372
 */
func (_client) NetworkUgcNav(p0 float64, p1 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xc1447451ddb512f0(p0 float64, p1 float64) {}

func (_client) NetworkUnregisterNetworkedEntity(entity float64) {}
func (_client) N_0x7368e683bb9038d6(entity float64) {}

func (_client) NetworkUpdateLoadScene() bool;

func (_client) NetworkUpdatePlayerScars() {}
func (_client) N_0xb7c7f6ad6424304b() {}

/**
 * Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
 */
func (_client) NetworkUseHighPrecisionBlending(netID float64, toggle bool) {}
/**
 * Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
 */
func (_client) N_0x2b1813aba29016c5(netID float64, toggle bool) {}
/**
 * Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
 */
func (_client) NetworkSetNetworkIdDynamic(netID float64, toggle bool) {}

/**
 * Implemented only for Trains.
 * ```
 * ```
 * NativeDB Introduced: v2372
 */
func (_client) NetworkUseHighPrecisionVehicleBlending(vehicle float64, toggle bool) {}
/**
 * Implemented only for Trains.
 * ```
 * ```
 * NativeDB Introduced: v2372
 */
func (_client) N_0xec0c1d4922af9754(vehicle float64, toggle bool) {}

func (_client) NetworkUseLogarithmicBlendingThisFrame(entity float64) {}
func (_client) N_0xcd71a4ecab22709e(entity float64) {}

/**
 * `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
 * `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
 * Returns True if success, used only 7 times in decompiled scripts of 1868
 * @param posX World `x` coordinate.
 * @param posY World `y` coordinate.
 * @param posZ World `z` coordinate.
 * @param offsetX Offset `x` coordinate.
 * @param offsetY Offset `y` coordinate.
 * @param offsetZ Offset `z` coordinate.
 * @param radius Action radius, value is usually between `3f` and `7000f` in original 1868 scripts.
 * @param p7 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
 * @return True if success, used only 7 times in decompiled scripts of 1868 (https://github.com/root-cause/v-decompiled-scripts).
 */
func (_client) NewLoadSceneStart(posX float64, posY float64, posZ float64, offsetX float64, offsetY float64, offsetZ float64, radius float64, p7 float64) bool;

/**
 * if (!sub_8f12("START LOAD SCENE SAFE")) {
 * if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
 * STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
 * sub_8e9e("START LOAD SCENE SAFE", 1);
 * }
 * }
 * (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
 */
func (_client) NewLoadSceneStartSphere(x float64, y float64, z float64, radius float64, p4 float64) bool;
/**
 * if (!sub_8f12("START LOAD SCENE SAFE")) {
 * if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
 * STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
 * sub_8e9e("START LOAD SCENE SAFE", 1);
 * }
 * }
 * (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
 */
func (_client) N_0xaccfb4acf53551b0(x float64, y float64, z float64, radius float64, p4 float64) bool;

func (_client) NewLoadSceneStop() {}

/**
 * p0 was always 2 in R* scripts.
 * Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
 */
func (_client) NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(p0 float64) {}
/**
 * p0 was always 2 in R* scripts.
 * Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
 */
func (_client) N_0x3ed1438c1f5c6612(p0 float64) {}

/**
 * Lets objects spawn online simply do it like this:
 * int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
 */
func (_client) ObjToNet(object float64) float64 {
	return 0.0
}

/**
 * This loads the GTA:O dlc map parts (high end garages, apartments).
 * Works in singleplayer.
 * In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
 */
func (_client) OnEnterMp() {}
/**
 * This loads the GTA:O dlc map parts (high end garages, apartments).
 * Works in singleplayer.
 * In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
 */
func (_client) LoadMpDlcMaps() {}

/**
 * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
 * The original (and wrong) definition is below:
 * This unload the GTA:O DLC map parts (like high end garages/apartments).
 * Works in singleplayer.
 */
func (_client) OnEnterSp() {}
/**
 * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
 * The original (and wrong) definition is below:
 * This unload the GTA:O DLC map parts (like high end garages/apartments).
 * Works in singleplayer.
 */
func (_client) N_0xd7c10c4a637992c9() {}
/**
 * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
 * The original (and wrong) definition is below:
 * This unload the GTA:O DLC map parts (like high end garages/apartments).
 * Works in singleplayer.
 */
func (_client) LoadSpDlcMaps() {}

func (_client) OpenBombBayDoors(vehicle float64) {}
func (_client) OpenVehicleBombBay(vehicle float64) {}

/**
 * Has a 3rd param (int) since patch [???].
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 */
func (_client) OpenCommerceStore(p0 string, p1 string) {}
/**
 * Has a 3rd param (int) since patch [???].
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 */
func (_client) N_0x58c21165f6545892(p0 string, p1 string) {}

func (_client) OpenOnlinePoliciesMenu() {}
func (_client) ShowSocialClubLegalScreen() {}

/**
 * patrolRoutes found in the b617d scripts:
 * "miss_Ass0",
 * "miss_Ass1",
 * "miss_Ass2",
 * "miss_Ass3",
 * "miss_Ass4",
 * "miss_Ass5",
 * "miss_Ass6",
 * "MISS_PATROL_6",
 * "MISS_PATROL_7",
 * "MISS_PATROL_8",
 * "MISS_PATROL_9",
 * "miss_Tower_01",
 * "miss_Tower_02",
 * "miss_Tower_03",
 * "miss_Tower_04",
 * "miss_Tower_05",
 * "miss_Tower_06",
 * "miss_Tower_07",
 * "miss_Tower_08",
 * "miss_Tower_10"
 */
func (_client) OpenPatrolRoute(patrolRoute string) {}

/**
 * Shows a menu for reporting UGC content.
 */
func (_client) OpenReportugcMenu() {}
/**
 * Shows a menu for reporting UGC content.
 */
func (_client) N_0x523a590c1a3cc0d3() {}
/**
 * Shows a menu for reporting UGC content.
 */
func (_client) DisplayJobReport() {}

func (_client) OpenSequenceTask(taskSequenceId float64) {}

/**
 * Uses the `SOCIAL_CLUB2` scaleform.
 */
func (_client) OpenSocialClubMenu() {}
/**
 * Uses the `SOCIAL_CLUB2` scaleform.
 */
func (_client) N_0x75d3691713c3b05a() {}

func (_client) OrderedBossVehicle(p0 float64, p1 float64, vehicleHash interface{}) {}
func (_client) N_0xcea553e35c2246e1(p0 float64, p1 float64, vehicleHash interface{}) {}

/**
 * Max value for p1 is 15.
 */
func (_client) OverrideCamSplineMotionBlur(cam float64, p1 float64, p2 float64, p3 float64) {}

func (_client) OverrideCamSplineVelocity(cam float64, p1 float64, p2 float64, p3 float64) {}

func (_client) OverrideInteriorSmokeEnd() {}
func (_client) N_0xefb55e7c25d3b3be() {}

func (_client) OverrideInteriorSmokeLevel(level float64) {}
func (_client) N_0x1600fd8cf72ebc12(level float64) {}

func (_client) OverrideInteriorSmokeName(name string) {}
func (_client) N_0x2a2a52824db96700(name string) {}

/**
 * This allows you to override "extended distance scaling" setting. Needs to be called each frame.
 * Max scaling seems to be 200.0, normal is 1.0
 * See https://gfycat.com/DetailedHauntingIncatern
 */
func (_client) OverrideLodscaleThisFrame(scaling float64) {}
/**
 * This allows you to override "extended distance scaling" setting. Needs to be called each frame.
 * Max scaling seems to be 200.0, normal is 1.0
 * See https://gfycat.com/DetailedHauntingIncatern
 */
func (_client) N_0xa76359fc80b2438e(scaling float64) {}

/**
 * Sets audio flag "OverrideMicrophoneSettings"
 */
func (_client) OverrideMicrophoneSettings(hash interface{}, toggle bool) {}
/**
 * Sets audio flag "OverrideMicrophoneSettings"
 */
func (_client) N_0x75773e11ba459e90(hash interface{}, toggle bool) {}

func (_client) OverrideMultiplayerChatColour(p0 float64, hudColor float64) {}
func (_client) N_0xf47e567b3630dd12(p0 float64, hudColor float64) {}

func (_client) OverrideMultiplayerChatPrefix(gxtEntryHash interface{}) {}
func (_client) N_0x6a1738b4323fe2d9(gxtEntryHash interface{}) {}

/**
 * Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
 */
func (_client) OverridePedBadgeTexture(ped float64, txd string, txn string) bool;
/**
 * Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
 */
func (_client) N_0x95eb5e34f821babe(ped float64, txd string, txn string) bool;

/**
 * Sets whether peds can stand on top of *all* vehicles without falling off.
 * Note this flag is not replicated automatically, you will have to manually do so.
 * @param flag true to override, false to use default game behavior.
 */
func (_client) OverridePedsCanStandOnTopFlag(flag bool) {}

func (_client) OverridePlayerGroundMaterial(hash interface{}, toggle bool) {}
func (_client) N_0xd2cc78cd3d0b50f9(hash interface{}, toggle bool) {}

/**
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
 * Modified example from "am_imp_exp.c4", line 6406:
 *  -- [[ popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
 * etc.
 * ]] 
 * ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);
 * STREAMING::REQUEST_MODEL(vehicleHash);
 */
func (_client) OverridePopscheduleVehicleModel(scheduleId float64, vehicleHash interface{}) {}

func (_client) OverrideSaveHouse(p0 bool, p1 float64, p2 float64, p3 float64, p4 float64, p5 bool, p6 float64, p7 float64) bool;

/**
 * This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
 */
func (_client) OverrideTrevorRage(voiceEffect string) {}

func (_client) OverrideUnderwaterStream(p1 bool) float64 {
	return 0.0
}

/**
 * Overrides the vehicle's horn hash.
 * When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#\_0xACB5DCCA1EC76840) will **not** return the 'overwritten' hash. It will still always return the default horn hash (same as [`GET_VEHICLE_DEFAULT_HORN`](#\_0x02165D55000219AC)).
 * List of possible hashes (found in decompiled scripts):
 * |        signed |     unsigned |      hex     |
 * |--------------:|-------------:|:------------:|
 * |  `1604822495` | `1604822495` | `0x5FA7A5DF` |
 * | `-1262465009` | `3032502287` | `0xB4C0500F` |
 * |  `-889553789` | `3405413507` | `0xCAFA7C83` |
 * | `-1557943086` | `2737024210` | `0xA323ACD2` |
 * | `-1318696617` | `2976270679` | `0xB1664957` |
 * |    `-7740003` | `4287227293` | `0xFF89E59D` |
 * | `-1815146967` | `2479820329` | `0x93CF0E29` |
 * |  `-339919356` | `3955047940` | `0xEBBD3E04` |
 * @param vehicle The vehicle you want to change the horn on.
 * @param override Must be set to true. If set to false, the default horn hash will be restored.
 * @param hornHash A horn hash.
 */
func (_client) OverrideVehHorn(vehicle float64, override bool, hornHash float64) {}

/**
 * Overrides whether or not peds can stand on top of the specified vehicle.
 * Note this flag is not replicated automatically, you will have to manually do so.
 * @param vehicle The vehicle.
 * @param can Can they?
 */
func (_client) OverrideVehiclePedsCanStandOnTopFlag(vehicle float64, can bool) {}

/**
 * Return the local Participant ID
 */
func (_client) ParticipantId() float64 {
	return 0.0
}

/**
 * Return the local Participant ID.
 * This native is exactly the same as 'PARTICIPANT_ID' native.
 */
func (_client) ParticipantIdToInt() float64 {
	return 0.0
}

/**
 * REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
 * *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
 * PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
 */
func (_client) PatchDecalDiffuseMap(decalType float64, textureDict string, textureName string) {}
/**
 * REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
 * *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
 * PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
 */
func (_client) N_0x8a35c742130c6080(decalType float64, textureDict string, textureName string) {}
/**
 * REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
 * *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
 * PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
 */
func (_client) AddDecalToMarker(decalType float64, textureDict string, textureName string) {}
/**
 * REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
 * *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
 * PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
 */
func (_client) OverrideDecalTexture(decalType float64, textureDict string, textureName string) {}

func (_client) PauseClock(toggle bool) {}

func (_client) PauseDeathArrestRestart(toggle bool) {}
func (_client) DisableAutomaticRespawn(toggle bool) {}

/**
 * Activates the specified frontend menu context.
 * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
 * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
 * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
 * This basically allows you to hide certain menu sections, or things like instructional buttons.
 * See the old description below for more info.
 * ***
 * > Seems to add/set the current menu context (to show/hide buttons?)
 * > Pausemenu.xml:
 * > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
 * > Code:
 * >
 * > ```
 * > if (...) {
 * >     sub_bbd34(a_0, 0, "FM_BET_HELP");
 * >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
 * >     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
 * > } else {
 * >     sub_bbd34(a_0, 0, "");
 * >     UI::OBJECT_DECAL_TOGGLE(${bet_available});
 * >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
 * > }
 * > ```
 * >
 * > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
 * > // Old
 * > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
 * @param hash Context name hash.
 */
func (_client) PauseMenuActivateContext(hash interface{}) {}
/**
 * Activates the specified frontend menu context.
 * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
 * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
 * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
 * This basically allows you to hide certain menu sections, or things like instructional buttons.
 * See the old description below for more info.
 * ***
 * > Seems to add/set the current menu context (to show/hide buttons?)
 * > Pausemenu.xml:
 * > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
 * > Code:
 * >
 * > ```
 * > if (...) {
 * >     sub_bbd34(a_0, 0, "FM_BET_HELP");
 * >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
 * >     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
 * > } else {
 * >     sub_bbd34(a_0, 0, "");
 * >     UI::OBJECT_DECAL_TOGGLE(${bet_available});
 * >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
 * > }
 * > ```
 * >
 * > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
 * > // Old
 * > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
 * @param hash Context name hash.
 */
func (_client) N_0xdd564bdd0472c936(hash interface{}) {}
/**
 * Activates the specified frontend menu context.
 * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
 * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
 * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
 * This basically allows you to hide certain menu sections, or things like instructional buttons.
 * See the old description below for more info.
 * ***
 * > Seems to add/set the current menu context (to show/hide buttons?)
 * > Pausemenu.xml:
 * > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
 * > Code:
 * >
 * > ```
 * > if (...) {
 * >     sub_bbd34(a_0, 0, "FM_BET_HELP");
 * >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
 * >     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
 * > } else {
 * >     sub_bbd34(a_0, 0, "");
 * >     UI::OBJECT_DECAL_TOGGLE(${bet_available});
 * >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
 * > }
 * > ```
 * >
 * > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
 * > // Old
 * > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
 * @param hash Context name hash.
 */
func (_client) AddFrontendMenuContext(hash interface{}) {}

func (_client) PauseMenuDeactivateContext(contextHash interface{}) {}
func (_client) ObjectDecalToggle(contextHash interface{}) {}

func (_client) PauseMenuIsContextActive(contextHash interface{}) bool;
func (_client) N_0x84698ab38d0c6636(contextHash interface{}) bool;

func (_client) PauseMenuIsContextMenuActive() float64 {
	return 0.0
}
func (_client) N_0x2a25adc48f87841f() float64 {
	return 0.0
}

func (_client) PauseMenuSetBusySpinner(p0 bool, p1 float64, p2 float64) {}
func (_client) N_0xc78e239ac5b2ddb9(p0 bool, p1 float64, p2 float64) {}

func (_client) PausePlaybackRecordedVehicle(vehicle float64) {}

func (_client) PauseScriptedConversation(p0 bool) {}

func (_client) PedHasUseScenarioTask(ped float64) bool;

/**
 * gets the network id of a ped
 */
func (_client) PedToNet(ped float64) float64 {
	return 0.0
}

func (_client) PinInteriorInMemory(interior float64) {}
func (_client) N_0x2ca429c029ccf247(interior float64) {}
func (_client) LoadInterior(interior float64) {}

func (_client) PinRopeVertex(ropeId float64, vertex float64, x float64, y float64, z float64) {}

func (_client) PlaceObjectOnGroundProperly(object float64) bool;

func (_client) PlaceObjectOnGroundProperly_2(object float64) bool;
func (_client) N_0xd76eeef746057fd6(object float64) bool;

func (_client) PlayAmbientSpeechFromPositionNative(speechName string, voiceName string, x float64, y float64, z float64, speechParam string) {}
func (_client) N_0xed640017ed337e45(speechName string, voiceName string, x float64, y float64, z float64, speechParam string) {}
func (_client) PlayAmbientSpeechAtCoords(speechName string, voiceName string, x float64, y float64, z float64, speechParam string) {}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) PlayAnimOnRunningScenario(ped float64, animDict string, animName string) {}

/**
 * Plays sounds from a ped with chop model. For example it used to play bark or sniff sounds. p1 is always 3 or 4294967295 in decompiled scripts. By a quick disassembling I can assume that this arg is unused.
 * This native is works only when you call it on the ped with right model (ac_chop only ?)
 * Speech Name can be: CHOP_SNIFF_SEQ CHOP_WHINE CHOP_LICKS_MOUTH CHOP_PANT bark GROWL SNARL BARK_SEQ
 */
func (_client) PlayAnimalVocalization(pedHandle float64, p1 float64, speechName string) {}
/**
 * Plays sounds from a ped with chop model. For example it used to play bark or sniff sounds. p1 is always 3 or 4294967295 in decompiled scripts. By a quick disassembling I can assume that this arg is unused.
 * This native is works only when you call it on the ped with right model (ac_chop only ?)
 * Speech Name can be: CHOP_SNIFF_SEQ CHOP_WHINE CHOP_LICKS_MOUTH CHOP_PANT bark GROWL SNARL BARK_SEQ
 */
func (_client) N_0xee066c7006c49c0a(pedHandle float64, p1 float64, speechName string) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) PlayBinkMovie(binkMovie float64) {}

/**
 * ```
 * Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
 * p9 is unknown at this time.
 * p10 throughout all the X360 Scripts is always 2.
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) PlayCamAnim(cam float64, animName string, animDictionary string, x float64, y float64, z float64, xRot float64, yRot float64, zRot float64, p9 bool, p10 float64) bool;

/**
 * Only call found in the b617d scripts:
 * AUDIO::PLAY_DEFERRED_SOUND_FRONTEND("BACK", "HUD_FREEMODE_SOUNDSET");
 */
func (_client) PlayDeferredSoundFrontend(soundName string, soundsetName string) {}
/**
 * Only call found in the b617d scripts:
 * AUDIO::PLAY_DEFERRED_SOUND_FRONTEND("BACK", "HUD_FREEMODE_SOUNDSET");
 */
func (_client) N_0xcada5a0d0702381e(soundName string, soundsetName string) {}

func (_client) PlayEndCreditsMusic(play bool) {}

/**
 * ```
 * delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
 * The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) PlayEntityAnim(entity float64, animName string, animDict string, p3 float64, loop bool, stayInAnim bool, p6 bool, delta float64, bitset float64) bool;

func (_client) PlayEntityScriptedAnim(p0 float64, p4 float64, p5 float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) PlayFacialAnim(ped float64, animName string, animDict string) {}

/**
 * Called 38 times in the scripts. There are 5 different audioNames used.
 * One unknown removed below.
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
 */
func (_client) PlayMissionCompleteAudio(audioName string) {}

/**
 * Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);
 * Last 2 parameters always seem to be 0.
 * EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);
 * Known Pain IDs
 * ________________________
 * 1 - Doesn't seem to do anything. Does NOT crash the game like previously said. (Latest patch)
 * 6 - Scream (Short)
 * 7 - Scared Scream (Kinda Long)
 * 8 - On Fire
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) PlayPain(ped float64, painID float64, p1 float64) {}

/**
 * See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for parameter specifications.
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 */
func (_client) PlayPedAmbientSpeechAndCloneNative(ped float64, speechName string, speechParam string) {}
/**
 * See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for parameter specifications.
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 */
func (_client) PlayAmbientSpeech2(ped float64, speechName string, speechParam string) {}

/**
 * Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#\_0xC6941B4A3A8FBBB9).
 * ```
 * speechParam: Can be one of the following:
 * SPEECH_PARAMS_STANDARD
 * SPEECH_PARAMS_ALLOW_REPEAT
 * SPEECH_PARAMS_BEAT
 * SPEECH_PARAMS_FORCE
 * SPEECH_PARAMS_FORCE_FRONTEND
 * SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
 * SPEECH_PARAMS_FORCE_NORMAL
 * SPEECH_PARAMS_FORCE_NORMAL_CLEAR
 * SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
 * SPEECH_PARAMS_FORCE_SHOUTED
 * SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY
 * SPEECH_PARAMS_MEGAPHONE
 * SPEECH_PARAMS_HELI
 * SPEECH_PARAMS_FORCE_MEGAPHONE
 * SPEECH_PARAMS_FORCE_HELI
 * SPEECH_PARAMS_INTERRUPT
 * SPEECH_PARAMS_INTERRUPT_SHOUTED
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE
 * SPEECH_PARAMS_INTERRUPT_FRONTEND
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
 * SPEECH_PARAMS_ADD_BLIP
 * SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
 * SPEECH_PARAMS_ADD_BLIP_FORCE
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
 * SPEECH_PARAMS_SHOUTED
 * SPEECH_PARAMS_SHOUTED_CLEAR
 * SPEECH_PARAMS_SHOUTED_CRITICAL
 * Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param ped The ped to play the ambient speech.
 * @param speechName Name of the speech to play, eg. "GENERIC_HI".
 */
func (_client) PlayPedAmbientSpeechNative(ped float64, speechName string, speechParam string) {}
/**
 * Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#\_0xC6941B4A3A8FBBB9).
 * ```
 * speechParam: Can be one of the following:
 * SPEECH_PARAMS_STANDARD
 * SPEECH_PARAMS_ALLOW_REPEAT
 * SPEECH_PARAMS_BEAT
 * SPEECH_PARAMS_FORCE
 * SPEECH_PARAMS_FORCE_FRONTEND
 * SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
 * SPEECH_PARAMS_FORCE_NORMAL
 * SPEECH_PARAMS_FORCE_NORMAL_CLEAR
 * SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
 * SPEECH_PARAMS_FORCE_SHOUTED
 * SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY
 * SPEECH_PARAMS_MEGAPHONE
 * SPEECH_PARAMS_HELI
 * SPEECH_PARAMS_FORCE_MEGAPHONE
 * SPEECH_PARAMS_FORCE_HELI
 * SPEECH_PARAMS_INTERRUPT
 * SPEECH_PARAMS_INTERRUPT_SHOUTED
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE
 * SPEECH_PARAMS_INTERRUPT_FRONTEND
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
 * SPEECH_PARAMS_ADD_BLIP
 * SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
 * SPEECH_PARAMS_ADD_BLIP_FORCE
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
 * SPEECH_PARAMS_SHOUTED
 * SPEECH_PARAMS_SHOUTED_CLEAR
 * SPEECH_PARAMS_SHOUTED_CRITICAL
 * Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param ped The ped to play the ambient speech.
 * @param speechName Name of the speech to play, eg. "GENERIC_HI".
 */
func (_client) PlayAmbientSpeech1(ped float64, speechName string, speechParam string) {}

/**
 * This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
 * EX (C#):
 * GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
 * The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
 */
func (_client) PlayPedAmbientSpeechWithVoiceNative(ped float64, speechName string, voiceName string, speechParam string, p4 bool) {}
/**
 * This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
 * EX (C#):
 * GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
 * The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
 */
func (_client) PlayAmbientSpeechWithVoice(ped float64, speechName string, voiceName string, speechParam string, p4 bool) {}

/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny
 * AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
 * AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
 */
func (_client) PlayPedRingtone(ringtoneName string, ped float64, p2 bool) {}

/**
 * Plays the given police radio message.
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
 */
func (_client) PlayPoliceReport(name string, p1 float64) float64 {
	return 0.0
}

/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ
 */
func (_client) PlaySound(soundId float64, audioName string, audioRef string, p3 bool, p4 float64, p5 bool) {}

/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW
 * gtaforums.com/topic/795622-audio-for-mods
 */
func (_client) PlaySoundFromCoord(soundId float64, audioName string, x float64, y float64, z float64, audioRef string, isNetwork bool, _range float64, p8 bool) {}

/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0
 * No changes made in b678d.
 * gtaforums.com/topic/795622-audio-for-mods
 */
func (_client) PlaySoundFromEntity(soundId float64, audioName string, entity float64, audioRef string, isNetwork bool, p5 float64) {}

/**
 * List: https://pastebin.com/DCeRiaLJ
 * All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
 */
func (_client) PlaySoundFrontend(soundId float64, audioName string, audioRef string, p3 bool) {}

/**
 * Used with AUDIO::LOAD_STREAM
 * Example from finale_heist2b.c4:
 * TASK::TASK_SYNCHRONIZED_SCENE(l_4C8[2 -- [[14]] ], l_4C8[2 -- [[14]] ]._f7, l_30A, "push_out_vault_l", 4.0, -1.5, 5, 713, 4.0, 0);
 * PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2 -- [[14]] ]._f7, 0.0);
 * PED::_2208438012482A1A(l_4C8[2 -- [[14]] ], 0, 0);
 * PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2 -- [[14]] ], 38, 1);
 * PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2 -- [[14]] ], 1);
 * if (AUDIO::LOAD_STREAM("Gold_Cart_Push_Anim_01", "BIG_SCORE_3B_SOUNDS")) {
 * AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0 -- [[1]] ]);
 * }
 */
func (_client) PlayStreamFromObject(object float64) {}

func (_client) PlayStreamFromPed(ped float64) {}
func (_client) N_0x89049dd63c08b5d1(ped float64) {}

func (_client) PlayStreamFromPosition(x float64, y float64, z float64) {}
func (_client) SpecialFrontendEqual(x float64, y float64, z float64) {}

func (_client) PlayStreamFromVehicle(vehicle float64) {}

func (_client) PlayStreamFrontend() {}

func (_client) PlaySynchronizedAudioEvent(p0 float64) bool;

/**
 * ```
 * Examples:
 * CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");
 * CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7 -- [[1]] ], l_F4D[15 -- [[1]] ], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) PlaySynchronizedCamAnim(camera float64, scene float64, animName string, animDictionary string) bool;

/**
 * ```
 * p4 and p7 are usually 1000.0f.
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) PlaySynchronizedEntityAnim(entity float64, syncedScene float64, animation string, propName string, p4 float64, p5 float64, p6 float64, p7 float64) bool;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) PlaySynchronizedMapEntityAnim(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p8 float64, p9 float64, p10 float64, p11 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) PlayTennisDiveAnim(ped float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 bool) {}
func (_client) N_0x8fa9c42fc5d7c64b(ped float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 bool) {}

func (_client) PlayTennisSwingAnim(ped float64, animDict string, animName string, p3 float64, p4 float64, p5 bool) {}
func (_client) N_0xe266ed23311f24d4(ped float64, animDict string, animName string, p3 float64, p4 float64, p5 bool) {}

func (_client) PlayVehicleDoorCloseSound(vehicle float64, doorIndex float64) {}

func (_client) PlayVehicleDoorOpenSound(vehicle float64, doorIndex float64) {}

/**
 * Only 1 match. ob_sofa_michael.
 * PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
 */
func (_client) PlayerAttachVirtualBound(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64) {}

/**
 * 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
 */
func (_client) PlayerDetachVirtualBound() {}

/**
 * This returns YOUR 'identity' as a Player type.
 * Always returns 0 in story mode.
 */
func (_client) PlayerId() float64 {
	return 0.0
}

/**
 * Returns current player ped
 */
func (_client) PlayerPedId() float64 {
	return 0.0
}

func (_client) PlaystatsAcquiredHiddenPackage(p0 float64) {}
func (_client) N_0x79ab33f0fbfac40c(p0 float64) {}

func (_client) PlaystatsActivityDone(p0 float64, p1 float64) {}
func (_client) N_0xa071e0ed98f91286(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsArcadegame(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) PlaystatsArenaWarSpectator(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) PlaystatsArenaWarsEnded(data float64) {}

func (_client) PlaystatsAwardBadsport(id float64) {}
func (_client) N_0x47b32f5611e6e483(id float64) {}

func (_client) PlaystatsAwardXp(amount float64, _type interface{}, category interface{}) {}

func (_client) PlaystatsBackgroundScriptAction(action string, value float64) {}
func (_client) N_0x5009dfd741329729(action string, value float64) {}

func (_client) PlaystatsBanAlert(p0 float64) {}
func (_client) N_0x516fc96eb88eefe5(p0 float64) {}

func (_client) PlaystatsBuyContraband(data float64) {}
func (_client) N_0xd6781e42755531f7(data float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) PlaystatsCarclubChallenge(p0 float64, p1 float64, p2 float64, p3 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x1187cb58d7f3bed7(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) PlaystatsCarclubPoints(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xff14d6feec507bbe(p0 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) PlaystatsCarclubPrize(p0 float64, p1 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x69c922b677621428(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoBlackjack(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoBlackjackLight(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoChip(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoInsidetrack(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoInsidetrackLight(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoLuckyseven(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoMissionEnded(data float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoRoulette(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoRouletteLight(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoSlotmachine(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoSlotmachineLight(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoStoryMissionEnded(p0 float64, p1 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoThreecardpoker(p0 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCasinoThreecardpokerLight(p0 float64) {}

func (_client) PlaystatsChangeMcEmblem(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
func (_client) N_0x0a50d2604e05cb94(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) PlaystatsCheatApplied(cheat string) {}

func (_client) PlaystatsClothChange(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsCollectible(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

func (_client) PlaystatsCopyRankIntoNewSlot(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}
func (_client) N_0xb7257ba2550ea10a(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) PlaystatsCrateCreatedMissionDone(p0 float64, p1 float64, p2 float64) {}
func (_client) N_0xafc7e5e075a96f46(p0 float64, p1 float64, p2 float64) {}
func (_client) PlaystatsAmbientMissionCrateCreated(p0 float64, p1 float64, p2 float64) {}
func (_client) PlaystatsCrateCreated(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) PlaystatsCrateDropMissionDone(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}
/**
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) N_0x1cae5d2e3f9a07f0(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}
/**
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) PlaystatsCrateDrop(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) PlaystatsDarMissionEnd(data float64) {}

func (_client) PlaystatsDefendContraband(data float64) {}
func (_client) N_0x2605663bd4f23b5d(data float64) {}

func (_client) PlaystatsDirectorMode(p0 float64) {}
func (_client) N_0x46326e13da4e0546(p0 float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) PlaystatsDroneUsage(p0 float64, p1 float64, p2 float64) {}

func (_client) PlaystatsDupeDetection(data float64) {}
func (_client) N_0x848b66100ee33b05(data float64) {}

func (_client) PlaystatsEarnedMcPoints(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}
func (_client) N_0x501478855a6074ce(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) PlaystatsEnterSessionPack(data float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) PlaystatsExtraEvent(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xfa5b74bab8a7ef99(p0 float64) {}

func (_client) PlaystatsFriendActivity(p0 float64, p1 float64) {}

func (_client) PlaystatsGunrunMissionEnded(data float64) {}
func (_client) N_0x0eacdf8487d5155a(data float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) PlaystatsH2FmprepEnd(data float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) PlaystatsH2InstanceEnd(p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) PlaystatsHeistSaveCheat(hash interface{}, p1 float64) {}
func (_client) N_0xf4ff020a08bc8863(hash interface{}, p1 float64) {}

func (_client) PlaystatsHoldUpMissionDone(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0xcb00196b31c39eb1(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) PlaystatsHoldUp(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * longest time being ilde?
 */
func (_client) PlaystatsIdleKick(time float64) {}
/**
 * longest time being ilde?
 */
func (_client) N_0x5da3a8de8cb6226f(time float64) {}

func (_client) PlaystatsImportExportMissionDone(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x2b69f5074c894811(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) PlaystatsImpExp(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) PlaystatsLeaveJobChain(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}
func (_client) N_0xc5be134ec7ba96a0(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Removed Parameter 4: Any p3
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 */
func (_client) PlaystatsMatchStarted(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) PlaystatsMissionCheckpoint(p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) PlaystatsMissionOver(p1 float64, p2 float64, p3 bool, p4 bool, p5 bool) float64 {
	return 0.0
}

func (_client) PlaystatsMissionStarted(p1 float64, p2 float64, p3 bool) float64 {
	return 0.0
}

func (_client) PlaystatsNpcInvite(p0 float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) PlaystatsOddjobDone(p0 float64, p1 float64, p2 float64) {}

/**
 * NativeDB Introduced: v1734
 */
func (_client) PlaystatsPassiveMode(p0 bool, p1 float64, p2 float64, p3 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) PlaystatsPegasaircraft(modelHash interface{}) {}

func (_client) PlaystatsPiMenuHideSettings(data float64) {}
func (_client) N_0x203b381133817079(data float64) {}

func (_client) PlaystatsPropChange(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) PlaystatsQuickfixTool(element float64, item string) {}
func (_client) N_0x90d0622866e80445(element float64, item string) {}

func (_client) PlaystatsRaceCheckpoint(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * NativeDB Removed Parameter 8: Any p7
 * NativeDB Removed Parameter 9: Any p8
 * NativeDB Removed Parameter 10: Any p9
 */
func (_client) PlaystatsRaceToPointMissionDone(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}
/**
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * NativeDB Removed Parameter 8: Any p7
 * NativeDB Removed Parameter 9: Any p8
 * NativeDB Removed Parameter 10: Any p9
 */
func (_client) N_0xaddd1c754e2e2914(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}
/**
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * NativeDB Removed Parameter 8: Any p7
 * NativeDB Removed Parameter 9: Any p8
 * NativeDB Removed Parameter 10: Any p9
 */
func (_client) PlaystatsRaceToPoint(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

func (_client) PlaystatsRandomMissionDone(name string, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x71862b1d855f32e1(name string, p1 float64, p2 float64, p3 float64) {}

func (_client) PlaystatsRankUp(rank float64) {}

func (_client) PlaystatsRecoverContraband(data float64) {}
func (_client) N_0x04d90ba8207ada2d(data float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) PlaystatsRobberyFinale(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xbba55be9aaaabf44(p0 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) PlaystatsRobberyPrep(p0 float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x1a67dfbf1f5c3835(p0 float64) {}

func (_client) PlaystatsRosBet(amount float64, act float64, player float64, cm float64) {}
func (_client) N_0x121fb4dddc2d5291(amount float64, act float64, player float64, cm float64) {}

func (_client) PlaystatsSellContraband(data float64) {}
func (_client) N_0xc729991a9065376e(data float64) {}

func (_client) PlaystatsShopItem(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) PlaystatsSmugMissionEnded(data float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) PlaystatsSpectatorWheelSpin(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) PlaystatsSpentPiCustomLoadout(amount float64) {}
func (_client) N_0xbe509b0a3693de8b(amount float64) {}

/**
 * PLAYSTATS_START_INVITE_DESPAWNING?
 */
func (_client) PlaystatsStartOfflineMode() {}
/**
 * PLAYSTATS_START_INVITE_DESPAWNING?
 */
func (_client) N_0x098760c7461724cd() {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) PlaystatsStoneHatchetEnd(data float64) {}

/**
 * Allows CEventNetworkStuntPerformed to be triggered.
 */
func (_client) PlaystatsStuntPerformedEventAllowTrigger() {}
/**
 * Allows CEventNetworkStuntPerformed to be triggered.
 */
func (_client) N_0x928dbfb892638ef3() {}

/**
 * Disallows CEventNetworkStuntPerformed to be triggered.
 */
func (_client) PlaystatsStuntPerformedEventDisallowTrigger() {}
/**
 * Disallows CEventNetworkStuntPerformed to be triggered.
 */
func (_client) N_0x8a800daccc0da55d() {}

func (_client) PlaystatsWeaponModeChange(weaponHash interface{}, componentHashTo interface{}, componentHashFrom interface{}) {}
func (_client) N_0xe95c8a1875a02ca4(weaponHash interface{}, componentHashTo interface{}, componentHashFrom interface{}) {}

func (_client) PlaystatsWebsiteVisited(scaleformHash interface{}, p1 float64) {}
func (_client) N_0xddf24d535060f811(scaleformHash interface{}, p1 float64) {}

func (_client) PointCamAtCoord(cam float64, x float64, y float64, z float64) {}

/**
 * Points the camera at the specified entity.
 * Offset works like [GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS](#\_0x1899F328B0E12848).
 * @param cam Cam (Return value of CREATE_CAM or CREATE_CAM_WITH_PARAMS).
 * @param entity Entity for the camera to point at.
 * @param offsetX X offset for the camera (left/right).
 * @param offsetY Y offset for the camera (forward/backward).
 * @param offsetZ Z offset for the camera (up/down).
 * @param p5 Always seems to be 1 (true).
 */
func (_client) PointCamAtEntity(cam float64, entity float64, offsetX float64, offsetY float64, offsetZ float64, p5 bool) {}

/**
 * Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
 */
func (_client) PointCamAtPedBone(cam float64, ped float64, boneIndex float64, x float64, y float64, z float64, p6 bool) {}

/**
 * Detaches the vehicle's windscreen.
 */
func (_client) PopOutVehicleWindscreen(vehicle float64) {}
/**
 * Detaches the vehicle's windscreen.
 */
func (_client) DetachVehicleWindscreen(vehicle float64) {}

func (_client) PopTimecycleModifier() {}

/**
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
 */
func (_client) PopulateNow() {}

func (_client) Pow(base float64, exponent float64) float64 {
	return 0.0
}

/**
 * This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
 * For instance, GTA:O opening cutscene.
 * https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
 * https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker.
 * @param srl A SRL name.
 */
func (_client) PrefetchSrl(srl string) {}

func (_client) PreloadBusyspinner() {}
func (_client) N_0xc65ab383cd91df98() {}

/**
 * Found in the scripts:
 * MISC::_11B56FBBF7224868("CONTRAILS");
 */
func (_client) PreloadCloudHat(name string) {}
/**
 * Found in the scripts:
 * MISC::_11B56FBBF7224868("CONTRAILS");
 */
func (_client) N_0x11b56fbbf7224868(name string) {}

func (_client) PreloadScriptConversation(p0 bool, p1 bool, p2 bool, p3 bool) {}

func (_client) PreloadScriptPhoneConversation(p0 bool, p1 bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) PreloadVehicleAudio(model interface{}) {}
/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xca4cea6ae0000a7e(model interface{}) {}

func (_client) PreloadVehicleMod(p0 float64, modType float64, p2 float64) {}

/**
 * Example:
 * bool prepareAlarm = AUDIO::PREPARE_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
 */
func (_client) PrepareAlarm(alarmName string) bool;

/**
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
 */
func (_client) PrepareMusicEvent(eventName string) bool;

func (_client) PrepareSynchronizedAudioEvent(p0 string, p1 float64) float64 {
	return 0.0
}

func (_client) PrepareSynchronizedAudioEventForScene(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

/**
 * Only one match in the scripts:
 * GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
 */
func (_client) PresetInteriorAmbientCache(timecycleModifierName string) {}
/**
 * Only one match in the scripts:
 * GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
 */
func (_client) N_0xd7021272eb0a451e(timecycleModifierName string) {}
/**
 * Only one match in the scripts:
 * GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
 */
func (_client) PresetInteriorAmbientCache(timecycleModifierName string) {}

func (_client) PreventCollectionOfPortablePickup(object float64, p1 bool, p2 bool) {}
func (_client) N_0x92aefb5f6e294023(object float64, p1 bool, p2 bool) {}

func (_client) ProcessCashGift(p2 string): [string, number, number];
func (_client) N_0x20194d48eaec9a41(p2 string): [string, number, number];

/**
 * Called to update entity attachments.
 */
func (_client) ProcessEntityAttachments(entity float64) {}

/**
 * Scope entry for profiler.
 * @param scopeName Scope name.
 */
func (_client) ProfilerEnterScope(scopeName string) {}

/**
 * Scope exit for profiler.
 */
func (_client) ProfilerExitScope() {}

/**
 * Returns true if the profiler is active.
 * @return True or false.
 */
func (_client) ProfilerIsRecording() bool;

func (_client) PulseBlip(blip float64) {}

func (_client) PushTimecycleModifier() {}

func (_client) QueryMovieMeshSetState(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x9b6e70c5ceef4eeb(p0 float64) float64 {
	return 0.0
}

func (_client) QueueMissionRepeatLoad() bool;
func (_client) N_0x72de52178c291cb5() bool;

/**
 * Shows the screen which is visible before you redo a mission The game will make a restoration point where you will cameback when the mission is over.
 * @return Returns 1 if the message isn't currently on screen.
 */
func (_client) QueueMissionRepeatSave() bool;
/**
 * Shows the screen which is visible before you redo a mission The game will make a restoration point where you will cameback when the mission is over.
 * @return Returns 1 if the message isn't currently on screen.
 */
func (_client) N_0x44a0bdc559b35f6e() bool;

/**
 * Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
 */
func (_client) RaceGalleryAddBlip(x float64, y float64, z float64) float64 {
	return 0.0
}
/**
 * Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
 */
func (_client) N_0x551df99658db6ee8(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * If toggle is true, the map is shown in full screen
 * If toggle is false, the map is shown in normal mode
 */
func (_client) RaceGalleryFullscreen(toggle bool) {}
/**
 * If toggle is true, the map is shown in full screen
 * If toggle is false, the map is shown in normal mode
 */
func (_client) N_0x5354c5ba2ea868a4(toggle bool) {}
/**
 * If toggle is true, the map is shown in full screen
 * If toggle is false, the map is shown in normal mode
 */
func (_client) SetMapFullScreen(toggle bool) {}

/**
 * Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
 */
func (_client) RaceGalleryNextBlipSprite(spriteId float64) {}
/**
 * Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
 */
func (_client) N_0x1eae6dd17b7a5efa(spriteId float64) {}

func (_client) RaiseConvertibleRoof(vehicle float64, instantlyRaise bool) {}

func (_client) RaiseRetractableWheels(vehicle float64) {}
func (_client) RaiseLowerableWheels(vehicle float64) {}

func (_client) RecordBrokenGlass(x float64, y float64, z float64, radius float64) {}
func (_client) N_0xfbe20329593dec9d(x float64, y float64, z float64, radius float64) {}

func (_client) RefillAmmoInstantly(ped float64) bool;
func (_client) PedSkipNextReloading(ped float64) bool;

func (_client) RefreshInterior(interiorID float64) {}

func (_client) RefreshPlayerListStats(p0 float64) bool;
func (_client) UsingNetworkWeapontype(p0 float64) bool;
func (_client) N_0xe26ccff8094d8c74(p0 float64) bool;

func (_client) RefreshWaypoint() {}

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Registers a set of archetypes with the game engine. These should match `CBaseArchetypeDef` class information from the game.
 * @param factory A function returning a list of archetypes.
 */
func (_client) RegisterArchetypes(factory: Function) {}

func (_client) RegisterBoolToSave(name string) float64 {
	return 0.0
}

/**
 * Registered commands can be executed by entering them in the client console (this works for client side and server side registered commands). Or by entering them in the server console/through an RCON client (only works for server side registered commands). Or if you use a supported chat resource, like the default one provided in the cfx-server-data repository, then you can enter the command in chat by prefixing it with a `/`.
 * Commands registered using this function can also be executed by resources, using the [`ExecuteCommand` native](#\_0x561C060B).
 * The restricted bool is not used on the client side. Permissions can only be checked on the server side, so if you want to limit your command with an ace permission automatically, make it a server command (by registering it in a server script).
 * **Example result**:
 * ![](https://i.imgur.com/TaCnG09.png)
 * @param commandName The command you want to register.
 * @param handler A handler function that gets called whenever the command is executed.
 * @param restricted If this is a server command and you set this to true, then players will need the command.yourCommandName ace permission to execute this command.
 */
func (_client) RegisterCommand(commandName string, js.Func, restricted bool) {}

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Registers a set of entities with the game engine. These should match `CEntityDef` class information from the game.
 * At this time, this function **should not be used in a live environment**.
 * @param factory A function returning a list of entities.
 */
func (_client) RegisterEntities(factory: Function) {}

func (_client) RegisterEntityForCutscene(cutscenePed float64, cutsceneEntName string, p2 float64, modelHash interface{}, p4 float64) {}

func (_client) RegisterEnumToSave(name string) float64 {
	return 0.0
}

func (_client) RegisterFloatToSave(name string) float64 {
	return 0.0
}

/**
 * Registers a specified .gfx file as GFx font library.
 * The .gfx file has to be registered with the streamer already.
 * @param fileName The name of the .gfx file, without extension.
 */
func (_client) RegisterFontFile(fileName string) {}

/**
 * Registers a specified font name for use with text draw commands.
 * @param fontName The name of the font in the GFx font library.
 * @return An index to use with [SET_TEXT_FONT](#\_0x66E0276CC5F6B9DA) and similar natives.
 */
func (_client) RegisterFontId(fontName string) float64 {
	return 0.0
}

/**
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
 */
func (_client) RegisterHatedTargetsAroundPed(ped float64, radius float64) {}

func (_client) RegisterInt64ToSave(name string) float64 {
	return 0.0
}
func (_client) N_0xa735353c77334ea0(name string) float64 {
	return 0.0
}

func (_client) RegisterIntToSave(name string) float64 {
	return 0.0
}

/**
 * Registers a key mapping for the current resource.
 * See the related [cookbook post](https://cookbook.fivem.net/2020/01/06/using-the-new-console-key-bindings/) for more information.
 * @param commandString The command to execute, and the identifier of the binding.
 * @param description A description for in the settings menu.
 * @param defaultMapper The [mapper ID](https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/) to use for the default binding, e.g. `keyboard`.
 * @param defaultParameter The [IO parameter ID](https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/) to use for the default binding, e.g. `f3`.
 */
func (_client) RegisterKeyMapping(commandString string, description string, defaultMapper string, defaultParameter string) {}

func (_client) RegisterNamedRendertarget(name string, p1 bool) bool;

/**
 * Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
 */
func (_client) RegisterNoirScreenEffectThisFrame() {}
/**
 * Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
 */
func (_client) N_0xa44ff770dfbc5dae() {}

func (_client) RegisterNuiCallbackType(callbackType string) {}

/**
 * Registers a script for any object with a specific model hash.
 * BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);
 */
func (_client) RegisterObjectScriptBrain(scriptName string, modelHash interface{}, p2 float64, activationRange float64, p4 float64, p5 float64) {}

/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 */
func (_client) RegisterPedheadshot(ped float64) float64 {
	return 0.0
}

/**
 * Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
 * **Result of the example code:**
 * <https://i.imgur.com/iHz8ztn.png>
 * @param ped A ped handle.
 * @return The Pedheadshot handle.
 */
func (_client) RegisterPedheadshotTransparent(ped float64) float64 {
	return 0.0
}
/**
 * Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
 * **Result of the example code:**
 * <https://i.imgur.com/iHz8ztn.png>
 * @param ped A ped handle.
 * @return The Pedheadshot handle.
 */
func (_client) N_0x953563ce563143af(ped float64) float64 {
	return 0.0
}

func (_client) RegisterPedheadshot_3(ped float64) float64 {
	return 0.0
}
func (_client) N_0xba8805a1108a2515(ped float64) float64 {
	return 0.0
}

func (_client) RegisterRawNuiCallback(callbackType string, callback: Function) {}

/**
 * An internal function which allows the current resource's HLL script runtimes to receive state for the specified event.
 * @param eventName An event name, or "\*" to disable HLL event filtering for this resource.
 */
func (_client) RegisterResourceAsEventHandler(eventName string) {}

func (_client) RegisterSaveHouse(p0 float64, p1 float64, p2 float64, p3 float64, p5 float64, p6 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) RegisterScriptWithAudio(p0 float64) {}

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Registers a dynamic streaming asset from the server with the GTA streaming module system.
 * @param resourceName The resource to add the asset to.
 * @param fileName A file name in the resource.
 * @param cacheString The string returned from `REGISTER_RESOURCE_ASSET` on the server.
 */
func (_client) RegisterStreamingFileFromCache(resourceName string, fileName string, cacheString string) {}

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Registers a KVP value as an asset with the GTA streaming module system. This function currently won't work.
 * @param kvsKey The KVP key in the current resource to register as an asset.
 */
func (_client) RegisterStreamingFileFromKvs(kvsKey string) {}

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Registers a file from an URL as a streaming asset in the GTA streaming subsystem. This will asynchronously register the asset, and caching is done based on the URL itself - cache headers are ignored.
 * Use `IS_STREAMING_FILE_READY` to check if the asset has been registered successfully.
 * @param registerAs The file name to register as, for example `asset.ydr`.
 * @param url The URL to fetch the asset from.
 */
func (_client) RegisterStreamingFileFromUrl(registerAs string, url string) {}

func (_client) RegisterSynchronisedScriptSpeech() {}

/**
 * PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.
 * l_216 = RECSBRobber1
 */
func (_client) RegisterTarget(ped float64, target float64) {}

func (_client) RegisterTextLabelToSave(name string) float64 {
	return 0.0
}

/**
 * Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
 * MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
 * MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
 * MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
 * "tl" prefix sounds like "Text Label"
 */
func (_client) RegisterTextLabelToSave_2(name string) float64 {
	return 0.0
}
/**
 * Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
 * MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
 * MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
 * MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
 * "tl" prefix sounds like "Text Label"
 */
func (_client) N_0x6f7794f28c6b2535(name string) float64 {
	return 0.0
}

func (_client) RegisterWorldPointScriptBrain(scriptName string, activationRange float64, p2 float64) {}

func (_client) ReleaseAllCommerceItemImages() {}
func (_client) N_0x72d0706cd6ccdb58() {}

func (_client) ReleaseAmbientAudioBank() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) ReleaseBinkMovie(binkMovie float64) {}

/**
 * Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
 * To disable the keys, use [`0xEC9264727EEC0F28`](#\_0xEC9264727EEC0F28).
 */
func (_client) ReleaseControlOfFrontend() {}
/**
 * Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
 * To disable the keys, use [`0xEC9264727EEC0F28`](#\_0xEC9264727EEC0F28).
 */
func (_client) N_0x14621bb1df14e2b2() {}

func (_client) ReleaseMissionAudioBank() {}

func (_client) ReleaseMovieMeshSet(movieMeshSet float64) {}

func (_client) ReleaseNamedRendertarget(name string) bool;

func (_client) ReleaseNamedScriptAudioBank(audioBank string) {}

func (_client) ReleasePedPreloadPropData(ped float64) {}
func (_client) N_0xf79f9def0aade61a(ped float64) {}

func (_client) ReleasePedPreloadVariationData(ped float64) {}
func (_client) N_0x5aab586ffec0fd96(ped float64) {}

func (_client) ReleasePedheadshotImgUpload(id float64) {}
func (_client) N_0x5d517b27cf6ecd04(id float64) {}

func (_client) ReleasePreloadMods(vehicle float64) {}

func (_client) ReleaseScriptAudioBank() {}

/**
 * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
 * ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
 * @param entity The entity handle to invalidate.
 */
func (_client) ReleaseScriptGuidFromEntity(entity float64) {}
/**
 * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
 * ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
 * @param entity The entity handle to invalidate.
 */
func (_client) N_0x2b3334bca57cd799(entity float64) {}
/**
 * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
 * ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
 * @param entity The entity handle to invalidate.
 */
func (_client) ShapeTestResultEntity(entity float64) {}

func (_client) ReleaseSoundId(soundId float64) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) ReleaseWeaponAudio() {}

/**
 * NativeDB Added Parameter 1: Player player
 * NativeDB Added Parameter 2: int a
 * NativeDB Added Parameter 3: int b
 */
func (_client) RemoteCheatDetected() bool;
/**
 * NativeDB Added Parameter 1: Player player
 * NativeDB Added Parameter 2: int a
 * NativeDB Added Parameter 3: int b
 */
func (_client) N_0x472841a026d26d8b() bool;

func (_client) RemoveActionModeAsset(asset string) {}

func (_client) RemoveAirDefenseZone(zoneId float64) bool;
func (_client) N_0x0abf535877897560(zoneId float64) bool;

func (_client) RemoveAllAirDefenseZones() {}
func (_client) N_0x1e45b34adebee48e() {}

func (_client) RemoveAllCoverBlockingAreas() {}

/**
 * setting the last params to false it does that same so I would suggest its not a toggle
 */
func (_client) RemoveAllPedWeapons(ped float64, p1 bool) {}

/**
 * Pickup hashes: pastebin.com/8EuSv2r1
 */
func (_client) RemoveAllPickupsOfType(pickupHash interface{}) {}

/**
 * If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
 */
func (_client) RemoveAllProjectilesOfType(weaponHash interface{}, explode bool) {}

func (_client) RemoveAllShockingEvents(p0 bool) {}

/**
 * Used in am_mp_property_ext and am_mp_property_int
 * ```
 * ```
 * NativeDB Added Parameter 2: Ped ped
 */
func (_client) RemoveAllStickyBombsFromEntity(entity float64) {}
/**
 * Used in am_mp_property_ext and am_mp_property_int
 * ```
 * ```
 * NativeDB Added Parameter 2: Ped ped
 */
func (_client) N_0x715135f4b82ac90d(entity float64) {}

func (_client) RemoveAnimDict(animDict string) {}

/**
 * Unloads the specified animation set. An animation set provides movement animations for a ped.
 * Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
 */
func (_client) RemoveAnimSet(animSet string) {}

/**
 * In the C++ SDK, this seems not to work-- the blip isn't removed immediately. I use it for saving cars.
 * E.g.:
 * Ped pped = PLAYER::PLAYER_PED_ID();
 * Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);
 * Blip b = HUD::ADD_BLIP_FOR_ENTITY(v);
 * works fine.
 * But later attempting to delete it with:
 * Blip b = HUD::GET_BLIP_FROM_ENTITY(v);
 * if (HUD::DOES_BLIP_EXIST(b)) HUD::REMOVE_BLIP(&b);
 * doesn't work. And yes, doesn't work without the DOES_BLIP_EXIST check either. Also, if you attach multiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attach to other things (in my case, a vehicle).
 * Thus for me, HUD::REMOVE_BLIP(&b) only works if there's one blip, (in my case) the vehicle is marked as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip attached to it. I never intentionally attach multiple blips but if the user saves the car, this adds a blip. Then if they delete it, it is supposed to remove the blip, but it doesn't. Then they can immediately save it again, causing another blip to re-appear.
 * -------------
 * Passing the address of the variable instead of the value works for me.
 * e.g.
 * int blip = HUD::ADD_BLIP_FOR_ENTITY(ped);
 * HUD::REMOVE_BLIP(&blip);
 * Remove blip will currently crash your game, just artificially remove the blip by setting the sprite to a id that is 'invisible'.
 * --
 * It crashes my game.
 */
func (_client) RemoveBlip(blip float64) {}

/**
 * Alias for REMOVE_ANIM_SET.
 */
func (_client) RemoveClipSet(clipSet string) {}

func (_client) RemoveCoverPoint(coverpoint float64) {}

/**
 * p0 is the handle returned from _0xFDBF4CDBC07E1706
 */
func (_client) RemoveCurrentRise(p0 float64) {}
/**
 * p0 is the handle returned from _0xFDBF4CDBC07E1706
 */
func (_client) N_0xb1252e3e59a82aaf(p0 float64) {}

/**
 * Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
 */
func (_client) RemoveCutFile(cutsceneName string) {}
/**
 * Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
 */
func (_client) N_0xd00d76a7dfc9d852(cutsceneName string) {}

func (_client) RemoveCutscene() {}

func (_client) RemoveDecal(decal float64) {}

func (_client) RemoveDecalsFromObject(obj float64) {}

func (_client) RemoveDecalsFromObjectFacing(obj float64, x float64, y float64, z float64) {}

func (_client) RemoveDecalsFromVehicle(vehicle float64) {}

/**
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
 */
func (_client) RemoveDecalsInRange(x float64, y float64, z float64, _range float64) {}

func (_client) RemoveDispatchSpawnBlockingArea(p0 float64) {}

/**
 * CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
 * Only its NetObj removed and flag `*(v2 + 192) |= 8u` (1604 retail) toggled.
 */
func (_client) RemoveDoorFromSystem(doorHash interface{}) {}

func (_client) RemoveEntityFromAudioMixGroup(entity float64, p1 float64) {}
func (_client) N_0x18eb48cfc41f2ea0(entity float64, p1 float64) {}

func (_client) RemoveForcedObject(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) RemoveFromItemset(p0 float64, p1 float64) {}

func (_client) RemoveGroup(groupId float64) {}

/**
 * IPL list: pastebin.com/iNGLY32D
 */
func (_client) RemoveIpl(iplName string) {}

func (_client) RemoveModelFromCreatorBudget(modelHash interface{}) {}
func (_client) N_0xf086ad9354fac3a3(modelHash interface{}) {}

/**
 * p5 requires more research. See also [`CREATE_MODEL_HIDE`](#\_0x8A97BCA30A0CE478) and [`CREATE_MODEL_SWAP`](#\_0x92C47782FDA8B2A3).
 * Network players do not see changes done with this.
 * @param radius The radius specified in gta units
 * @param model The model that you want to make visible
 */
func (_client) RemoveModelHide(x float64, y float64, z float64, radius float64, model interface{}, p5 bool) {}

func (_client) RemoveModelSwap(x float64, y float64, z float64, radius float64, originalModel interface{}, newModel interface{}, p6 bool) {}

func (_client) RemoveMpGamerTag(gamerTagId float64) {}
func (_client) N_0x31698aa80e0223f8(gamerTagId float64) {}

func (_client) RemoveMultiplayerBankCash() {}

/**
 * Removes multiplayer cash hud each frame
 */
func (_client) RemoveMultiplayerHudCash() {}

func (_client) RemoveMultiplayerWalletCash() {}
func (_client) N_0x95cf81bd06ee1887() {}

func (_client) RemoveNamedPtfxAsset(fxName string) {}
func (_client) RemoveNamedPtfxAsset(fxName string) {}

func (_client) RemoveNavmeshBlockingObject(p0 float64) {}

func (_client) RemoveNavmeshRequiredRegions() {}

func (_client) RemoveObjectHighDetailModel(object float64) {}
func (_client) N_0x4a39db43e47cf3aa(object float64) {}

func (_client) RemoveParticleFx(ptfxHandle float64, p1 bool) {}

func (_client) RemoveParticleFxFromEntity(entity float64) {}

func (_client) RemoveParticleFxInRange(X float64, Y float64, Z float64, radius float64) {}

/**
 * Ped will no longer get angry when you stay near him.
 */
func (_client) RemovePedDefensiveArea(ped float64, toggle bool) {}

/**
 * Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed.
 */
func (_client) RemovePedElegantly(ped float64) {}

func (_client) RemovePedFromGroup(ped float64) {}

func (_client) RemovePedHelmet(ped float64, instantly bool) {}

func (_client) RemovePedPreferredCoverSet(ped float64) {}
func (_client) N_0xfddb234cf74073d9(ped float64) {}

/**
 * Retracts the hook on the cargobob.
 * Note: after you retract it the natives for dropping the hook no longer work
 */
func (_client) RemovePickUpRopeForCargobob(cargobob float64) {}
/**
 * Retracts the hook on the cargobob.
 * Note: after you retract it the natives for dropping the hook no longer work
 */
func (_client) RetractCargobobHook(cargobob float64) {}

func (_client) RemovePickup(pickup float64) {}

func (_client) RemovePlayerHelmet(player float64, p2 bool) {}

func (_client) RemovePopMultiplierArea(id float64, p1 bool) {}
func (_client) N_0xb129e447a2eda4bf(id float64, p1 bool) {}

func (_client) RemovePopMultiplierSphere(id float64, p1 bool) {}
func (_client) N_0xe6869becdd8f2403(id float64, p1 bool) {}

/**
 * Found in the b617d scripts, duplicates removed:
 * AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
 * AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
 * AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
 * AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
 * AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
 */
func (_client) RemovePortalSettingsOverride(p0 string) {}
/**
 * Found in the b617d scripts, duplicates removed:
 * AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
 * AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
 * AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
 * AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
 * AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
 */
func (_client) N_0xb4bbfd9cd8b3922b(p0 string) {}

func (_client) RemovePtfxAsset() {}

func (_client) RemoveRelationshipGroup(groupHash interface{}) {}

/**
 * Experimental natives, please do not use in a live environment.
 */
func (_client) RemoveReplaceTexture(origTxd string, origTxn string) {}

func (_client) RemoveRoadNodeSpeedZone(speedzone float64) bool;
func (_client) N_0x1033371fc8e842a7(speedzone float64) bool;
func (_client) RemoveSpeedZone(speedzone float64) bool;

func (_client) RemoveScaleformScriptHudMovie(hudComponent float64) {}
func (_client) N_0xf44a5456ac3f4f97(hudComponent float64) {}

func (_client) RemoveScenarioBlockingArea(p0 float64, p1 bool) {}

func (_client) RemoveScenarioBlockingAreas() {}

func (_client) RemoveScriptFire(fireHandle float64) {}

func (_client) RemoveShockingEvent(event float64) bool;

func (_client) RemoveShockingEventSpawnBlockingAreas() {}

/**
 * **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
 * Removes a handler for changes to a state bag.
 * @param cookie The cookie.
 */
func (_client) RemoveStateBagChangeHandler(cookie float64) {}

/**
 * Appears to remove stealth kill action from memory
 */
func (_client) RemoveStealthKill(hash interface{}, p1 bool) {}
/**
 * Appears to remove stealth kill action from memory
 */
func (_client) N_0xa6a12939f16d85be(hash interface{}, p1 bool) {}

func (_client) RemoveStealthModeAsset(asset string) {}

func (_client) RemoveTcmodifierOverride(p0 string) {}
func (_client) N_0x15e33297c3e8dc60(p0 string) {}

func (_client) RemoveVehicleAsset(vehicleAsset float64) {}

func (_client) RemoveVehicleCombatAvoidanceArea(p0 float64) {}
func (_client) N_0xe30524e1871f481d(p0 float64) {}

func (_client) RemoveVehicleCrewEmblem(vehicle float64, p1 float64) {}
func (_client) N_0xd2300034310557e4(vehicle float64, p1 float64) {}

func (_client) RemoveVehicleHighDetailModel(vehicle float64) {}

func (_client) RemoveVehicleMod(vehicle float64, modType float64) {}

/**
 * See [REQUEST_VEHICLE_RECORDING](#\_0xAF514CABE74CBF15)
 */
func (_client) RemoveVehicleRecording(recording float64, script string) {}

/**
 * Remove the weird shadow applied by [\_SET_VEHICLE_SHADOW_EFFECT](#\_0x2A70BAE8883E4C81)
 */
func (_client) RemoveVehicleShadowEffect(vehicle float64) {}
/**
 * Remove the weird shadow applied by [\_SET_VEHICLE_SHADOW_EFFECT](#\_0x2A70BAE8883E4C81)
 */
func (_client) N_0xf87d9f2301f7d206(vehicle float64) {}

func (_client) RemoveVehicleStuckCheck(vehicle float64) {}

func (_client) RemoveVehicleUpsidedownCheck(vehicle float64) {}

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 */
func (_client) RemoveVehicleWindow(vehicle float64, windowIndex float64) {}

func (_client) RemoveVehiclesFromGeneratorsInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, unk float64) {}

func (_client) RemoveWarningMessageListItems() {}
func (_client) N_0x6ef54ab721dc6242() {}

func (_client) RemoveWaypointRecording(name string) {}

func (_client) RemoveWeaponAsset(weaponHash interface{}) {}

func (_client) RemoveWeaponComponentFromPed(ped float64, weaponHash interface{}, componentHash interface{}) {}

func (_client) RemoveWeaponComponentFromWeaponObject(weaponObject float64, addonHash interface{}) {}

/**
 * This native removes a specified weapon from your selected ped.
 * Weapon Hashes: pastebin.com/0wwDZgkF
 * Example:
 * C#:
 * Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
 * C++:
 * WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);
 * The code above removes the knife from the player.
 */
func (_client) RemoveWeaponFromPed(ped float64, weaponHash interface{}) {}

/**
 * draws circular marker at pos
 * -1 = none
 * 0 = red
 * 1 = green
 * 2 = blue
 * 3 = green larger
 * 4 = nothing
 * 5 = green small
 */
func (_client) RenderFakePickupGlow(x float64, y float64, z float64, colorIndex float64) {}
/**
 * draws circular marker at pos
 * -1 = none
 * 0 = red
 * 1 = green
 * 2 = blue
 * 3 = green larger
 * 4 = nothing
 * 5 = green small
 */
func (_client) N_0x3430676b11cdf21d(x float64, y float64, z float64, colorIndex float64) {}
/**
 * draws circular marker at pos
 * -1 = none
 * 0 = red
 * 1 = green
 * 2 = blue
 * 3 = green larger
 * 4 = nothing
 * 5 = green small
 */
func (_client) HighlightPlacementCoords(x float64, y float64, z float64, colorIndex float64) {}

/**
 * ease - smooth transition between the camera's positions
 * easeTime - Time in milliseconds for the transition to happen
 * If you have created a script (rendering) camera, and want to go back to the
 * character (gameplay) camera, call this native with render set to 0.
 * Setting ease to 1 will smooth the transition.
 * ```
 * ```
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) RenderScriptCams(render bool, ease bool, easeTime float64, p3 bool, p4 bool) {}

/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 * --------------------------------------------------
 * makes hudColorIndex2 color into hudColorIndex color
 */
func (_client) ReplaceHudColour(hudColorIndex float64, hudColorIndex2 float64) {}
/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 * --------------------------------------------------
 * makes hudColorIndex2 color into hudColorIndex color
 */
func (_client) N_0x1ccc708f0f850613(hudColorIndex float64, hudColorIndex2 float64) {}
/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 * --------------------------------------------------
 * makes hudColorIndex2 color into hudColorIndex color
 */
func (_client) SetHudColoursSwitch(hudColorIndex float64, hudColorIndex2 float64) {}

/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 */
func (_client) ReplaceHudColourWithRgba(hudColorIndex float64, r float64, g float64, b float64, a float64) {}
/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 */
func (_client) N_0xf314cf4f0211894e(hudColorIndex float64, r float64, g float64, b float64, a float64) {}
/**
 * HUD colors and their values: pastebin.com/d9aHPbXN
 */
func (_client) SetHudColour(hudColorIndex float64, r float64, g float64, b float64, a float64) {}

func (_client) ReplayFreeCamGetMaxRange() float64 {
	return 0.0
}
func (_client) N_0x8bfceb5ea1b161b6() float64 {
	return 0.0
}

/**
 * PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));
 * From am_armybase.ysc.c4:
 * PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));
 * -----
 * This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7
 * -----
 * crimeType:
 * 1: Firearms possession
 * 2: Person running a red light ("5-0-5")
 * 3: Reckless driver
 * 4: Speeding vehicle (a "5-10")
 * 5: Traffic violation (a "5-0-5")
 * 6: Motorcycle rider without a helmet
 * 7: Vehicle theft (a "5-0-3")
 * 8: Grand Theft Auto
 * 9: ???
 * 10: ???
 * 11: Assault on a civilian (a "2-40")
 * 12: Assault on an officer
 * 13: Assault with a deadly weapon (a "2-45")
 * 14: Officer shot (a "2-45")
 * 15: Pedestrian struck by a vehicle
 * 16: Officer struck by a vehicle
 * 17: Helicopter down (an "AC"?)
 * 18: Civilian on fire (a "2-40")
 * 19: Officer set on fire (a "10-99")
 * 20: Car on fire
 * 21: Air unit down (an "AC"?)
 * 22: An explosion (a "9-96")
 * 23: A stabbing (a "2-45") (also something else I couldn't understand)
 * 24: Officer stabbed (also something else I couldn't understand)
 * 25: Attack on a vehicle ("MDV"?)
 * 26: Damage to property
 * 27: Suspect threatening officer with a firearm
 * 28: Shots fired
 * 29: ???
 * 30: ???
 * 31: ???
 * 32: ???
 * 33: ???
 * 34: A "2-45"
 * 35: ???
 * 36: A "9-25"
 * 37: ???
 * 38: ???
 * 39: ???
 * 40: ???
 * 41: ???
 * 42: ???
 * 43: Possible disturbance
 * 44: Civilian in need of assistance
 * 45: ???
 * 46: ???
 */
func (_client) ReportCrime(player float64, crimeType float64, wantedLvlThresh float64) {}

func (_client) ReportPoliceSpottedPlayer(player float64) {}
func (_client) N_0xdc64d2c53493ed12(player float64) {}

func (_client) RequestActionModeAsset(asset string) {}

func (_client) RequestAdditionalCollisionAtCoord(x float64, y float64, z float64) {}

/**
 * Request a gxt into the passed slot.
 */
func (_client) RequestAdditionalText(gxt string, slot float64) {}

func (_client) RequestAdditionalTextForDlc(gxt string, slot float64) {}
func (_client) RequestAdditionalText_2(gxt string, slot float64) {}

/**
 * All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/XZ1tmGEz
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) RequestAmbientAudioBank(p0 string, p1 bool) bool;

func (_client) RequestAnimDict(animDict string) {}

/**
 * Starts loading the specified animation set. An animation set provides movement animations for a ped. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
 */
func (_client) RequestAnimSet(animSet string) {}

func (_client) RequestClipSet(clipSet string) {}

func (_client) RequestCollisionAtCoord(x float64, y float64, z float64) {}

func (_client) RequestCollisionForModel(model interface{}) {}

func (_client) RequestCommerceItemImage(index float64) bool;
func (_client) N_0xa2f952104fc6dd4b(index float64) bool;

/**
 * Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
 */
func (_client) RequestCutFile(cutsceneName string) {}
/**
 * Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
 */
func (_client) N_0x06a3524161c502ba(cutsceneName string) {}

/**
 * flags: Usually 8
 */
func (_client) RequestCutscene(cutsceneName string, flags float64) {}

/**
 * flags: Usually 8
 * playbackFlags: Which scenes should be played.
 * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
 */
func (_client) RequestCutsceneWithPlaybackList(cutsceneName string, playbackFlags float64, flags float64) {}
/**
 * flags: Usually 8
 * playbackFlags: Which scenes should be played.
 * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
 */
func (_client) N_0xc23de0e91c30b58c(cutsceneName string, playbackFlags float64, flags float64) {}
/**
 * flags: Usually 8
 * playbackFlags: Which scenes should be played.
 * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
 */
func (_client) RequestCutsceneEx(cutsceneName string, playbackFlags float64, flags float64) {}

/**
 * Exemple: REQUEST_IPL("TrevorsTrailerTrash");
 */
func (_client) RequestIpl(iplName string) {}

func (_client) RequestMenuPedModel(model interface{}) {}
func (_client) N_0xa0261aef7acfc51e(model interface{}) {}

/**
 * All occurrences and usages found in b617d: pastebin.com/NzZZ2Tmm
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) RequestMissionAudioBank(p0 string, p1 bool) bool;

/**
 * Request a model to be loaded into memory.
 */
func (_client) RequestModel(model interface{}) {}

/**
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 */
func (_client) RequestModelsInRoom(interior float64, roomName string) {}
/**
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 */
func (_client) N_0x8a7a40100edfec58(interior float64, roomName string) {}
/**
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 */
func (_client) RequestInteriorRoomByName(interior float64, roomName string) {}

/**
 * From the b678d decompiled scripts:
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
 * STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
 */
func (_client) RequestNamedPtfxAsset(fxName string) {}

/**
 * Used internally for long range tasks
 */
func (_client) RequestPathsPreferAccurateBoundingstruct(x1 float64, y1 float64, x2 float64, y2 float64) bool;
/**
 * Used internally for long range tasks
 */
func (_client) N_0x07fb139b592fa687(x1 float64, y1 float64, x2 float64, y2 float64) bool;

func (_client) RequestPedVehicleVisibilityTracking(ped float64, p1 bool) {}
func (_client) GetPedFloodInvincibility(ped float64, p1 bool) {}

func (_client) RequestPedVisibilityTracking(ped float64) {}
func (_client) N_0x7d7a2e43e74e2eb8(ped float64) {}

func (_client) RequestPedheadshotImgUpload(id float64) bool;
func (_client) N_0xf0daef2f545bee25(id float64) bool;

/**
 * maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
 */
func (_client) RequestPtfxAsset() {}

func (_client) RequestScaleformMovie(scaleformName string) float64 {
	return 0.0
}

func (_client) RequestScaleformMovieInstance(scaleformName string) float64 {
	return 0.0
}

/**
 * Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?
 * These seem to be the only scaleforms ever requested by this native:
 * "breaking_news"
 * "desktop_pc"
 * "ECG_MONITOR"
 * "Hacking_PC"
 * "TEETH_PULLING"
 * Note: Unless this hash is out-of-order, this native is next-gen only.
 */
func (_client) RequestScaleformMovieInteractive(scaleformName string) float64 {
	return 0.0
}
/**
 * Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?
 * These seem to be the only scaleforms ever requested by this native:
 * "breaking_news"
 * "desktop_pc"
 * "ECG_MONITOR"
 * "Hacking_PC"
 * "TEETH_PULLING"
 * Note: Unless this hash is out-of-order, this native is next-gen only.
 */
func (_client) RequestScaleformMovie3(scaleformName string) float64 {
	return 0.0
}

/**
 * Another [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F) equivalent.
 */
func (_client) RequestScaleformMovie_2(scaleformName string) float64 {
	return 0.0
}
/**
 * Another [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F) equivalent.
 */
func (_client) N_0x65e7e78842e74cdb(scaleformName string) float64 {
	return 0.0
}

func (_client) RequestScaleformScriptHudMovie(hudComponent float64) {}
func (_client) N_0x9304881d6f6537ea(hudComponent float64) {}
func (_client) RequestHudScaleform(hudComponent float64) {}

func (_client) RequestScript(scriptName string) {}

/**
 * All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/AkmDAVn6
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 */
func (_client) RequestScriptAudioBank(p0 string, p1 bool) bool;

/**
 * formerly _REQUEST_STREAMED_SCRIPT
 */
func (_client) RequestScriptWithNameHash(scriptHash interface{}) {}
/**
 * formerly _REQUEST_STREAMED_SCRIPT
 */
func (_client) RequestStreamedScript(scriptHash interface{}) {}

func (_client) RequestStealthModeAsset(asset string) {}

/**
 * This function can requests texture dictonaries from following RPFs:
 * scaleform_generic.rpf
 * scaleform_minigames.rpf
 * scaleform_minimap.rpf
 * scaleform_web.rpf
 * last param isnt a toggle
 */
func (_client) RequestStreamedTextureDict(textureDict string, p1 bool) {}

func (_client) RequestTaskMoveNetworkStateTransition(ped float64, name string) bool;
func (_client) N_0xd01015c7316ae176(ped float64, name string) bool;

/**
 * REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
 * vehicle found that have asset's:
 * cargobob3
 * submersible
 * blazer
 */
func (_client) RequestVehicleAsset(vehicleHash interface{}, vehicleAsset float64) {}

/**
 * REQUEST_VEHICLE_*
 */
func (_client) RequestVehicleDashboardScaleformMovie(vehicle float64) {}
/**
 * REQUEST_VEHICLE_*
 */
func (_client) N_0xdba3c090e3d74690(vehicle float64) {}

func (_client) RequestVehicleHighDetailModel(vehicle float64) {}

/**
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
 * Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 */
func (_client) RequestVehicleRecording(recording float64, script string) {}

/**
 * For a full list of the points, see here: goo.gl/wIH0vn
 * Max number of loaded recordings is 32.
 */
func (_client) RequestWaypointRecording(name string) {}

/**
 * Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
 * REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
 */
func (_client) RequestWeaponAsset(weaponHash interface{}, p1 float64, p2 float64) {}

func (_client) RequestWeaponHighDetailModel(weaponObject float64) {}

/**
 * Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) ReserveNetworkLocalObjects(amount float64) {}
/**
 * Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) N_0x797f9c5e661d920e(amount float64) {}

/**
 * Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) ReserveNetworkLocalPeds(amount float64) {}
/**
 * Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) N_0x2c8df5d129595281(amount float64) {}

func (_client) ReserveNetworkLocalVehicles(amount float64) {}
func (_client) N_0x42613035157e4208(amount float64) {}

func (_client) ReserveNetworkMissionObjects(amount float64) {}

func (_client) ReserveNetworkMissionPeds(amount float64) {}

func (_client) ReserveNetworkMissionVehicles(amount float64) {}

func (_client) ResetAiMeleeWeaponDamageModifier() {}

func (_client) ResetAiWeaponDamageModifier() {}

/**
 * Begins with RESET_*. Next character in the name is either D or E.
 */
func (_client) ResetBenchmarkRecording() {}
/**
 * Begins with RESET_*. Next character in the name is either D or E.
 */
func (_client) N_0x437138b6a830166a() {}

/**
 * Sets the waves intensity back to original (1.0 in most cases).
 */
func (_client) ResetDeepOceanScaler() {}
/**
 * Sets the waves intensity back to original (1.0 in most cases).
 */
func (_client) N_0x5e5e99285ae812db() {}
/**
 * Sets the waves intensity back to original (1.0 in most cases).
 */
func (_client) ResetWavesIntensity() {}
/**
 * Sets the waves intensity back to original (1.0 in most cases).
 */
func (_client) ResetCurrentIntensity() {}

func (_client) ResetDispatchIdealSpawnDistance() {}

func (_client) ResetDispatchSpawnBlockingAreas() {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) ResetDispatchSpawnLocation() {}

/**
 * NativeDB Introduced: v323
 */
func (_client) ResetDispatchTimeBetweenSpawnAttempts(p0 float64) {}

/**
 * Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
 */
func (_client) ResetEditorValues() {}
/**
 * Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
 */
func (_client) N_0x3353d13f09307691() {}

func (_client) ResetEntityAlpha(entity float64) {}

func (_client) ResetExclusiveScenarioGroup() {}

/**
 * Resets the extra timecycle modifier strength normally set with [`SetExtraTimecycleModifierStrength`](#\_0x2C328AF17210F009)
 */
func (_client) ResetExtraTimecycleModifierStrength() {}
/**
 * Resets the extra timecycle modifier strength normally set with [`SetExtraTimecycleModifierStrength`](#\_0x2C328AF17210F009)
 */
func (_client) N_0x2bf72ad5b41aa739() {}

/**
 * Resets parameters which is used by the game for checking is ped needs to fly through windscreen after a crash to default values.
 */
func (_client) ResetFlyThroughWindscreenParams() {}

/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
 */
func (_client) ResetGhostedEntityAlpha() {}
/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
 */
func (_client) N_0x17330ebf2f2124a8() {}

func (_client) ResetGlobalActionscriptFlag(flagIndex float64) {}
func (_client) N_0xb99c4e4d9499df29(flagIndex float64) {}

func (_client) ResetGroupFormationDefaultSpacing(groupHandle float64) {}

func (_client) ResetHudComponentValues(id float64) {}

/**
 * S*
 */
func (_client) ResetInputMappingScheme() {}
/**
 * S*
 */
func (_client) N_0x643ed62d5ea3bebd() {}

/**
 * Resets values from the zoom level data by index to defaults from mapzoomdata.meta.
 * @param index Zoom level index.
 */
func (_client) ResetMapZoomDataLevel(index float64) {}

/**
 * Resets mapdata entity transform matrix to its original state.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param mapDataHash A mapdata hash from `mapDataLoaded` event.
 * @param entityInternalIdx An internal entity's index.
 * @return True if successful, false if not.
 */
func (_client) ResetMapdataEntityMatrix(mapDataHash float64, entityInternalIdx float64) bool;

/**
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 */
func (_client) ResetParticleFxOverride(name string) {}
/**
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 */
func (_client) N_0x89c8553dd3274aae(name string) {}
/**
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 */
func (_client) ResetParticleFxAssetOldToNew(name string) {}

func (_client) ResetPausedRenderphases() {}
func (_client) N_0xe1c8709406f2c41c() {}

func (_client) ResetPedAudioFlags(ped float64) {}

func (_client) ResetPedInVehicleContext(ped float64) {}

/**
 * Resets the value for the last vehicle driven by the Ped.
 */
func (_client) ResetPedLastVehicle(ped float64) {}

func (_client) ResetPedMovementClipset(ped float64, transitionSpeed float64) {}

func (_client) ResetPedRagdollTimer(ped float64) {}

func (_client) ResetPedStrafeClipset(ped float64) {}

func (_client) ResetPedVisibleDamage(ped float64) {}

func (_client) ResetPedWeaponMovementClipset(ped float64) {}

func (_client) ResetPlayerArrestState(player float64) {}

func (_client) ResetPlayerInputGait(player float64) {}

func (_client) ResetPlayerStamina(player float64) {}

func (_client) ResetReticuleValues() {}

func (_client) ResetScenarioGroupsEnabled() {}

func (_client) ResetScenarioTypesEnabled() {}

/**
 * This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
 * values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
 * any other scripts attempting to draw.
 */
func (_client) ResetScriptGfxAlign() {}
/**
 * This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
 * values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
 * any other scripts attempting to draw.
 */
func (_client) N_0xe3a3db414a373dab() {}
/**
 * This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
 * values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
 * any other scripts attempting to draw.
 */
func (_client) ScreenDrawPositionEnd() {}

func (_client) ResetTrevorRage() {}

/**
 * Resets whether or not peds can stand on top of the specified vehicle.
 * Note this flag is not replicated automatically, you will have to manually do so.
 * @param vehicle The vehicle.
 */
func (_client) ResetVehiclePedsCanStandOnTopFlag(vehicle float64) {}

/**
 * The inner function has a switch on the second parameter. It's the stuck timer index.
 * Here's some pseudo code I wrote for the inner function:
 * void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
 * {
 * switch (timerIndex)
 * {
 * case 0:
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 * case 1:
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
 * case 2:
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 * case 3:
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
 * case 4:
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
 * break;
 * };
 * }
 */
func (_client) ResetVehicleStuckTimer(vehicle float64, nullAttributes float64) {}

func (_client) ResetVehicleWheels(vehicle float64, toggle bool) {}

func (_client) ResetWantedLevelDifficulty(player float64) {}

/**
 * NativeDB Introduced: v323
 */
func (_client) ResetWorldBoundaryForPlayer() {}

/**
 * Before using this native click the native above and look at the decription.
 * Example:
 * int GetHash = Function.Call<int>(Hash.GET_HASH_KEY, "fe_menu_version_corona_lobby");
 * Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
 * Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);
 * This native refreshes the frontend menu.
 * p1 = Hash of Menu
 * p2 = Unknown but always works with -1.
 */
func (_client) RestartFrontendMenu(menuHash interface{}, p1 float64) {}

/**
 * In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows `Disconnecting from GTA Online` HUD and then quits the game.
 */
func (_client) RestartGame() {}
/**
 * In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows `Disconnecting from GTA Online` HUD and then quits the game.
 */
func (_client) N_0xe574a662acaefbb1() {}

func (_client) RestartScriptedConversation() {}

func (_client) RestorePlayerStamina(player float64, p1 float64) {}

/**
 * This function will simply bring the dead person back to life.
 * Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
 * Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 */
func (_client) ResurrectPed(ped float64) {}

func (_client) ReturnTwo(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x40afb081f8add4ee(p0 float64) float64 {
	return 0.0
}

/**
 * It will revive/cure the injured ped. The condition is ped must not be dead.
 * Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
 * This function is well suited there.
 */
func (_client) ReviveInjuredPed(ped float64) {}

func (_client) RockstarMessageGetString() string;
func (_client) N_0xdf649c4e9afdd788() string;

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 */
func (_client) RollDownWindow(vehicle float64, windowIndex float64) {}

/**
 * Roll down all the windows of the vehicle passed through the first parameter.
 */
func (_client) RollDownWindows(vehicle float64) {}

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 */
func (_client) RollUpWindow(vehicle float64, windowIndex float64) {}

func (_client) RopeAreTexturesLoaded() bool;

func (_client) RopeConvertToSimple(ropeId float64) {}

func (_client) RopeDrawShadowEnabled(toggle bool) float64 {
	return 0.0
}

/**
 * Forces a rope to a certain length.
 */
func (_client) RopeForceLength(ropeId float64, length float64) {}

func (_client) RopeGetDistanceBetweenEnds(ropeId float64) float64 {
	return 0.0
}
func (_client) GetRopeLength(ropeId float64) float64 {
	return 0.0
}

/**
 * Loads rope textures for all ropes in the current scene.
 */
func (_client) RopeLoadTextures() {}

/**
 * Reset a rope to a certain length.
 */
func (_client) RopeResetLength(ropeId float64, length float64) {}

func (_client) RopeSetUpdateOrder(ropeId float64, p1 float64) {}
func (_client) N_0xdc57a637a20006ed(ropeId float64, p1 float64) {}

func (_client) RopeSetUpdatePinverts(ropeId float64) {}

/**
 * Unloads rope textures for all ropes in the current scene.
 */
func (_client) RopeUnloadTextures() {}

func (_client) Round(value float64) float64 {
	return 0.0
}

/**
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
 */
func (_client) SaveBenchmarkRecording() {}
/**
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
 */
func (_client) N_0x37deb0aa183fb6d8() {}

func (_client) SaveHighQualityPhoto(unused float64) bool;
func (_client) N_0x3dec726c25a11bac(unused float64) bool;

func (_client) SaveRecordingClip() bool;
func (_client) N_0x644546ec5287471b() bool;

func (_client) ScEmailMessageClearRecipList() {}
func (_client) N_0x55df6db45179236e() {}

func (_client) ScEmailMessagePushGamerToRecipList(networkHandle float64) {}

/**
 * Same as HAS_ACHIEVEMENT_BEEN_PASSED
 */
func (_client) ScGetHasAchievementBeenPassed(achievement float64) bool;
/**
 * Same as HAS_ACHIEVEMENT_BEEN_PASSED
 */
func (_client) N_0x418dc16fae452c1c(achievement float64) bool;

/**
 * sfink: from scripts:
 * func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
 * func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
 */
func (_client) ScGetIsProfileAttributeSet(name string) bool;
/**
 * sfink: from scripts:
 * func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
 * func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
 */
func (_client) N_0x8416fe4e4629d7d7(name string) bool;

/**
 * Returns the nickname of the logged-in Rockstar Social Club account.
 */
func (_client) ScGetNickname() string;

func (_client) ScInboxGetEmails(offset float64, limit float64) {}
func (_client) N_0x040addcbafa1018a(offset float64, limit float64) {}

func (_client) ScInboxGetMessageIsReadAtIndex(msgIndex float64) bool;
func (_client) N_0x93028f1db42bfd08(msgIndex float64) bool;
func (_client) IsScInboxValid(msgIndex float64) bool;

func (_client) ScInboxGetMessageTypeAtIndex(msgIndex float64) float64 {
	return 0.0
}
func (_client) N_0xbb8ea16ecbc976c4(msgIndex float64) float64 {
	return 0.0
}
func (_client) ScInboxMessageInit(msgIndex float64) float64 {
	return 0.0
}

func (_client) ScInboxGetTotalNumMessages() float64 {
	return 0.0
}
func (_client) N_0x03a93ff1a2ca0864() float64 {
	return 0.0
}
func (_client) GetTotalScInboxIds() float64 {
	return 0.0
}

func (_client) ScInboxMessageDoApply(p0 float64) bool;
func (_client) N_0x9a2c8064b6c1e41a(p0 float64) bool;
func (_client) ScInboxMessagePush(p0 float64) bool;

func (_client) ScInboxMessageGetBountyData(index float64, outData float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x87e0052f08bd64e6(index float64, outData float64)  (bool, float64){
	return false,0.0
}

func (_client) ScInboxMessageGetDataBool(p0 float64, p1 string) bool;
func (_client) N_0xffe5c16f402d851d(p0 float64, p1 string) bool;

func (_client) ScInboxMessageGetDataInt(p0 float64, context string, out float64)  (bool, float64){
	return false,0.0
}

func (_client) ScInboxMessageGetDataString(p0 float64, context string, out string) bool;

func (_client) ScInboxMessageGetString(p0 float64) string;
func (_client) N_0xf3e31d16cbdcb304(p0 float64) string;

func (_client) ScInboxMessageGetUgcdata(p0 float64, p1 float64)  (bool, float64){
	return false,0.0
}

func (_client) ScInboxMessagePop(p0 float64) bool;
func (_client) N_0x2c015348cf19ca1d(p0 float64) bool;

func (_client) ScInboxMessagePushGamerToEventRecipList(networkHandle float64) {}
func (_client) N_0xda024bdbd600f44a(networkHandle float64) {}

func (_client) ScInboxMessageSendBountyPresenceEvent(data string) bool;
func (_client) N_0x6afd2cd753feef83(data string) bool;

func (_client) ScInboxMessageSendUgcStatUpdateEvent(data string) {}
func (_client) N_0xa68d3d229f4f3b06(data string) {}

/**
 * NativeDB Introduced: v323
 * NativeDB Added Parameter 1: Hash attrHash
 * NativeDB Added Parameter 2: float value
 */
func (_client) ScPresenceAttrSetFloat() bool;
/**
 * NativeDB Introduced: v323
 * NativeDB Added Parameter 1: Hash attrHash
 * NativeDB Added Parameter 2: float value
 */
func (_client) N_0xc4c4575f62534a24() bool;

func (_client) ScPresenceAttrSetInt(attrHash interface{}, value float64) bool;
func (_client) N_0x1f1e9682483697c7(attrHash interface{}, value float64) bool;

func (_client) ScPresenceAttrSetString(attrHash interface{}, value string) bool;
func (_client) N_0x287f1f75d2803595(attrHash interface{}, value string) bool;

/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 * See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
 */
func (_client) ScProfanityCheckString(_string string, token float64)  (bool, float64){
	return false,0.0
}
/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 * See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
 */
func (_client) N_0x75632c5ecd7ed843(_string string, token float64)  (bool, float64){
	return false,0.0
}
/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 * See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
 */
func (_client) ScStartCheckStringTask(_string string, token float64)  (bool, float64){
	return false,0.0
}

func (_client) ScProfanityCheckUgcString(_string string, token float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0xeb2bf817463dfa28(_string string, token float64)  (bool, float64){
	return false,0.0
}

func (_client) ScProfanityGetCheckIsPending(token float64) bool;
func (_client) N_0x82e4a58babc15ae7(token float64) bool;
func (_client) ScGetCheckStringStatus(token float64) bool;

func (_client) ScProfanityGetCheckIsValid(token float64) bool;
func (_client) N_0x1753344c770358ae(token float64) bool;
func (_client) ScHasCheckStringTaskCompleted(token float64) bool;

func (_client) ScProfanityGetStringPassed(token float64) bool;
func (_client) N_0x85535acf97fc0969(token float64) bool;

func (_client) ScProfanityGetStringStatus(token float64) float64 {
	return 0.0
}
func (_client) N_0x930de22f07b1cce3(token float64) float64 {
	return 0.0
}

/**
 * Pushes a boolean for the Scaleform function onto the stack.
 */
func (_client) ScaleformMovieMethodAddParamBool(value bool) {}
/**
 * Pushes a boolean for the Scaleform function onto the stack.
 */
func (_client) PushScaleformMovieFunctionParameterBool(value bool) {}
/**
 * Pushes a boolean for the Scaleform function onto the stack.
 */
func (_client) PushScaleformMovieMethodParameterBool(value bool) {}

/**
 * Pushes a float for the Scaleform function onto the stack.
 */
func (_client) ScaleformMovieMethodAddParamFloat(value float64) {}
/**
 * Pushes a float for the Scaleform function onto the stack.
 */
func (_client) PushScaleformMovieFunctionParameterFloat(value float64) {}
/**
 * Pushes a float for the Scaleform function onto the stack.
 */
func (_client) PushScaleformMovieMethodParameterFloat(value float64) {}

/**
 * Pushes an integer for the Scaleform function onto the stack.
 */
func (_client) ScaleformMovieMethodAddParamInt(value float64) {}
/**
 * Pushes an integer for the Scaleform function onto the stack.
 */
func (_client) PushScaleformMovieFunctionParameterInt(value float64) {}
/**
 * Pushes an integer for the Scaleform function onto the stack.
 */
func (_client) PushScaleformMovieMethodParameterInt(value float64) {}

func (_client) ScaleformMovieMethodAddParamLatestBriefString(value float64) {}
func (_client) N_0xec52c631a1831c03(value float64) {}
func (_client) ScaleformMovieMethodAddParamIntString(value float64) {}

/**
 * This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
 * When switching with a controller, the icons update and become the controller's icons.
 */
func (_client) ScaleformMovieMethodAddParamPlayerNameString(_string string) {}
/**
 * This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
 * When switching with a controller, the icons update and become the controller's icons.
 */
func (_client) N_0xe83a3e3557a56640(_string string) {}
/**
 * This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
 * When switching with a controller, the icons update and become the controller's icons.
 */
func (_client) PushScaleformMovieMethodParameterButtonName(_string string) {}

func (_client) ScaleformMovieMethodAddParamTextureNameString(_string string) {}
func (_client) PushScaleformMovieFunctionParameterString(_string string) {}
func (_client) PushScaleformMovieMethodParameterString(_string string) {}

/**
 * GRAPHICS::\_0x77FE3402004CD1B0(HUD::\_GET_LABEL_TEXT("YACHT_GSY"));
 * GRAPHICS::\_0x77FE3402004CD1B0(PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()));
 * Both \_0xBA7148484BD90365 / \_0x77FE3402004CD1B0 works, but \_0x77FE3402004CD1B0 is usually used for "name" (organisation, players..).
 */
func (_client) ScaleformMovieMethodAddParamTextureNameString_2(_string string) {}
/**
 * GRAPHICS::\_0x77FE3402004CD1B0(HUD::\_GET_LABEL_TEXT("YACHT_GSY"));
 * GRAPHICS::\_0x77FE3402004CD1B0(PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()));
 * Both \_0xBA7148484BD90365 / \_0x77FE3402004CD1B0 works, but \_0x77FE3402004CD1B0 is usually used for "name" (organisation, players..).
 */
func (_client) N_0x77fe3402004cd1b0(_string string) {}
/**
 * GRAPHICS::\_0x77FE3402004CD1B0(HUD::\_GET_LABEL_TEXT("YACHT_GSY"));
 * GRAPHICS::\_0x77FE3402004CD1B0(PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()));
 * Both \_0xBA7148484BD90365 / \_0x77FE3402004CD1B0 works, but \_0x77FE3402004CD1B0 is usually used for "name" (organisation, players..).
 */
func (_client) PushScaleformMovieMethodParameterString_2(_string string) {}

/**
 * If bool Toggle = true so the mobile is hide to screen.
 * If bool Toggle = false so the mobile is show to screen.
 */
func (_client) ScriptIsMovingMobilePhoneOffscreen(toggle bool) {}

func (_client) ScriptRaceGetPlayerSplitTime(player float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x8ef5573a1f801a5c(player float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) ScriptRaceInit(p0 float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x0a60017f841a54f2(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) ScriptRaceShutdown() {}
func (_client) N_0x1ff6bf9a63e5757f() {}

/**
 * If the function returns 0, the end of the iteration has been reached.
 */
func (_client) ScriptThreadIteratorGetNextThreadId() float64 {
	return 0.0
}
/**
 * If the function returns 0, the end of the iteration has been reached.
 */
func (_client) N_0x30b4fa1c82dd4b9f() float64 {
	return 0.0
}
/**
 * If the function returns 0, the end of the iteration has been reached.
 */
func (_client) GetIdOfNextThreadInEnumeration() float64 {
	return 0.0
}

/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 */
func (_client) ScriptThreadIteratorReset() {}
/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 */
func (_client) N_0xdadfada5a20143a8() {}
/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 */
func (_client) BeginEnumeratingThreads() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) SeethroughGetMaxThickness() float64 {
	return 0.0
}

/**
 * NativeDB Introduced: v323
 */
func (_client) SeethroughReset() {}

func (_client) SeethroughSetColorNear(red float64, green float64, blue float64) {}
func (_client) N_0x1086127b3a63505e(red float64, green float64, blue float64) {}

func (_client) SeethroughSetFadeEndDistance(distance float64) {}
func (_client) N_0x9d75795b9dc6ebbf(distance float64) {}

func (_client) SeethroughSetFadeStartDistance(distance float64) {}
func (_client) N_0xa78de25577300ba1(distance float64) {}

func (_client) SeethroughSetHeatscale(index float64, heatScale float64) {}
func (_client) N_0xd7d0b00177485411(index float64, heatScale float64) {}

func (_client) SeethroughSetHiLightIntensity(intensity float64) {}
func (_client) N_0x19e50eb6e33e1d28(intensity float64) {}

func (_client) SeethroughSetHiLightNoise(noise float64) {}
func (_client) N_0x1636d7fc127b10d2(noise float64) {}

func (_client) SeethroughSetMaxThickness(thickness float64) {}
func (_client) N_0x0c8fac83902a62df(thickness float64) {}

func (_client) SeethroughSetNoiseAmountMax(amount float64) {}
func (_client) N_0xfebfbfdfb66039de(amount float64) {}

func (_client) SeethroughSetNoiseAmountMin(amount float64) {}
func (_client) N_0xff5992e1c9e65d05(amount float64) {}

/**
 * Gets the selected entity at the current mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param hitFlags A bit mask of entity types to match.
 * @param precise Whether to do a *precise* test, i.e. of visual coordinates, too.
 * @return An entity handle, or zero.
 */
func (_client) SelectEntityAtCursor(hitFlags float64, precise bool) float64 {
	return 0.0
}

/**
 * Gets the selected entity at the specified mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param fracX Mouse cursor X fraction.
 * @param fracY Mouse cursor Y fraction.
 * @param hitFlags A bit mask of entity types to match.
 * @param precise Whether to do a *precise* test, i.e. of visual coordinates, too.
 * @return An entity handle, or zero.
 */
func (_client) SelectEntityAtPos(fracX float64, fracY float64, hitFlags float64, precise bool) float64 {
	return 0.0
}

/**
 * Sends a message to the specific DUI root page. This is similar to SEND_NUI_MESSAGE.
 * @param duiObject The DUI browser handle.
 * @param jsonString The message, encoded as JSON.
 */
func (_client) SendDuiMessage(duiObject float64, jsonString string) {}

/**
 * Injects a 'mouse down' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
 * @param duiObject The DUI browser handle.
 * @param button Either `'left'`, `'middle'` or `'right'`.
 */
func (_client) SendDuiMouseDown(duiObject float64, button string) {}

/**
 * Injects a 'mouse move' event for a DUI object. Coordinates are in browser space.
 * @param duiObject The DUI browser handle.
 * @param x The mouse X position.
 * @param y The mouse Y position.
 */
func (_client) SendDuiMouseMove(duiObject float64, x float64, y float64) {}

/**
 * Injects a 'mouse up' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
 * @param duiObject The DUI browser handle.
 * @param button Either `'left'`, `'middle'` or `'right'`.
 */
func (_client) SendDuiMouseUp(duiObject float64, button string) {}

/**
 * Injects a 'mouse wheel' event for a DUI object.
 * @param duiObject The DUI browser handle.
 * @param deltaY The wheel Y delta.
 * @param deltaX The wheel X delta.
 */
func (_client) SendDuiMouseWheel(duiObject float64, deltaY float64, deltaX float64) {}

/**
 * Sends a message to the `loadingScreen` NUI frame, which contains the HTML page referenced in `loadscreen` resources.
 * @param jsonString The JSON-encoded message.
 * @return A success value.
 */
func (_client) SendLoadingScreenMessage(jsonString string) bool;

func (_client) SendNuiMessage(jsonString string) bool;

func (_client) SetAbilityBarValue(value float64, maxValue float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetAbilityBarVisibilityInMultiplayer(visible bool) {}

/**
 * For Steam.
 * Does nothing and always returns false in the retail version of the game.
 */
func (_client) SetAchievementProgress(achievement float64, progress float64) bool;
/**
 * For Steam.
 * Does nothing and always returns false in the retail version of the game.
 */
func (_client) N_0xc2afffdabbdc2c5c(achievement float64, progress float64) bool;
/**
 * For Steam.
 * Does nothing and always returns false in the retail version of the game.
 */
func (_client) SetAchievementProgression(achievement float64, progress float64) bool;

func (_client) SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object float64, toggle bool) {}

/**
 * Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
 */
func (_client) SetAggressiveHorns(toggle bool) {}

/**
 * Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) SetAiGlobalPathNodesType(_type float64) {}

func (_client) SetAiMeleeWeaponDamageModifier(modifier float64) {}

func (_client) SetAiWeaponDamageModifier(value float64) {}

/**
 * This can be between 1.0f - 14.9f
 * You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
 * On PC the multiplier can be between 0.0f and 50.0f (inclusive).
 */
func (_client) SetAirDragMultiplierForPlayersVehicle(player float64, multiplier float64) {}

func (_client) SetAllLowPriorityVehicleGeneratorsActive(active bool) {}

/**
 * Toggles a global boolean, name is probably a hash collision but describes its functionality.
 */
func (_client) SetAllPathsCacheBoundingstruct(toggle bool) {}
/**
 * Toggles a global boolean, name is probably a hash collision but describes its functionality.
 */
func (_client) N_0x228e5c6ad4d74bfd(toggle bool) {}

func (_client) SetAllRandomPedsFlee(player float64, toggle bool) {}

func (_client) SetAllRandomPedsFleeThisFrame(player float64) {}

func (_client) SetAllVehicleGeneratorsActive() {}

func (_client) SetAllVehicleGeneratorsActiveInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p6 bool, p7 bool) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) SetAllowAbilityBarInMultiplayer(toggle bool) {}

func (_client) SetAmbientPedRangeMultiplierThisFrame(multiplier float64) {}
func (_client) N_0x0b919e1fb47cc4e0(multiplier float64) {}

func (_client) SetAmbientPedsDropMoney(p0 bool) {}
func (_client) N_0x6b0e6172c9a4d902(p0 bool) {}

func (_client) SetAmbientVehicleRangeMultiplierThisFrame(range float64) {}
func (_client) N_0x90b6da738a9a25da(range float64) {}
func (_client) SetSomeVehicleDensityMultiplierThisFrame(range float64) {}

/**
 * Audio List
 * gtaforums.com/topic/795622-audio-for-mods/
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/FTeAj4yZ
 * Yes
 */
func (_client) SetAmbientVoiceName(ped float64, name string) {}

func (_client) SetAmbientVoiceNameHash(ped float64, hash interface{}) {}
func (_client) N_0x9a53ded9921de990(ped float64, hash interface{}) {}

func (_client) SetAmbientZoneListState(p0 string, p1 bool, p2 bool) {}

func (_client) SetAmbientZoneListStatePersistent(ambientZone string, p1 bool, p2 bool) {}

func (_client) SetAmbientZoneState(zoneName string, p1 bool, p2 bool) {}

func (_client) SetAmbientZoneStatePersistent(ambientZone string, p1 bool, p2 bool) {}

func (_client) SetAmmoInClip(ped float64, weaponHash interface{}, ammo float64) bool;

func (_client) SetAnimLooped(p0 float64, p1 bool, p2 float64, p3 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetAnimPlaybackTime(entity float64, p1 float64, p2 float64, p3 bool) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xddf3cb5a0a4c0b49(entity float64, p1 float64, p2 float64, p3 bool) {}

func (_client) SetAnimRate(p0 float64, p1 float64, p2 float64, p3 bool) {}

func (_client) SetAnimWeight(p0 float64, p1 float64, p2 float64, p3 float64, p4 bool) {}

/**
 * mood can be 0 or 1 (it's not a boolean value!). Effects audio of the animal.
 */
func (_client) SetAnimalMood(animal float64, mood float64) {}

/**
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 * Used in Humane Labs Heist for EMP.
 * @param state True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
 */
func (_client) SetArtificialLightsState(state bool) {}
/**
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 * Used in Humane Labs Heist for EMP.
 * @param state True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
 */
func (_client) SetBlackout(state bool) {}

/**
 * If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) SetArtificialLightsStateAffectsVehicles(toggle bool) {}

/**
 * Possible flag names:
 * "ActivateSwitchWheelAudio"
 * "AllowAmbientSpeechInSlowMo"
 * "AllowCutsceneOverScreenFade"
 * "AllowForceRadioAfterRetune"
 * "AllowPainAndAmbientSpeechToPlayDuringCutscene"
 * "AllowPlayerAIOnMission"
 * "AllowPoliceScannerWhenPlayerHasNoControl"
 * "AllowRadioDuringSwitch"
 * "AllowRadioOverScreenFade"
 * "AllowScoreAndRadio"
 * "AllowScriptedSpeechInSlowMo"
 * "AvoidMissionCompleteDelay"
 * "DisableAbortConversationForDeathAndInjury"
 * "DisableAbortConversationForRagdoll"
 * "DisableBarks"
 * "DisableFlightMusic"
 * "DisableReplayScriptStreamRecording"
 * "EnableHeadsetBeep"
 * "ForceConversationInterrupt"
 * "ForceSeamlessRadioSwitch"
 * "ForceSniperAudio"
 * "FrontendRadioDisabled"
 * "HoldMissionCompleteWhenPrepared"
 * "IsDirectorModeActive"
 * "IsPlayerOnMissionForSpeech"
 * "ListenerReverbDisabled"
 * "LoadMPData"
 * "MobileRadioInGame"
 * "OnlyAllowScriptTriggerPoliceScanner"
 * "PlayMenuMusic"
 * "PoliceScannerDisabled"
 * "ScriptedConvListenerMaySpeak"
 * "SpeechDucksScore"
 * "SuppressPlayerScubaBreathing"
 * "WantedMusicDisabled"
 * "WantedMusicOnMission"
 * -------------------------------
 * No added flag names between b393d and b573d, including b573d.
 * #######################################################################
 * "IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
 * -----------------------------------------------------------------------
 * All flag IDs and hashes:
 * ID: 01 | Hash: 0x20A7858F
 * ID: 02 | Hash: 0xA11C2259
 * ID: 03 | Hash: 0x08DE4700
 * ID: 04 | Hash: 0x989F652F
 * ID: 05 | Hash: 0x3C9E76BA
 * ID: 06 | Hash: 0xA805FEB0
 * ID: 07 | Hash: 0x4B94EA26
 * ID: 08 | Hash: 0x803ACD34
 * ID: 09 | Hash: 0x7C741226
 * ID: 10 | Hash: 0x31DB9EBD
 * ID: 11 | Hash: 0xDF386F18
 * ID: 12 | Hash: 0x669CED42
 * ID: 13 | Hash: 0x51F22743
 * ID: 14 | Hash: 0x2052B35C
 * ID: 15 | Hash: 0x071472DC
 * ID: 16 | Hash: 0xF9928BCC
 * ID: 17 | Hash: 0x7ADBDD48
 * ID: 18 | Hash: 0xA959BA1A
 * ID: 19 | Hash: 0xBBE89B60
 * ID: 20 | Hash: 0x87A08871
 * ID: 21 | Hash: 0xED1057CE
 * ID: 22 | Hash: 0x1584AD7A
 * ID: 23 | Hash: 0x8582CFCB
 * ID: 24 | Hash: 0x7E5E2FB0
 * ID: 25 | Hash: 0xAE4F72DB
 * ID: 26 | Hash: 0x5D16D1FA
 * ID: 27 | Hash: 0x06B2F4B8
 * ID: 28 | Hash: 0x5D4CDC96
 * ID: 29 | Hash: 0x8B5A48BA
 * ID: 30 | Hash: 0x98FBD539
 * ID: 31 | Hash: 0xD8CB0473
 * ID: 32 | Hash: 0x5CBB4874
 * ID: 33 | Hash: 0x2E9F93A9
 * ID: 34 | Hash: 0xD93BEA86
 * ID: 35 | Hash: 0x92109B7D
 * ID: 36 | Hash: 0xB7EC9E4D
 * ID: 37 | Hash: 0xCABDBB1D
 * ID: 38 | Hash: 0xB3FD4A52
 * ID: 39 | Hash: 0x370D94E5
 * ID: 40 | Hash: 0xA0F7938F
 * ID: 41 | Hash: 0xCBE1CE81
 * ID: 42 | Hash: 0xC27F1271
 * ID: 43 | Hash: 0x9E3258EB
 * ID: 44 | Hash: 0x551CDA5B
 * ID: 45 | Hash: 0xCB6D663C
 * ID: 46 | Hash: 0x7DACE87F
 * ID: 47 | Hash: 0xF9DE416F
 * ID: 48 | Hash: 0x882E6E9E
 * ID: 49 | Hash: 0x16B447E7
 * ID: 50 | Hash: 0xBD867739
 * ID: 51 | Hash: 0xA3A58604
 * ID: 52 | Hash: 0x7E046BBC
 * ID: 53 | Hash: 0xD95FDB98
 * ID: 54 | Hash: 0x5842C0ED
 * ID: 55 | Hash: 0x285FECC6
 * ID: 56 | Hash: 0x9351AC43
 * ID: 57 | Hash: 0x50032E75
 * ID: 58 | Hash: 0xAE6D0D59
 * ID: 59 | Hash: 0xD6351785
 * ID: 60 | Hash: 0xD25D71BC
 * ID: 61 | Hash: 0x1F7F6423
 * ID: 62 | Hash: 0xE24C3AA6
 * ID: 63 | Hash: 0xBFFDD2B7
 */
func (_client) SetAudioFlag(flagName string, toggle bool) {}

func (_client) SetAudioSceneVariable(scene string, variable string, value float64) {}

func (_client) SetAudioScriptCleanupTime(time float64) {}
func (_client) N_0xa5f377b175a699c5(time float64) {}

/**
 * Needs to be called every frame.
 * Audio mode to apply this frame: https://alloc8or.re/gta5/doc/enums/audSpecialEffectMode.txt
 * @param mode Audio mode to apply this frame
 */
func (_client) SetAudioSpecialEffectMode(mode float64) {}
/**
 * Needs to be called every frame.
 * Audio mode to apply this frame: https://alloc8or.re/gta5/doc/enums/audSpecialEffectMode.txt
 * @param mode Audio mode to apply this frame
 */
func (_client) N_0x12561fcbb62d5b9c(mode float64) {}

/**
 * Sets a floating-point parameter for a submix effect.
 * @param submixId The submix.
 * @param effectSlot The effect slot for the submix. It is expected that the effect is set in this slot beforehand.
 * @param paramIndex The parameter index for the effect.
 * @param paramValue The parameter value to set.
 */
func (_client) SetAudioSubmixEffectParamFloat(submixId float64, effectSlot float64, paramIndex float64, paramValue float64) {}

/**
 * Sets an integer parameter for a submix effect.
 * @param submixId The submix.
 * @param effectSlot The effect slot for the submix. It is expected that the effect is set in this slot beforehand.
 * @param paramIndex The parameter index for the effect.
 * @param paramValue The parameter value to set.
 */
func (_client) SetAudioSubmixEffectParamInt(submixId float64, effectSlot float64, paramIndex float64, paramValue float64) {}

/**
 * Assigns a RadioFX effect to a submix effect slot.
 * The parameter values for this effect are as follows (backticks are used to represent hashes):
 * | Index | Type | Description |
 * |-|-|-|
 * | \`enabled\` | int | Enables or disables RadioFX on this DSP. |
 * | \`default\` | int | Sets default parameters for the RadioFX DSP and enables it. |
 * | \`freq_low\` | float |  |
 * | \`freq_hi\` | float |  |
 * | \`fudge\` | float |  |
 * | \`rm_mod_freq\` | float |  |
 * | \`rm_mix\` | float |  |
 * | \`o_freq_lo\` | float |  |
 * | \`o_freq_hi\` | float |  |
 * @param submixId The submix.
 * @param effectSlot The effect slot for the submix.
 */
func (_client) SetAudioSubmixEffectRadioFx(submixId float64, effectSlot float64) {}

/**
 * Sets the volumes for the sound channels in a submix effect.
 * Values can be between 0.0 and 1.0.
 * Channel 5 and channel 6 are not used in voice chat but are believed to be center and LFE channels.
 * Output slot starts at 0 for the first ADD_AUDIO_SUBMIX_OUTPUT call then incremented by 1 on each subsequent call.
 * @param submixId The submix.
 * @param outputSlot The output slot index.
 * @param frontLeftVolume The volume for the front left channel.
 * @param frontRightVolume The volume for the front right channel.
 * @param rearLeftVolume The volume for the rear left channel.
 * @param rearRightVolume The volume for the rear right channel.
 * @param channel5Volume The volume for channel 5.
 * @param channel6Volume The volume for channel 6.
 */
func (_client) SetAudioSubmixOutputVolumes(submixId float64, outputSlot float64, frontLeftVolume float64, frontRightVolume float64, rearLeftVolume float64, rearRightVolume float64, channel5Volume float64, channel6Volume float64) {}

func (_client) SetAudioVehiclePriority(vehicle float64, p1 float64) {}

func (_client) SetAutoGiveParachuteWhenEnterPlane(player float64, toggle bool) {}

func (_client) SetAutoGiveScubaGearWhenExitVehicle(player float64, toggle bool) {}
func (_client) N_0xd2b315b6689d537d(player float64, toggle bool) {}

func (_client) SetBackfaceculling(toggle bool) {}
func (_client) N_0x23ba6b0c2ad7b0d3(toggle bool) {}

func (_client) SetBalanceAddMachine(contentId string, contentTypeName string) bool;

func (_client) SetBalanceAddMachines(dataCount float64, contentTypeName string)  (bool, float64){
	return false,0.0
}

func (_client) SetBeastModeActive(player float64) {}
func (_client) N_0x438822c279b73b93(player float64) {}

/**
 * Toggles the big minimap state like in GTA:Online.
 * To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#\_0xFFF65C63).
 * @param toggleBigMap Enable or disable the expanded minimap.
 * @param showFullMap Enable or disable the full map from being shown on the minimap, requires p0 to be true.
 */
func (_client) SetBigmapActive(toggleBigMap bool, showFullMap bool) {}
/**
 * Toggles the big minimap state like in GTA:Online.
 * To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#\_0xFFF65C63).
 * @param toggleBigMap Enable or disable the expanded minimap.
 * @param showFullMap Enable or disable the full map from being shown on the minimap, requires p0 to be true.
 */
func (_client) SetRadarBigmapEnabled(toggleBigMap bool, showFullMap bool) {}

/**
 * Only works on bikes, both X and Y work in the -1 - 1 range.
 * X forces the bike to turn left or right (-1, 1)
 * Y forces the bike to lean to the left or to the right (-1, 1)
 * Example with X -1/Y 1
 * http://i.imgur.com/TgIuAPJ.jpg
 */
func (_client) SetBikeOnStand(vehicle float64, x float64, y float64) {}
/**
 * Only works on bikes, both X and Y work in the -1 - 1 range.
 * X forces the bike to turn left or right (-1, 1)
 * Y forces the bike to lean to the left or to the right (-1, 1)
 * Example with X -1/Y 1
 * http://i.imgur.com/TgIuAPJ.jpg
 */
func (_client) SetBikeLeanAngle(vehicle float64, x float64, y float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkMovie(name string) float64 {
	return 0.0
}
/**
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkMovieRequested(name string) float64 {
	return 0.0
}

/**
 * In percentage: 0.0 - 100.0
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkMovieTime(binkMovie float64, progress float64) {}
/**
 * In percentage: 0.0 - 100.0
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkMovieProgress(binkMovie float64, progress float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) SetBinkMovieUnk_2(binkMovie float64, p1 bool) {}

/**
 * binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume (audRequestedSettings::SetVolumeCurveScale)
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkMovieVolume(binkMovie float64, value float64) {}
/**
 * binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume (audRequestedSettings::SetVolumeCurveScale)
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkMovieUnk(binkMovie float64, value float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) SetBinkShouldSkip(binkMovie float64, shouldSkip bool) {}
/**
 * NativeDB Introduced: v1290
 */
func (_client) N_0x6805d58caa427b72(binkMovie float64, shouldSkip bool) {}

/**
 * This sets bit [offset] of [address] to on.
 * The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
 * Example:
 * MISC::SET_BIT(&bitAddress, 1);
 * To check if this bit has been enabled:
 * MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
 * Please note, this method may assign a value to [address] when used.
 */
func (_client) SetBit(offset float64) float64 {
	return 0.0
}

func (_client) SetBitsInRange(rangeStart float64, rangeEnd float64, p3 float64) float64 {
	return 0.0
}

/**
 * Sets alpha-channel for blip color.
 * Example:
 * Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);
 * HUD::SET_BLIP_COLOUR(blip , 3);
 * HUD::SET_BLIP_ALPHA(blip , 64);
 */
func (_client) SetBlipAlpha(blip float64, alpha float64) {}

/**
 * false for enemy
 * true for friendly
 */
func (_client) SetBlipAsFriendly(blip float64, toggle bool) {}

func (_client) SetBlipAsMissionCreatorBlip(blip float64, toggle bool) {}

/**
 * Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
 * @param blip The blip handle.
 * @param toggle True to only display the blip as 'short range', false to display the blip from a longer distance.
 */
func (_client) SetBlipAsShortRange(blip float64, toggle bool) {}

func (_client) SetBlipBright(blip float64, toggle bool) {}

/**
 * Examples result:
 * ![](https://i.imgur.com/skY6vAJ.png)
 * **index:**
 * ```
 * 1 = No distance shown in legend
 * 2 = Distance shown in legend
 * 7 = "Other Players" category, also shows distance in legend
 * 10 = "Property" category
 * 11 = "Owned Property" category
 * ```
 * Any other value behaves like `index = 1`, `index` wraps around after 255
 * Blips with categories `7`, `10` or `11` will all show under the specific categories listing in the map legend, regardless of sprite or name.
 * **Legend entries**
 * | index | Legend entry | Label |
 * | --- | --- | --- |
 * | 7 | Other Players | `BLIP_OTHPLYR` |
 * | 10 | Property | `BLIP_PROPCAT` |
 * | 11 | Owned Property | `BLIP_APARTCAT` |
 * @param blip The blip to change the category index of
 * @param index The category index to change to
 */
func (_client) SetBlipCategory(blip float64, index float64) {}

/**
 * See https://docs.fivem.net/docs/game-references/blips/#BlipColors
 */
func (_client) SetBlipColour(blip float64, color float64) {}

func (_client) SetBlipCoords(blip float64, posX float64, posY float64, posZ float64) {}

/**
 * **displayId Behaviour** <br>
 * 0 = Doesn't show up, ever, anywhere. <br>
 * 1 = Doesn't show up, ever, anywhere. <br>
 * 2 = Shows on both main map and minimap. (Selectable on map) <br>
 * 3 = Shows on main map only. (Selectable on map) <br>
 * 4 = Shows on main map only. (Selectable on map) <br>
 * 5 = Shows on minimap only. <br>
 * 6 = Shows on both main map and minimap. (Selectable on map) <br>
 * 7 = Doesn't show up, ever, anywhere. <br>
 * 8 = Shows on both main map and minimap. (Not selectable on map) <br>
 * 9 = Shows on minimap only. <br>
 * 10 = Shows on both main map and minimap. (Not selectable on map) <br>
 * Anything higher than 10 seems to be exactly the same as 10. <br>
 * <br>
 * Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
 */
func (_client) SetBlipDisplay(blip float64, displayId float64) {}

/**
 * Must be toggled before being queued for animation
 */
func (_client) SetBlipDisplayIndicatorOnBlip(blip float64, toggle bool) {}
/**
 * Must be toggled before being queued for animation
 */
func (_client) N_0xc4278f70131baa6d(blip float64, toggle bool) {}

func (_client) SetBlipFade(blip float64, opacity float64, duration float64) {}

/**
 * Sets the interval in milliseconds before flashing the blip.
 * @param blip The blip to change flashing interval
 * @param interval Interval in milliseconds before flashing the blip
 */
func (_client) SetBlipFlashInterval(blip float64, interval float64) {}

/**
 * Flashes blip for time in milliseconds before stopping.
 * @param blip The blip to start flashing
 * @param duration Time in milliseconds to flash the blip before stopping
 */
func (_client) SetBlipFlashTimer(blip float64, duration float64) {}

func (_client) SetBlipFlashes(blip float64, toggle bool) {}

func (_client) SetBlipFlashesAlternate(blip float64, toggle bool) {}

func (_client) SetBlipHiddenOnLegend(blip float64, toggle bool) {}
func (_client) N_0x54318c915d27e4ce(blip float64, toggle bool) {}

func (_client) SetBlipHighDetail(blip float64, toggle bool) {}

/**
 * Doesn't work if the label text of gxtEntry is >= 80.
 */
func (_client) SetBlipNameFromTextFile(blip float64, gxtEntry string) {}

func (_client) SetBlipNameToPlayerName(blip float64, player float64) {}

/**
 * See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
 */
func (_client) SetBlipPriority(blip float64, priority float64) {}

/**
 * After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
 */
func (_client) SetBlipRotation(blip float64, rotation float64) {}

/**
 * Enable / disable showing route for the Blip-object.
 */
func (_client) SetBlipRoute(blip float64, enabled bool) {}

func (_client) SetBlipRouteColour(blip float64, colour float64) {}

func (_client) SetBlipScale(blip float64, scale float64) {}

/**
 * See https://imgur.com/a/lLkEsMN
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) SetBlipScaleTransformation(blip float64, xScale float64, yScale float64) {}

func (_client) SetBlipSecondaryColour(blip float64, r float64, g float64, b float64) {}

/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SetBlipShowCone(blip float64, toggle bool) {}

/**
 * Makes a blip go small when off the minimap.
 * SET_BLIP_AS_*
 */
func (_client) SetBlipShrink(blip float64, toggle bool) {}
/**
 * Makes a blip go small when off the minimap.
 * SET_BLIP_AS_*
 */
func (_client) N_0x2b6d467dab714e8d(blip float64, toggle bool) {}

/**
 * <!--
 * _loc1_.map((name, idx) => `| ${idx} | ${name} | ![${name}](https://runtime.fivem.net/blips/${name}.svg) |`).join('\n')
 * -->
 * Sets the displayed sprite for a specific blip.
 * There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
 * @param blip The blip to change.
 * @param spriteId The sprite ID to set.
 */
func (_client) SetBlipSprite(blip float64, spriteId float64) {}

/**
 * Does not require whole number/integer rotations.
 */
func (_client) SetBlipSquaredRotation(blip float64, heading float64) {}
/**
 * Does not require whole number/integer rotations.
 */
func (_client) N_0xa8b6afdac320ac87(blip float64, heading float64) {}

/**
 * works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
 */
func (_client) SetBlockingOfNonTemporaryEvents(ped float64, toggle bool) {}

func (_client) SetBoatAnchor(vehicle float64, toggle bool) {}

/**
 * Sets the boat boom position for the `TR3` trailer.
 * Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
 * To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#\_0x6636C535F6CC2725).
 * @param vehicle The TR3 vehicle.
 * @param ratio A value between 0.0 (left) and 1.0 (back)
 */
func (_client) SetBoatBoomPositionRatio(vehicle float64, ratio float64) {}
/**
 * Sets the boat boom position for the `TR3` trailer.
 * Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
 * To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#\_0x6636C535F6CC2725).
 * @param vehicle The TR3 vehicle.
 * @param ratio A value between 0.0 (left) and 1.0 (back)
 */
func (_client) N_0xf488c566413b4232(vehicle float64, ratio float64) {}

func (_client) SetBoatDisableAvoidance(vehicle float64, p1 bool) {}
func (_client) N_0x0a6a279f3aa4fd70(vehicle float64, p1 bool) {}

func (_client) SetBoatFrozenWhenAnchored(vehicle float64, toggle bool) {}
func (_client) N_0xe3ebaae484798530(vehicle float64, toggle bool) {}

func (_client) SetBoatIsSinking(vehicle float64) {}
func (_client) N_0xbd32e46aa95c1dd2(vehicle float64) {}
func (_client) SetBoatSinking(vehicle float64) {}

func (_client) SetBoatMovementResistance(vehicle float64, value float64) {}
func (_client) N_0xe842a9398079bd82(vehicle float64, value float64) {}
func (_client) SetBoatAnchorBuoyancyCoefficient(vehicle float64, value float64) {}

func (_client) SetBoatSinksWhenWrecked(vehicle float64, toggle bool) {}
func (_client) N_0x8f719973e1445ba2(vehicle float64, toggle bool) {}
func (_client) SetBoatExplodesOnWreckedAction(vehicle float64, toggle bool) {}

/**
 * Set camera as active/inactive.
 */
func (_client) SetCamActive(cam float64, active bool) {}

/**
 * Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
 */
func (_client) SetCamActiveWithInterp(camTo float64, camFrom float64, duration float64, easeLocation float64, easeRotation float64) {}

/**
 * Allows you to aim and shoot at the direction the camera is facing.
 */
func (_client) SetCamAffectsAiming(cam float64, toggle bool) {}

func (_client) SetCamAnimCurrentPhase(cam float64, phase float64) {}

/**
 * Sets the position of the cam.
 */
func (_client) SetCamCoord(cam float64, posX float64, posY float64, posZ float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) SetCamDebugName(camera float64, name string) {}

/**
 * This native has its name defined inside its codE
 */
func (_client) SetCamDofFnumberOfLens(camera float64, p1 float64) {}
/**
 * This native has its name defined inside its codE
 */
func (_client) N_0x7dd234d6f3914c5b(camera float64, p1 float64) {}

/**
 * Native name labeled within its code
 */
func (_client) SetCamDofFocalLengthMultiplier(camera float64, multiplier float64) {}
/**
 * Native name labeled within its code
 */
func (_client) N_0x47b595d60664cffa(camera float64, multiplier float64) {}

/**
 * This native has a name defined inside its code
 */
func (_client) SetCamDofFocusDistanceBias(camera float64, p1 float64) {}
/**
 * This native has a name defined inside its code
 */
func (_client) N_0xc669eea5d031b7de(camera float64, p1 float64) {}

/**
 * This native has a name defined inside its code
 */
func (_client) SetCamDofMaxNearInFocusDistance(camera float64, p1 float64) {}
/**
 * This native has a name defined inside its code
 */
func (_client) N_0xc3654a441402562d(camera float64, p1 float64) {}

/**
 * This native has a name defined inside its code
 */
func (_client) SetCamDofMaxNearInFocusDistanceBlendLevel(camera float64, p1 float64) {}
/**
 * This native has a name defined inside its code
 */
func (_client) N_0x2c654b4943bddf7c(camera float64, p1 float64) {}

func (_client) SetCamDofPlanes(cam float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) SetCamDofStrength(cam float64, dofStrength float64) {}

/**
 * if p0 is 0, effect is cancelled
 * if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
 * if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
 */
func (_client) SetCamEffect(p0 float64) {}

func (_client) SetCamFarClip(cam float64, farClip float64) {}

func (_client) SetCamFarDof(cam float64, farDOF float64) {}

/**
 * Sets the field of view of the cam.
 * ---------------------------------------------
 * Min: 1.0f
 * Max: 130.0f
 */
func (_client) SetCamFov(cam float64, fieldOfView float64) {}

/**
 * The native seems to only be called once.
 * The native is used as so,
 * CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));
 * In the exile1 script.
 */
func (_client) SetCamInheritRollVehicle(cam float64, p1 bool) {}

func (_client) SetCamMotionBlurStrength(cam float64, strength float64) {}

func (_client) SetCamNearClip(cam float64, nearClip float64) {}

func (_client) SetCamNearDof(cam float64, nearDOF float64) {}

func (_client) SetCamParams(cam float64, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, fieldOfView float64, transitionSpeed float64, p9 float64, p10 float64, rotationOrder float64) {}

/**
 * Sets the rotation of the cam.
 * Last parameter unknown.
 * Last parameter seems to always be set to 2.
 */
func (_client) SetCamRot(cam float64, rotX float64, rotY float64, rotZ float64, rotationOrder float64) {}

func (_client) SetCamShakeAmplitude(cam float64, amplitude float64) {}

/**
 * I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
 */
func (_client) SetCamSplineDuration(cam float64, timeDuration float64) {}

func (_client) SetCamSplineNodeEase(cam float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x83b8201ed82a9a2d(cam float64, p1 float64, p2 float64, p3 float64) {}

func (_client) SetCamSplineNodeExtraFlags(cam float64, p1 float64, flags float64) {}
func (_client) N_0x7bf1a54ae67ac070(cam float64, p1 float64, flags float64) {}

func (_client) SetCamSplineNodeVelocityScale(cam float64, p1 float64, scale float64) {}
func (_client) N_0xa6385deb180f319f(cam float64, p1 float64, scale float64) {}

func (_client) SetCamSplinePhase(cam float64, p1 float64) {}

func (_client) SetCamSplineSmoothingStyle(cam float64, smoothingStyle float64) {}
func (_client) N_0xd1b0f412f109ea5d(cam float64, smoothingStyle float64) {}

func (_client) SetCamUseShallowDofMode(cam float64, toggle bool) {}

func (_client) SetCamViewModeForContext(context float64, viewMode float64) {}
func (_client) N_0x2a2173e46daecd12(context float64, viewMode float64) {}

func (_client) SetCamberedWheelsDisabled(vehicle float64, toggle bool) {}
func (_client) N_0x1201e8a3290a3b98(vehicle float64, toggle bool) {}

/**
 * Setting ped to true allows the ped to shoot "friendlies".
 * p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
 * p1 = false & p2 = false for unable to aim at.
 * p1 = true & p2 = false for able to aim at.
 */
func (_client) SetCanAttackFriendly(ped float64, toggle bool, p2 bool) {}

func (_client) SetCanAutoVaultOnEntity(entity float64, toggle bool) {}
func (_client) N_0xe12abe5e3a389a6c(entity float64, toggle bool) {}

func (_client) SetCanClimbOnEntity(entity float64, toggle bool) {}
func (_client) N_0xa80ae305e0a3044f(entity float64, toggle bool) {}

/**
 * Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](https://runtime.fivem.net/doc/natives/#\_0xB4771B9AAF4E68E4) except for all weapons.
 */
func (_client) SetCanPedEquipAllWeapons(ped float64, toggle bool) {}
/**
 * Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](https://runtime.fivem.net/doc/natives/#\_0xB4771B9AAF4E68E4) except for all weapons.
 */
func (_client) N_0xeff296097ff1e509(ped float64, toggle bool) {}

/**
 * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
 */
func (_client) SetCanPedEquipWeapon(ped float64, weaponHash interface{}, toggle bool) {}
/**
 * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
 */
func (_client) N_0xb4771b9aaf4e68e4(ped float64, weaponHash interface{}, toggle bool) {}
/**
 * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
 */
func (_client) SetCanPedSelectWeapon(ped float64, weaponHash interface{}, toggle bool) {}

/**
 * Hardcoded to not work in multiplayer.
 */
func (_client) SetCanResprayVehicle(vehicle float64, state bool) {}

func (_client) SetCarBootOpen(vehicle float64) {}
func (_client) N_0xfc40cbf7b90ca77c(vehicle float64) {}

/**
 * Something to do with "high speed bump severity"?
 * if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {
 * VEHICLE::_84FD40F56075E816(0.0);
 * sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);
 * }
 */
func (_client) SetCarHighSpeedBumpSeverityMultiplier(multiplier float64) {}
/**
 * Something to do with "high speed bump severity"?
 * if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {
 * VEHICLE::_84FD40F56075E816(0.0);
 * sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);
 * }
 */
func (_client) N_0x84fd40f56075e816(multiplier float64) {}

/**
 * Stops the cargobob from being able to attach any vehicle
 * ```
 * ```
 * NativeDB Introduced: v1180
 */
func (_client) SetCargobobHookCanAttach(vehicle float64, toggle bool) {}
/**
 * Stops the cargobob from being able to attach any vehicle
 * ```
 * ```
 * NativeDB Introduced: v1180
 */
func (_client) N_0x94a68da412c4007d(vehicle float64, toggle bool) {}

/**
 * Stops cargobob from beeing able to detach the attached vehicle.
 */
func (_client) SetCargobobHookCanDetach(cargobob float64, toggle bool) {}
/**
 * Stops cargobob from beeing able to detach the attached vehicle.
 */
func (_client) N_0x571feb383f629926(cargobob float64, toggle bool) {}

/**
 * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
 */
func (_client) SetCargobobPickupMagnetActive(cargobob float64, isActive bool) {}
/**
 * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
 */
func (_client) CargobobMagnetGrabVehicle(cargobob float64, isActive bool) {}
/**
 * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
 */
func (_client) SetCargobobPickupMagnetActive(cargobob float64, isActive bool) {}

func (_client) SetCargobobPickupMagnetEffectRadius(vehicle float64, p1 float64) {}
func (_client) N_0xa17bad153b51547e(vehicle float64, p1 float64) {}

func (_client) SetCargobobPickupMagnetFalloff(vehicle float64, p1 float64) {}
func (_client) N_0x685d5561680d088b(vehicle float64, p1 float64) {}

func (_client) SetCargobobPickupMagnetPullRopeLength(cargobob float64, p1 float64) {}
func (_client) N_0x6d8eac07506291fb(cargobob float64, p1 float64) {}

func (_client) SetCargobobPickupMagnetPullStrength(cargobob float64, p1 float64) {}
func (_client) N_0xed8286f71a819baa(cargobob float64, p1 float64) {}

func (_client) SetCargobobPickupMagnetReducedFalloff(cargobob float64, p1 float64) {}
func (_client) N_0x66979acf5102fd2f(cargobob float64, p1 float64) {}

func (_client) SetCargobobPickupMagnetReducedStrength(cargobob float64, vehicle float64) {}
func (_client) N_0xe301bd63e9e13cf0(cargobob float64, vehicle float64) {}

func (_client) SetCargobobPickupMagnetStrength(cargobob float64, strength float64) {}
func (_client) N_0xbcbfcd9d1dac19e2(cargobob float64, strength float64) {}
func (_client) SetCargobobPickupMagnetStrength(cargobob float64, strength float64) {}

func (_client) SetCargobobPickupRopeDampingMultiplier(cargobob float64, p1 float64) {}
func (_client) N_0xcf1182f682f65307(cargobob float64, p1 float64) {}

func (_client) SetCargobobPickupRopeType(vehicle float64, state float64) {}
func (_client) N_0x0d5f65a8f4ebdab5(vehicle float64, state float64) {}

func (_client) SetCgAtBoundcenter(entity float64) {}

func (_client) SetCgoffset(entity float64, x float64, y float64, z float64) {}

/**
 * Sets the cylinder height of the checkpoint.
 * Parameters:
 * * nearHeight - The height of the checkpoint when inside of the radius.
 * * farHeight - The height of the checkpoint when outside of the radius.
 * * radius - The radius of the checkpoint.
 */
func (_client) SetCheckpointCylinderHeight(checkpoint float64, nearHeight float64, farHeight float64, radius float64) {}

func (_client) SetCheckpointIconScale(checkpoint float64, scale float64) {}
func (_client) N_0x44621483ff966526(checkpoint float64, scale float64) {}

/**
 * Sets the checkpoint color.
 */
func (_client) SetCheckpointRgba(checkpoint float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * Sets the checkpoint icon color.
 */
func (_client) SetCheckpointRgba2(checkpoint float64, red float64, green float64, blue float64, alpha float64) {}
/**
 * Sets the checkpoint icon color.
 */
func (_client) SetCheckpointIconRgba(checkpoint float64, red float64, green float64, blue float64, alpha float64) {}

/**
 * p0 - Scale Looks to be a normalized value (0.0 - 1.0)
 * offroad_races.c4, line ~67407:
 * a_3._f7 = GRAPHICS::CREATE_CHECKPOINT(v_D, v_A, a_4, a_7, v_E, v_F, v_10, sub_62b2(v_A, 220, 255), 0);
 * HUD::GET_HUD_COLOUR(134, &v_E, &v_F, &v_10, &v_11);
 * GRAPHICS::_SET_CHECKPOINT_ICON_RGBA(a_3._f7, v_E, v_F, v_10, sub_62b2(v_A, 70, 210));
 * GRAPHICS::_4B5B4DA5D79F1943(a_3._f7, 0.95);
 * GRAPHICS::SET_CHECKPOINT_CYLINDER_HEIGHT(a_3._f7, 4.0, 4.0, 100.0);
 */
func (_client) SetCheckpointScale(checkpoint float64, p0 float64) {}
/**
 * p0 - Scale Looks to be a normalized value (0.0 - 1.0)
 * offroad_races.c4, line ~67407:
 * a_3._f7 = GRAPHICS::CREATE_CHECKPOINT(v_D, v_A, a_4, a_7, v_E, v_F, v_10, sub_62b2(v_A, 220, 255), 0);
 * HUD::GET_HUD_COLOUR(134, &v_E, &v_F, &v_10, &v_11);
 * GRAPHICS::_SET_CHECKPOINT_ICON_RGBA(a_3._f7, v_E, v_F, v_10, sub_62b2(v_A, 70, 210));
 * GRAPHICS::_4B5B4DA5D79F1943(a_3._f7, 0.95);
 * GRAPHICS::SET_CHECKPOINT_CYLINDER_HEIGHT(a_3._f7, 4.0, 4.0, 100.0);
 */
func (_client) N_0x4b5b4da5d79f1943(checkpoint float64, p0 float64) {}

func (_client) SetCinematicButtonActive(p0 bool) {}

func (_client) SetCinematicCamShakeAmplitude(p0 float64) {}

/**
 * Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
 */
func (_client) SetCinematicModeActive(toggle bool) {}

func (_client) SetClockDate(day float64, month float64, year float64) {}

/**
 * SET_CLOCK_TIME(12, 34, 56);
 */
func (_client) SetClockTime(hour float64, minute float64, second float64) {}

func (_client) SetCloudHatOpacity(opacity float64) {}
func (_client) N_0xf36199225d6d8c86(opacity float64) {}

func (_client) SetColourOfNextTextComponent(hudColor float64) {}
func (_client) N_0x39bbf623fc803eac(hudColor float64) {}
func (_client) SetNotificationColorNext(hudColor float64) {}

func (_client) SetCombatFloat(ped float64, combatType float64, p2 float64) {}

func (_client) SetControlLightEffectColor(padIndex float64, red float64, green float64, blue float64) {}
func (_client) N_0x8290252fff36acb5(padIndex float64, red float64, green float64, blue float64) {}
func (_client) SetControlGroupColor(padIndex float64, red float64, green float64, blue float64) {}

/**
 * This is for simulating player input.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 * @param amount An unbounded normal value.
 */
func (_client) SetControlNormal(padIndex float64, control float64, amount float64) bool;
/**
 * This is for simulating player input.
 * @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
 * @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
 * @param amount An unbounded normal value.
 */
func (_client) N_0xe8a25867fba3b05e(padIndex float64, control float64, amount float64) bool;

func (_client) SetConvertibleRoof(vehicle float64, p1 bool) {}

func (_client) SetConvertibleRoofLatchState(vehicle float64, state bool) {}
func (_client) N_0x1a78ad3d8240536f(vehicle float64, state bool) {}

func (_client) SetCreateRandomCops(toggle bool) {}

func (_client) SetCreateRandomCopsNotOnScenarios(toggle bool) {}

func (_client) SetCreateRandomCopsOnScenarios(toggle bool) {}

/**
 * Requires a component_at_*_flsh to be attached to the weapon object
 */
func (_client) SetCreateWeaponObjectLightSource(object float64, toggle bool) {}
/**
 * Requires a component_at_*_flsh to be attached to the weapon object
 */
func (_client) N_0xbce595371a5fbaaf(object float64, toggle bool) {}

func (_client) SetCreditsActive(toggle bool) {}

func (_client) SetCurrentPedVehicleWeapon(ped float64, weaponHash interface{}) bool;

func (_client) SetCurrentPedWeapon(ped float64, weaponHash interface{}, bForceInHand bool) {}

func (_client) SetCurrentPlayerTcmodifier(modifierName string) {}
func (_client) N_0xbbf327ded94e4deb(modifierName string) {}

func (_client) SetCursorLocation(x float64, y float64) bool;
func (_client) N_0xfc695459d4d0e219(x float64, y float64) bool;

/**
 * Examples:
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
 */
func (_client) SetCustomRadioTrackList(radioStation string, trackListName string, p2 bool) {}
/**
 * Examples:
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);
 * AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
 */
func (_client) N_0x4e404a9361f75bb2(radioStation string, trackListName string, p2 bool) {}

/**
 * All occurrences found in b617d, sorted alphabetically and identical lines removed:
 * AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
 * AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
 * AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
 */
func (_client) SetCutsceneAudioOverride(name string) {}

func (_client) SetCutsceneCanBeSkipped(p0 bool) {}
func (_client) N_0x41faa8fb2ece8720(p0 bool) {}

func (_client) SetCutsceneEntityStreamingFlags(cutsceneEntName string, p1 float64, p2 float64) {}
func (_client) N_0x4c61c75bee8184c2(cutsceneEntName string, p1 float64, p2 float64) {}

func (_client) SetCutsceneFadeValues(p0 bool, p1 bool, p2 bool, p3 bool) {}

/**
 * p3 could be heading. Needs more research.
 */
func (_client) SetCutsceneOrigin(x float64, y float64, z float64, p3 float64, p4 float64) {}

func (_client) SetCutscenePedComponentVariation(cutsceneEntName string, p1 float64, p2 float64, p3 float64, modelHash interface{}) {}

func (_client) SetCutscenePedComponentVariationFromPed(cutsceneEntName string, ped float64, modelHash interface{}) {}
func (_client) N_0x2a56c06ebef2b0d9(cutsceneEntName string, ped float64, modelHash interface{}) {}

/**
 * Thanks R*! ;)
 * if ((l_161 == 0) || (l_161 == 2)) {
 * sub_2ea27("Trying to set Jimmy prop variation");
 * CUTSCENE::_0546524ADE2E9723("Jimmy_Boston", 1, 0, 0, 0);
 * }
 */
func (_client) SetCutscenePedPropVariation(cutsceneEntName string, p1 float64, p2 float64, p3 float64, modelHash interface{}) {}
/**
 * Thanks R*! ;)
 * if ((l_161 == 0) || (l_161 == 2)) {
 * sub_2ea27("Trying to set Jimmy prop variation");
 * CUTSCENE::_0546524ADE2E9723("Jimmy_Boston", 1, 0, 0, 0);
 * }
 */
func (_client) N_0x0546524ade2e9723(cutsceneEntName string, p1 float64, p2 float64, p3 float64, modelHash interface{}) {}

/**
 * Only used twice in R* scripts
 */
func (_client) SetCutsceneTriggerArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) SetDamping(entity float64, vertex float64, value float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) SetDebugLinesAndSpheresDrawingActive(enabled bool) {}

func (_client) SetDecisionMaker(ped float64, name interface{}) {}

/**
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
 * Works only ~200 meters around the player.
 */
func (_client) SetDeepOceanScaler(intensity float64) {}
/**
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
 * Works only ~200 meters around the player.
 */
func (_client) N_0xb96b00e976be977f(intensity float64) {}
/**
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
 * Works only ~200 meters around the player.
 */
func (_client) SetWavesIntensity(intensity float64) {}
/**
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
 * Works only ~200 meters around the player.
 */
func (_client) SetCurrentIntensity(intensity float64) {}

/**
 * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) SetDeployHeliStubWings(vehicle float64, deploy bool, p2 bool) {}
/**
 * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) N_0xb251e0b33e58b424(vehicle float64, deploy bool, p2 bool) {}

/**
 * SET_*
 */
func (_client) SetDirectorModeClearTriggeredFlag() {}
/**
 * SET_*
 */
func (_client) N_0x2632482fd6b9ab87() {}

func (_client) SetDisableAmbientMeleeMove(player float64, toggle bool) {}

func (_client) SetDisableBreaking(object float64, toggle bool) {}

func (_client) SetDisableDecalRenderingThisFrame() {}
func (_client) N_0x4b5cfc83122df602() {}

func (_client) SetDisableFragDamage(object float64, toggle bool) {}

func (_client) SetDisablePretendOccupants(vehicle float64, toggle bool) {}
func (_client) N_0x25367de49d64cf16(vehicle float64, toggle bool) {}

func (_client) SetDisableRandomTrainsThisFrame(toggle bool) {}
func (_client) N_0xd4b8e3d1917bc86b(toggle bool) {}
func (_client) SetSomethingMultiplierThisFrame(toggle bool) {}

func (_client) SetDisableSuperdummyMode(vehicle float64, p1 bool) {}
func (_client) N_0xb088e9a47ae6edd5(vehicle float64, p1 bool) {}

/**
 * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
 * ```
 * NativeDB Introduced: v1365
 * ```
 */
func (_client) SetDisableTurretMovementThisFrame(vehicle float64, turretIdx float64) {}
/**
 * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
 * ```
 * NativeDB Introduced: v1365
 * ```
 */
func (_client) N_0xe615bb7a7752c76a(vehicle float64, turretIdx float64) {}
/**
 * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
 * ```
 * NativeDB Introduced: v1365
 * ```
 */
func (_client) SetDisableTurretMovement(vehicle float64, turretIdx float64) {}

func (_client) SetDisableVehicleEngineFires(vehicle float64, toggle bool) {}
func (_client) N_0x91a0bd635321f145(vehicle float64, toggle bool) {}

/**
 * True stops vtols from switching modes. Doesn't stop the sound though.
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) SetDisableVehicleFlightNozzlePosition(vehicle float64, direction bool) {}
/**
 * True stops vtols from switching modes. Doesn't stop the sound though.
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) SetPlaneVtolAnimationDisabled(vehicle float64, direction bool) {}

func (_client) SetDisableVehiclePetrolTankDamage(vehicle float64, toggle bool) {}

func (_client) SetDisableVehiclePetrolTankFires(vehicle float64, toggle bool) {}
func (_client) N_0x465bf26ab9684352(vehicle float64, toggle bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) SetDisableVehicleUnk(toggle bool) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) SetDisableVehicleUnk_2(toggle bool) {}

/**
 * R\* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
 * @param vehicle The vehicle to toggle this for.
 * @param toggle True disables the collision, false enables the collision
 */
func (_client) SetDisableVehicleWindowCollisions(vehicle float64, toggle bool) {}
/**
 * R\* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
 * @param vehicle The vehicle to toggle this for.
 * @param toggle True disables the collision, false enables the collision
 */
func (_client) N_0x1087bc8ec540daeb(vehicle float64, toggle bool) {}

/**
 * This native sets the app id for the discord rich presence implementation.
 * @param appId A valid Discord API App Id, can be generated at https://discordapp.com/developers/applications/
 */
func (_client) SetDiscordAppId(appId string) {}

/**
 * Sets a clickable button to be displayed in a player's Discord rich presence.
 * @param index The button index, either 0 or 1.
 * @param label The text to display on the button.
 * @param url The URL to open when clicking the button. This has to start with `fivem://connect/` or `https://`.
 */
func (_client) SetDiscordRichPresenceAction(index float64, label string, url string) {}

/**
 * This native sets the image asset for the discord rich presence implementation.
 * @param assetName The name of a valid asset registered on Discordapp's developer dashboard. note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
 */
func (_client) SetDiscordRichPresenceAsset(assetName string) {}

/**
 * This native sets the small image asset for the discord rich presence implementation.
 * @param assetName The name of a valid asset registered on Discordapp's developer dashboard. Note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
 */
func (_client) SetDiscordRichPresenceAssetSmall(assetName string) {}

/**
 * This native sets the hover text of the small image asset for the discord rich presence implementation.
 * @param text Text to be displayed when hovering over small image asset. Note that you must also set a valid small image asset using the SET_DISCORD_RICH_PRESENCE_ASSET_SMALL native.
 */
func (_client) SetDiscordRichPresenceAssetSmallText(text string) {}

/**
 * This native sets the hover text of the image asset for the discord rich presence implementation.
 * @param text Text to be displayed when hovering over image asset. Note that you must also set a valid image asset using the SET_DISCORD_RICH_PRESENCE_ASSET native.
 */
func (_client) SetDiscordRichPresenceAssetText(text string) {}

func (_client) SetDispatchCopsForPlayer(player float64, toggle bool) {}

func (_client) SetDispatchIdealSpawnDistance(p0 float64) {}

func (_client) SetDispatchSpawnLocation(x float64, y float64, z float64) {}
func (_client) N_0xd10f442036302d50(x float64, y float64, z float64) {}

func (_client) SetDispatchTimeBetweenSpawnAttempts(p0 float64, p1 float64) {}

func (_client) SetDispatchTimeBetweenSpawnAttemptsMultiplier(p0 float64, p1 float64) {}

/**
 * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
 */
func (_client) SetDistantCarsEnabled(toggle bool) {}
/**
 * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
 */
func (_client) N_0xf796359a959df65d(toggle bool) {}
/**
 * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
 */
func (_client) DisplayDistantVehicles(toggle bool) {}

/**
 * This is a NOP function. It does nothing at all.
 */
func (_client) SetDitchPoliceModels(toggle bool) {}

/**
 * Sets the on-screen drawing origin for draw-functions in world coordinates.
 * The effect can be reset by calling [`CLEAR_DRAW_ORIGIN`](#\_0xFF0B610F6BE0D7AF) and is limited to 32 different origins each frame.
 */
func (_client) SetDrawOrigin(x float64, y float64, z float64, p3 float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetDriftTyresEnabled(vehicle float64, toggle bool) {}

func (_client) SetDriveTaskCruiseSpeed(driver float64, cruiseSpeed float64) {}

/**
 * This native is used to set the driving style for specific ped.
 * Driving styles id seems to be:
 * 786468
 * 262144
 * 786469
 * http://gtaforums.com/topic/822314-guide-driving-styles/
 */
func (_client) SetDriveTaskDrivingStyle(ped float64, drivingStyle float64) {}

func (_client) SetDriveTaskMaxCruiseSpeed(p0 float64, p1 float64) {}

/**
 * For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
 */
func (_client) SetDrivebyTaskTarget(shootingPed float64, targetPed float64, targetVehicle float64, x float64, y float64, z float64) {}

/**
 * The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
 */
func (_client) SetDriverAbility(driver float64, ability float64) {}

/**
 * range 0.0f - 1.0f
 */
func (_client) SetDriverAggressiveness(driver float64, aggressiveness float64) {}

/**
 * Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
 */
func (_client) SetDriverRacingModifier(driver float64, modifier float64) {}
/**
 * Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
 */
func (_client) N_0xded5af5a0ea4b297(driver float64, modifier float64) {}

/**
 * Navigates the specified DUI browser to a different URL.
 * @param duiObject The DUI browser handle.
 * @param url The new URL.
 */
func (_client) SetDuiUrl(duiObject float64, url string) {}

func (_client) SetEmitterRadioStation(emitterName string, radioStation string) {}

/**
 * Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
 * ```
 * ```
 * NativeDB Introduced: v1604
 */
func (_client) SetEnableArenaPropPhysics(entity float64, toggle bool, p2 float64) {}
/**
 * Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
 * ```
 * ```
 * NativeDB Introduced: v1604
 */
func (_client) N_0x911024442f4898f0(entity float64, toggle bool, p2 float64) {}

/**
 * NativeDB Introduced: v1604
 */
func (_client) SetEnableArenaPropPhysicsOnPed(entity float64, toggle bool, p2 float64, ped float64) {}
/**
 * NativeDB Introduced: v1604
 */
func (_client) N_0xb20834a7dd3d8896(entity float64, toggle bool, p2 float64, ped float64) {}

/**
 * Used with [SET_ENABLE_HANDCUFFS](#\_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
 */
func (_client) SetEnableBoundAnkles(ped float64, toggle bool) {}

/**
 * ped can not pull out a weapon when true
 */
func (_client) SetEnableHandcuffs(ped float64, toggle bool) {}

func (_client) SetEnablePedEnveffScale(ped float64, toggle bool) {}

/**
 * Enables diving motion when underwater.
 */
func (_client) SetEnableScuba(ped float64, toggle bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetEnableScubaGearLight(ped float64, toggle bool) {}

/**
 * Enable/Disables global slipstream physics
 */
func (_client) SetEnableVehicleSlipstreaming(toggle bool) {}
/**
 * Enable/Disables global slipstream physics
 */
func (_client) N_0xe6c0c80b8c867537(toggle bool) {}

/**
 * This native sets the entity's alpha level.
 * @param entity The entity to change the alpha for.
 * @param alphaLevel The alpha level ranges from 0 to 255, but changes occur every 20% (every 51).
 * @param skin Whether or not to change the alpha of the entity's skin.
 */
func (_client) SetEntityAlpha(entity float64, alphaLevel float64, skin bool) {}

func (_client) SetEntityAlwaysPrerender(entity float64, toggle bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetEntityAngularVelocity(entity float64, x float64, y float64, z float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x8339643499d1222e(entity float64, x float64, y float64, z float64) {}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) SetEntityAnimCurrentTime(entity float64, animDictionary string, animName string, time float64) {}

func (_client) SetEntityAnimSpeed(entity float64, animDictionary string, animName string, speedMultiplier float64) {}

/**
 * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
 * p1 has no effect when either its on or off
 * maybe a quick disassembly will tell us what it does
 * p2 has no effect when either its on or off
 * maybe a quick disassembly will tell us what it does
 */
func (_client) SetEntityAsMissionEntity(entity float64, p1 bool, p2 bool) {}

/**
 * Marks the specified entity (ped, vehicle or object) as no longer needed.
 * Entities marked as no longer needed, will be deleted as the engine sees fit.
 */
func (_client) SetEntityAsNoLongerNeeded(entity float64) {}

func (_client) SetEntityCanBeDamaged(entity float64, toggle bool) {}

func (_client) SetEntityCanBeDamagedByRelationshipGroup(entity float64, bCanBeDamaged bool, relGroup float64) {}

/**
 * Sets whether the entity can be targeted without being in line-of-sight.
 */
func (_client) SetEntityCanBeTargetedWithoutLos(entity float64, toggle bool) {}

/**
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 */
func (_client) SetEntityCleanupByEngine(entity float64, toggle bool) {}
/**
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 */
func (_client) N_0x3910051ccecdb00c(entity float64, toggle bool) {}
/**
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 */
func (_client) SetEntityRegister(entity float64, toggle bool) {}
/**
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 */
func (_client) SetEntitySomething(entity float64, toggle bool) {}

func (_client) SetEntityCollision(entity float64, toggle bool, keepPhysics bool) {}

func (_client) SetEntityCompletelyDisableCollision(entity float64, toggle bool, keepPhysics bool) {}
func (_client) N_0x9ebc85ed0fffe51c(entity float64, toggle bool, keepPhysics bool) {}
func (_client) SetEntityCollision_2(entity float64, toggle bool, keepPhysics bool) {}

/**
 * Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
 * @param entity The entity to change coordinates for.
 * @param xPos The X coordinate.
 * @param yPos The Y coordinate.
 * @param zPos The Z coordinate, ground level.
 * @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
 * @param deadFlag Whether to disable physics for dead peds, too, and not just living peds.
 * @param ragdollFlag A special flag used for ragdolling peds.
 * @param clearArea Whether to clear any entities in the target area.
 */
func (_client) SetEntityCoords(entity float64, xPos float64, yPos float64, zPos float64, alive bool, deadFlag bool, ragdollFlag bool, clearArea bool) {}

/**
 * Sets the coordinates (world position) for a specified entity.
 * @param entity The entity to change coordinates for.
 * @param xPos The X coordinate.
 * @param yPos The Y coordinate.
 * @param zPos The Z coordinate, origin level.
 * @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
 * @param deadFlag Whether to disable physics for dead peds, too, and not just living peds.
 * @param ragdollFlag A special flag used for ragdolling peds.
 */
func (_client) SetEntityCoordsNoOffset(entity float64, xPos float64, yPos float64, zPos float64, alive bool, deadFlag bool, ragdollFlag bool) {}

func (_client) SetEntityCoordsWithoutPlantsReset(entity float64, xPos float64, yPos float64, zPos float64, alive bool, deadFlag bool, ragdollFlag bool, clearArea bool) {}
func (_client) SetEntityCoords_2(entity float64, xPos float64, yPos float64, zPos float64, alive bool, deadFlag bool, ragdollFlag bool, clearArea bool) {}

/**
 * SET_ENTITY_*
 */
func (_client) SetEntityDecalsDisabled(entity float64, p1 bool) {}
/**
 * SET_ENTITY_*
 */
func (_client) N_0x2c2e3dc128f44309(entity float64, p1 bool) {}

/**
 * Draws an outline around a given entity. This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param entity A valid entity handle.
 * @param enabled Whether or not to draw an outline.
 */
func (_client) SetEntityDrawOutline(entity float64, enabled bool) {}

/**
 * Sets color for entity outline. `255, 0, 255, 255` by default.
 * @param red Red component of color.
 * @param green Green component of color.
 * @param blue Blue component of color.
 * @param alpha Alpha component of color, ignored for shader `0`.
 */
func (_client) SetEntityDrawOutlineColor(red float64, green float64, blue float64, alpha float64) {}

/**
 * Sets variant of shader that will be used to draw entity outline.
 * Variants are:
 * *   **0**: Default value, gauss shader.
 * *   **1**: 2px wide solid color outline.
 * *   **2**: Fullscreen solid color except for entity.
 * @param shader An outline shader variant.
 */
func (_client) SetEntityDrawOutlineShader(shader float64) {}

func (_client) SetEntityDynamic(entity float64, toggle bool) {}

func (_client) SetEntityHasGravity(entity float64, toggle bool) {}

/**
 * Set the heading of an entity in degrees also known as "Yaw".
 * @param entity The entity to set the heading for.
 * @param heading The heading in degrees.
 */
func (_client) SetEntityHeading(entity float64, heading float64) {}

/**
 * health >= 0
 * male ped ~= 100 - 200
 * female ped ~= 0 - 100
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 */
func (_client) SetEntityHealth(entity float64, health float64) {}

func (_client) SetEntityIconColor(entity float64, red float64, green float64, blue float64, alpha float64) {}

func (_client) SetEntityIconVisibility(entity float64, toggle bool) {}

/**
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
 * If you use this for a ped and you want Ragdoll to stay enabled, then do:
 * *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
 * Use this if you want to get the invincibility status:
 * bool IsPedInvincible(Ped ped)
 * {
 * auto addr = getScriptHandleBaseAddress(ped);
 * if (addr)
 * {
 * DWORD flag = *(DWORD *)(addr + 0x188);
 * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
 * }
 * return false;
 * }
 */
func (_client) SetEntityInvincible(entity float64, toggle bool) {}

func (_client) SetEntityIsTargetPriority(entity float64, p1 bool, p2 float64) {}

func (_client) SetEntityLights(entity float64, toggle bool) {}

/**
 * Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
 * Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 */
func (_client) SetEntityLoadCollisionFlag(entity float64, toggle bool) {}

/**
 * Sets the provided entity not visible for yourself for the current frame.
 */
func (_client) SetEntityLocallyInvisible(entity float64) {}

/**
 * Sets the provided entity visible for yourself for the current frame.
 * @param entity The entity to set locally visible.
 */
func (_client) SetEntityLocallyVisible(entity float64) {}

/**
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
 */
func (_client) SetEntityLodDist(entity float64, value float64) {}

/**
 * Sets an entity's matrix. Arguments are in the same order as with GET_ENTITY_MATRIX.
 * @param entity A valid entity handle.
 */
func (_client) SetEntityMatrix(entity float64, forwardX float64, forwardY float64, forwardZ float64, rightX float64, rightY float64, rightZ float64, upX float64, upY float64, upZ float64, atX float64, atY float64, atZ float64) {}

/**
 * For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849
 */
func (_client) SetEntityMaxHealth(entity float64, value float64) {}

func (_client) SetEntityMaxSpeed(entity float64, speed float64) {}

func (_client) SetEntityMotionBlur(entity float64, toggle bool) {}

/**
 * Calling this function disables collision between two entities.
 * The importance of the order for entity1 and entity2 is unclear.
 * The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
 */
func (_client) SetEntityNoCollisionEntity(entity1 float64, entity2 float64, thisFrameOnly bool) {}

func (_client) SetEntityOnlyDamagedByPlayer(entity float64, toggle bool) {}

func (_client) SetEntityOnlyDamagedByRelationshipGroup(entity float64, p1 bool, relationshipHash interface{}) {}

func (_client) SetEntityProofUnk(entity float64, toggle bool) {}
func (_client) N_0x15f944730c832252(entity float64, toggle bool) {}

/**
 * Enable / disable each type of damage.
 * --------------
 * p7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);
 */
func (_client) SetEntityProofs(entity float64, bulletProof bool, fireProof bool, explosionProof bool, collisionProof bool, meleeProof bool, steamProof bool, p7 bool, drownProof bool) {}

/**
 * w is the correct parameter name!
 */
func (_client) SetEntityQuaternion(entity float64, x float64, y float64, z float64, w float64) {}

func (_client) SetEntityRecordsCollisions(entity float64, toggle bool) {}

func (_client) SetEntityRenderScorched(entity float64, toggle bool) {}

func (_client) SetEntityRotation(entity float64, pitch float64, roll float64, yaw float64, rotationOrder float64, p5 bool) {}

/**
 * Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
 * 0 = green
 * 1 = red
 * 2 = yellow
 * 3 = reset changes
 * changing lights may not change the behavior of vehicles
 */
func (_client) SetEntityTrafficlightOverride(entity float64, state float64) {}

/**
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 */
func (_client) SetEntityVelocity(entity float64, x float64, y float64, z float64) {}

/**
 * Toggle the visibility of a given entity.
 * @param entity The entity to change the visibility of
 * @param toggle Whether or not the entity will be visible
 * @param unk Always 0 in scripts
 */
func (_client) SetEntityVisible(entity float64, toggle bool, unk bool) {}

func (_client) SetEntityVisibleInCutscene(p0 float64, p1 bool, p2 bool) {}

func (_client) SetEveryoneIgnorePlayer(player float64, toggle bool) {}

/**
 * Groups found in the scripts used with this native:
 * "AMMUNATION",
 * "QUARRY",
 * "Triathlon_1",
 * "Triathlon_2",
 * "Triathlon_3"
 */
func (_client) SetExclusiveScenarioGroup(scenarioGroup string) {}

func (_client) SetExplosiveAmmoThisFrame(player float64) {}

func (_client) SetExplosiveMeleeThisFrame(player float64) {}

func (_client) SetExtraTimecycleModifier(modifierName string) {}

/**
 * The same as [`SetTimecycleModifierStrength`](#\_0x82E7FFCD5B2326B3) but for the secondary tiemcycle modifier.
 */
func (_client) SetExtraTimecycleModifierStrength(strength float64) {}
/**
 * The same as [`SetTimecycleModifierStrength`](#\_0x82E7FFCD5B2326B3) but for the secondary tiemcycle modifier.
 */
func (_client) N_0x2c328af17210f009(strength float64) {}

/**
 * Clipsets:
 * "facials@gen_female@base"
 * "facials@gen_male@base"
 * "facials@p_m_zero@base"
 * Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#\_0xFFC24B988B938B38):
 * "mood_drunk\_1"
 * "mood_stressed\_1"
 * "mood_happy\_1"
 * "mood_talking\_1"
 * ```
 * NativeDB Introduced: v1493
 * ```
 */
func (_client) SetFacialClipsetOverride(ped float64, animDict string) {}
/**
 * Clipsets:
 * "facials@gen_female@base"
 * "facials@gen_male@base"
 * "facials@p_m_zero@base"
 * Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#\_0xFFC24B988B938B38):
 * "mood_drunk\_1"
 * "mood_stressed\_1"
 * "mood_happy\_1"
 * "mood_talking\_1"
 * ```
 * NativeDB Introduced: v1493
 * ```
 */
func (_client) N_0x5687c7f05b39e401(ped float64, animDict string) {}

func (_client) SetFacialIdleAnimOverride(ped float64, animName string, animDict string) {}

/**
 * Sets whether the game should fade in after the player dies or is arrested.
 */
func (_client) SetFadeInAfterDeathArrest(toggle bool) {}

func (_client) SetFadeInAfterLoad(toggle bool) {}

/**
 * Sets whether the game should fade out after the player is arrested.
 */
func (_client) SetFadeOutAfterArrest(toggle bool) {}

/**
 * Sets whether the game should fade out after the player dies.
 */
func (_client) SetFadeOutAfterDeath(toggle bool) {}

/**
 * Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
 * Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
 */
func (_client) SetFakeWantedLevel(fakeWantedLevel float64) {}

func (_client) SetFarDrawVehicles(toggle bool) {}

func (_client) SetFireAmmoThisFrame(player float64) {}

/**
 * SET_FIRE_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) SetFireSpreadRate(p0 float64) {}

func (_client) SetFirstPersonAimCamNearClipThisUpdate(distance float64) {}
func (_client) N_0x0af7b437918103b3(distance float64) {}
func (_client) SetFirstPersonCamNearClip(distance float64) {}

func (_client) SetFirstPersonAimCamZoomFactor(zoomFactor float64) {}
func (_client) N_0x70894bd0915c5bca(zoomFactor float64) {}

func (_client) SetFirstPersonCamPitchRange(minAngle float64, maxAngle float64) {}
func (_client) N_0xbcfc632db7673bf0(minAngle float64, maxAngle float64) {}

/**
 * Purpose of p0 and p1 unknown.
 */
func (_client) SetFlash(p0 float64, p1 float64, fadeIn float64, duration float64, fadeOut float64) {}

/**
 * Enables/disables flashlight on ped's weapon.
 * ```
 * NativeDB Introduced: v2060
 * ```
 */
func (_client) SetFlashLightEnabled(ped float64, toggle bool) {}

func (_client) SetFlashLightFadeDistance(distance float64) float64 {
	return 0.0
}

/**
 * Allows Weapon-Flashlight beams to stay visible while moving. Normally it only stays on while aiming.
 * @param state On/Off
 */
func (_client) SetFlashLightKeepOnWhileMoving(state bool) {}

func (_client) SetFloatingHelpTextScreenPosition(hudIndex float64, x float64, y float64) {}
func (_client) N_0x7679cc1bcebe3d4c(hudIndex float64, x float64, y float64) {}

func (_client) SetFloatingHelpTextStyle(hudIndex float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}
func (_client) N_0x788e7fd431bd67f1(hudIndex float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) SetFloatingHelpTextToEntity(hudIndex float64, entity float64, offsetX float64, offsetY float64) {}
func (_client) N_0xb094bc1db4018240(hudIndex float64, entity float64, offsetX float64, offsetY float64) {}

func (_client) SetFloatingHelpTextWorldPosition(hudIndex float64, x float64, y float64, z float64) {}
func (_client) N_0x784ba7e0eceb4178(hudIndex float64, x float64, y float64, z float64) {}

func (_client) SetFlyCamCoordAndConstrain(cam float64, x float64, y float64, z float64) {}
func (_client) N_0xc91c6c55199308ca(cam float64, x float64, y float64, z float64) {}

func (_client) SetFlyCamHorizontalResponse(cam float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0x503f5920162365b2(cam float64, p1 float64, p2 float64, p3 float64) {}

func (_client) SetFlyCamMaxHeight(cam float64, height float64) {}
func (_client) N_0xf9d02130ecdd1d77(cam float64, height float64) {}
func (_client) SetCameraRange(cam float64, height float64) {}

func (_client) SetFlyCamVerticalSpeedMultiplier(cam float64, p1 float64, p2 float64, p3 float64) {}
func (_client) N_0xe827b9382cfb41ba(cam float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Sets some in-game parameters which is used for checks is ped needs to fly through windscreen after a crash.
 * @param vehMinSpeed Vehicle minimum speed (default 35.0).
 * @param unkMinSpeed Unknown minimum speed (default 40.0).
 * @param unkModifier Unknown modifier (default 17.0).
 * @param minDamage Minimum damage (default 2000.0).
 * @return A bool indicating if parameters was set successfully.
 */
func (_client) SetFlyThroughWindscreenParams(vehMinSpeed float64, unkMinSpeed float64, unkModifier float64, minDamage float64) bool;

/**
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
 */
func (_client) SetFocusEntity(entity float64) {}

/**
 * Override the area where the camera will render the terrain.
 * p3, p4 and p5 are usually set to 0.0
 */
func (_client) SetFocusPosAndVel(x float64, y float64, z float64, offsetX float64, offsetY float64, offsetZ float64) {}
/**
 * Override the area where the camera will render the terrain.
 * p3, p4 and p5 are usually set to 0.0
 */
func (_client) SetFocusArea(x float64, y float64, z float64, offsetX float64, offsetY float64, offsetZ float64) {}

/**
 * From the scripts:
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
 */
func (_client) SetFollowPedCamThisUpdate(camName string, p1 float64) bool;
/**
 * From the scripts:
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);
 * CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
 */
func (_client) SetFollowPedCamCutsceneChat(camName string, p1 float64) bool;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 */
func (_client) SetFollowPedCamViewMode(viewMode float64) {}

/**
 * NativeDB Introduced: v1365
 * @param seatIndex See [IS_TURRET_SEAT](#\_0xE33FFA906CE74880)
 */
func (_client) SetFollowTurretSeatCam(seatIndex float64) {}
/**
 * NativeDB Introduced: v1365
 * @param seatIndex See [IS_TURRET_SEAT](#\_0xE33FFA906CE74880)
 */
func (_client) N_0x5c90cab09951a12f(seatIndex float64) {}

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 */
func (_client) SetFollowVehicleCamViewMode(viewMode float64) {}

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 */
func (_client) SetFollowVehicleCamZoomLevel(zoomLevel float64) {}

func (_client) SetForceFootstepUpdate(ped float64, toggle bool) {}
func (_client) N_0x129466ed55140f8d(ped float64, toggle bool) {}

func (_client) SetForceHdVehicle(vehicle float64, toggle bool) {}
func (_client) N_0x97ce68cb032583f0(vehicle float64, toggle bool) {}

func (_client) SetForceObjectThisFrame(x float64, y float64, z float64, p3 float64) {}

/**
 * Forces footstep tracks on all surfaces.
 * USE_/USING_*
 */
func (_client) SetForcePedFootstepsTracks(toggle bool) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) SetForcePlayerToJump(player float64) {}
/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xa1183bcfee0f93d1(player float64) {}

func (_client) SetForceStepType(ped float64, p1 bool, _type float64, p3 float64) {}
func (_client) N_0xcb968b53fc7f916d(ped float64, p1 bool, _type float64, p3 float64) {}

/**
 * Forces vehicle trails on all surfaces.
 * USE_/USING_*
 */
func (_client) SetForceVehicleTrails(toggle bool) {}

/**
 * X,Y position of boat is frozen in place when anchored and its engine disabled, only the Z value changes. Requires 0xE3EBAAE484798530 to be set to true.
 * SET_FORCED_ZENITH_QUADTREE?
 */
func (_client) SetForcedBoatLocationWhenAnchored(vehicle float64, toggle bool) {}
/**
 * X,Y position of boat is frozen in place when anchored and its engine disabled, only the Z value changes. Requires 0xE3EBAAE484798530 to be set to true.
 * SET_FORCED_ZENITH_QUADTREE?
 */
func (_client) N_0xb28b1fe5bfadd7f5(vehicle float64, toggle bool) {}

/**
 * 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
 */
func (_client) SetForkliftForkHeight(vehicle float64, height float64) {}
/**
 * 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
 */
func (_client) N_0x37ebbf3117bd6a25(vehicle float64, height float64) {}

func (_client) SetFrontendActive(active bool) {}

func (_client) SetFrontendRadioActive(active bool) {}

/**
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
 */
func (_client) SetGamePaused(toggle bool) {}

func (_client) SetGamePausesForStreaming(toggle bool) {}

func (_client) SetGameplayCamFollowPedThisUpdate(ped float64) {}
func (_client) N_0x8bbacbf51da047a8(ped float64) {}

/**
 * Sets gameplay camera to hash
 * ```
 * ```
 * NativeDB Introduced: v1180
 */
func (_client) SetGameplayCamHash(camName string) {}
/**
 * Sets gameplay camera to hash
 * ```
 * ```
 * NativeDB Introduced: v1180
 */
func (_client) N_0x425a920fdb9a0dda(camName string) {}

func (_client) SetGameplayCamRawPitch(pitch float64) {}

/**
 * Does nothing
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SetGameplayCamRawYaw(yaw float64) {}

/**
 * Sets the camera position relative to heading in float from -360 to +360.
 * Heading is alwyas 0 in aiming camera.
 */
func (_client) SetGameplayCamRelativeHeading(heading float64) {}

/**
 * This native sets the camera's pitch (rotation on the x-axis).
 * @param angle the angle to rotate the camera by
 * @param scalingFactor always seems to be set to 1.0 in native calls
 */
func (_client) SetGameplayCamRelativePitch(angle float64, scalingFactor float64) {}

func (_client) SetGameplayCamRelativeRotation(roll float64, pitch float64, yaw float64) {}
func (_client) N_0x48608c3464f58ab4(roll float64, pitch float64, yaw float64) {}

/**
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
 */
func (_client) SetGameplayCamShakeAmplitude(amplitude float64) {}

/**
 * From b617 scripts:
 * CAM::_21E253A7F8DA5DFB("DINGHY");
 * CAM::_21E253A7F8DA5DFB("ISSI2");
 * CAM::_21E253A7F8DA5DFB("SPEEDO");
 */
func (_client) SetGameplayCamVehicleCamera(vehicleName string) {}
/**
 * From b617 scripts:
 * CAM::_21E253A7F8DA5DFB("DINGHY");
 * CAM::_21E253A7F8DA5DFB("ISSI2");
 * CAM::_21E253A7F8DA5DFB("SPEEDO");
 */
func (_client) N_0x21e253a7f8da5dfb(vehicleName string) {}

func (_client) SetGameplayCamVehicleCameraName(vehicleModel interface{}) {}
func (_client) N_0x11fa5d3479c7dd47(vehicleModel interface{}) {}

func (_client) SetGameplayCoordHint(x float64, y float64, z float64, duration float64, blendOutDuration float64, blendInDuration float64, unk float64) {}

/**
 * p6 & p7 - possibly length or time
 */
func (_client) SetGameplayEntityHint(entity float64, xOffset float64, yOffset float64, zOffset float64, p4 bool, p5 float64, p6 float64, p7 float64, p8 float64) {}

func (_client) SetGameplayHintAnimCloseup(toggle bool) {}
func (_client) GetIsMultiplayerBrief(toggle bool) {}
func (_client) N_0xe3433eadaaf7ee40(toggle bool) {}

func (_client) SetGameplayHintAnimOffsetx(xOffset float64) {}
func (_client) N_0x5d7b620dae436138(xOffset float64) {}

func (_client) SetGameplayHintAnimOffsety(yOffset float64) {}
func (_client) N_0xc92717ef615b6704(yOffset float64) {}

func (_client) SetGameplayHintBaseOrbitPitchOffset(value float64) {}
func (_client) N_0xd1f8363dfad03848(value float64) {}
func (_client) SetGameplayHintAngle(value float64) {}

func (_client) SetGameplayHintFollowDistanceScalar(value float64) {}
func (_client) N_0xf8bdbf3d573049a1(value float64) {}
func (_client) SetGameplayHintAnimOffsetz(value float64) {}

func (_client) SetGameplayHintFov(FOV float64) {}

func (_client) SetGameplayObjectHint(p0 float64, p1 float64, p2 float64, p3 float64, p4 bool, p5 float64, p6 float64, p7 float64) {}

func (_client) SetGameplayPedHint(p0 float64, x1 float64, y1 float64, z1 float64, p4 bool, duration float64, blendOutDuration float64, blendInDuration float64) {}

/**
 * Focuses the camera on the specified vehicle.
 * @param vehicle The vehicle to focus on.
 * @param offsetX Position offset X
 * @param offsetY Position offset Y
 * @param offsetZ Position offset Z
 * @param time Effect duration
 * @param easeInTime Effect fade in duration
 * @param easeOutTime EFfect fade out duration
 */
func (_client) SetGameplayVehicleHint(vehicle float64, offsetX float64, offsetY float64, offsetZ float64, p4 bool, time float64, easeInTime float64, easeOutTime float64) {}

func (_client) SetGarbageTrucks(toggle bool) {}

/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
 * 'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
 * @param alpha A value between 1 and 254. Default: 128
 */
func (_client) SetGhostedEntityAlpha(alpha float64) {}
/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
 * 'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
 * @param alpha A value between 1 and 254. Default: 128
 */
func (_client) N_0x658500ae6d723a7e(alpha float64) {}

/**
 * Birds will try to reach the given height.
 */
func (_client) SetGlobalMinBirdFlightHeight(height float64) {}

func (_client) SetGpsActive(active bool) {}

func (_client) SetGpsCustomRouteRender(toggle bool, radarThickness float64, mapThickness float64) {}
func (_client) N_0x900086f371220b6f(toggle bool, radarThickness float64, mapThickness float64) {}

func (_client) SetGpsDisabledZone(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) {}

/**
 * Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
 * You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
 * **Setting a waypoint at the same coordinate:**
 * Disabled Zone: <https://i.imgur.com/P9VUuxM.png>
 * Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
 * @param x1 X coordinate of first vector.
 * @param y1 Y coordinate of first vector.
 * @param z1 Z coordinate of first vector.
 * @param x2 X coordinate of second vector.
 * @param y2 Y coordinate of second vector.
 * @param z2 Z coordinate of second vector.
 * @param index Index of zone.
 */
func (_client) SetGpsDisabledZoneAtIndex(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, index float64) {}
/**
 * Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
 * You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
 * **Setting a waypoint at the same coordinate:**
 * Disabled Zone: <https://i.imgur.com/P9VUuxM.png>
 * Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
 * @param x1 X coordinate of first vector.
 * @param y1 Y coordinate of first vector.
 * @param z1 Z coordinate of first vector.
 * @param x2 X coordinate of second vector.
 * @param y2 Y coordinate of second vector.
 * @param z2 Z coordinate of second vector.
 * @param index Index of zone.
 */
func (_client) N_0xd0bc1c6fb18ee154(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, index float64) {}

/**
 * Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
 * Doesn't seem like the flags are actually read by the game at all.
 */
func (_client) SetGpsFlags(p0 float64, p1 float64) {}

func (_client) SetGpsFlashes(toggle bool) {}

func (_client) SetGpsMultiRouteRender(toggle bool) {}
func (_client) N_0x3dda37128dd1aca8(toggle bool) {}

/**
 * level can be from 0 to 3
 * 0: 9.8
 * 1: 2.4
 * 2: 0.1 - very low
 * 3: 0.0
 */
func (_client) SetGravityLevel(level float64) {}

/**
 * 0: Freedom to move
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader
 * 3: Line, with Leader at center
 * 4: Arrow Formation
 * 5: "V" Formation
 * 6: Line Follow Formation
 * 7: Single Formation
 * 8: Pairwise
 */
func (_client) SetGroupFormation(groupId float64, formationType float64) {}

func (_client) SetGroupFormationSpacing(groupId float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Sets the range at which members will automatically leave the group.
 */
func (_client) SetGroupSeparationRange(groupHandle float64, separationRange float64) {}

func (_client) SetHandleRockstarMessageViaScript(toggle bool) {}
func (_client) N_0xbfa0a56a817c6c7d(toggle bool) {}

/**
 * Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
 * Example: `SetHandlingField('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
 * @param vehicle The vehicle class to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The value to set.
 */
func (_client) SetHandlingField(vehicle string, class_ string, fieldName string, value float64) {}

/**
 * Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
 * Example: `SetHandlingFloat('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
 * @param vehicle The vehicle class to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The floating-point value to set.
 */
func (_client) SetHandlingFloat(vehicle string, class_ string, fieldName string, value float64) {}

/**
 * Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
 * @param vehicle The vehicle class to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The integer value to set.
 */
func (_client) SetHandlingInt(vehicle string, class_ string, fieldName string, value float64) {}

/**
 * Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
 * Example: `SetHandlingVector('AIRTUG', 'CHandlingData', 'vecCentreOfMassOffset', vector3(0.0, 0.0, -5.0))`
 * @param vehicle The vehicle class to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The Vector3 value to set.
 */
func (_client) SetHandlingVector(vehicle string, class_ string, fieldName string) {}

/**
 * Sets profile setting 866
 * SET_*
 */
func (_client) SetHasContentUnlocksFlags(value float64) {}
/**
 * Sets profile setting 866
 * SET_*
 */
func (_client) N_0xdac073c7901f9e15(value float64) {}

func (_client) SetHdArea(x float64, y float64, z float64, radius float64) {}

/**
 * Preview: https://gfycat.com/MaleRareAmazonparrot
 * @param id From 0 to 3.
 */
func (_client) SetHeadBlendPaletteColor(ped float64, r float64, g float64, b float64, id float64) {}
/**
 * Preview: https://gfycat.com/MaleRareAmazonparrot
 * @param id From 0 to 3.
 */
func (_client) N_0xcc9682b8951c5229(ped float64, r float64, g float64, b float64, id float64) {}

func (_client) SetHealthHudDisplayValues(health float64, capacity float64, wasAdded bool) {}
func (_client) N_0x3f5cc444dcaaa8f2(health float64, capacity float64, wasAdded bool) {}

/**
 * Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
 * this native works on planes to?
 */
func (_client) SetHeliBladesFullSpeed(vehicle float64) {}

/**
 * Sets the speed of the helicopter blades in percentage of the full speed.
 * vehicleHandle: The helicopter.
 * speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
 */
func (_client) SetHeliBladesSpeed(vehicle float64, speed float64) {}

func (_client) SetHeliMainRotorHealth(vehicle float64, health float64) {}
func (_client) N_0x4056ea1105f5abd7(vehicle float64, health float64) {}

func (_client) SetHeliTailExplodeThrowDashboard(vehicle float64, p1 bool) {}
func (_client) WasCounterActivated(vehicle float64, p1 bool) {}
func (_client) N_0x3ec8bf18aa453fe9(vehicle float64, p1 bool) {}

func (_client) SetHeliTailRotorHealth(vehicle float64, health float64) {}
func (_client) N_0xfe205f38aaa58e5b(vehicle float64, health float64) {}

func (_client) SetHeliTurbulenceScalar(vehicle float64, p1 float64) {}
func (_client) N_0xe6f13851780394da(vehicle float64, p1 float64) {}

/**
 * value between 0.0 and 1.0
 */
func (_client) SetHelicopterRollPitchYawMult(helicopter float64, multiplier float64) {}

func (_client) SetHelpMessageTextStyle(style float64, hudColor float64, alpha float64, p3 float64, p4 float64) {}
func (_client) N_0xb9c362babecddc7a(style float64, hudColor float64, alpha float64, p3 float64, p4 float64) {}

func (_client) SetHidofOverride(p0 bool, p1 bool, nearplaneOut float64, nearplaneIn float64, farplaneOut float64, farplaneIn float64) {}
func (_client) N_0xba3d65906822bed5(p0 bool, p1 bool, nearplaneOut float64, nearplaneIn float64, farplaneOut float64, farplaneIn float64) {}
func (_client) SetHidofEnvBlurParams(p0 bool, p1 bool, nearplaneOut float64, nearplaneIn float64, farplaneOut float64, farplaneIn float64) {}

func (_client) SetHighFallTask(ped float64, duration float64, p2 float64, p3 float64) {}

func (_client) SetHornEnabled(vehicle float64, toggle bool) {}

func (_client) SetHudComponentPosition(id float64, x float64, y float64) {}

func (_client) SetHydraulicRaised(vehicle float64, toggle bool) {}
func (_client) N_0x28b18377eb6e25f6(vehicle float64, toggle bool) {}

func (_client) SetHydraulicWheelState(vehicle float64, state float64) {}
func (_client) N_0x8ea86df356801c7d(vehicle float64, state float64) {}

/**
 * Sets vehicle wheel hydraulic states transition. Known states:
 * 0 - reset
 * 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
 * 2 - jump using wheel
 */
func (_client) SetHydraulicWheelStateTransition(vehicle float64, wheelId float64, state float64, value float64, p4 float64) {}
/**
 * Sets vehicle wheel hydraulic states transition. Known states:
 * 0 - reset
 * 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
 * 2 - jump using wheel
 */
func (_client) N_0xc24075310a8b9cd1(vehicle float64, wheelId float64, state float64, value float64, p4 float64) {}

/**
 * Works only on vehicles that support hydraulic.
 */
func (_client) SetHydraulicWheelValue(vehicle float64, wheelId float64, value float64) {}
/**
 * Works only on vehicles that support hydraulic.
 */
func (_client) N_0x84ea99c62cb3ef0c(vehicle float64, wheelId float64, value float64) {}
/**
 * Works only on vehicles that support hydraulic.
 */
func (_client) SetHydraulicState(vehicle float64, wheelId float64, value float64) {}

func (_client) SetIgnoreLowPriorityShockingEvents(player float64, toggle bool) {}

func (_client) SetIgnoreNoGpsFlag(toggle bool) {}

/**
 * See: SET_BLIP_ROUTE
 */
func (_client) SetIgnoreSecondaryRouteNodes(toggle bool) {}
/**
 * See: SET_BLIP_ROUTE
 */
func (_client) N_0x1fc289a0c3ff470f(toggle bool) {}

func (_client) SetIkTarget(ped float64, ikIndex float64, entityLookAt float64, boneLookAt float64, offsetX float64, offsetY float64, offsetZ float64, p7 float64, blendInDuration float64, blendOutDuration float64) {}

func (_client) SetInVehicleCamStateThisUpdate(p0 float64, p1 float64) {}
func (_client) N_0xe9ea16d6e54cdca4(p0 float64, p1 float64) {}

func (_client) SetIncidentRequestedUnits(incidentId float64, dispatchService float64, numUnits float64) {}
func (_client) N_0xb08b85d860e7ba3c(incidentId float64, dispatchService float64, numUnits float64) {}

/**
 * SET_INCIDENT_*
 */
func (_client) SetIncidentUnk(incidentId float64, p1 float64) {}
/**
 * SET_INCIDENT_*
 */
func (_client) N_0xd261ba3e7e998072(incidentId float64, p1 float64) {}

func (_client) SetInitialPlayerStation(radioStation string) {}

func (_client) SetInputExclusive(padIndex float64, control float64) {}

/**
 * Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
 */
func (_client) SetInstancePriorityHint(flag float64) {}
/**
 * Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
 */
func (_client) SetUnkMapFlag(flag float64) {}

/**
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
 * @param toggle toggles the instance priority mode
 */
func (_client) SetInstancePriorityMode(toggle float64) {}
/**
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
 * @param toggle toggles the instance priority mode
 */
func (_client) EnableMpDlcMaps(toggle float64) {}
/**
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
 * @param toggle toggles the instance priority mode
 */
func (_client) UseFreemodeMapBehavior(toggle float64) {}
/**
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
 * @param toggle toggles the instance priority mode
 */
func (_client) LowerMapPropDensity(toggle float64) {}

func (_client) SetInteriorActive(interiorID float64, toggle bool) {}

func (_client) SetInteriorEntitySetColor(interior float64, entitySetName string, color float64) {}
func (_client) SetInteriorPropColor(interior float64, entitySetName string, color float64) {}

func (_client) SetInteriorPortalCornerPosition(interiorId float64, portalIndex float64, cornerIndex float64, posX float64, posY float64, posZ float64) {}

func (_client) SetInteriorPortalFlag(interiorId float64, portalIndex float64, flag float64) {}

func (_client) SetInteriorPortalRoomFrom(interiorId float64, portalIndex float64, roomFrom float64) {}

func (_client) SetInteriorPortalRoomTo(interiorId float64, portalIndex float64, roomTo float64) {}

func (_client) SetInteriorRoomExtents(interiorId float64, roomIndex float64, bbMinX float64, bbMinY float64, bbMinZ float64, bbMaxX float64, bbMaxY float64, bbMaxZ float64) {}

func (_client) SetInteriorRoomFlag(interiorId float64, roomIndex float64, flag float64) {}

func (_client) SetInteriorRoomTimecycle(interiorId float64, roomIndex float64, timecycleHash float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetInteriorZoomLevelDecreased(toggle bool) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x7ec8aba5e74b3d7a(toggle bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetInteriorZoomLevelIncreased(toggle bool) {}
/**
 * NativeDB Introduced: v1493
 */
func (_client) N_0x504dfe62a1692296(toggle bool) {}

/**
 * Enables the specified island. For more information, see islandhopper.meta
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) SetIslandHopperEnabled(name string, toggle bool) {}

func (_client) SetLastDrivenVehicle(vehicle float64) {}
func (_client) N_0xacfb2463cc22bed2(vehicle float64) {}

/**
 * Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
 * ```
 * NativeDB Introduced: v1604
 * ```
 */
func (_client) SetLaunchControlEnabled(toggle bool) {}
/**
 * Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
 * ```
 * NativeDB Introduced: v1604
 * ```
 */
func (_client) N_0xaa6a6098851c396f(toggle bool) {}

func (_client) SetLightsCutoffDistanceTweak(distance float64) {}
func (_client) N_0xbc3cca5844452b06(distance float64) {}

/**
 * Formerly incorrectly named `USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR` due to incorrect treatment of console vs. PC native registration.
 * Native name guessed through ordering.
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 */
func (_client) SetLocalPlayerAsGhost(toggle bool) {}

func (_client) SetLocalPlayerCanCollectPortablePickups(p0 bool) {}
func (_client) N_0x78857fc65cadb909(p0 bool) {}

/**
 * Maximum amount of pickup models that can be disallowed is 30.
 * SET_LOCAL_PLAYER_*
 */
func (_client) SetLocalPlayerCanUsePickupsWithThisModel(modelHash interface{}, toggle bool) {}
/**
 * Maximum amount of pickup models that can be disallowed is 30.
 * SET_LOCAL_PLAYER_*
 */
func (_client) N_0x88eaec617cd26926(modelHash interface{}, toggle bool) {}

func (_client) SetLocalPlayerInvisibleLocally(p0 bool) {}

func (_client) SetLocalPlayerVisibleInCutscene(p0 bool, p1 bool) {}

func (_client) SetLocalPlayerVisibleLocally(p0 bool) {}

func (_client) SetMainPlayerBlipColour(color float64) {}
func (_client) N_0x7b21e0bb01e8224a(color float64) {}

/**
 * Sets whether or not `SHUTDOWN_LOADING_SCREEN` automatically shuts down the NUI frame for the loading screen. If this is enabled,
 * you will have to manually invoke `SHUTDOWN_LOADING_SCREEN_NUI` whenever you want to hide the NUI loading screen.
 * @param manualShutdown TRUE to manually shut down the loading screen NUI.
 */
func (_client) SetManualShutdownLoadingScreenNui(manualShutdown bool) {}

/**
 * Sets values to the zoom level data by index.
 * @param index Zoom level index.
 * @param zoomScale fZoomScale value.
 * @param zoomSpeed fZoomSpeed value.
 * @param scrollSpeed fScrollSpeed value.
 * @param tilesX vTiles X.
 * @param tilesY vTiles Y.
 */
func (_client) SetMapZoomDataLevel(index float64, zoomScale float64, zoomSpeed float64, scrollSpeed float64, tilesX float64, tilesY float64) {}

/**
 * Possible p0 values:
 * "prologue"
 * "Prologue_Main"
 */
func (_client) SetMapdatacullboxEnabled(name string, toggle bool) {}
/**
 * Possible p0 values:
 * "prologue"
 * "Prologue_Main"
 */
func (_client) N_0xaf12610c644a35c9(name string, toggle bool) {}

func (_client) SetMaxArmourHudDisplay(maximumValue float64) {}
func (_client) N_0x06a320535f5f0248(maximumValue float64) {}

func (_client) SetMaxHealthHudDisplay(maximumValue float64) {}
func (_client) N_0x975d66a0bc17064c(maximumValue float64) {}

func (_client) SetMaxNumPortablePickupsCarriedByPlayer(modelHash interface{}, p1 float64) {}
func (_client) N_0x0bf3b3bd47d79c08(modelHash interface{}, p1 float64) {}

func (_client) SetMaxWantedLevel(maxWantedLevel float64) {}

/**
 * If this is the correct name, what microphone I know your TV isn't going to reach out and adjust your headset so..
 */
func (_client) SetMicrophonePosition(p0 bool, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, x3 float64, y3 float64, z3 float64) {}

/**
 * Overrides how many real ms are equal to one game minute.
 * A setter for [`GetMillisecondsPerGameMinute`](#\_0x2F8B4D1C595B11DB).
 * @param value Milliseconds.
 */
func (_client) SetMillisecondsPerGameMinute(value float64) {}

func (_client) SetMinigameInProgress(toggle bool) {}

/**
 * Argument must be 0.0f or above 38.0f, or it will be ignored.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SetMinimapAltitudeIndicatorLevel(altitude float64, p1 bool) {}
/**
 * Argument must be 0.0f or above 38.0f, or it will be ignored.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SetMinimapAttitudeIndicatorLevel(altitude float64, p1 bool) {}

func (_client) SetMinimapBlockWaypoint(toggle bool) {}

/**
 * Sets the type for the minimap blip clipping object to be either rectangular or rounded.
 * @param type 0 for rectangular, 1 for rounded.
 */
func (_client) SetMinimapClipType(_type float64) {}

/**
 * This native is used to colorize certain map components like the army base at the top of the map.
 * An incomplete list of components ID:
 * 0: Los Santos' air port yellow lift-off markers.
 * 1: Sandy Shore's air port yellow lift-off markers.
 * 2: Trevor's air port yellow lift-off markers.
 * 6: Vespucci Beach lifeguard building.
 * 15: Army base.
 * [List of hud colors](https://pastebin.com/d9aHPbXN)
 * @param componentID The component ID to change.
 * @param toggle True to enable the color, false to disable the effect.
 * @param hudColor The hudcolor index.
 */
func (_client) SetMinimapComponent(componentID float64, toggle bool, hudColor float64) float64 {
	return 0.0
}

/**
 * Overrides the minimap component data (from `common:/data/ui/frontend.xml`) for a specified component.
 * @param name The name of the minimap component to override.
 * @param alignX Equivalent to the `alignX` field in `frontend.xml`.
 * @param alignY Equivalent to the `alignY` field in `frontend.xml`.
 * @param posX Equivalent to the `posX` field in `frontend.xml`.
 * @param posY Equivalent to the `posY` field in `frontend.xml`.
 * @param sizeX Equivalent to the `sizeX` field in `frontend.xml`.
 * @param sizeY Equivalent to the `sizeY` field in `frontend.xml`.
 */
func (_client) SetMinimapComponentPosition(name string, alignX string, alignY string, posX float64, posY float64, sizeX float64, sizeY float64) {}

func (_client) SetMinimapFowRevealCoordinate(x float64, y float64, z float64) {}
func (_client) N_0x0923dbf87dff735e(x float64, y float64, z float64) {}

/**
 * Not much is known so far on what it does *exactly*.
 * All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
 * You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
 * You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
 * Use [`N_0x35edd5b2e3ff01c0()`](https://runtime.fivem.net/doc/reference.html#\_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
 * @param hole The ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.
 */
func (_client) SetMinimapGolfCourse(hole float64) {}
/**
 * Not much is known so far on what it does *exactly*.
 * All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
 * You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
 * You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
 * Use [`N_0x35edd5b2e3ff01c0()`](https://runtime.fivem.net/doc/reference.html#\_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
 * @param hole The ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.
 */
func (_client) N_0x71bdb63dbaf8da59(hole float64) {}

func (_client) SetMinimapGolfCourseOff() {}
func (_client) N_0x35edd5b2e3ff01c0() {}

/**
 * If true, the entire map will be revealed.
 */
func (_client) SetMinimapHideFow(toggle bool) {}
/**
 * If true, the entire map will be revealed.
 */
func (_client) N_0xf8dee0a5600cbb93(toggle bool) {}
/**
 * If true, the entire map will be revealed.
 */
func (_client) SetMinimapRevealed(toggle bool) {}

/**
 * Toggles the North Yankton map
 */
func (_client) SetMinimapInPrologue(toggle bool) {}
/**
 * Toggles the North Yankton map
 */
func (_client) SetDrawMapVisible(toggle bool) {}
/**
 * Toggles the North Yankton map
 */
func (_client) SetNorthYanktonMap(toggle bool) {}

func (_client) SetMinimapInSpectatorMode(toggle bool, ped float64) {}
func (_client) KeyHudColour(toggle bool, ped float64) {}

/**
 * Sets the display info for a minimap overlay.
 * @param miniMap The minimap overlay ID.
 * @param x The X position for the overlay. This is equivalent to a game coordinate X.
 * @param y The Y position for the overlay. This is equivalent to a game coordinate Y, except that it's inverted (gfxY = -gameY).
 * @param xScale The X scale for the overlay. This is equivalent to the Flash \_xscale property, therefore 100 = 100%.
 * @param yScale The Y scale for the overlay. This is equivalent to the Flash \_yscale property.
 * @param alpha The alpha value for the overlay. This is equivalent to the Flash \_alpha property, therefore 100 = 100%.
 */
func (_client) SetMinimapOverlayDisplay(miniMap float64, x float64, y float64, xScale float64, yScale float64, alpha float64) {}

/**
 * NativeDB Introduced: v2189
 */
func (_client) SetMinimapSonarEnabled(toggle bool) {}

/**
 * If true, the player can't save the game.
 * If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
 * ^ also, if the mission flag is already set, the function does nothing at all
 */
func (_client) SetMissionFlag(toggle bool) {}

func (_client) SetMissionName(p0 bool, name string) {}

func (_client) SetMissionName_2(p0 bool, name string) {}
func (_client) N_0xe45087d85f468bc2(p0 bool, name string) {}

/**
 * p1 is always 0
 */
func (_client) SetMissionTrainAsNoLongerNeeded(p1 bool) float64 {
	return 0.0
}

func (_client) SetMissionTrainCoords(train float64, x float64, y float64, z float64) {}

func (_client) SetMobilePhonePosition(posX float64, posY float64, posZ float64) {}

func (_client) SetMobilePhoneRadioState(state bool) {}

/**
 * Last parameter is unknown and always zero.
 */
func (_client) SetMobilePhoneRotation(rotX float64, rotY float64, rotZ float64, p3 float64) {}

/**
 * The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
 */
func (_client) SetMobilePhoneScale(scale float64) {}

func (_client) SetMobilePhoneUnk(toggle bool) {}
func (_client) N_0x375a706a5c2fd084(toggle bool) {}

func (_client) SetMobileRadioEnabledDuringGameplay(toggle bool) {}

/**
 * Unloads model from memory
 */
func (_client) SetModelAsNoLongerNeeded(model interface{}) {}

func (_client) SetModelHeadlightConfiguration(modelHash interface{}, ratePerSecond float64, headlightRotation float64, invertRotation bool) {}

/**
 * Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) SetMountedWeaponTarget(shootingPed float64, targetPed float64, targetVehicle float64, x float64, y float64, z float64) {}

/**
 * Shows the cursor on screen for one frame.
 */
func (_client) SetMouseCursorActiveThisFrame() {}
/**
 * Shows the cursor on screen for one frame.
 */
func (_client) ShowCursorThisFrame() {}

/**
 * Changes the mouse cursor's sprite.
 * public enum CursorType
 * {
 * None = 0,
 * Normal = 1,
 * TransparentNormal = 2,
 * PreGrab = 3,
 * Grab = 4,
 * MiddleFinger = 5,
 * LeftArrow = 6,
 * RightArrow = 7,
 * UpArrow = 8,
 * DownArrow = 9,
 * HorizontalExpand = 10,
 * Add = 11,
 * Remove = 12,
 * }
 */
func (_client) SetMouseCursorSprite(spriteId float64) {}
/**
 * Changes the mouse cursor's sprite.
 * public enum CursorType
 * {
 * None = 0,
 * Normal = 1,
 * TransparentNormal = 2,
 * PreGrab = 3,
 * Grab = 4,
 * MiddleFinger = 5,
 * LeftArrow = 6,
 * RightArrow = 7,
 * UpArrow = 8,
 * DownArrow = 9,
 * HorizontalExpand = 10,
 * Add = 11,
 * Remove = 12,
 * }
 */
func (_client) N_0x8db8cffd58b62552(spriteId float64) {}
/**
 * Changes the mouse cursor's sprite.
 * public enum CursorType
 * {
 * None = 0,
 * Normal = 1,
 * TransparentNormal = 2,
 * PreGrab = 3,
 * Grab = 4,
 * MiddleFinger = 5,
 * LeftArrow = 6,
 * RightArrow = 7,
 * UpArrow = 8,
 * DownArrow = 9,
 * HorizontalExpand = 10,
 * Add = 11,
 * Remove = 12,
 * }
 */
func (_client) SetCursorSprite(spriteId float64) {}

/**
 * Shows/hides the frontend cursor on the pause menu or similar menus.
 * Clicking off and then on the game window will show it again.
 * @param enable Set to false to disable the cursor, true to enable it.
 */
func (_client) SetMouseCursorVisibleInMenus(enable bool) {}
/**
 * Shows/hides the frontend cursor on the pause menu or similar menus.
 * Clicking off and then on the game window will show it again.
 * @param enable Set to false to disable the cursor, true to enable it.
 */
func (_client) N_0x98215325a695e78a(enable bool) {}

/**
 * name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
 */
func (_client) SetMovementModeOverride(ped float64, name string) {}
/**
 * name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
 */
func (_client) N_0x781de8fa214e87d2(ped float64, name string) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetMpGamerHealthBarDisplay(gamerTagId float64, toggle bool) {}
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0xd29ec58c2f6b5014(gamerTagId float64, toggle bool) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetMpGamerHealthBarMax(gamerTagId float64, value float64, maximumValue float64) {}
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0x1563fe35e9928e67(gamerTagId float64, value float64, maximumValue float64) {}

/**
 * Sets flag's sprite transparency. 0-255.
 */
func (_client) SetMpGamerTagAlpha(gamerTagId float64, component float64, alpha float64) {}
/**
 * Sets flag's sprite transparency. 0-255.
 */
func (_client) N_0xd48fe545cd46f857(gamerTagId float64, component float64, alpha float64) {}

func (_client) SetMpGamerTagBigText(gamerTagId float64, _string string) {}
func (_client) N_0x7b7723747ccb55b6(gamerTagId float64, _string string) {}
func (_client) SetMpGamerTagChatting(gamerTagId float64, _string string) {}

/**
 * Sets a gamer tag's component colour
 * @param gamerTagId a gamerTagId obtained using  for example: [`CREATE_FAKE_MP_GAMER_TAG`](#\_0xBFEFE3321A3F5015).
 * @param component a component id, see the full list here: [link](https://docs.fivem.net/docs/game-references/gamer-tags/#components-list)
 * @param hudColorIndex a hud color index, see the full list here: [link](https://pastebin.com/d9aHPbXN)
 */
func (_client) SetMpGamerTagColour(gamerTagId float64, component float64, hudColorIndex float64) {}
/**
 * Sets a gamer tag's component colour
 * @param gamerTagId a gamerTagId obtained using  for example: [`CREATE_FAKE_MP_GAMER_TAG`](#\_0xBFEFE3321A3F5015).
 * @param component a component id, see the full list here: [link](https://docs.fivem.net/docs/game-references/gamer-tags/#components-list)
 * @param hudColorIndex a hud color index, see the full list here: [link](https://pastebin.com/d9aHPbXN)
 */
func (_client) N_0x613ed644950626ae(gamerTagId float64, component float64, hudColorIndex float64) {}

func (_client) SetMpGamerTagEnabled(gamerTagId float64, toggle bool) {}
func (_client) N_0xee76ff7e6a0166b0(gamerTagId float64, toggle bool) {}
func (_client) SetMpGamerTag_(gamerTagId float64, toggle bool) {}
func (_client) SetMpGamerTag(gamerTagId float64, toggle bool) {}

/**
 * Should be enabled as component (2). Has 0 alpha by default.
 * @param gamerTagId a gamerTagId obtained using  for example: [CREATE_FAKE_MP_GAMER_TAG](https://runtime.fivem.net/doc/natives/?\_0xBFEFE3321A3F5015)
 * @param hudColorIndex a hud color index, see the full list here: [link](pastebin.com/d9aHPbXN)
 */
func (_client) SetMpGamerTagHealthBarColour(gamerTagId float64, hudColorIndex float64) {}
/**
 * Should be enabled as component (2). Has 0 alpha by default.
 * @param gamerTagId a gamerTagId obtained using  for example: [CREATE_FAKE_MP_GAMER_TAG](https://runtime.fivem.net/doc/natives/?\_0xBFEFE3321A3F5015)
 * @param hudColorIndex a hud color index, see the full list here: [link](pastebin.com/d9aHPbXN)
 */
func (_client) N_0x3158c77a7e888ab4(gamerTagId float64, hudColorIndex float64) {}
/**
 * Should be enabled as component (2). Has 0 alpha by default.
 * @param gamerTagId a gamerTagId obtained using  for example: [CREATE_FAKE_MP_GAMER_TAG](https://runtime.fivem.net/doc/natives/?\_0xBFEFE3321A3F5015)
 * @param hudColorIndex a hud color index, see the full list here: [link](pastebin.com/d9aHPbXN)
 */
func (_client) SetMpGamerTagHealthBarColor(gamerTagId float64, hudColorIndex float64) {}

/**
 * Displays a bunch of icons above the players name, and level, and their name twice
 */
func (_client) SetMpGamerTagIcons(gamerTagId float64, toggle bool) {}
/**
 * Displays a bunch of icons above the players name, and level, and their name twice
 */
func (_client) N_0xa67f9c46d612b6f1(gamerTagId float64, toggle bool) {}

/**
 * displays wanted star above head
 */
func (_client) SetMpGamerTagMpBagLargeCount(gamerTagId float64, count float64) {}
/**
 * displays wanted star above head
 */
func (_client) N_0x9b9aa95688f78dd3(gamerTagId float64, count float64) {}
/**
 * displays wanted star above head
 */
func (_client) SetMpGamerTagUnk(gamerTagId float64, count float64) {}

func (_client) SetMpGamerTagName(gamerTagId float64, _string string) {}
func (_client) N_0xdea2b8283baa3944(gamerTagId float64, _string string) {}

/**
 * cpp
 * enum eMpGamerTagComponent
 * {
 * MP_TAG_GAMER_NAME,
 * MP_TAG_CREW_TAG,
 * MP_TAG_HEALTH_ARMOUR,
 * MP_TAG_BIG_TEXT,
 * MP_TAG_AUDIO_ICON,
 * MP_TAG_USING_MENU,
 * MP_TAG_PASSIVE_MODE,
 * MP_TAG_WANTED_STARS,
 * MP_TAG_DRIVER,
 * MP_TAG_CO_DRIVER,
 * MP_TAG_TAGGED,
 * MP_TAG_GAMER_NAME_NEARBY,
 * MP_TAG_ARROW,
 * MP_TAG_PACKAGES,
 * MP_TAG_INV_IF_PED_FOLLOWING,
 * MP_TAG_RANK_TEXT,
 * MP_TAG_TYPING,
 * MP_TAG_BAG_LARGE,
 * MP_TAG_ARROW,
 * MP_TAG_GANG_CEO,
 * MP_TAG_GANG_BIKER,
 * MP_TAG_BIKER_ARROW,
 * MP_TAG_MC_ROLE_PRESIDENT,
 * MP_TAG_MC_ROLE_VICE_PRESIDENT,
 * MP_TAG_MC_ROLE_ROAD_CAPTAIN,
 * MP_TAG_MC_ROLE_SARGEANT,
 * MP_TAG_MC_ROLE_ENFORCER,
 * MP_TAG_MC_ROLE_PROSPECT,
 * MP_TAG_TRANSMITTER,
 * MP_TAG_BOMB
 * };
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SetMpGamerTagVisibility(gamerTagId float64, component float64, toggle bool) {}
/**
 * cpp
 * enum eMpGamerTagComponent
 * {
 * MP_TAG_GAMER_NAME,
 * MP_TAG_CREW_TAG,
 * MP_TAG_HEALTH_ARMOUR,
 * MP_TAG_BIG_TEXT,
 * MP_TAG_AUDIO_ICON,
 * MP_TAG_USING_MENU,
 * MP_TAG_PASSIVE_MODE,
 * MP_TAG_WANTED_STARS,
 * MP_TAG_DRIVER,
 * MP_TAG_CO_DRIVER,
 * MP_TAG_TAGGED,
 * MP_TAG_GAMER_NAME_NEARBY,
 * MP_TAG_ARROW,
 * MP_TAG_PACKAGES,
 * MP_TAG_INV_IF_PED_FOLLOWING,
 * MP_TAG_RANK_TEXT,
 * MP_TAG_TYPING,
 * MP_TAG_BAG_LARGE,
 * MP_TAG_ARROW,
 * MP_TAG_GANG_CEO,
 * MP_TAG_GANG_BIKER,
 * MP_TAG_BIKER_ARROW,
 * MP_TAG_MC_ROLE_PRESIDENT,
 * MP_TAG_MC_ROLE_VICE_PRESIDENT,
 * MP_TAG_MC_ROLE_ROAD_CAPTAIN,
 * MP_TAG_MC_ROLE_SARGEANT,
 * MP_TAG_MC_ROLE_ENFORCER,
 * MP_TAG_MC_ROLE_PROSPECT,
 * MP_TAG_TRANSMITTER,
 * MP_TAG_BOMB
 * };
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) N_0x63bb75abedc1f6a0(gamerTagId float64, component float64, toggle bool) {}

/**
 * displays wanted star above head
 */
func (_client) SetMpGamerTagWantedLevel(gamerTagId float64, wantedlvl float64) {}
/**
 * displays wanted star above head
 */
func (_client) N_0xcf228e2aa03099c3(gamerTagId float64, wantedlvl float64) {}

/**
 * Sets whether all tags should group (normal game behavior) or should remain independent and above each ped's respective head when in a vehicle.
 * @param enabled Whether tags should use normal game behavior. Default is true.
 */
func (_client) SetMpGamerTagsUseVehicleBehavior(enabled bool) {}

/**
 * Sets the maximum distance at which all tags will be visible and which beyond will not be displayed. Distance is measured from the camera position.
 * @param distance The visible distance. Default is 100.0f.
 */
func (_client) SetMpGamerTagsVisibleDistance(distance float64) {}

/**
 * Preview image:
 * ![](https://i.imgur.com/1BTmdyv.png)
 * To change the bank balance use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "BANK_BALANCE" to whatever value you need to.
 */
func (_client) SetMultiplayerBankCash() {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) SetMultiplayerHudCash(p0 float64, p1 float64) {}

/**
 * Preview image:
 * ![](https://i.imgur.com/1BTmdyv.png)
 * To change money value use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "MP0\_WALLET_BALANCE" to whatever value you need to.
 */
func (_client) SetMultiplayerWalletCash() {}
/**
 * Preview image:
 * ![](https://i.imgur.com/1BTmdyv.png)
 * To change money value use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "MP0\_WALLET_BALANCE" to whatever value you need to.
 */
func (_client) N_0xc2d15bef167e27bc() {}

func (_client) SetNetworkCutsceneEntities(toggle bool) {}
func (_client) N_0xaaa553e7dd28a457(toggle bool) {}

/**
 * Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
 */
func (_client) SetNetworkEnableVehiclePositionCorrection(vehicle float64, toggle bool) {}
/**
 * Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
 */
func (_client) N_0x838da0936a24ed4d(vehicle float64, toggle bool) {}

func (_client) SetNetworkIdAlwaysExistsForPlayer(netId float64, player float64, toggle bool) {}
func (_client) N_0xa8a024587329f36a(netId float64, player float64, toggle bool) {}
func (_client) SetNetworkIdSyncToPlayer(netId float64, player float64, toggle bool) {}

/**
 * Whether or not another player is allowed to take control of the entity
 */
func (_client) SetNetworkIdCanMigrate(netId float64, toggle bool) {}

func (_client) SetNetworkIdExistsOnAllMachines(netId float64, toggle bool) {}

func (_client) SetNetworkIdVisibleInCutscene(netId float64, p1 bool, p2 bool) {}

func (_client) SetNetworkVehicleAsGhost(vehicle float64, toggle bool) {}
func (_client) N_0x6274c4712850841e(vehicle float64, toggle bool) {}
func (_client) SetNetworkObjectNonContact(vehicle float64, toggle bool) {}

/**
 * rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
 */
func (_client) SetNetworkVehiclePositionUpdateMultiplier(vehicle float64, multiplier float64) {}
/**
 * rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
 */
func (_client) N_0xa2a707979fe754dc(vehicle float64, multiplier float64) {}
/**
 * rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
 */
func (_client) SetNetworkVehicleBlenderDistanceMultiplier(vehicle float64, multiplier float64) {}

/**
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SetNetworkVehicleRespotTimer(netId float64, time float64) {}

func (_client) SetNewWaypoint(x float64, y float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) SetNextDesiredMoveState(p0 float64) {}

func (_client) SetNextPlayerTcmodifier(modifierName string) {}
func (_client) N_0xbf59707b3e5ed531(modifierName string) {}

/**
 * Enables Night Vision.
 * Example:
 * C#: Function.Call(Hash.SET_NIGHTVISION, true);
 * C++: GRAPHICS::SET_NIGHTVISION(true);
 * BOOL toggle:
 * true = turns night vision on for your player.
 * false = turns night vision off for your player.
 */
func (_client) SetNightvision(toggle bool) {}

func (_client) SetNoLoadingScreen(toggle bool) {}

func (_client) SetNoiseoveride(toggle bool) {}

func (_client) SetNoisinessoveride(value float64) {}

func (_client) SetNuiFocus(hasFocus bool, hasCursor bool) {}

func (_client) SetNuiFocusKeepInput(keepInput bool) {}

func (_client) SetNumberOfParkedVehicles(value float64) {}

/**
 * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
 */
func (_client) SetObjectAllowLowLodBuoyancy(object float64, toggle bool) {}
/**
 * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
 */
func (_client) N_0x4d89d607cb3dd1d2(object float64, toggle bool) {}
/**
 * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
 */
func (_client) SetObjectCanClimbOn(object float64, toggle bool) {}

/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 */
func (_client) SetObjectAsNoLongerNeeded(object float64) {}

/**
 * Sets color of embedded light source.
 * Only appears in am_mp_nightclub.c for the nightclub dancefloor.
 * Not sure what p1 does, seems to only ever be '1' in scripts.
 * ```
 * NativeDB Introduced: v1493
 * ```
 */
func (_client) SetObjectLightColor(object float64, p1 bool, r float64, g float64, b float64) float64 {
	return 0.0
}

/**
 * rage::phArchetypeDamp
 * p9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive.
 */
func (_client) SetObjectPhysicsParams(object float64, mass float64, gravityFactor float64, linearC float64, linearV float64, linearV2 float64, angularC float64, angularV float64, angularV2 float64, p9 float64, maxAngSpeed float64, buoyancyFactor float64) {}

func (_client) SetObjectSomething(object float64, p1 bool) {}
func (_client) N_0x77f33f2ccf64b3aa(object float64, p1 bool) {}

func (_client) SetObjectStuntPropDuration(object float64, duration float64) {}
func (_client) N_0xdf6ca0330f2e737b(object float64, duration float64) {}

func (_client) SetObjectStuntPropSpeedup(object float64, p1 float64) {}
func (_client) N_0x96ee0eba0163df80(object float64, p1 float64) {}

func (_client) SetObjectTargettable(object float64, targettable bool) {}

/**
 * enum ObjectPaintVariants
 * {
 * Pacific = 0,
 * Azure = 1,
 * Nautical = 2,
 * Continental = 3,
 * Battleship = 4,
 * Intrepid = 5,
 * Uniform = 6,
 * Classico = 7,
 * Mediterranean = 8,
 * Command = 9,
 * Mariner = 10,
 * Ruby = 11,
 * Vintage = 12,
 * Pristine = 13,
 * Merchant = 14,
 * Voyager = 15
 * };
 */
func (_client) SetObjectTextureVariation(object float64, textureVariation float64) {}
/**
 * enum ObjectPaintVariants
 * {
 * Pacific = 0,
 * Azure = 1,
 * Nautical = 2,
 * Continental = 3,
 * Battleship = 4,
 * Intrepid = 5,
 * Uniform = 6,
 * Classico = 7,
 * Mediterranean = 8,
 * Command = 9,
 * Mariner = 10,
 * Ruby = 11,
 * Vintage = 12,
 * Pristine = 13,
 * Merchant = 14,
 * Voyager = 15
 * };
 */
func (_client) N_0x971da0055324d033(object float64, textureVariation float64) {}
/**
 * enum ObjectPaintVariants
 * {
 * Pacific = 0,
 * Azure = 1,
 * Nautical = 2,
 * Continental = 3,
 * Battleship = 4,
 * Intrepid = 5,
 * Uniform = 6,
 * Classico = 7,
 * Mediterranean = 8,
 * Command = 9,
 * Mariner = 10,
 * Ruby = 11,
 * Vintage = 12,
 * Pristine = 13,
 * Merchant = 14,
 * Voyager = 15
 * };
 */
func (_client) SetObjectTextureVariant(object float64, textureVariation float64) {}

/**
 * Set state to true to extend the wings, false to retract them.
 * @param vehicle The vehicle (tested with oppressor only)
 * @param extend Set to true to extend the wings, false to retract them.
 */
func (_client) SetOppressorTransformState(vehicle float64, extend bool) {}
/**
 * Set state to true to extend the wings, false to retract them.
 * @param vehicle The vehicle (tested with oppressor only)
 * @param extend Set to true to extend the wings, false to retract them.
 */
func (_client) N_0x544996c0081abdeb(vehicle float64, extend bool) {}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) SetOverrideWeather(weatherType string) {}

/**
 * p0 always seems to be 0
 * duration in milliseconds
 * frequency should range from about 10 (slow vibration) to 255 (very fast)
 * example:
 * SET_PAD_SHAKE(0, 100, 200);
 */
func (_client) SetPadShake(padIndex float64, duration float64, frequency float64) {}

func (_client) SetParachuteTaskTarget(ped float64, x float64, y float64, z float64) {}

func (_client) SetParachuteTaskThrust(ped float64, thrust float64) {}

func (_client) SetParkedVehicleDensityMultiplierThisFrame(multiplier float64) {}

func (_client) SetParticleFxBulletImpactScale(scale float64) {}
func (_client) N_0x27e32866e9a5c416(scale float64) {}

func (_client) SetParticleFxCamInsideNonplayerVehicle(vehicle float64, p1 bool) {}

func (_client) SetParticleFxCamInsideVehicle(p0 bool) {}

func (_client) SetParticleFxLoopedAlpha(ptfxHandle float64, alpha float64) {}

/**
 * only works on some fx's
 * p4 = 0
 */
func (_client) SetParticleFxLoopedColour(ptfxHandle float64, r float64, g float64, b float64, p4 bool) {}

func (_client) SetParticleFxLoopedEvolution(ptfxHandle float64, propertyName string, amount float64, noNetwork bool) {}

func (_client) SetParticleFxLoopedFarClipDist(ptfxHandle float64, _range float64) {}
func (_client) SetParticleFxLoopedRange(ptfxHandle float64, _range float64) {}

func (_client) SetParticleFxLoopedOffsets(ptfxHandle float64, x float64, y float64, z float64, rotX float64, rotY float64, rotZ float64) {}

func (_client) SetParticleFxLoopedScale(ptfxHandle float64, scale float64) {}

/**
 * Usage example for C#:
 * Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
 * Note: the argument alpha ranges from 0.0f-1.0f !
 */
func (_client) SetParticleFxNonLoopedAlpha(alpha float64) {}

/**
 * only works on some fx's, not networked
 */
func (_client) SetParticleFxNonLoopedColour(r float64, g float64, b float64) {}

func (_client) SetParticleFxOverride(oldAsset string, newAsset string) {}
func (_client) SetPtfxAssetOld_2New(oldAsset string, newAsset string) {}
func (_client) SetParticleFxAssetOldToNew(oldAsset string, newAsset string) {}

func (_client) SetParticleFxShootoutBoat(p0 float64) {}

func (_client) SetPauseMenuActive(toggle bool) {}

/**
 * Toggles the light state for the pause menu ped in frontend menus.
 * This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#\_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
 * Example:
 * On: ![lights on](https://vespura.com/hi/i/2019-04-01\_16-09\_540ee\_1015.png)
 * Off: ![lights off](https://vespura.com/hi/i/2019-04-01\_16-10\_8b5e7\_1016.png)
 * @param state True enables the light, false disables the light.
 */
func (_client) SetPauseMenuPedLighting(state bool) {}
/**
 * Toggles the light state for the pause menu ped in frontend menus.
 * This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#\_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
 * Example:
 * On: ![lights on](https://vespura.com/hi/i/2019-04-01\_16-09\_540ee\_1015.png)
 * Off: ![lights off](https://vespura.com/hi/i/2019-04-01\_16-10\_8b5e7\_1016.png)
 * @param state True enables the light, false disables the light.
 */
func (_client) N_0x3ca6050692bc61b0(state bool) {}

/**
 * Toggles the pause menu ped sleep state for frontend menus.
 * [Example GIF](https://vespura.com/hi/i/2019-04-01\_15-51\_8ed38\_1014.gif)
 * @param state 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
 */
func (_client) SetPauseMenuPedSleepState(state bool) {}
/**
 * Toggles the pause menu ped sleep state for frontend menus.
 * [Example GIF](https://vespura.com/hi/i/2019-04-01\_15-51\_8ed38\_1014.gif)
 * @param state 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
 */
func (_client) N_0xecf128344e9ff9f1(state bool) {}

/**
 * accuracy = 0-100, 100 being perfectly accurate
 */
func (_client) SetPedAccuracy(ped float64, accuracy float64) {}

/**
 * if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
 * If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
 */
func (_client) SetPedAiBlipForcedOn(ped float64, toggle bool) {}
/**
 * if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
 * If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
 */
func (_client) N_0x0c4bbf625ca98c4e(ped float64, toggle bool) {}
/**
 * if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
 * If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
 */
func (_client) IsAiBlipAlwaysShown(ped float64, toggle bool) {}

func (_client) SetPedAiBlipGangId(ped float64, gangId float64) {}
func (_client) N_0xe52b8e7f85d39a08(ped float64, gangId float64) {}
func (_client) SetAiBlipType(ped float64, gangId float64) {}

func (_client) SetPedAiBlipHasCone(ped float64, toggle bool) {}
func (_client) HideSpecialAbilityLockonOperation(ped float64, toggle bool) {}

func (_client) SetPedAiBlipNoticeRange(ped float64, _range float64) {}
func (_client) N_0x97c65887d4b37fa9(ped float64, _range float64) {}
func (_client) SetAiBlipMaxDistance(ped float64, _range float64) {}

func (_client) SetPedAiBlipSprite(ped float64, spriteId float64) {}
func (_client) N_0xfcfacd0db9d7a57d(ped float64, spriteId float64) {}

/**
 * value ranges from 0 to 3.
 */
func (_client) SetPedAlertness(ped float64, value float64) {}

func (_client) SetPedAllowVehiclesOverride(ped float64, toggle bool) {}

func (_client) SetPedAllowedToDuck(ped float64, toggle bool) {}

/**
 * ```
 * stance:
 * 0 = idle
 * 1 = walk
 * 2 = running
 * p5 = usually set to true
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) SetPedAlternateMovementAnim(ped float64, stance float64, animDictionary string, animationName string, p4 float64, p5 bool) {}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) SetPedAlternateWalkAnim(ped float64, animDict string, animName string, p3 float64, p4 bool) {}

/**
 * NativeDB Added Parameter 4: BOOL p3
 */
func (_client) SetPedAmmo(ped float64, weaponHash interface{}, ammo float64) {}

func (_client) SetPedAmmoByType(ped float64, ammoType interface{}, ammo float64) {}

func (_client) SetPedAmmoToDrop(ped float64, ammo float64) {}

func (_client) SetPedAngledDefensiveArea(ped float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 bool, p9 bool) {}

/**
 * Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
 */
func (_client) SetPedAoBlobRendering(ped float64, toggle bool) {}
/**
 * Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
 */
func (_client) N_0x2b5aa717a181fb4c(ped float64, toggle bool) {}

/**
 * Sets the armor of the specified ped.
 * ped: The Ped to set the armor of.
 * amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
 */
func (_client) SetPedArmour(ped float64, amount float64) {}

/**
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
 */
func (_client) SetPedAsCop(ped float64, toggle bool) {}

func (_client) SetPedAsEnemy(ped float64, toggle bool) {}

func (_client) SetPedAsGroupLeader(ped float64, groupId float64) {}

func (_client) SetPedAsGroupMember(ped float64, groupId float64) {}

/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 */
func (_client) SetPedAsNoLongerNeeded(ped float64) {}

/**
 * Enables/disables ped's "loud" footstep sound.
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) SetPedAudioFootstepLoud(ped float64, toggle bool) {}
/**
 * Enables/disables ped's "loud" footstep sound.
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) N_0x0653b735bfbdfe87(ped float64, toggle bool) {}

/**
 * Enables/disables ped's "quiet" footstep sound.
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) SetPedAudioFootstepQuiet(ped float64, toggle bool) {}
/**
 * Enables/disables ped's "quiet" footstep sound.
 * ```
 * ```
 * NativeDB Introduced: v1493
 */
func (_client) N_0x29da3ca8d8b2692d(ped float64, toggle bool) {}

func (_client) SetPedAudioGender(ped float64, p1 bool) {}
func (_client) N_0xa5342d390cda41d6(ped float64, p1 bool) {}

func (_client) SetPedBlendFromParents(ped float64, father float64, mother float64, fathersSide float64, mothersSide float64) {}

func (_client) SetPedBlocksPathingWhenDead(ped float64, toggle bool) {}
func (_client) N_0x576594e8d64375e2(ped float64, toggle bool) {}

func (_client) SetPedBoundsOrientation(ped float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) SetPedCanArmIk(ped float64, toggle bool) {}

func (_client) SetPedCanBeDraggedOut(ped float64, toggle bool) {}

/**
 * state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
 */
func (_client) SetPedCanBeKnockedOffVehicle(ped float64, state float64) {}

func (_client) SetPedCanBeShotInVehicle(ped float64, toggle bool) {}

func (_client) SetPedCanBeTargetedWhenInjured(ped float64, toggle bool) {}

func (_client) SetPedCanBeTargetedWithoutLos(ped float64, toggle bool) {}

func (_client) SetPedCanBeTargetted(ped float64, toggle bool) {}

func (_client) SetPedCanBeTargettedByPlayer(ped float64, player float64, toggle bool) {}

func (_client) SetPedCanBeTargettedByTeam(ped float64, team float64, toggle bool) {}

/**
 * It simply makes the said ped to cower behind cover object(wall, desk, car)
 * Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
 */
func (_client) SetPedCanCowerInCover(ped float64, toggle bool) {}

func (_client) SetPedCanEvasiveDive(ped float64, toggle bool) {}

func (_client) SetPedCanHeadIk(ped float64, toggle bool) {}

func (_client) SetPedCanLegIk(ped float64, toggle bool) {}

/**
 * It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
 * This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
 * @param ped The target ped
 * @param loseProps true = allow props to fall off, false = don't let props fall off
 * @param p2 purpose unknown, usually 0
 */
func (_client) SetPedCanLosePropsOnDamage(ped float64, loseProps bool, p2 float64) {}
/**
 * It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
 * This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
 * @param ped The target ped
 * @param loseProps true = allow props to fall off, false = don't let props fall off
 * @param p2 purpose unknown, usually 0
 */
func (_client) N_0xe861d0b05c7662b8(ped float64, loseProps bool, p2 float64) {}

func (_client) SetPedCanPeekInCover(ped float64, toggle bool) {}

func (_client) SetPedCanPlayAmbientAnims(ped float64, toggle bool) {}

func (_client) SetPedCanPlayAmbientBaseAnims(ped float64, toggle bool) {}

/**
 * Appears only in fm_mission_controller and used only 3 times.
 * ped was always PLAYER_PED_ID()
 * p1 was always true
 * p2 was always true
 */
func (_client) SetPedCanPlayAmbientIdles(ped float64, p1 bool, p2 bool) {}
/**
 * Appears only in fm_mission_controller and used only 3 times.
 * ped was always PLAYER_PED_ID()
 * p1 was always true
 * p2 was always true
 */
func (_client) N_0x8fd89a6240813fd0(ped float64, p1 bool, p2 bool) {}

func (_client) SetPedCanPlayGestureAnims(ped float64, toggle bool) {}

func (_client) SetPedCanPlayInjuredAnims(ped float64, p1 bool) {}
func (_client) N_0x33a60d8bdd6e508c(ped float64, p1 bool) {}

/**
 * p2 usually 0
 */
func (_client) SetPedCanPlayVisemeAnims(ped float64, toggle bool, p2 bool) {}

func (_client) SetPedCanRagdoll(ped float64, toggle bool) {}

func (_client) SetPedCanRagdollFromPlayerImpact(ped float64, toggle bool) {}

func (_client) SetPedCanSmashGlass(ped float64, p1 bool, p2 bool) {}

func (_client) SetPedCanSwitchWeapon(ped float64, toggle bool) {}

/**
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
 * Only works in singleplayer
 */
func (_client) SetPedCanTeleportToGroupLeader(pedHandle float64, groupHandle float64, toggle bool) {}

func (_client) SetPedCanTorsoIk(ped float64, toggle bool) {}

func (_client) SetPedCanTorsoReactIk(ped float64, p1 bool) {}
func (_client) N_0xf5846edb26a98a24(ped float64, p1 bool) {}

func (_client) SetPedCanTorsoVehicleIk(ped float64, p1 bool) {}
func (_client) N_0x6647c5f6f5792496(ped float64, p1 bool) {}

func (_client) SetPedCanUseAutoConversationLookat(ped float64, toggle bool) {}

/**
 * Overrides the ped's collision capsule radius for the current tick.
 * Must be called every tick to be effective.
 * Setting this to 0.001 will allow warping through some objects.
 */
func (_client) SetPedCapsule(ped float64, value float64) {}

func (_client) SetPedChanceOfFiringBlanks(ped float64, xBias float64, yBias float64) {}

func (_client) SetPedClothPackageIndex(ped float64, p1 float64) {}
func (_client) N_0x78c4e9961db3eb5b(ped float64, p1 float64) {}

func (_client) SetPedClothProne(p0 float64, p1 float64) {}
func (_client) N_0x82a3d6d9cc2cb8e3(p0 float64, p1 float64) {}

/**
 * 100 would equal attack
 * less then 50ish would mean run away
 * Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:
 * 0: CA_Poor
 * 1: CA_Average
 * 2: CA_Professional
 * Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.
 */
func (_client) SetPedCombatAbility(ped float64, p1 float64) {}

/**
 * These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
 * So far, these are the equivalents found:
 * enum CombatAttributes
 * {
 * BF_CanUseCover = 0,
 * BF_CanUseVehicles = 1,
 * BF_CanDoDrivebys = 2,
 * BF_CanLeaveVehicle = 3,
 * BF_CanFightArmedPedsWhenNotArmed = 5,
 * BF_CanTauntInVehicle = 20,
 * BF_AlwaysFight = 46,
 * BF_IgnoreTrafficWhenDriving = 52,
 * BF_FreezeMovement = 292,
 * BF_PlayerCanUseFiringWeapons = 1424
 * };
 * 8 = ?
 * 9 = ?
 * 13 = ?
 * 14 ?
 * Research thread: gtaforums.com/topic/833391-researchguide-combat-behaviour-flags/
 */
func (_client) SetPedCombatAttributes(ped float64, attributeIndex float64, enabled bool) {}

/**
 * 0 - Stationary (Will just stand in place)
 * 1 - Defensive (Will try to find cover and very likely to blind fire)
 * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
 * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
 */
func (_client) SetPedCombatMovement(ped float64, combatMovement float64) {}

/**
 * Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described as AttackRange in combatbehaviour.meta:
 * 0: CR_Near
 * 1: CR_Medium
 * 2: CR_Far
 */
func (_client) SetPedCombatRange(ped float64, p1 float64) {}

/**
 * This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
 * ### MP Freemode list of components
 * **0**: Face\
 * **1**: Mask\
 * **2**: Hair\
 * **3**: Torso\
 * **4**: Leg\
 * **5**: Parachute / bag\
 * **6**: Shoes\
 * **7**: Accessory\
 * **8**: Undershirt\
 * **9**: Kevlar\
 * **10**: Badge\
 * **11**: Torso 2
 * ### Related and useful natives
 * [GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS](#\_0x27561561732A7842)\
 * [GET_NUMBER_OF_PED_TEXTURE_VARIATIONS](#\_0x8F7156A3142A6BAD)
 * [List of component/props ID](gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
 * @param ped The ped handle.
 * @param componentId The component that you want to set.
 * @param drawableId The drawable id that is going to be set.
 * @param textureId The texture id of the drawable.
 * @param paletteId 0 to 3.
 */
func (_client) SetPedComponentVariation(ped float64, componentId float64, drawableId float64, textureId float64, paletteId float64) {}

/**
 * cpp
 * // Potential names and hash collisions included as comments
 * enum ePedConfigFlags {
 * _0x67D1A445 = 0,
 * _0xC63DE95E = 1,
 * CPED_CONFIG_FLAG_NoCriticalHits = 2,
 * CPED_CONFIG_FLAG_DrownsInWater = 3,
 * CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
 * _0x37D196F4 = 5,
 * _0xE2462399 = 6,
 * CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
 * _0xEDDEB838 = 8,
 * _0xB398B6FD = 9,
 * _0xF6664E68 = 10,
 * _0xA05E7CA3 = 11,
 * _0xCE394045 = 12,
 * CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
 * _0xCD8D1411 = 14,
 * _0xB031F1A9 = 15,
 * _0xFE65BEE3 = 16,
 * CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
 * _0x380165BD = 18,
 * _0x07C045C7 = 19,
 * _0x583B5E2D = 20,
 * _0x475EDA58 = 21,
 * _0x8629D05B = 22,
 * _0x1522968B = 23,
 * CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
 * _0x4CC09C4B = 25,
 * _0x034F3053 = 26,
 * _0xD91BA7CC = 27,
 * _0x5C8DC66E = 28,
 * _0x8902EAA0 = 29,
 * _0x6580B9D2 = 30,
 * _0x0EF7A297 = 31,
 * _0x6BF86E5B = 32,
 * CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
 * CPED_CONFIG_FLAG_HasHelmet = 34,
 * CPED_CONFIG_FLAG_UseHelmet = 35,
 * _0xEEB3D630 = 36,
 * _0xB130D17B = 37,
 * _0x5F071200 = 38,
 * CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
 * _0xC287AAFF = 40,
 * _0x203328CC = 41,
 * CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
 * CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
 * CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
 * _0xEC4A8ACF = 45,
 * _0xDB115BFA = 46,
 * CPED_CONFIG_FLAG_PedBeingDeleted = 47,
 * CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
 * _0xF8E99565 = 49,
 * _0xDD17FEE6 = 50,
 * _0x7ED9B2C9 = 51,
 * _0x655E8618 = 52,
 * _0x5A6C1F6E = 53,
 * _0xD749FC41 = 54,
 * _0x357F63F3 = 55,
 * _0xC5E60961 = 56,
 * _0x29275C3E = 57,
 * CPED_CONFIG_FLAG_IsFiring = 58,
 * CPED_CONFIG_FLAG_WasFiring = 59,
 * CPED_CONFIG_FLAG_IsStanding = 60,
 * CPED_CONFIG_FLAG_WasStanding = 61,
 * CPED_CONFIG_FLAG_InVehicle = 62,
 * CPED_CONFIG_FLAG_OnMount = 63,
 * CPED_CONFIG_FLAG_AttachedToVehicle = 64,
 * CPED_CONFIG_FLAG_IsSwimming = 65,
 * CPED_CONFIG_FLAG_WasSwimming = 66,
 * CPED_CONFIG_FLAG_IsSkiing = 67,
 * CPED_CONFIG_FLAG_IsSitting = 68,
 * CPED_CONFIG_FLAG_KilledByStealth = 69,
 * CPED_CONFIG_FLAG_KilledByTakedown = 70,
 * CPED_CONFIG_FLAG_Knockedout = 71,
 * _0x3E3C4560 = 72,
 * _0x2994C7B7 = 73,
 * _0x6D59D275 = 74,
 * CPED_CONFIG_FLAG_UsingCoverPoint = 75,
 * CPED_CONFIG_FLAG_IsInTheAir = 76,
 * _0x2D493FB7 = 77,
 * CPED_CONFIG_FLAG_IsAimingGun = 78,
 * _0x14D69875 = 79,
 * _0x40B05311 = 80,
 * _0x8B230BC5 = 81,
 * _0xC74E5842 = 82,
 * _0x9EA86147 = 83,
 * _0x674C746C = 84,
 * _0x3E56A8C2 = 85,
 * _0xC144A1EF = 86,
 * _0x0548512D = 87,
 * _0x31C93909 = 88,
 * _0xA0269315 = 89,
 * _0xD4D59D4D = 90,
 * _0x411D4420 = 91,
 * _0xDF4AEF0D = 92,
 * CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
 * _0x300E4CD3 = 94,
 * _0xF1C5BF04 = 95,
 * _0x89C2EF13 = 96,
 * CPED_CONFIG_FLAG_VaultFromCover = 97,
 * _0x02A852C8 = 98,
 * _0x3D9407F1 = 99,
 * _0x319B4558 = 100,
 * CPED_CONFIG_FLAG_ForcedAim = 101,
 * _0xB942D71A = 102,
 * _0xD26C55A8 = 103,
 * _0xB89E703B = 104,
 * CPED_CONFIG_FLAG_ForceReload = 105,
 * _0xD9E73DA2 = 106,
 * _0xFF71DC2C = 107,
 * _0x1E27E8D8 = 108,
 * _0xF2C53966 = 109,
 * _0xC4DBE247 = 110,
 * _0x83C0A4BF = 111,
 * _0x0E0FAF8C = 112,
 * _0x26616660 = 113,
 * _0x43B80B79 = 114,
 * _0x0D2A9309 = 115,
 * _0x12C1C983 = 116,
 * CPED_CONFIG_FLAG_BumpedByPlayer = 117,
 * _0xE586D504 = 118,
 * _0x52374204 = 119,
 * CPED_CONFIG_FLAG_IsHandCuffed = 120,
 * CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
 * CPED_CONFIG_FLAG_DisableMelee = 122,
 * _0xFE714397 = 123,
 * _0xB3E660BD = 124,
 * _0x5FED6BFD = 125,
 * _0xC9D6F66F = 126,
 * _0x519BC986 = 127,
 * CPED_CONFIG_FLAG_CanBeAgitated = 128,
 * _0x9A4B617C = 129, // CPED_CONFIG_FLAG_FaceDirInsult
 * _0xDAB70E9F = 130,
 * _0xE569438A = 131,
 * _0xBBC77D6D = 132,
 * _0xCB59EF0F = 133,
 * _0x8C5EA971 = 134,
 * CPED_CONFIG_FLAG_IsScuba = 135,
 * CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
 * _0xDCE59B58 = 137,
 * CPED_CONFIG_FLAG_RidingTrain = 138,
 * CPED_CONFIG_FLAG_ArrestResult = 139,
 * CPED_CONFIG_FLAG_CanAttackFriendly = 140,
 * _0x98A4BE43 = 141,
 * _0x6901E731 = 142,
 * _0x9EC9BF6C = 143,
 * _0x42841A8F = 144,
 * CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
 * CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
 * CPED_CONFIG_FLAG_StairsDetected = 147,
 * CPED_CONFIG_FLAG_SlopeDetected = 148,
 * _0x1A15670B = 149,
 * _0x61786EE5 = 150,
 * _0xCB9186BD = 151,
 * _0xF0710152 = 152,
 * _0x43DFE310 = 153,
 * _0xC43C624E = 154,
 * CPED_CONFIG_FLAG_CanPerformArrest = 155,
 * CPED_CONFIG_FLAG_CanPerformUncuff = 156,
 * CPED_CONFIG_FLAG_CanBeArrested = 157,
 * _0xF7960FF5 = 158,
 * _0x59564113 = 159,
 * _0x0C6C3099 = 160,
 * _0x645F927A = 161,
 * _0xA86549B9 = 162,
 * _0x8AAF337A = 163,
 * _0x13BAA6E7 = 164,
 * _0x5FB9D1F5 = 165,
 * CPED_CONFIG_FLAG_IsInjured = 166,
 * _0x6398A20B = 167,
 * _0xD8072639 = 168,
 * _0xA05B1845 = 169,
 * _0x83F6D220 = 170,
 * _0xD8430331 = 171,
 * _0x4B547520 = 172,
 * _0xE66E1406 = 173,
 * _0x1C4BFE0C = 174,
 * _0x90008BFA = 175,
 * _0x07C7A910 = 176,
 * _0xF15F8191 = 177,
 * _0xCE4E8BE2 = 178,
 * _0x1D46E4F2 = 179,
 * CPED_CONFIG_FLAG_IsInCustody = 180,
 * _0xE4FD9B3A = 181,
 * _0x67AE0812 = 182,
 * CPED_CONFIG_FLAG_IsAgitated = 183,
 * CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
 * _0x7B2D325E = 185,
 * CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
 * CPED_CONFIG_FLAG_HasHurtStarted = 187,
 * CPED_CONFIG_FLAG_DisableHurt = 188,
 * CPED_CONFIG_FLAG_PlayerIsWeird = 189,
 * _0x32FC208B = 190,
 * _0x0C296E5A = 191,
 * _0xE63B73EC = 192,
 * _0x04E9CC80 = 193,
 * CPED_CONFIG_FLAG_UsingScenario = 194,
 * CPED_CONFIG_FLAG_VisibleOnScreen = 195,
 * _0xD88C58A1 = 196,
 * _0x5A3DCF43 = 197, // CPED_CONFIG_FLAG_AvoidUnderSide
 * _0xEA02B420 = 198,
 * _0x3F559CFF = 199,
 * _0x8C55D029 = 200,
 * _0x5E6466F6 = 201,
 * _0xEB5AD706 = 202,
 * _0x0EDDDDE7 = 203,
 * _0xA64F7B1D = 204,
 * _0x48532CBA = 205,
 * _0xAA25A9E7 = 206,
 * _0x415B26B9 = 207,
 * CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
 * CPED_CONFIG_FLAG_DodgedPlayer = 209,
 * _0x67405504 = 210,
 * _0x75DDD68C = 211,
 * _0x2AD879B4 = 212,
 * _0x51486F91 = 213,
 * _0x32F79E21 = 214,
 * _0xBF099213 = 215,
 * _0x054AC8E2 = 216,
 * _0x14E495CC = 217,
 * _0x3C7DF9DF = 218,
 * _0x848FFEF2 = 219,
 * CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
 * _0x2618E1CF = 221,
 * _0x84F722FA = 222,
 * _0xD1B87B1F = 223,
 * _0x728AA918 = 224,
 * CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
 * CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
 * _0x59E91185 = 227,
 * _0x1EA7225F = 228,
 * CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
 * _0x6DCA7D88 = 230,
 * _0xFC3E572D = 231,
 * _0x08E9F9CF = 232,
 * _0x2D3BA52D = 233,
 * _0xFD2F53EA = 234,
 * _0x31A1B03B = 235,
 * CPED_CONFIG_FLAG_IsHoldingProp = 236,
 * _0x82ED0A66 = 237, // CPED_CONFIG_FLAG_BlocksPathingWhenDead
 * _0xCE57C9A3 = 238,
 * _0x26149198 = 239,
 * _0x1B33B598 = 240,
 * _0x719B6E87 = 241,
 * _0x13E8E8E8 = 242,
 * _0xF29739AE = 243,
 * _0xABEA8A74 = 244,
 * _0xB60EA2BA = 245,
 * _0x536B0950 = 246,
 * _0x0C754ACA = 247,
 * _0x69D28F3E = 248,
 * _0x12659168 = 249,
 * _0x1BDF2F04 = 250,
 * _0x7728FAA3 = 251,
 * _0x6A807ED8 = 252,
 * CPED_CONFIG_FLAG_OnStairs = 253,
 * _0xE1A2F73F = 254,
 * _0x5B3697C8 = 255,
 * _0xF1EB20A9 = 256,
 * _0x8B7DF407 = 257,
 * _0x329DCF1A = 258,
 * _0x8D90DD1B = 259,
 * _0xB8A292B7 = 260,
 * _0x8374B087 = 261,
 * _0x2AF558F0 = 262,
 * _0x82251455 = 263,
 * _0x30CF498B = 264,
 * _0xE1CD50AF = 265,
 * _0x72E4AE48 = 266,
 * _0xC2657EA1 = 267,
 * _0x29FF6030 = 268,
 * _0x8248A5EC = 269,
 * CPED_CONFIG_FLAG_OnStairSlope = 270,
 * _0xA0897933 = 271,
 * CPED_CONFIG_FLAG_DontBlipCop = 272,
 * CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
 * _0xF7823618 = 274,
 * _0xDC305CCE = 275, // CPED_CONFIG_FLAG_KillWhenTrapped
 * CPED_CONFIG_FLAG_EdgeDetected = 276,
 * _0x92B67896 = 277,
 * _0xCAD677C9 = 278,
 * CPED_CONFIG_FLAG_AvoidTearGas = 279,
 * _0x5276AC7B = 280,
 * _0x1032692A = 281,
 * _0xDA23E7F1 = 282,
 * _0x9139724D = 283,
 * _0xA1457461 = 284,
 * _0x4186E095 = 285,
 * _0xAC68E2EB = 286,
 * CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
 * CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
 * _0x1B9EE8A1 = 289,
 * _0xF3F5758C = 290,
 * _0x2A9307F1 = 291,
 * _0x7403D216 = 292,
 * _0xA06A3C6C = 293,
 * CPED_CONFIG_FLAG_DisableShockingEvents = 294,
 * _0xF8DA25A5 = 295,
 * _0x7EF55802 = 296,
 * _0xB31F1187 = 297,
 * _0x84315402 = 298,
 * _0x0FD69867 = 299,
 * _0xC7829B67 = 300,
 * CPED_CONFIG_FLAG_DisablePedConstraints = 301,
 * _0x6D23CF25 = 302,
 * _0x2ADA871B = 303,
 * _0x47BC8A58 = 304,
 * _0xEB692FA5 = 305,
 * _0x4A133C50 = 306,
 * _0xC58099C3 = 307,
 * _0xF3D76D41 = 308,
 * _0xB0EEE9F2 = 309,
 * CPED_CONFIG_FLAG_IsInCluster = 310,
 * _0x0FA153EF = 311,
 * _0xD73F5CD3 = 312,
 * _0xD4136C22 = 313,
 * _0xE404CA6B = 314,
 * _0xB9597446 = 315,
 * _0xD5C98277 = 316,
 * _0xD5060A9C = 317,
 * _0x3E5F1CBB = 318,
 * _0xD8BE1D54 = 319,
 * _0x0B1F191F = 320,
 * _0xC995167A = 321,
 * CPED_CONFIG_FLAG_HasHighHeels = 322,
 * _0x86B01E54 = 323,
 * _0x3A56FE15 = 324,
 * _0xC03B736C = 325, // CPED_CONFIG_FLAG_SpawnedAtScenario
 * _0xBBF47729 = 326,
 * _0x22B668A8 = 327,
 * _0x2624D4D4 = 328,
 * CPED_CONFIG_FLAG_DisableTalkTo = 329,
 * CPED_CONFIG_FLAG_DontBlip = 330,
 * CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
 * _0x630F55F3 = 332,
 * _0x150468FD = 333,
 * _0x914EBD6B = 334,
 * _0x79AF3B6D = 335,
 * _0x75C7A632 = 336,
 * _0x52D530E2 = 337,
 * _0xDB2A90E0 = 338,
 * _0x5922763D = 339,
 * _0x12ADB567 = 340,
 * _0x105C8518 = 341,
 * _0x106F703D = 342,
 * _0xED152C3E = 343,
 * _0xA0EFE6A8 = 344,
 * _0xBF348C82 = 345,
 * _0xCDDFE830 = 346,
 * _0x7B59BD9B = 347,
 * _0x0124C788 = 348,
 * CPED_CONFIG_FLAG_EquipJetpack = 349,
 * _0x08D361A5 = 350,
 * _0xE13D1F7C = 351,
 * _0x40E25FB9 = 352,
 * _0x930629D9 = 353,
 * _0xECCF0C7F = 354,
 * _0xB6E9613B = 355,
 * _0x490C0478 = 356,
 * _0xE8865BEA = 357,
 * _0xF3C34A29 = 358,
 * CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
 * _0xF660E115 = 360,
 * _0xAB0E6DED = 361,
 * CPED_CONFIG_FLAG_HasReserveParachute = 362,
 * CPED_CONFIG_FLAG_UseReserveParachute = 363,
 * _0x5C5D9CD3 = 364,
 * _0x8F7701F3 = 365,
 * _0xBC4436AD = 366,
 * _0xD7E07D37 = 367,
 * _0x03C4FD24 = 368,
 * _0x7675789A = 369,
 * _0xB7288A88 = 370,
 * _0xC06B6291 = 371,
 * _0x95A4A805 = 372,
 * _0xA8E9A042 = 373,
 * CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
 * _0xBAC674B3 = 375,
 * _0x147F1FFB = 376,
 * _0x4376DD79 = 377,
 * _0xCD3DB518 = 378,
 * _0xFE4BA4B6 = 379,
 * _0x5DF03A55 = 380,
 * _0xBCD816CD = 381,
 * _0xCF02DD69 = 382,
 * _0xF73AFA2E = 383,
 * _0x80B9A9D0 = 384,
 * _0xF601F7EE = 385,
 * _0xA91350FC = 386,
 * _0x3AB23B96 = 387,
 * CPED_CONFIG_FLAG_IsClimbingLadder = 388,
 * CPED_CONFIG_FLAG_HasBareFeet = 389,
 * _0xB4B1CD4C = 390,
 * _0x5459AFB8 = 391,
 * _0x54F27667 = 392,
 * _0xC11D3E8F = 393,
 * _0x5419EB3E = 394,
 * _0x82D8DBB4 = 395,
 * _0x33B02D2F = 396,
 * _0xAE66176D = 397,
 * _0xA2692593 = 398,
 * _0x714C7E31 = 399,
 * _0xEC488AC7 = 400,
 * _0xAE398504 = 401,
 * _0xABC58D72 = 402,
 * _0x5E5B9591 = 403,
 * _0x6BA1091E = 404,
 * _0x77840177 = 405,
 * _0x1C7ACAC4 = 406,
 * _0x124420E9 = 407,
 * _0x75A65587 = 408,
 * _0xDFD2D55B = 409,
 * _0xBDD39919 = 410,
 * _0x43DEC267 = 411,
 * _0xE42B7797 = 412,
 * CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
 * _0x4F8149F5 = 414,
 * _0xDD9ECA7A = 415,
 * _0x9E7EF9D2 = 416,
 * _0x2C6ED942 = 417,
 * CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
 * _0xA488727D = 419,
 * _0xCFF5F6DE = 420,
 * _0x6D614599 = 421,
 * CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
 * _0xFE401D26 = 423,
 * CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
 * _0x2B42AE82 = 425,
 * _0x7A95734F = 426,
 * _0xDF4D8617 = 427,
 * _0x578F1F14 = 428,
 * CPED_CONFIG_FLAG_DisableStartEngine = 429,
 * CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
 * _0x153C9500 = 431,
 * _0xCB7A632E = 432,
 * _0xDE727981 = 433,
 * CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
 * _0x12BBB935 = 435,
 * _0xAD0A1277 = 436,
 * _0xEA6AA46A = 437,
 * CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
 * _0xCB7F3A1E = 439,
 * _0x50178878 = 440,
 * _0x051B4F0D = 441,
 * _0x2FC3DECC = 442,
 * _0xC0030B0B = 443,
 * _0xBBDAF1E9 = 444,
 * _0x944FE59C = 445,
 * _0x506FBA39 = 446,
 * _0xDD45FE84 = 447,
 * _0xE698AE75 = 448,
 * _0x199633F8 = 449,
 * CPED_CONFIG_FLAG_PedIsArresting = 450,
 * CPED_CONFIG_FLAG_IsDecoyPed = 451,
 * _0x3A251D83 = 452,
 * _0xA56F6986 = 453,
 * _0x1D19C622 = 454,
 * _0xB68D3EAB = 455,
 * CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
 * _0x4BD5EBAD = 457,
 * }
 */
func (_client) SetPedConfigFlag(ped float64, flagId float64, value bool) {}

/**
 * teleports ped to coords along with the vehicle ped is in
 */
func (_client) SetPedCoordsKeepVehicle(ped float64, posX float64, posY float64, posZ float64) {}

func (_client) SetPedCoordsNoGang(ped float64, posX float64, posY float64, posZ float64) {}

/**
 * Found in the b617d scripts:
 * PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
 * SET_PED_MO*
 */
func (_client) SetPedCoverClipsetOverride(ped float64, p1 string) {}
/**
 * Found in the b617d scripts:
 * PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
 * SET_PED_MO*
 */
func (_client) N_0x9dba107b4937f809(ped float64, p1 string) {}

/**
 * p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
 */
func (_client) SetPedCowerHash(ped float64, p1 string) {}

/**
 * Has 5 parameters since latest patches.
 */
func (_client) SetPedCurrentWeaponVisible(ped float64, visible bool, deselectWeapon bool, p3 bool, p4 bool) {}

/**
 * Sets Ped Default Clothes
 */
func (_client) SetPedDefaultComponentVariation(ped float64) {}

func (_client) SetPedDefensiveAreaAttachedToPed(ped float64, attachPed float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 bool, p10 bool) {}

func (_client) SetPedDefensiveAreaDirection(ped float64, p1 float64, p2 float64, p3 float64, p4 bool) {}

func (_client) SetPedDefensiveSphereAttachedToPed(ped float64, target float64, xOffset float64, yOffset float64, zOffset float64, radius float64, p6 bool) {}
func (_client) N_0xf9b8f91aad3b953e(ped float64, target float64, xOffset float64, yOffset float64, zOffset float64, radius float64, p6 bool) {}

func (_client) SetPedDefensiveSphereAttachedToVehicle(ped float64, target float64, xOffset float64, yOffset float64, zOffset float64, radius float64, p6 bool) {}
func (_client) N_0xe4723db6e736ccff(ped float64, target float64, xOffset float64, yOffset float64, zOffset float64, radius float64, p6 bool) {}

func (_client) SetPedDensityMultiplierThisFrame(multiplier float64) {}

func (_client) SetPedDesiredHeading(ped float64, heading float64) {}

func (_client) SetPedDesiredMoveBlendRatio(ped float64, p1 float64) {}

func (_client) SetPedDiesInSinkingVehicle(ped float64, toggle bool) {}

func (_client) SetPedDiesInVehicle(ped float64, toggle bool) {}

func (_client) SetPedDiesInWater(ped float64, toggle bool) {}

func (_client) SetPedDiesInstantlyInWater(ped float64, toggle bool) {}

func (_client) SetPedDiesWhenInjured(ped float64, toggle bool) {}

func (_client) SetPedDriveByClipsetOverride(ped float64, clipset string) {}

func (_client) SetPedDropsInventoryWeapon(ped float64, weaponHash interface{}, xOffset float64, yOffset float64, zOffset float64, ammoCount float64) {}

func (_client) SetPedDropsWeapon(ped float64) {}

func (_client) SetPedDropsWeaponsWhenDead(ped float64, toggle bool) {}

/**
 * This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
 */
func (_client) SetPedDucking(ped float64, toggle bool) {}

/**
 * This native sets the glow intensity of illuminated clothing items.
 * This native does **NOT** need to be executed every tick.
 * This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
 * Glow intensity is a value between `0.0` and `1.0`.
 * In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
 * Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
 * Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
 * Intensity: `1.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)
 * Intensity: `0.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)
 * **Examples code result**:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)
 * (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
 * @param ped The ped to set the glow intensity on.
 * @param intensity The glow intensity, value between `0.0` and `1.0`.
 */
func (_client) SetPedEmissiveIntensity(ped float64, intensity float64) {}
/**
 * This native sets the glow intensity of illuminated clothing items.
 * This native does **NOT** need to be executed every tick.
 * This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
 * Glow intensity is a value between `0.0` and `1.0`.
 * In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
 * Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
 * Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
 * Intensity: `1.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)
 * Intensity: `0.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)
 * **Examples code result**:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)
 * (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
 * @param ped The ped to set the glow intensity on.
 * @param intensity The glow intensity, value between `0.0` and `1.0`.
 */
func (_client) N_0x4e90d746056e273d(ped float64, intensity float64) {}
/**
 * This native sets the glow intensity of illuminated clothing items.
 * This native does **NOT** need to be executed every tick.
 * This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
 * Glow intensity is a value between `0.0` and `1.0`.
 * In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
 * Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
 * Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
 * Intensity: `1.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)
 * Intensity: `0.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)
 * **Examples code result**:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)
 * (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
 * @param ped The ped to set the glow intensity on.
 * @param intensity The glow intensity, value between `0.0` and `1.0`.
 */
func (_client) SetPedIlluminatedClothingGlowIntensity(ped float64, intensity float64) {}

func (_client) SetPedEnableWeaponBlocking(ped float64, toggle bool) {}

/**
 * Something related to the environmental effects natives.
 * In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
 */
func (_client) SetPedEnveffColorModulator(ped float64, r float64, g float64, b float64) {}
/**
 * Something related to the environmental effects natives.
 * In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
 */
func (_client) N_0xd69411aa0cebf9e9(ped float64, r float64, g float64, b float64) {}

/**
 * Values look to be between 0.0 and 1.0
 * From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
 * You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
 */
func (_client) SetPedEnveffScale(ped float64, value float64) {}

/**
 * Used for freemode (online) characters.
 * Indices:
 * 1.  black
 * 2.  very light blue/green
 * 3.  dark blue
 * 4.  brown
 * 5.  darker brown
 * 6.  light brown
 * 7.  blue
 * 8.  light blue
 * 9.  pink
 * 10. yellow
 * 11. purple
 * 12. black
 * 13. dark green
 * 14. light brown
 * 15. yellow/black pattern
 * 16. light colored spiral pattern
 * 17. shiny red
 * 18. shiny half blue/half red
 * 19. half black/half light blue
 * 20. white/red perimter
 * 21. green snake
 * 22. red snake
 * 23. dark blue snake
 * 24. dark yellow
 * 25. bright yellow
 * 26. all black
 * 27. red small pupil
 * 28. devil blue/black
 * 29. white small pupil
 * 30. glossed over
 */
func (_client) SetPedEyeColor(ped float64, index float64) {}

/**
 * Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.
 * Index can be 0 - 19
 * SET_PED_M*
 * Here is the list of names. It starts at 0 and runs in sequence
 * Face_Feature
 * Nose_Width
 * Nose_Peak_Hight
 * Nose_Peak_Lenght
 * Nose_Bone_High
 * Nose_Peak_Lowering
 * Nose_Bone_Twist
 * EyeBrown_High
 * EyeBrown_Forward
 * Cheeks_Bone_High
 * Cheeks_Bone_Width
 * Cheeks_Width
 * Eyes_Openning
 * Lips_Thickness
 * Jaw_Bone_Width: Bone size to sides
 * Jaw_Bone_Back_Lenght: Bone size to back
 * Chimp_Bone_Lowering: Go Down
 * Chimp_Bone_Lenght: Go forward
 * Chimp_Bone_Width
 * Chimp_Hole
 * Neck_Thikness
 */
func (_client) SetPedFaceFeature(ped float64, index float64, scale float64) {}

/**
 * FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
 * FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
 * FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
 * FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
 * FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
 * FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
 * FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
 * FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
 * FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
 * FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
 * FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
 * FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
 * FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
 * FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
 * FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
 * FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
 * if anyone is interested firing pattern info: pastebin.com/Px036isB
 */
func (_client) SetPedFiringPattern(ped float64, patternHash interface{}) {}

/**
 * bit 15 (0x8000) = force cower
 */
func (_client) SetPedFleeAttributes(ped float64, attributeFlags float64, enable bool) {}

/**
 * p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
 * p2 is always true.
 */
func (_client) SetPedGadget(ped float64, gadgetHash interface{}, p2 bool) {}

func (_client) SetPedGeneratesDeadBodyEvents(ped float64, toggle bool) {}

/**
 * From the scripts:
 * PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
 * "ANIM_GROUP_GESTURE_MISS_FRA0");
 * PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
 * "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
 */
func (_client) SetPedGestureGroup(ped float64, animGroupGesture string) {}

func (_client) SetPedGetOutUpsideDownVehicle(ped float64, toggle bool) {}

/**
 * enable or disable the gravity of a ped
 * Examples:
 * PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);
 * PED::SET_PED_GRAVITY(Local_289[iVar0  -- [[20]] ], 0x00000001);
 */
func (_client) SetPedGravity(ped float64, toggle bool) {}

func (_client) SetPedGroupMemberPassengerIndex(ped float64, index float64) {}

/**
 * Used for freemode (online) characters.
 */
func (_client) SetPedHairColor(ped float64, colorID float64, highlightColorID float64) {}

/**
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 */
func (_client) SetPedHasAiBlip(ped float64, hasCone bool) {}
/**
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 */
func (_client) N_0xd30c50df888d58b5(ped float64, hasCone bool) {}
/**
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 */
func (_client) SetPedEnemyAiBlip(ped float64, hasCone bool) {}
/**
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 */
func (_client) SetPedAiBlip(ped float64, hasCone bool) {}

func (_client) SetPedHasAiBlipWithColor(ped float64, hasCone bool, color float64) {}
func (_client) N_0xb13dcb4c6faad238(ped float64, hasCone bool, color float64) {}

/**
 * The "shape" parameters control the shape of the ped's face. The "skin" parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
 * The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.
 * !!!Can someone add working example for this???
 * try this:
 * headBlendData headData;
 * _GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);
 * SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
 * , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);
 * For more info please refer to this topic.
 * gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
 */
func (_client) SetPedHeadBlendData(ped float64, shapeFirstID float64, shapeSecondID float64, shapeThirdID float64, skinFirstID float64, skinSecondID float64, skinThirdID float64, shapeMix float64, skinMix float64, thirdMix float64, isParent bool) {}

/**
 * OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
 * overlayID       Part                  Index, to disable
 * 0               Blemishes             0 - 23, 255
 * 1               Facial Hair           0 - 28, 255
 * 2               Eyebrows              0 - 33, 255
 * 3               Ageing                0 - 14, 255
 * 4               Makeup                0 - 74, 255
 * 5               Blush                 0 - 6, 255
 * 6               Complexion            0 - 11, 255
 * 7               Sun Damage            0 - 10, 255
 * 8               Lipstick              0 - 9, 255
 * 9               Moles/Freckles        0 - 17, 255
 * 10              Chest Hair            0 - 16, 255
 * 11              Body Blemishes        0 - 11, 255
 * 12              Add Body Blemishes    0 - 1, 255
 */
func (_client) SetPedHeadOverlay(ped float64, overlayID float64, index float64, opacity float64) {}

/**
 * Used for freemode (online) characters.
 * ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
 * Called after SET_PED_HEAD_OVERLAY().
 */
func (_client) SetPedHeadOverlayColor(ped float64, overlayID float64, colorType float64, colorID float64, secondColorID float64) {}

func (_client) SetPedHearingRange(ped float64, value float64) {}

func (_client) SetPedHeatscaleOverride(ped float64, heatScale float64) {}
func (_client) N_0xc1f6ebf9a3d55538(ped float64, heatScale float64) {}

func (_client) SetPedHelmet(ped float64, canWearHelmet bool) {}

func (_client) SetPedHelmetFlag(ped float64, helmetFlag float64) {}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 * ```
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 */
func (_client) SetPedHelmetPropIndex(ped float64, propIndex float64) {}

func (_client) SetPedHelmetTextureIndex(ped float64, textureIndex float64) {}

func (_client) SetPedHelmetUnk(ped float64, p1 bool, p2 float64, p3 float64) {}
func (_client) N_0x3f7325574e41b44d(ped float64, p1 bool, p2 float64, p3 float64) {}

func (_client) SetPedHighlyPerceptive(ped float64, toggle bool) {}
func (_client) N_0x52d59ab61ddc05dd(ped float64, toggle bool) {}

func (_client) SetPedIdRange(ped float64, value float64) {}

/**
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
 */
func (_client) SetPedInVehicleContext(ped float64, context interface{}) {}

func (_client) SetPedIncreasedAvoidanceRadius(ped float64) {}
func (_client) N_0x570389d1c3de3c6b(ped float64) {}

func (_client) SetPedInfiniteAmmo(ped float64, toggle bool, weaponHash interface{}) {}

func (_client) SetPedInfiniteAmmoClip(ped float64, toggle bool) {}

func (_client) SetPedIntoVehicle(ped float64, vehicle float64, seatIndex float64) {}

/**
 * Sets the ped drunk sounds.  Only works with PLAYER_PED_ID
 * ====================================================
 * As mentioned above, this only sets the drunk sound to ped/player.
 * To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET
 * Below is an example
 * if (!Function.Call<bool>(Hash.HAS_ANIM_SET_LOADED, "move_m@drunk@verydrunk"))
 * {
 * Function.Call(Hash.REQUEST_ANIM_SET, "move_m@drunk@verydrunk");
 * }
 * Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, "move_m@drunk@verydrunk", 0x3E800000);
 * And to stop the effect use
 * RESET_PED_MOVEMENT_CLIPSET
 */
func (_client) SetPedIsDrunk(ped float64, toggle bool) {}

func (_client) SetPedKeepTask(ped float64, toggle bool) {}

/**
 * "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
 */
func (_client) SetPedLegIkMode(ped float64, mode float64) {}

func (_client) SetPedLodMultiplier(ped float64, multiplier float64) {}

/**
 * sets the maximum health of a ped
 * I think it's never been used in any script
 */
func (_client) SetPedMaxHealth(ped float64, value float64) {}

func (_client) SetPedMaxMoveBlendRatio(ped float64, value float64) {}

func (_client) SetPedMaxTimeInWater(ped float64, value float64) {}

func (_client) SetPedMaxTimeUnderwater(ped float64, value float64) {}

/**
 * Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
 */
func (_client) SetPedMinGroundTimeForStungun(ped float64, ms float64) {}

func (_client) SetPedMinMoveBlendRatio(ped float64, value float64) {}

func (_client) SetPedModelIsSuppressed(model interface{}, toggle bool) {}

/**
 * Overrides a ped model personality type.
 * @param modelHash Ped's model.
 * @param personalityHash Personality hash.
 */
func (_client) SetPedModelPersonality(modelHash interface{}, personalityHash interface{}) {}

/**
 * Maximum possible amount of money on MP is 2000. ~JX
 * -----------------------------------------------------------------------------
 * Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
 */
func (_client) SetPedMoney(ped float64, amount float64) {}

func (_client) SetPedMotionBlur(ped float64, toggle bool) {}

func (_client) SetPedMoveAnimsBlendOut(ped float64) {}

/**
 * Min: 0.00
 * Max: 10.00
 * Can be used in combo with fast run cheat.
 * When value is set to 10.00:
 * Sprinting without fast run cheat: 66 m/s
 * Sprinting with fast run cheat: 77 m/s
 * Needs to be looped!
 * Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
 */
func (_client) SetPedMoveRateOverride(ped float64, value float64) {}

/**
 * List of movement clipsets:
 * Thanks to elsewhat for list.
 * "ANIM_GROUP_MOVE_BALLISTIC"
 * "ANIM_GROUP_MOVE_LEMAR_ALLEY"
 * "clipset@move@trash_fast_turn"
 * "FEMALE_FAST_RUNNER"
 * "missfbi4prepp1_garbageman"
 * "move_characters@franklin@fire"
 * "move_characters@Jimmy@slow@"
 * "move_characters@michael@fire"
 * "move_f@flee@a"
 * "move_f@scared"
 * "move_f@sexy@a"
 * "move_heist_lester"
 * "move_injured_generic"
 * "move_lester_CaneUp"
 * "move_m@bag"
 * "MOVE_M@BAIL_BOND_NOT_TAZERED"
 * "MOVE_M@BAIL_BOND_TAZERED"
 * "move_m@brave"
 * "move_m@casual@d"
 * "move_m@drunk@moderatedrunk"
 * "MOVE_M@DRUNK@MODERATEDRUNK"
 * "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
 * "MOVE_M@DRUNK@SLIGHTLYDRUNK"
 * "MOVE_M@DRUNK@VERYDRUNK"
 * "move_m@fire"
 * "move_m@gangster@var_e"
 * "move_m@gangster@var_f"
 * "move_m@gangster@var_i"
 * "move_m@JOG@"
 * "MOVE_M@PRISON_GAURD"
 * "MOVE_P_M_ONE"
 * "MOVE_P_M_ONE_BRIEFCASE"
 * "move_p_m_zero_janitor"
 * "move_p_m_zero_slow"
 * "move_ped_bucket"
 * "move_ped_crouched"
 * "move_ped_mop"
 * "MOVE_M@FEMME@"
 * "MOVE_F@FEMME@"
 * "MOVE_M@GANGSTER@NG"
 * "MOVE_F@GANGSTER@NG"
 * "MOVE_M@POSH@"
 * "MOVE_F@POSH@"
 * "MOVE_M@TOUGH_GUY@"
 * "MOVE_F@TOUGH_GUY@"
 * ~ NotCrunchyTaco
 * @param transitionSpeed time in seconds it takes to transition from one movement clipset to another.
 */
func (_client) SetPedMovementClipset(ped float64, clipSet string, transitionSpeed float64) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 * *untested but char *name could also be a hash for a localized string
 */
func (_client) SetPedNameDebug(ped float64, name string) {}

func (_client) SetPedNeverLeavesGroup(ped float64, toggle bool) {}

/**
 * The distance between these points, is the diagonal of a box (remember it's 3D).
 */
func (_client) SetPedNonCreationArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) {}

func (_client) SetPedPanicExitScenario(ped float64, x float64, y float64, z float64) float64 {
	return 0.0
}
func (_client) N_0xfe07ff6495d52e2a(ped float64, x float64, y float64, z float64) float64 {
	return 0.0
}

func (_client) SetPedParachuteTintIndex(ped float64, tintIndex float64) {}

func (_client) SetPedPathAvoidFire(ped float64, avoidFire bool) {}

func (_client) SetPedPathCanDropFromHeight(ped float64, Toggle bool) {}

func (_client) SetPedPathCanUseClimbovers(ped float64, Toggle bool) {}

func (_client) SetPedPathCanUseLadders(ped float64, Toggle bool) {}

/**
 * Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
 */
func (_client) SetPedPathClimbCostModifier(ped float64, modifier float64) {}
/**
 * Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
 */
func (_client) N_0x88e32db8c1a4aa4b(ped float64, modifier float64) {}

func (_client) SetPedPathMayEnterWater(ped float64, mayEnterWater bool) {}
func (_client) SetPedPathsWidthPlant(ped float64, mayEnterWater bool) {}

func (_client) SetPedPathPreferToAvoidWater(ped float64, avoidWater bool) {}

/**
 * NativeDB Added Parameter 7: Any p6
 */
func (_client) SetPedPathsBackToOriginal(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) SetPedPathsInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, unknown bool) {}

/**
 * i could be time. Only example in the decompiled scripts uses it as -1.
 */
func (_client) SetPedPinnedDown(ped float64, pinned bool, i float64) float64 {
	return 0.0
}

/**
 * **This native does absolutely nothing, just a nullsub**
 * ```
 * Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.
 * ```
 */
func (_client) SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped float64, toggle bool) {}

/**
 * Control how many new (ambient?) peds will spawn in the game world.
 * Range for p0 seems to be 0-3, where 0 is none and 3 is the normal level.
 */
func (_client) SetPedPopulationBudget(p0 float64) {}

func (_client) SetPedPreferredCoverSet(ped float64, itemSet float64) {}
func (_client) N_0x8421eb4da7e391b9(ped float64, itemSet float64) {}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) SetPedPreloadPropData(ped float64, componentId float64, drawableId float64, TextureId float64) bool;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) N_0x2b16a3bff1fbce49(ped float64, componentId float64, drawableId float64, TextureId float64) bool;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) IsPedPropValid(ped float64, componentId float64, drawableId float64, TextureId float64) bool;

/**
 * from extreme3.c4
 * PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
 * p1 is probably componentId
 */
func (_client) SetPedPreloadVariationData(ped float64, slot float64, drawableId float64, textureId float64) float64 {
	return 0.0
}
/**
 * from extreme3.c4
 * PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
 * p1 is probably componentId
 */
func (_client) N_0x39d55a620fcb6a3a(ped float64, slot float64, drawableId float64, textureId float64) float64 {
	return 0.0
}

/**
 * This is only called once in the scripts.
 * sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
 * sub_1CA8("WORLD_HUMAN_SMOKING", 2);
 * PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
 */
func (_client) SetPedPrimaryLookat(ped float64, lookAt float64) {}

/**
 * This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
 * ### MP Freemode list of props
 * **0**: Hat\
 * **1**: Glass\
 * **2**: Ear\
 * **6**: Watch\
 * **7**: Bracelet
 * ### Related and useful natives
 * [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47)\
 * [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171)
 * [List of component/props ID](gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
 * @param ped The ped handle.
 * @param componentId The component that you want to set.
 * @param drawableId The drawable id that is going to be set.
 * @param textureId The texture id of the drawable.
 * @param attach Attached or not.
 */
func (_client) SetPedPropIndex(ped float64, componentId float64, drawableId float64, textureId float64, attach bool) {}

func (_client) SetPedRagdollForceFall(ped float64) {}

/**
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 */
func (_client) SetPedRagdollOnCollision(ped float64, toggle bool) {}

/**
 * p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.
 * List of component/props ID:
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) SetPedRandomComponentVariation(ped float64, p1 float64) {}

/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 */
func (_client) SetPedRandomProps(ped float64) {}

func (_client) SetPedRelationshipGroupDefaultHash(ped float64, hash interface{}) {}

func (_client) SetPedRelationshipGroupHash(ped float64, hash interface{}) {}

func (_client) SetPedReserveParachuteTintIndex(ped float64, p1 float64) {}

/**
 * PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
 * Known values:
 */
func (_client) SetPedResetFlag(ped float64, flagId float64, doReset bool) {}

/**
 * Assigns some ambient voice to the ped.
 */
func (_client) SetPedScream(ped float64) {}
/**
 * Assigns some ambient voice to the ped.
 */
func (_client) N_0x40cf0d12d142a9e8(ped float64) {}

/**
 * This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models. It works on freemode and player_\* models.
 */
func (_client) SetPedScubaGearVariation(ped float64) {}
/**
 * This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models. It works on freemode and player_\* models.
 */
func (_client) N_0x36c6984c3ed0c911(ped float64) {}

func (_client) SetPedSeeingRange(ped float64, value float64) {}

/**
 * Returns handle of the projectile.
 */
func (_client) SetPedShootOrdnanceWeapon(ped float64, p1 float64) float64 {
	return 0.0
}
/**
 * Returns handle of the projectile.
 */
func (_client) N_0xb4c8d77c80c0421e(ped float64, p1 float64) float64 {
	return 0.0
}

/**
 * shootRate 0-1000
 */
func (_client) SetPedShootRate(ped float64, shootRate float64) {}

func (_client) SetPedShootsAtCoord(ped float64, x float64, y float64, z float64, toggle bool) {}

func (_client) SetPedShouldPlayDirectedScenarioExit(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}
func (_client) N_0xec6935ebe0847b90(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) SetPedShouldPlayFleeScenarioExit(ped float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}
func (_client) N_0xeeed8fafec331a70(ped float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) SetPedShouldPlayImmediateScenarioExit(ped float64) {}
func (_client) N_0xf1c03a5352243a30(ped float64) {}

func (_client) SetPedShouldPlayNormalScenarioExit(ped float64) {}
func (_client) N_0xa3a9299c4f2adb98(ped float64) {}

func (_client) SetPedSphereDefensiveArea(ped float64, x float64, y float64, z float64, radius float64, p5 bool, p6 bool) {}

func (_client) SetPedStayInVehicleWhenJacked(ped float64, toggle bool) {}

/**
 * p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
 */
func (_client) SetPedStealthMovement(ped float64, p1 bool, action string) {}

func (_client) SetPedSteersAroundObjects(ped float64, toggle bool) {}

func (_client) SetPedSteersAroundPeds(ped float64, toggle bool) {}

func (_client) SetPedSteersAroundVehicles(ped float64, toggle bool) {}

func (_client) SetPedStrafeClipset(ped float64, clipSet string) {}

/**
 * Ped no longer takes critical damage modifiers if set to FALSE.
 * Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
 */
func (_client) SetPedSuffersCriticalHits(ped float64, toggle bool) {}

/**
 * Sweat is set to 100.0 or 0.0 in the decompiled scripts.
 */
func (_client) SetPedSweat(ped float64, sweat float64) {}

/**
 * Speech related.
 */
func (_client) SetPedTalk(ped float64) {}
/**
 * Speech related.
 */
func (_client) N_0x4ada3f19be4a6047(ped float64) {}

/**
 * Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.
 */
func (_client) SetPedTargetLossResponse(ped float64, responseType float64) {}

func (_client) SetPedToInformRespectedFriends(ped float64, radius float64, maxFriends float64) {}

func (_client) SetPedToLoadCover(ped float64, toggle bool) {}

/**
 * p4/p5: Unusued in TU27
 * ### Ragdoll Types
 * **0**: CTaskNMRelax
 * **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
 * **Else**: CTaskNMBalance
 * @param time1 Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.
 */
func (_client) SetPedToRagdoll(ped float64, time1 float64, time2 float64, ragdollType float64, p4 bool, p5 bool, p6 bool) bool;

/**
 * Return variable is never used in R*'s scripts.
 * Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
 * x, y, and z are coordinates, most likely to where the ped will fall.
 * p7 is probably the force of the fall, but untested, so I left the variable name the same.
 * p8 to p13 are always 0f in R*'s scripts.
 * (Simplified) Example of the usage of the function from R*'s scripts:
 * ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);
 */
func (_client) SetPedToRagdollWithFall(ped float64, time float64, p2 float64, ragdollType float64, x float64, y float64, z float64, p7 float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64, p13 float64) bool;

/**
 * p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
 */
func (_client) SetPedUsingActionMode(ped float64, p1 bool, p2 float64, action string) {}

/**
 * NativeDB Added Parameter 5: Any p4
 * @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
 */
func (_client) SetPedVehicleForcedSeatUsage(ped float64, vehicle float64, seatIndex float64, flags float64) {}
/**
 * NativeDB Added Parameter 5: Any p4
 * @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
 */
func (_client) N_0x952f06beecd775cc(ped float64, vehicle float64, seatIndex float64, flags float64) {}

func (_client) SetPedVisualFieldCenterAngle(ped float64, angle float64) {}

func (_client) SetPedVisualFieldMaxAngle(ped float64, value float64) {}

/**
 * This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
 */
func (_client) SetPedVisualFieldMaxElevationAngle(ped float64, angle float64) {}

func (_client) SetPedVisualFieldMinAngle(ped float64, value float64) {}

/**
 * This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
 */
func (_client) SetPedVisualFieldMinElevationAngle(ped float64, angle float64) {}

func (_client) SetPedVisualFieldPeripheralRange(ped float64, _range float64) {}

/**
 * From the scripts:
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
 */
func (_client) SetPedVoiceGroup(ped float64, voiceGroupHash interface{}) {}
/**
 * From the scripts:
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
 */
func (_client) N_0x7cdc8c3b89f661b3(ped float64, voiceGroupHash interface{}) {}

func (_client) SetPedWaypointRouteOffset(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

func (_client) SetPedWeaponLiveryColor(ped float64, weaponHash interface{}, camoComponentHash interface{}, colorIndex float64) {}
func (_client) N_0x9fe5633880ecd8ed(ped float64, weaponHash interface{}, camoComponentHash interface{}, colorIndex float64) {}

func (_client) SetPedWeaponMovementClipset(ped float64, clipSet string) {}

/**
 * tintIndex can be the following:
 * 0 - Normal
 * 1 - Green
 * 2 - Gold
 * 3 - Pink
 * 4 - Army
 * 5 - LSPD
 * 6 - Orange
 * 7 - Platinum
 */
func (_client) SetPedWeaponTintIndex(ped float64, weaponHash interface{}, tintIndex float64) {}

/**
 * combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
 */
func (_client) SetPedWetnessEnabledThisFrame(ped float64) {}

/**
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
 */
func (_client) SetPedWetnessHeight(ped float64, height float64) {}

func (_client) SetPickupAmmoAmountScaler(p0 float64) {}
func (_client) N_0xe620fd3512a04f18(p0 float64) {}

func (_client) SetPickupGenerationRangeMultiplier(multiplier float64) {}
func (_client) N_0x318516e02de3ece2(multiplier float64) {}

func (_client) SetPickupHiddenWhenUncollectable(p0 float64, p1 float64) {}
func (_client) N_0x3ed2b83ab2e82799(p0 float64, p1 float64) {}

func (_client) SetPickupRegenerationTime(pickup float64, duration float64) {}

/**
 * min: 1.9f, max: 100.0f
 */
func (_client) SetPickupRopeLengthForCargobob(cargobob float64, length1 float64, length2 float64, state bool) {}
/**
 * min: 1.9f, max: 100.0f
 */
func (_client) N_0x877c1eaeac531023(cargobob float64, length1 float64, length2 float64, state bool) {}
/**
 * min: 1.9f, max: 100.0f
 */
func (_client) SetCargobobHookPosition(cargobob float64, length1 float64, length2 float64, state bool) {}

func (_client) SetPickupUncollectable(p0 float64, p1 float64) {}
func (_client) N_0x1c1b69fae509ba97(p0 float64, p1 float64) {}

/**
 * Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
 */
func (_client) SetPlaneEngineHealth(vehicle float64, health float64) {}
/**
 * Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
 */
func (_client) N_0x2a86a0475b6a1434(vehicle float64, health float64) {}

func (_client) SetPlanePropellersHealth(plane float64, health float64) {}
func (_client) N_0x4c815eb175086f84(plane float64, health float64) {}

/**
 * This native sets the turbulence multiplier. It only works for planes.
 * 0.0 = no turbulence at all.
 * 1.0 = heavy turbulence.
 * Works by just calling it once, does not need to be called every tick.
 * @param vehicle The plane to set the multiplier for
 * @param multiplier The turbulence multiplier. Value between 0.0 and 1.0
 */
func (_client) SetPlaneTurbulenceMultiplier(vehicle float64, multiplier float64) {}
/**
 * This native sets the turbulence multiplier. It only works for planes.
 * 0.0 = no turbulence at all.
 * 1.0 = heavy turbulence.
 * Works by just calling it once, does not need to be called every tick.
 * @param vehicle The plane to set the multiplier for
 * @param multiplier The turbulence multiplier. Value between 0.0 and 1.0
 */
func (_client) N_0xad2d28a1afdff131(vehicle float64, multiplier float64) {}

func (_client) SetPlaybackSpeed(vehicle float64, speed float64) {}

/**
 * Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
 */
func (_client) SetPlaybackToUseAi(vehicle float64, drivingStyle float64) {}

/**
 * Time is number of milliseconds before reverting, zero for indefinitely.
 */
func (_client) SetPlaybackToUseAiTryToRevertBackLater(vehicle float64, time float64, drivingStyle float64, p3 bool) {}

func (_client) SetPlayerAirDefenseZoneFlag(player float64, zoneId float64, enable bool) {}
func (_client) N_0xecdc202b25e5cf48(player float64, zoneId float64, enable bool) {}

func (_client) SetPlayerAngry(ped float64, toggle bool) {}

/**
 * Sets the position of the arrow icon representing the player on both the minimap and world map.
 * Too bad this wouldn't work over the network (obviously not). Could spoof where we would be.
 */
func (_client) SetPlayerBlipPositionThisFrame(x float64, y float64) {}

func (_client) SetPlayerBluetoothState(player float64, state bool) {}
func (_client) N_0x5dc40a8869c22141(player float64, state bool) {}

/**
 * Sets whether this player can be hassled by gangs.
 */
func (_client) SetPlayerCanBeHassledByGangs(player float64, toggle bool) {}

/**
 * Sets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.
 * This is a toggle, it does not have to be ran every frame.
 * Example:
 * ```lua
 * SetPlayerCanDoDriveBy(PlayerId(), false)
 * ```
 * @param player The player to target.
 * @param toggle If set to false, disables the players ability to do drive bys.
 */
func (_client) SetPlayerCanDoDriveBy(player float64, toggle bool) {}

func (_client) SetPlayerCanLeaveParachuteSmokeTrail(player float64, enabled bool) {}

/**
 * Sets whether this player can take cover.
 */
func (_client) SetPlayerCanUseCover(player float64, toggle bool) {}

/**
 * Displays cash change notifications on HUD.
 */
func (_client) SetPlayerCashChange(cash float64, bank float64) {}
/**
 * Displays cash change notifications on HUD.
 */
func (_client) SetSingleplayerHudCash(cash float64, bank float64) {}

/**
 * 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
 */
func (_client) SetPlayerClothLockCounter(value float64) {}

/**
 * Every occurrence was either 0 or 2.
 */
func (_client) SetPlayerClothPackageIndex(index float64) {}

func (_client) SetPlayerClothPinFrames(player float64, p1 float64) {}

/**
 * Flags:
 * SPC_AMBIENT_SCRIPT = (1 << 1),
 * SPC_CLEAR_TASKS = (1 << 2),
 * SPC_REMOVE_FIRES = (1 << 3),
 * SPC_REMOVE_EXPLOSIONS = (1 << 4),
 * SPC_REMOVE_PROJECTILES = (1 << 5),
 * SPC_DEACTIVATE_GADGETS = (1 << 6),
 * SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
 * SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
 * SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
 * SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
 * SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
 * SPC_ALLOW_PAD_SHAKE = (1 << 12)
 * See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
 */
func (_client) SetPlayerControl(player float64, bHasControl bool, flags float64) {}

func (_client) SetPlayerFallDistance(player float64, distance float64) {}
func (_client) N_0xefd79fa81dfba9cb(player float64, distance float64) {}

func (_client) SetPlayerForceSkipAimIntro(player float64, toggle bool) {}

func (_client) SetPlayerForcedAim(player float64, toggle bool) {}

func (_client) SetPlayerForcedZoom(player float64, toggle bool) {}

func (_client) SetPlayerHasReserveParachute(player float64) {}

func (_client) SetPlayerHealthRechargeLimit(player float64, limit float64) {}
func (_client) N_0xc388a0f065f5bc34(player float64, limit float64) {}

func (_client) SetPlayerHealthRechargeMultiplier(player float64, regenRate float64) {}

/**
 * NativeDB Introduced: v1180
 */
func (_client) SetPlayerHomingRocketDisabled(player float64, p1 bool) {}
/**
 * NativeDB Introduced: v1180
 */
func (_client) N_0xee4ebdd2593ba844(player float64, p1 bool) {}

/**
 * Simply sets you as invincible (Health will not deplete).
 * Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
 * *(DWORD *)(playerPedAddress + 0x188) |= (1 << 9);
 */
func (_client) SetPlayerInvincible(player float64, toggle bool) {}

func (_client) SetPlayerInvincibleKeepRagdollEnabled(player float64, toggle bool) {}
func (_client) N_0x6bc97f4f4bb3c04b(player float64, toggle bool) {}

func (_client) SetPlayerInvisibleLocally(player float64, toggle bool) {}

/**
 * If toggle is true, the ped's head is shown in the pause menu
 * If toggle is false, the ped's head is not shown in the pause menu
 */
func (_client) SetPlayerIsInAnimalForm(toggle bool) {}
/**
 * If toggle is true, the ped's head is shown in the pause menu
 * If toggle is false, the ped's head is not shown in the pause menu
 */
func (_client) N_0x4ebb7e87aa0dbed4(toggle bool) {}
/**
 * If toggle is true, the ped's head is shown in the pause menu
 * If toggle is false, the ped's head is not shown in the pause menu
 */
func (_client) ShowPedInPauseMenu(toggle bool) {}

/**
 * If toggle is true, hides special ability bar / character name in the pause menu
 * If toggle is false, shows special ability bar / character name in the pause menu
 * SET_PLAYER_*
 */
func (_client) SetPlayerIsInDirectorMode(toggle bool) {}
/**
 * If toggle is true, hides special ability bar / character name in the pause menu
 * If toggle is false, shows special ability bar / character name in the pause menu
 * SET_PLAYER_*
 */
func (_client) N_0x808519373fd336a3(toggle bool) {}
/**
 * If toggle is true, hides special ability bar / character name in the pause menu
 * If toggle is false, shows special ability bar / character name in the pause menu
 * SET_PLAYER_*
 */
func (_client) SetDirectorMode(toggle bool) {}

func (_client) SetPlayerLeavePedBehind(player float64, toggle bool) {}
func (_client) N_0xff300c7649724a0b(player float64, toggle bool) {}

/**
 * Example from fm_mission_controler.ysc.c4:
 * PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);
 * All other decompiled scripts using this seem to be using the player id as the first parameter, so I feel the need to confirm it as so.
 * No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.
 */
func (_client) SetPlayerLockon(player float64, toggle bool) {}

/**
 * Affects the range of auto aim target.
 */
func (_client) SetPlayerLockonRangeOverride(player float64, _range float64) {}

/**
 * Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4
 */
func (_client) SetPlayerMaxArmour(player float64, value float64) {}

func (_client) SetPlayerMayNotEnterAnyVehicle(player float64) {}

func (_client) SetPlayerMayOnlyEnterThisVehicle(player float64, vehicle float64) {}

/**
 * NativeDB Added Parameter 3: BOOL p2
 */
func (_client) SetPlayerMeleeWeaponDamageModifier(player float64, modifier float64) {}

/**
 * modifier's min value is 0.1
 */
func (_client) SetPlayerMeleeWeaponDefenseModifier(player float64, modifier float64) {}

/**
 * Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any reference to the old ped should be reset
 * Make sure to request the model first and wait until it has loaded.
 */
func (_client) SetPlayerModel(player float64, model interface{}) {}

func (_client) SetPlayerNoiseMultiplier(player float64, multiplier float64) {}

/**
 * example:
 * PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);
 */
func (_client) SetPlayerParachuteModelOverride(player float64, model interface{}) {}

func (_client) SetPlayerParachutePackModelOverride(player float64, model interface{}) {}

/**
 * tints 0- 13
 * 0 - unkown
 * 1 - unkown
 * 2 - unkown
 * 3 - unkown
 * 4 - unkown
 */
func (_client) SetPlayerParachutePackTintIndex(player float64, tintIndex float64) {}

func (_client) SetPlayerParachuteSmokeTrailColor(player float64, r float64, g float64, b float64) {}

/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 */
func (_client) SetPlayerParachuteTintIndex(player float64, tintIndex float64) {}

/**
 * p1 was always 5.
 * p4 was always false.
 */
func (_client) SetPlayerParachuteVariationOverride(player float64, p1 float64, p2 float64, p3 float64, p4 bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetPlayerReserveParachuteModelOverride(player float64, model interface{}) {}

/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 */
func (_client) SetPlayerReserveParachuteTintIndex(player float64, index float64) {}

/**
 * example:
 * flags: 0-6
 * PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);
 * wouldnt the flag be the seatIndex?
 */
func (_client) SetPlayerResetFlagPreferRearSeats(player float64, flags float64) {}

/**
 * SET_PLAYER_*
 */
func (_client) SetPlayerRockstarEditorDisabled(toggle bool) {}
/**
 * SET_PLAYER_*
 */
func (_client) N_0x9d8d44adbba61ef2(toggle bool) {}

func (_client) SetPlayerSimulateAiming(player float64, toggle bool) {}

/**
 * Values around 1.0f to 2.0f used in game scripts.
 */
func (_client) SetPlayerSneakingNoiseMultiplier(player float64, multiplier float64) {}

func (_client) SetPlayerSprint(player float64, toggle bool) {}

func (_client) SetPlayerStealthPerceptionModifier(player float64, value float64) {}

/**
 * All names can be found in playerswitchestablishingshots.meta
 */
func (_client) SetPlayerSwitchEstablishingShot(name string) {}
/**
 * All names can be found in playerswitchestablishingshots.meta
 */
func (_client) N_0x0fde9dbfc0a6bc65(name string) {}

func (_client) SetPlayerSwitchOutro(cameraCoordX float64, cameraCoordY float64, cameraCoordZ float64, camRotationX float64, camRotationY float64, camRotationZ float64, camFov float64, camFarClip float64, rotationOrder float64) {}
func (_client) N_0xc208b673ce446b61(cameraCoordX float64, cameraCoordY float64, cameraCoordZ float64, camRotationX float64, camRotationY float64, camRotationZ float64, camFov float64, camFarClip float64, rotationOrder float64) {}

/**
 * the status of default voip system. It affects on `NETWORK_IS_PLAYER_TALKING` and `mp_facial` animation.
 * This function doesn't need to be called every frame, it works like a switcher.
 * @param player The target player.
 * @param state Overriding state.
 */
func (_client) SetPlayerTalkingOverride(player float64, state bool) {}

func (_client) SetPlayerTargetLevel(targetLevel float64) {}
func (_client) N_0x5702b917b99db1cd(targetLevel float64) {}

/**
 * Sets your targeting mode.
 * 0 = Assisted Aim - Full
 * 1 = Assisted Aim - Partial
 * 2 = Free Aim - Assisted
 * 3 = Free Aim
 */
func (_client) SetPlayerTargetingMode(targetMode float64) {}

func (_client) SetPlayerTcmodifierTransition(value float64) {}
func (_client) N_0xbdeb86f4d5809204(value float64) {}

/**
 * Set player team on deathmatch and last team standing..
 */
func (_client) SetPlayerTeam(player float64, team float64) {}

func (_client) SetPlayerUnderwaterTimeRemaining(player float64, time float64) float64 {
	return 0.0
}
func (_client) N_0xa0d3e4f7aafb7e78(player float64, time float64) float64 {
	return 0.0
}

/**
 * modifier's min value is 0.1
 */
func (_client) SetPlayerVehicleDamageModifier(player float64, modifier float64) {}

/**
 * modifier's min value is 0.1
 */
func (_client) SetPlayerVehicleDefenseModifier(player float64, modifier float64) {}

func (_client) SetPlayerVisibleLocally(player float64, toggle bool) {}

/**
 * # Predominant call signatures
 * PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
 * # Parameter value ranges
 * P0: PLAYER::PLAYER_ID()
 * P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)
 * P2: Not set by any call
 */
func (_client) SetPlayerWantedCentrePosition(player float64, p2 bool, p3 bool)  interface{} { return nil }

/**
 * Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
 * wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
 * disableNoMission-  Disables When Off Mission- appears to always be false
 */
func (_client) SetPlayerWantedLevel(player float64, wantedLevel float64, disableNoMission bool) {}

/**
 * p2 is always false in R* scripts
 */
func (_client) SetPlayerWantedLevelNoDrop(player float64, wantedLevel float64, p2 bool) {}

/**
 * Forces any pending wanted level to be applied to the specified player immediately.
 * Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
 * Second parameter is unknown (always false).
 */
func (_client) SetPlayerWantedLevelNow(player float64, p1 bool) {}

/**
 * The native ensures the 'modifier' parameter is 0.1 or greater.
 */
func (_client) SetPlayerWeaponDamageModifier(player float64, modifier float64) {}

func (_client) SetPlayerWeaponDefenseModifier(player float64, modifier float64) {}

func (_client) SetPlayerWeaponDefenseModifier_2(player float64, modifier float64) {}
func (_client) N_0xbcfde9ede4cf27dc(player float64, modifier float64) {}

func (_client) SetPlayerpadShakesWhenControllerDisabled(toggle bool) {}

func (_client) SetPlayersLastVehicle(vehicle float64) {}

/**
 * The player will be ignored by the police if toggle is set to true
 */
func (_client) SetPoliceIgnorePlayer(player float64, toggle bool) {}

/**
 * If toggle is set to false:
 * The police won't be shown on the (mini)map
 * If toggle is set to true:
 * The police will be shown on the (mini)map
 */
func (_client) SetPoliceRadarBlips(toggle bool) {}

/**
 * Min and max are usually 100.0 and 200.0
 */
func (_client) SetPopControlSphereThisFrame(x float64, y float64, z float64, min float64, max float64) {}
/**
 * Min and max are usually 100.0 and 200.0
 */
func (_client) N_0xd8c3be3ee94caf2d(x float64, y float64, z float64, min float64, max float64) {}

/**
 * Found in the b617d scripts, duplicates removed:
 * AUDIO::_044DBAD7A7FA2BE5("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");
 * AUDIO::_044DBAD7A7FA2BE5("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");
 * AUDIO::_044DBAD7A7FA2BE5("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");
 * AUDIO::_044DBAD7A7FA2BE5("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");
 * AUDIO::_044DBAD7A7FA2BE5("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");
 */
func (_client) SetPortalSettingsOverride(p0 string, p1 string) {}
/**
 * Found in the b617d scripts, duplicates removed:
 * AUDIO::_044DBAD7A7FA2BE5("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");
 * AUDIO::_044DBAD7A7FA2BE5("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");
 * AUDIO::_044DBAD7A7FA2BE5("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");
 * AUDIO::_044DBAD7A7FA2BE5("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");
 * AUDIO::_044DBAD7A7FA2BE5("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");
 */
func (_client) N_0x044dbad7a7fa2be5(p0 string, p1 string) {}

func (_client) SetProfileSettingPrologueComplete() {}
func (_client) N_0xb475f27c6a994d65() {}

func (_client) SetRaceTrackRender(toggle bool) {}
func (_client) N_0x1eac5f91bcbc5073(toggle bool) {}

func (_client) SetRadarAsExteriorThisFrame() {}

/**
 * List of interior hashes: pastebin.com/1FUyXNqY
 * Not for every interior zoom > 0 available.
 */
func (_client) SetRadarAsInteriorThisFrame(interior interface{}, x float64, y float64, heading float64, zoom float64) {}

/**
 * zoomLevel ranges from 0 to 200
 */
func (_client) SetRadarZoom(zoomLevel float64) {}

func (_client) SetRadarZoomPrecise(zoom float64) {}
func (_client) RespondingAsTemp(zoom float64) {}

func (_client) SetRadarZoomToBlip(blip float64, zoom float64) {}
func (_client) N_0xf98e4b3e56afc7b1(blip float64, zoom float64) {}

func (_client) SetRadarZoomToDistance(zoom float64) {}
func (_client) SetRadarZoomLevelThisFrame(zoom float64) {}

func (_client) SetRadioAutoUnfreeze(toggle bool) {}

func (_client) SetRadioFrontendFadeTime(fadeTime float64) {}
func (_client) N_0x2c96cdb04fca358e(fadeTime float64) {}

/**
 * Doesn't have an effect in Story Mode.
 * ```
 * NativeDB Introduced: v2372
 * ```
 */
func (_client) SetRadioStationIsVisible(radioStation string, toggle bool) {}

/**
 * 6 calls in the b617d scripts, removed identical lines:
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
 */
func (_client) SetRadioStationMusicOnly(radioStation string, toggle bool) {}
/**
 * 6 calls in the b617d scripts, removed identical lines:
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
 */
func (_client) N_0x774bd811f656a122(radioStation string, toggle bool) {}

/**
 * Sets radio station by index.
 */
func (_client) SetRadioToStationIndex(radioStation float64) {}

/**
 * For a full list, see here: pastebin.com/Kj9t38KF
 */
func (_client) SetRadioToStationName(stationName string) {}

/**
 * Only found this one in the decompiled scripts:
 * AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");
 */
func (_client) SetRadioTrack(radioStation string, radioTrack string) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetRadioTrackMix(radioStationName string, mixName string, p2 float64) {}

/**
 * Enabling this on a radius blip will make it outline only. See https://cdn.discordapp.com/attachments/553235301632573459/575132227935928330/unknown.png
 */
func (_client) SetRadiusBlipEdge(blip float64, toggle bool) {}
/**
 * Enabling this on a radius blip will make it outline only. See https://cdn.discordapp.com/attachments/553235301632573459/575132227935928330/unknown.png
 */
func (_client) N_0x25615540d894b814(blip float64, toggle bool) {}

/**
 * Works for both player and peds, but some flags don't seem to work for the player (1, for example)
 * 1 - Blocks ragdolling when shot.
 * 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
 * 4 - Blocks ragdolling when set on fire.
 * -----------------------------------------------------------------------
 * There seem to be 26 flags
 */
func (_client) SetRagdollBlockingFlags(ped float64, flags float64) {}
/**
 * Works for both player and peds, but some flags don't seem to work for the player (1, for example)
 * 1 - Blocks ragdolling when shot.
 * 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
 * 4 - Blocks ragdolling when set on fire.
 * -----------------------------------------------------------------------
 * There seem to be 26 flags
 */
func (_client) N_0x26695ec767728d84(ped float64, flags float64) {}
/**
 * Works for both player and peds, but some flags don't seem to work for the player (1, for example)
 * 1 - Blocks ragdolling when shot.
 * 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
 * 4 - Blocks ragdolling when set on fire.
 * -----------------------------------------------------------------------
 * There seem to be 26 flags
 */
func (_client) SetPedRagdollBlockingFlags(ped float64, flags float64) {}

/**
 * Controls rain, rain sounds and the creation of puddles.
 * With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
 * With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
 * To use the rain level of the current weather, call this native with `-1f` as `level`.
 * @param level Strength of rain effects
 */
func (_client) SetRainLevel(level float64) {}
/**
 * Controls rain, rain sounds and the creation of puddles.
 * With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
 * With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
 * To use the rain level of the current weather, call this native with `-1f` as `level`.
 * @param level Strength of rain effects
 */
func (_client) SetRainFxIntensity(level float64) {}

func (_client) SetRandomBoats(toggle bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetRandomBoatsInMp(toggle bool) {}

/**
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
 * Does nothing if the mission flag is set.
 */
func (_client) SetRandomEventFlag(toggle bool) {}

func (_client) SetRandomSeed(seed float64) {}

/**
 * Enables spawning random trains on the preset tracks.
 * Requires [`SWITCH_TRAIN_TRACK`](#\_0xFD813BB7DB977F20) and [`SET_TRAIN_TRACK_SPAWN_FREQUENCY`](#\_0x21973BBF8D17EDFA) to be set.
 * @param toggle Whether to enable random trains.
 */
func (_client) SetRandomTrains(toggle bool) {}

func (_client) SetRandomVehicleDensityMultiplierThisFrame(multiplier float64) {}

func (_client) SetRandomWeatherType() {}

/**
 * Lowers the vehicle's stance. Only works for vehicles that support this feature.
 * ```
 * NativeDB Introduced: v2372
 * ```
 */
func (_client) SetReduceDriftVehicleSuspension(vehicle float64, enable bool) {}

func (_client) SetReducePedModelBudget(toggle bool) {}

func (_client) SetReduceVehicleModelBudget(toggle bool) {}

/**
 * Sets the relationship between two groups. This should be called twice (once for each group).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * Example:
 * PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
 * PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
 */
func (_client) SetRelationshipBetweenGroups(relationship float64, group1 interface{}, group2 interface{}) {}

func (_client) SetRelationshipGroupDontAffectWantedLevel(group interface{}, p1 bool) {}
func (_client) N_0x5615e0c5eb2bc6e2(group interface{}, p1 bool) {}

/**
 * Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
 */
func (_client) SetRelationshipToPlayer(player float64, p1 bool) {}
/**
 * Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
 */
func (_client) N_0xa7c511fa1c5bda38(player float64, p1 bool) {}

func (_client) SetRenderHdOnly(toggle bool) {}
func (_client) N_0x40aefd1a244741f2(toggle bool) {}

/**
 * makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
 */
func (_client) SetRenderTrainAsDerailed(train float64, toggle bool) {}

/**
 * A setter for [GET_RESOURCE_KVP_STRING](#\_0x5240DA5A).
 * @param key The key to set
 * @param value The value to write
 */
func (_client) SetResourceKvp(key string, value string) {}

/**
 * A setter for [GET_RESOURCE_KVP_FLOAT](#\_0x35BDCEEA).
 * @param key The key to set
 * @param value The value to write
 */
func (_client) SetResourceKvpFloat(key string, value float64) {}

/**
 * A setter for [GET_RESOURCE_KVP_INT](#\_0x557B586A).
 * @param key The key to set
 * @param value The value to write
 */
func (_client) SetResourceKvpInt(key string, value float64) {}

func (_client) SetRestartCustomPosition(x float64, y float64, z float64, heading float64) {}
func (_client) N_0x706b5edcaa7fa663(x float64, y float64, z float64, heading float64) {}
func (_client) SetCustomRespawnPosition(x float64, y float64, z float64, heading float64) {}

/**
 * Sets the player's rich presence detail state for social platform providers to a specified string.
 * @param presenceState The rich presence string to set.
 */
func (_client) SetRichPresence(presenceState string) {}

/**
 * Activates (usused?) riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
 */
func (_client) SetRiotModeEnabled(toggle bool) {}
/**
 * Activates (usused?) riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
 */
func (_client) N_0x2587a48bc88dfadf(toggle bool) {}

/**
 * missing a last parameter int p6
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 */
func (_client) SetRoadsBackToOriginal(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * ```
 * NativeDB Added Parameter 8: Any p7
 * bool p7 - always 1
 * ```
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) SetRoadsBackToOriginalInAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64) {}

/**
 * unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 X dimension of the angled area 'origin'
 * @param y1 Y dimension of the angled area 'origin'
 * @param z1 Z dimension of the angled area 'origin'
 * @param x2 X dimension of the angled area 'extent'
 * @param y2 Y dimension of the angled area 'extent'
 * @param z2 Z dimension of the angled area 'extent'
 * @param width Width of the angled area
 */
func (_client) SetRoadsInAngledArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, width float64, unknown1 bool, unknown2 bool, unknown3 bool) {}

/**
 * When this is set to false, all nodes in the area get disabled.
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
 * If it's true,
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
 */
func (_client) SetRoadsInArea(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, nodeEnabled bool, unknown2 bool) {}

/**
 * Set's the ropes length change rate, which is the speed that rope should wind if started.
 * @param rope The rope to set the length change rate for.
 * @param lengthChangeRate The rope's new length change rate.
 */
func (_client) SetRopeLengthChangeRate(rope float64, lengthChangeRate float64) {}

/**
 * Toggles whether the usage of [ADD_ROPE](#\_0xE832D760399EB220) should create an underlying CNetworkRopeWorldStateData. By default this is set to false.
 * @param shouldCreate Whether to create an underlying network world state
 */
func (_client) SetRopesCreateNetworkWorldState(shouldCreate bool) {}

/**
 * Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
 * Just call it one time, it is not required to be called once every tick.
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
 * It is not possible to "decrease" speed. Anything below 1 will be ignored.
 */
func (_client) SetRunSprintMultiplierForPlayer(player float64, multiplier float64) {}

func (_client) SetRuntimeTextureArgbData(tex float64, buffer string, length float64) bool;

/**
 * Sets a pixel in the specified runtime texture. This will have to be committed using `COMMIT_RUNTIME_TEXTURE` to have any effect.
 * @param tex A handle to the runtime texture.
 * @param x The X position of the pixel to change.
 * @param y The Y position of the pixel to change.
 * @param r The new R value (0-255).
 * @param g The new G value (0-255).
 * @param b The new B value (0-255).
 * @param a The new A value (0-255).
 */
func (_client) SetRuntimeTexturePixel(tex float64, x float64, y float64, r float64, g float64, b float64, a float64) {}

func (_client) SetSaveHouse(p0 float64, p1 bool, p2 bool) {}

/**
 * ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
 */
func (_client) SetSaveMenuActive(ignoreVehicle bool) {}

/**
 * Sets profile setting 501
 */
func (_client) SetSaveMigrationTransactionId(transactionId float64) {}
/**
 * Sets profile setting 501
 */
func (_client) N_0xf6792800ac95350d(transactionId float64) {}

/**
 * This native is used in some casino scripts to fit the scaleform in the rendertarget.
 */
func (_client) SetScaleformFitRendertarget(scaleformHandle float64, toggle bool) {}
/**
 * This native is used in some casino scripts to fit the scaleform in the rendertarget.
 */
func (_client) N_0xe6a9f00d4240b519(scaleformHandle float64, toggle bool) {}

func (_client) SetScaleformMovieAsNoLongerNeeded(scaleformHandle float64) {}

func (_client) SetScaleformMovieToUseSystemTime(scaleform float64, toggle bool) {}

/**
 * Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU
 */
func (_client) SetScenarioGroupEnabled(scenarioGroup string, p1 bool) {}

func (_client) SetScenarioPedDensityMultiplierThisFrame(p0 float64, p1 float64) {}

func (_client) SetScenarioPedsSpawnInSphereArea(x float64, y float64, z float64, _range float64, p4 float64) {}

/**
 * Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
 */
func (_client) SetScenarioPedsToBeReturnedByNextCommand(value bool) {}

/**
 * seems to enable/disable specific scenario-types from happening in the game world.
 * Here are some scenario types from the scripts:
 * "WORLD_MOUNTAIN_LION_REST"
 * "WORLD_MOUNTAIN_LION_WANDER"
 * "DRIVE"
 * "WORLD_VEHICLE_POLICE_BIKE"
 * "WORLD_VEHICLE_POLICE_CAR"
 * "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
 * "WORLD_VEHICLE_DRIVE_SOLO"
 * "WORLD_VEHICLE_BIKER"
 * "WORLD_VEHICLE_DRIVE_PASSENGERS"
 * "WORLD_VEHICLE_SALTON_DIRT_BIKE"
 * "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
 * "PROP_HUMAN_SEAT_CHAIR"
 * "WORLD_VEHICLE_ATTRACTOR"
 * "WORLD_HUMAN_LEANING"
 * "WORLD_HUMAN_HANG_OUT_STREET"
 * "WORLD_HUMAN_DRINKING"
 * "WORLD_HUMAN_SMOKING"
 * "WORLD_HUMAN_GUARD_STAND"
 * "WORLD_HUMAN_CLIPBOARD"
 * "WORLD_HUMAN_HIKER"
 * "WORLD_VEHICLE_EMPTY"
 * "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
 * "WORLD_HUMAN_PAPARAZZI"
 * "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
 * "WORLD_VEHICLE_PARK_PARALLEL"
 * "WORLD_VEHICLE_CONSTRUCTION_SOLO"
 * "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
 * "WORLD_VEHICLE_TRUCK_LOGS"
 * scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
 */
func (_client) SetScenarioTypeEnabled(scenarioType string, toggle bool) {}

func (_client) SetScriptAsNoLongerNeeded(scriptName string) {}

/**
 * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
 * independent of the player's safe zone configuration.
 * These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
 * for default alignment.
 * Valid values for `horizontalAlign`, from original documentation:
 * *   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
 * the right side of the screen.
 * *   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
 * centered.
 * *   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
 * from the right side of the screen, both move with the right side of the screen.
 * Valid values for `verticalAlign`, from original documentation:
 * *   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
 * rather centered.
 * *   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
 * different from 66.
 * *   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
 * Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
 * canonical value for this is 'I' (73).
 * For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
 * axis.
 * To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
 * @param horizontalAlign The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
 * @param verticalAlign The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
 */
func (_client) SetScriptGfxAlign(horizontalAlign float64, verticalAlign float64) {}
/**
 * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
 * independent of the player's safe zone configuration.
 * These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
 * for default alignment.
 * Valid values for `horizontalAlign`, from original documentation:
 * *   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
 * the right side of the screen.
 * *   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
 * centered.
 * *   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
 * from the right side of the screen, both move with the right side of the screen.
 * Valid values for `verticalAlign`, from original documentation:
 * *   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
 * rather centered.
 * *   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
 * different from 66.
 * *   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
 * Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
 * canonical value for this is 'I' (73).
 * For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
 * axis.
 * To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
 * @param horizontalAlign The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
 * @param verticalAlign The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
 */
func (_client) SetScreenDrawPosition(horizontalAlign float64, verticalAlign float64) {}
/**
 * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
 * independent of the player's safe zone configuration.
 * These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
 * for default alignment.
 * Valid values for `horizontalAlign`, from original documentation:
 * *   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
 * the right side of the screen.
 * *   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
 * centered.
 * *   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
 * from the right side of the screen, both move with the right side of the screen.
 * Valid values for `verticalAlign`, from original documentation:
 * *   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
 * rather centered.
 * *   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
 * different from 66.
 * *   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
 * Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
 * canonical value for this is 'I' (73).
 * For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
 * axis.
 * To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
 * @param horizontalAlign The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
 * @param verticalAlign The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
 */
func (_client) ScreenDrawPositionBegin(horizontalAlign float64, verticalAlign float64) {}

/**
 * Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
 * expects the width/height to be configured using this native in order to get a proper starting position for the draw
 * command.
 * @param x The X offset for the item to be drawn.
 * @param y The Y offset for the item to be drawn.
 * @param w The width of the item to be drawn.
 * @param h The height of the item to be drawn.
 */
func (_client) SetScriptGfxAlignParams(x float64, y float64, w float64, h float64) {}
/**
 * Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
 * expects the width/height to be configured using this native in order to get a proper starting position for the draw
 * command.
 * @param x The X offset for the item to be drawn.
 * @param y The Y offset for the item to be drawn.
 * @param w The width of the item to be drawn.
 * @param h The height of the item to be drawn.
 */
func (_client) N_0xf5a2c681787e579d(x float64, y float64, w float64, h float64) {}
/**
 * Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
 * expects the width/height to be configured using this native in order to get a proper starting position for the draw
 * command.
 * @param x The X offset for the item to be drawn.
 * @param y The Y offset for the item to be drawn.
 * @param w The width of the item to be drawn.
 * @param h The height of the item to be drawn.
 */
func (_client) ScreenDrawPositionRatio(x float64, y float64, w float64, h float64) {}

/**
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
 * @param flag A boolean value.
 */
func (_client) SetScriptGfxDrawBehindPausemenu(flag bool) {}
/**
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
 * @param flag A boolean value.
 */
func (_client) N_0xc6372ecd45d73bcd(flag bool) {}

/**
 * Sets the draw order for script draw commands.
 * Examples from decompiled scripts:
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
 * @param order The intended draw order/layer.
 */
func (_client) SetScriptGfxDrawOrder(order float64) {}
/**
 * Sets the draw order for script draw commands.
 * Examples from decompiled scripts:
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
 * @param order The intended draw order/layer.
 */
func (_client) N_0x61bb1d9b3a95d802(order float64) {}
/**
 * Sets the draw order for script draw commands.
 * Examples from decompiled scripts:
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
 * @param order The intended draw order/layer.
 */
func (_client) Set_2dLayer(order float64) {}
/**
 * Sets the draw order for script draw commands.
 * Examples from decompiled scripts:
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
 * @param order The intended draw order/layer.
 */
func (_client) SetUiLayer(order float64) {}

func (_client) SetScriptUpdateDoorAudio(doorHash interface{}, toggle bool) {}
func (_client) N_0x06c0023bed16dd6b(doorHash interface{}, toggle bool) {}

/**
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
 */
func (_client) SetScriptVariableHudColour(r float64, g float64, b float64, a float64) {}
/**
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
 */
func (_client) N_0xd68a5ff8a3a89874(r float64, g float64, b float64, a float64) {}

/**
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
 */
func (_client) SetScriptVariable_2HudColour(r float64, g float64, b float64, a float64) {}
/**
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
 */
func (_client) N_0x16a304e6cb2bfab9(r float64, g float64, b float64, a float64) {}

/**
 * Only called once in the decompiled scripts. Presumably activates the specified generator.
 */
func (_client) SetScriptVehicleGenerator(vehicleGenerator float64, enabled bool) {}

func (_client) SetScriptWithNameHashAsNoLongerNeeded(scriptHash interface{}) {}
func (_client) SetStreamedScriptAsNoLongerNeeded(scriptHash interface{}) {}

func (_client) SetScriptedAnimSeatOffset(ped float64, p1 float64) {}

func (_client) SetScriptedConversionCoordThisFrame(x float64, y float64, z float64) {}

/**
 * Toggles Heatvision on/off.
 */
func (_client) SetSeethrough(toggle bool) {}

func (_client) SetSequenceToRepeat(taskSequenceId float64, repeat bool) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetSirenKeepOn(vehicle float64, toggle bool) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0xf584cf8529b51434(vehicle float64, toggle bool) {}

func (_client) SetSirenWithNoDriver(vehicle float64, toggle bool) {}

func (_client) SetSnakeoilForEntry(name string, path string, data string) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) SetSnowLevel(level float64) {}

/**
 * HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
 * HUD::SET_SOCIAL_CLUB_TOUR("Missions");
 * HUD::SET_SOCIAL_CLUB_TOUR("General");
 * HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
 */
func (_client) SetSocialClubTour(name string) {}
/**
 * HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
 * HUD::SET_SOCIAL_CLUB_TOUR("Missions");
 * HUD::SET_SOCIAL_CLUB_TOUR("General");
 * HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
 */
func (_client) N_0x9e778248d6685fe0(name string) {}

/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SetSpecialAbility(player float64, p1 float64) {}
/**
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) N_0xb214d570ead7f81a(player float64, p1 float64) {}

func (_client) SetSpecialAbilityMultiplier(multiplier float64) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetSpecialflightWingRatio(vehicle float64, ratio float64) {}

func (_client) SetSrlTime(p0 float64) {}

/**
 * Internal function for setting a state bag value.
 */
func (_client) SetStateBagValue(bagName string, keyName string, valueData string, valueLength float64, replicated bool) {}

/**
 * Hardcoded to not work in multiplayer.
 * Used to lock/unlock doors to interior areas of the game.
 * (Possible) Door Types:
 * pastebin.com/9S2m3qA4
 * Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
 * Locked means that the heading is locked.
 * p6 is always 0.
 * 225 door types, model names and coords found in stripclub.c4:
 * pastebin.com/gywnbzsH
 * get door info: pastebin.com/i14rbekD
 */
func (_client) SetStateOfClosestDoorOfType(_type interface{}, x float64, y float64, z float64, locked bool, heading float64, p6 bool) {}

/**
 * Defines the state of a destructible object.
 * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
 * State 2 == object just spawned
 * State 4 == Beginning of the animation
 * State 6 == Start animation
 * State 9 == End of the animation
 */
func (_client) SetStateOfRayfireMapObject(object float64, state float64) {}
/**
 * Defines the state of a destructible object.
 * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
 * State 2 == object just spawned
 * State 4 == Beginning of the animation
 * State 6 == Start animation
 * State 9 == End of the animation
 */
func (_client) N_0x5c29f698d404c5e1(object float64, state float64) {}
/**
 * Defines the state of a destructible object.
 * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
 * State 2 == object just spawned
 * State 4 == Beginning of the animation
 * State 6 == Start animation
 * State 9 == End of the animation
 */
func (_client) SetDesObjectState(object float64, state float64) {}

/**
 * Example:
 * AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);
 * This turns off surrounding sounds not connected directly to peds.
 */
func (_client) SetStaticEmitterEnabled(emitterName string, toggle bool) {}

/**
 * Access to the store for shark cards etc...
 */
func (_client) SetStoreEnabled(toggle bool) {}

func (_client) SetStreamedTextureDictAsNoLongerNeeded(textureDict string) {}

func (_client) SetStreaming(toggle bool) {}

func (_client) SetStuntJumpsCanTrigger(toggle bool) {}
func (_client) N_0xd79185689f8fd5df(toggle bool) {}

func (_client) SetSubmarineCrushDepths(vehicle float64, toggle bool, depth1 float64, depth2 float64, depth3 float64) {}
func (_client) JitterVehicle(vehicle float64, toggle bool, depth1 float64, depth2 float64, depth3 float64) {}

func (_client) SetSuperJumpThisFrame(player float64) {}

/**
 * Swim speed multiplier.
 * Multiplier goes up to 1.49
 * Just call it one time, it is not required to be called once every tick. - Note copied from below native.
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
 */
func (_client) SetSwimMultiplierForPlayer(player float64, multiplier float64) {}

/**
 * Sets the position of the audio event to the entity's position for one frame(?)
 * if (l_8C3 == 0) {
 * sub_27fd1(0, -1, 1);
 * if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_87D)) {
 * AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(l_87D);
 * }
 * if (sub_7dd(l_A00)) {
 * AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
 * }
 * sub_91c("TK************ SETTING SYNCH SCENE AUDIO POSITION THIS FRAME ************TK");
 * l_8C3 = 1;
 * }
 * --
 * Found in the b617d scripts, duplicates removed:
 * AUDIO::_950A154B8DAB6185("CAR_5_IG_6", l_7FE[1 -- [[1]] ]);
 * AUDIO::_950A154B8DAB6185("EX03_TRAIN_BIKE_LAND",   PLAYER::PLAYER_PED_ID());
 * AUDIO::_950A154B8DAB6185("FBI_2_MCS_1_LeadIn", l_40[2 -- [[1]] ]);
 * AUDIO::_950A154B8DAB6185("FIN_C2_MCS_1", l_24C[0 -- [[1]] ]);
 * AUDIO::_950A154B8DAB6185("MNT_DNC", l_5F);
 * AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
 */
func (_client) SetSynchronizedAudioEventPositionThisFrame(p0 string, p1 float64) {}
/**
 * Sets the position of the audio event to the entity's position for one frame(?)
 * if (l_8C3 == 0) {
 * sub_27fd1(0, -1, 1);
 * if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_87D)) {
 * AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(l_87D);
 * }
 * if (sub_7dd(l_A00)) {
 * AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
 * }
 * sub_91c("TK************ SETTING SYNCH SCENE AUDIO POSITION THIS FRAME ************TK");
 * l_8C3 = 1;
 * }
 * --
 * Found in the b617d scripts, duplicates removed:
 * AUDIO::_950A154B8DAB6185("CAR_5_IG_6", l_7FE[1 -- [[1]] ]);
 * AUDIO::_950A154B8DAB6185("EX03_TRAIN_BIKE_LAND",   PLAYER::PLAYER_PED_ID());
 * AUDIO::_950A154B8DAB6185("FBI_2_MCS_1_LeadIn", l_40[2 -- [[1]] ]);
 * AUDIO::_950A154B8DAB6185("FIN_C2_MCS_1", l_24C[0 -- [[1]] ]);
 * AUDIO::_950A154B8DAB6185("MNT_DNC", l_5F);
 * AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
 */
func (_client) N_0x950a154b8dab6185(p0 string, p1 float64) {}

func (_client) SetSynchronizedSceneHoldLastFrame(sceneID float64, toggle bool) {}
func (_client) N_0x394b9cd12435c981(sceneID float64, toggle bool) {}
func (_client) SetSynchronizedSceneOcclusionPortal(sceneID float64, toggle bool) {}

func (_client) SetSynchronizedSceneLooped(sceneID float64, toggle bool) {}

func (_client) SetSynchronizedSceneOrigin(sceneID float64, x float64, y float64, z float64, roll float64, pitch float64, yaw float64, p7 bool) {}

func (_client) SetSynchronizedScenePhase(sceneID float64, phase float64) {}

func (_client) SetSynchronizedSceneRate(sceneID float64, rate float64) {}

func (_client) SetTaskMoveNetworkSignalBool(ped float64, signalName string, value bool) {}
func (_client) N_0xb0a6cfd2c69c1088(ped float64, signalName string, value bool) {}
func (_client) SetTaskPropertyBool(ped float64, signalName string, value bool) {}

/**
 * p0 - PLAYER::PLAYER_PED_ID();
 * p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
 * p2 - From what i can see it goes up to 1f (maybe).
 * -LcGamingHD
 * Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
 * @param ped The ped on which the task is playing.
 * @param signalName The property name.
 * @param value The property value to set.
 */
func (_client) SetTaskMoveNetworkSignalFloat(ped float64, signalName string, value float64) {}
/**
 * p0 - PLAYER::PLAYER_PED_ID();
 * p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
 * p2 - From what i can see it goes up to 1f (maybe).
 * -LcGamingHD
 * Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
 * @param ped The ped on which the task is playing.
 * @param signalName The property name.
 * @param value The property value to set.
 */
func (_client) N_0xd5bb4025ae449a4e(ped float64, signalName string, value float64) {}
/**
 * p0 - PLAYER::PLAYER_PED_ID();
 * p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
 * p2 - From what i can see it goes up to 1f (maybe).
 * -LcGamingHD
 * Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
 * @param ped The ped on which the task is playing.
 * @param signalName The property name.
 * @param value The property value to set.
 */
func (_client) SetTaskPropertyFloat(ped float64, signalName string, value float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetTaskMoveNetworkSignalFloat_2(ped float64, signalName string, value float64) {}

/**
 * * Flag 1: Aggressive ramming of suspect
 * * Flag 2: Ram attempts
 * * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
 * * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
 * * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
 */
func (_client) SetTaskVehicleChaseBehaviorFlag(ped float64, flag float64, _set bool) {}

func (_client) SetTaskVehicleChaseIdealPursuitDistance(ped float64, distance float64) {}

func (_client) SetTaskVehicleGotoPlaneMinHeightAboveTerrain(plane float64, height float64) {}
func (_client) N_0xb893215d8d4c015b(plane float64, height float64) {}
func (_client) SetPlaneMinHeightAboveGround(plane float64, height float64) {}
func (_client) SetPlaneMinHeightAboveTerrain(plane float64, height float64) {}

/**
 * This is not tested - it's just an assumption.
 * Doesn't seem to work.  I'll try with an int instead. --JT
 * Read the scripts, im dumpass.
 * Doesn't work at all, wether with an bool neither an int
 * if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {
 * VEHICLE::SET_TAXI_LIGHTS(l_115, 1);
 * }
 */
func (_client) SetTaxiLights(vehicle float64, state bool) {}

func (_client) SetTeamPickupObject(object float64, p1 float64, p2 bool) {}

func (_client) SetTextCentre(align bool) {}

func (_client) SetTextChatEnabled(enabled bool) bool;

/**
 * Sets an unknown boolean value in the text chat.
 */
func (_client) SetTextChatUnk(p0 bool) {}

/**
 * colors you input not same as you think?
 * A: for some reason its R B G A
 */
func (_client) SetTextColour(red float64, green float64, blue float64, alpha float64) {}

func (_client) SetTextDropShadow() {}

/**
 * distance - shadow distance in pixels, both horizontal and vertical
 * r, g, b, a - color
 * @param distance Shadow distance in pixels, both horizontal and vertical.
 * @param r Red color.
 * @param g Green color.
 * @param b Blue color.
 * @param a Alpha.
 */
func (_client) SetTextDropshadow(distance float64, r float64, g float64, b float64, a float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) SetTextEdge(p0 float64, r float64, g float64, b float64, a float64) {}

/**
 * fonts that mess up your text where made for number values/misc stuff
 */
func (_client) SetTextFont(fontType float64) {}

/**
 * Types -
 * 0: Center-Justify
 * 1: Left-Justify
 * 2: Right-Justify
 * Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
 */
func (_client) SetTextJustification(justifyType float64) {}
/**
 * Types -
 * 0: Center-Justify
 * 1: Left-Justify
 * 2: Right-Justify
 * Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
 */
func (_client) N_0x4e096588b13ffeca(justifyType float64) {}

func (_client) SetTextLeading(p0 float64) {}

func (_client) SetTextOutline() {}

/**
 * **This native does absolutely nothing, just a nullsub**
 */
func (_client) SetTextProportional(p0 bool) {}

func (_client) SetTextRenderId(renderId float64) {}

func (_client) SetTextRightJustify(toggle bool) {}

/**
 * Size range : 0F to 1.0F
 * p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
 */
func (_client) SetTextScale(scale float64, size float64) {}

/**
 * It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
 * start - left boundry on screen position (0.0 - 1.0)
 * end - right boundry on screen position (0.0 - 1.0)
 */
func (_client) SetTextWrap(start float64, end float64) {}

func (_client) SetTextureVariationOfClosestObjectOfType(x float64, y float64, z float64, radius float64, modelHash interface{}, textureVariation float64) bool;
func (_client) N_0xf12e33034d887f66(x float64, y float64, z float64, radius float64, modelHash interface{}, textureVariation float64) bool;

func (_client) SetThirdPersonAimCamNearClipThisUpdate(distance float64) {}
func (_client) N_0x42156508606de65e(distance float64) {}
func (_client) SetThirdPersonAimCamNearClip(distance float64) {}

func (_client) SetThisScriptCanBePaused(toggle bool) {}

func (_client) SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle bool) {}

/**
 * 0 = high
 * 1 = normal
 * 2 = low
 */
func (_client) SetThreadPriority(priority float64) {}
/**
 * 0 = high
 * 1 = normal
 * 2 = low
 */
func (_client) N_0x42b65deef2edf2a1(priority float64) {}

/**
 * Maximum value is 1.
 * At a value of 0 the game will still run at a minimum time scale.
 * Slow Motion 1: 0.6
 * Slow Motion 2: 0.4
 * Slow Motion 3: 0.2
 */
func (_client) SetTimeScale(timeScale float64) {}

/**
 * Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
 * Parameters:
 * modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
 */
func (_client) SetTimecycleModifier(modifierName string) {}

func (_client) SetTimecycleModifierStrength(strength float64) {}

/**
 * Toggles the Cayo Perico map.
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) SetToggleMinimapHeistIsland(toggle bool) {}

func (_client) SetTrackedPointInfo(point float64, x float64, y float64, z float64, radius float64) {}

func (_client) SetTrailerInverseMassScale(vehicle float64, p1 float64) {}
func (_client) N_0x2a8f319b392e7b3f(vehicle float64, p1 float64) {}

/**
 * Inverse of 0x95CF53B3D687F9FA
 * ```
 * ```
 * NativeDB Added Parameter 1: Vehicle vehicle
 */
func (_client) SetTrailerLegsLowered() {}
/**
 * Inverse of 0x95CF53B3D687F9FA
 * ```
 * ```
 * NativeDB Added Parameter 1: Vehicle vehicle
 */
func (_client) N_0x878c75c09fbdb942() {}

/**
 * in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
 */
func (_client) SetTrailerLegsRaised(vehicle float64) {}
/**
 * in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
 */
func (_client) N_0x95cf53b3d687f9fa(vehicle float64) {}

func (_client) SetTrainCruiseSpeed(train float64, speed float64) {}

/**
 * Sets the ratio that a door is open for on a train.
 * @param train The train to set the door ratio for.
 * @param doorIndex Zero-based door index.
 * @param ratio A value between 0.0 (fully closed) and 1.0 (fully open).
 */
func (_client) SetTrainDoorOpenRatio(train float64, doorIndex float64, ratio float64) {}

func (_client) SetTrainSpeed(train float64, speed float64) {}

/**
 * Only called once inside main_persitant with the parameters, 0
 */
func (_client) SetTrainTrackSpawnFrequency(trackIndex float64, frequency float64) {}
/**
 * Only called once inside main_persitant with the parameters, 0
 */
func (_client) N_0x21973bbf8d17edfa(trackIndex float64, frequency float64) {}

/**
 * Enables or disables whether train doors should be forced open whilst a player is inside the train. This is enabled by default in multiplayer.
 * @param forceOpen Should force open.
 */
func (_client) SetTrainsForceDoorsOpen(forceOpen bool) {}

func (_client) SetTransitionTimecycleModifier(modifierName string, transition float64) {}

/**
 * Probably changes tvs from being a 3d audio to being "global" audio
 */
func (_client) SetTvAudioFrontend(toggle bool) {}

func (_client) SetTvChannel(channel float64) {}

/**
 * Loads specified video sequence into the TV Channel
 * TV_Channel ranges from 0-2
 * VideoSequence can be any of the following:
 * "PL_STD_CNT" CNT Standard Channel
 * "PL_STD_WZL" Weazel Standard Channel
 * "PL_LO_CNT"
 * "PL_LO_WZL"
 * "PL_SP_WORKOUT"
 * "PL_SP_INV" - Jay Norris Assassination Mission Fail
 * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
 * "PL_LO_RS" - Righteous Slaughter Ad
 * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
 * "PL_SP_PLSH1\_INTRO"
 * "PL_LES1\_FAME_OR_SHAME"
 * "PL_STD_WZL_FOS_EP2"
 * "PL_MP_WEAZEL" - Weazel Logo on loop
 * "PL_MP_CCTV" - Generic CCTV loop
 * Restart:
 * 0=video sequence continues as normal
 * 1=sequence restarts from beginning every time that channel is selected
 * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
 * https://pastebin.com/zUzGB6h7
 */
func (_client) SetTvChannelPlaylist(tvChannel float64, playlistName string, restart bool) {}
/**
 * Loads specified video sequence into the TV Channel
 * TV_Channel ranges from 0-2
 * VideoSequence can be any of the following:
 * "PL_STD_CNT" CNT Standard Channel
 * "PL_STD_WZL" Weazel Standard Channel
 * "PL_LO_CNT"
 * "PL_LO_WZL"
 * "PL_SP_WORKOUT"
 * "PL_SP_INV" - Jay Norris Assassination Mission Fail
 * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
 * "PL_LO_RS" - Righteous Slaughter Ad
 * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
 * "PL_SP_PLSH1\_INTRO"
 * "PL_LES1\_FAME_OR_SHAME"
 * "PL_STD_WZL_FOS_EP2"
 * "PL_MP_WEAZEL" - Weazel Logo on loop
 * "PL_MP_CCTV" - Generic CCTV loop
 * Restart:
 * 0=video sequence continues as normal
 * 1=sequence restarts from beginning every time that channel is selected
 * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
 * https://pastebin.com/zUzGB6h7
 */
func (_client) N_0xf7b38b8305f1fe8b(tvChannel float64, playlistName string, restart bool) {}
/**
 * Loads specified video sequence into the TV Channel
 * TV_Channel ranges from 0-2
 * VideoSequence can be any of the following:
 * "PL_STD_CNT" CNT Standard Channel
 * "PL_STD_WZL" Weazel Standard Channel
 * "PL_LO_CNT"
 * "PL_LO_WZL"
 * "PL_SP_WORKOUT"
 * "PL_SP_INV" - Jay Norris Assassination Mission Fail
 * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
 * "PL_LO_RS" - Righteous Slaughter Ad
 * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
 * "PL_SP_PLSH1\_INTRO"
 * "PL_LES1\_FAME_OR_SHAME"
 * "PL_STD_WZL_FOS_EP2"
 * "PL_MP_WEAZEL" - Weazel Logo on loop
 * "PL_MP_CCTV" - Generic CCTV loop
 * Restart:
 * 0=video sequence continues as normal
 * 1=sequence restarts from beginning every time that channel is selected
 * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
 * https://pastebin.com/zUzGB6h7
 */
func (_client) LoadTvChannelSequence(tvChannel float64, playlistName string, restart bool) {}

func (_client) SetTvChannelPlaylistAtHour(tvChannel float64, playlistName string, hour float64) {}
func (_client) N_0x2201c576facaebe8(tvChannel float64, playlistName string, hour float64) {}

func (_client) SetTvVolume(volume float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) SetTyreHealth(vehicle float64, wheelIndex float64, health float64) {}

/**
 * Controls how fast the tires wear out.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtss" (Soft): 2.2
 * "owrtsm" (Medium): 1.7
 * "owrtsh" (Hard): 1.2
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * ```
 * NativeDB Introduced: v2060
 */
func (_client) SetTyreSoftnessMultiplier(vehicle float64, wheelIndex float64, multiplier float64) {}
/**
 * Controls how fast the tires wear out.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtss" (Soft): 2.2
 * "owrtsm" (Medium): 1.7
 * "owrtsh" (Hard): 1.2
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * ```
 * NativeDB Introduced: v2060
 */
func (_client) N_0x392183bb9ea57697(vehicle float64, wheelIndex float64, multiplier float64) {}

/**
 * Controls how much traction the wheel loses.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtds" (Soft): 0.05
 * "owrtdm" (Medium): 0.45
 * "owrtdh" (Hard): 0.8
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * ```
 * NativeDB Introduced: v2060
 */
func (_client) SetTyreTractionLossMultiplier(vehicle float64, wheelIndex float64, multiplier float64) {}
/**
 * Controls how much traction the wheel loses.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtds" (Soft): 0.05
 * "owrtdm" (Medium): 0.45
 * "owrtdh" (Hard): 0.8
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * ```
 * NativeDB Introduced: v2060
 */
func (_client) N_0xc970d0e0fc31d768(vehicle float64, wheelIndex float64, multiplier float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) SetTyreWearMultiplier(vehicle float64, wheelIndex float64, multiplier float64) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetUnkBoolN_0x102ForSubmarineVehicleTask(vehicle float64, value bool) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetUnkFloatN_0x104ForSubmarineVehicleTask(vehicle float64, value float64) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetUnkGlobalBoolRelatedToDamage(value bool) {}

func (_client) SetUseHiDof() {}

/**
 * Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
 */
func (_client) SetUseHigherVehicleJumpForce(vehicle float64, toggle bool) {}
/**
 * Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
 */
func (_client) N_0xf06a16ca55d138d8(vehicle float64, toggle bool) {}

func (_client) SetUserRadioControlEnabled(toggle bool) {}

/**
 * SET_VARIABLE_ON_*
 */
func (_client) SetVariableOnCutsceneAudio(variableName string, value float64) {}
/**
 * SET_VARIABLE_ON_*
 */
func (_client) GetPlayerHeadsetSoundAlternate(variableName string, value float64) {}

func (_client) SetVariableOnSound(soundId float64, variableName string, value float64) {}

/**
 * From the scripts, p0:
 * "ArmWrestlingIntensity",
 * "INOUT",
 * "Monkey_Stream",
 * "ZoomLevel"
 */
func (_client) SetVariableOnStream(p0 string, p1 float64) {}

/**
 * AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
 * AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
 */
func (_client) SetVariableOnUnderWaterStream(variableName string, value float64) {}
/**
 * AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
 * AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
 */
func (_client) N_0x733adf241531e5c2(variableName string, value float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetVehHasRadioOverride(vehicle float64) {}
/**
 * NativeDB Introduced: v2372
 */
func (_client) N_0x3e45765f3fbb582f(vehicle float64) {}

/**
 * For a full list, see here: pastebin.com/Kj9t38KF
 */
func (_client) SetVehRadioStation(vehicle float64, radioStation string) {}

func (_client) SetVehicleActiveDuringPlayback(vehicle float64, toggle bool) {}
func (_client) N_0xdffcef48e511db48(vehicle float64, toggle bool) {}

func (_client) SetVehicleActiveForPedNavigation(vehicle float64, toggle bool) {}
func (_client) N_0x21115bcd6e44656a(vehicle float64, toggle bool) {}
func (_client) SetVehicleCloseDoorDeferedAction(vehicle float64, toggle bool) {}

func (_client) SetVehicleAlarm(vehicle float64, state bool) {}

func (_client) SetVehicleAlarmTimeLeft(vehicle float64, time float64) {}

/**
 * Makes the vehicle accept no passengers.
 */
func (_client) SetVehicleAllowNoPassengersLockon(veh float64, toggle bool) {}

/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 */
func (_client) SetVehicleAsNoLongerNeeded(vehicle float64) {}

/**
 * Vehicle will make a 'rattling' noise when decelerating
 * @param vehicle Vehicle to modify
 * @param intensity A value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating
 */
func (_client) SetVehicleAudioBodyDamageFactor(vehicle float64, intensity float64) {}
/**
 * Vehicle will make a 'rattling' noise when decelerating
 * @param vehicle Vehicle to modify
 * @param intensity A value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating
 */
func (_client) N_0x01bb4d577d38bd9e(vehicle float64, intensity float64) {}

func (_client) SetVehicleAudioEngineDamageFactor(vehicle float64, damageFactor float64) {}
func (_client) N_0x59e7b488451f4d3a(vehicle float64, damageFactor float64) {}

/**
 * Disables the vehicle from being repaired when a vehicle extra is enabled.
 * @param vehicle The vehicle to set disable auto vehicle repair.
 * @param value Setting the value to  true prevents the vehicle from being repaired when a extra is enabled. Setting the value to false allows the vehicle from being repaired when a extra is enabled.
 */
func (_client) SetVehicleAutoRepairDisabled(vehicle float64, value bool) {}

func (_client) SetVehicleAutomaticallyAttaches(vehicle float64, p1 bool, p2 float64) float64 {
	return 0.0
}

/**
 * p2 often set to 1000.0 in the decompiled scripts.
 */
func (_client) SetVehicleBodyHealth(vehicle float64, value float64) {}

/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
 * Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
 * @param aircraft The vehicle to set the bombCount on.
 * @param bombCount The amount of bombs to set for this vehicle.
 */
func (_client) SetVehicleBombCount(aircraft float64, bombCount float64) {}
/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
 * Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
 * @param aircraft The vehicle to set the bombCount on.
 * @param bombCount The amount of bombs to set for this vehicle.
 */
func (_client) N_0xf4b2ed59deb5d774(aircraft float64, bombCount float64) {}
/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
 * Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
 * @param aircraft The vehicle to set the bombCount on.
 * @param bombCount The amount of bombs to set for this vehicle.
 */
func (_client) SetVehicleBombs(aircraft float64, bombCount float64) {}
/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
 * Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
 * @param aircraft The vehicle to set the bombCount on.
 * @param bombCount The amount of bombs to set for this vehicle.
 */
func (_client) SetAircraftBombCount(aircraft float64, bombCount float64) {}

/**
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
 * Will give a boost-soundeffect.
 */
func (_client) SetVehicleBoostActive(vehicle float64, toggle bool) {}

func (_client) SetVehicleBrake(vehicle float64, toggle bool) {}
func (_client) N_0xe4e2fd323574965c(vehicle float64, toggle bool) {}

func (_client) SetVehicleBrakeLights(vehicle float64, toggle bool) {}

/**
 * Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
 */
func (_client) SetVehicleBulldozerArmPosition(vehicle float64, position float64, p2 bool) {}
/**
 * Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
 */
func (_client) N_0xf8ebccc96adb9fb7(vehicle float64, position float64, p2 bool) {}

/**
 * On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
 */
func (_client) SetVehicleBurnout(vehicle float64, toggle bool) {}

/**
 * SET_VEHICLE_AL*
 */
func (_client) SetVehicleCanBeLockedOn(vehicle float64, canBeLockedOn bool, unk bool) {}
/**
 * SET_VEHICLE_AL*
 */
func (_client) N_0x1dda078d12879eee(vehicle float64, canBeLockedOn bool, unk bool) {}

/**
 * This has not yet been tested - it's just an assumption of what the types could be.
 */
func (_client) SetVehicleCanBeTargetted(vehicle float64, state bool) {}

func (_client) SetVehicleCanBeUsedByFleeingPeds(vehicle float64, toggle bool) {}
func (_client) N_0x300504b23bd3b711(vehicle float64, toggle bool) {}

func (_client) SetVehicleCanBeVisiblyDamaged(vehicle float64, state bool) {}

func (_client) SetVehicleCanBreak(vehicle float64, toggle bool) {}

func (_client) SetVehicleCanDeformWheels(vehicle float64, toggle bool) {}
func (_client) N_0x0cdda42f9e360ca6(vehicle float64, toggle bool) {}

func (_client) SetVehicleCanEngineOperateOnFire(vehicle float64, toggle bool) {}
func (_client) N_0x206bc5dc9d1ac70a(vehicle float64, toggle bool) {}

func (_client) SetVehicleCanLeakOil(vehicle float64, toggle bool) {}
func (_client) N_0x51bb2d88d31a914b(vehicle float64, toggle bool) {}

func (_client) SetVehicleCanLeakPetrol(vehicle float64, toggle bool) {}
func (_client) N_0x192547247864dfdd(vehicle float64, toggle bool) {}

func (_client) SetVehicleCanSaveInGarage(vehicle float64, toggle bool) {}
func (_client) N_0x428baccdf5e26ead(vehicle float64, toggle bool) {}

/**
 * Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
 * from Decrypted Scripts I found
 * VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2 -- [[2]] ], 420.0);
 */
func (_client) SetVehicleCeilingHeight(vehicle float64, height float64) {}
/**
 * Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
 * from Decrypted Scripts I found
 * VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2 -- [[2]] ], 420.0);
 */
func (_client) GetVehicleDeformationGetTree(vehicle float64, height float64) {}

/**
 * <1.0 - Decreased torque
 * =1.0 - Default torque
 * >1.0 - Increased torque
 * Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
 * value - is between 0.2 and 1.8 in the decompiled scripts.
 * This needs to be called every frame to take effect.
 */
func (_client) SetVehicleCheatPowerIncrease(vehicle float64, value float64) {}
/**
 * <1.0 - Decreased torque
 * =1.0 - Default torque
 * >1.0 - Increased torque
 * Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
 * value - is between 0.2 and 1.8 in the decompiled scripts.
 * This needs to be called every frame to take effect.
 */
func (_client) SetVehicleEngineTorqueMultiplier(vehicle float64, value float64) {}

func (_client) SetVehicleClutch(vehicle float64, clutch float64) {}

/**
 * Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
 * Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
 * @param vehicle The vehicle to modify.
 * @param colorCombination One of the default color values of the vehicle.
 */
func (_client) SetVehicleColourCombination(vehicle float64, colorCombination float64) {}

/**
 * colorPrimary & colorSecondary are the paint indexes for the vehicle.
 * For a list of valid paint indexes, view: pastebin.com/pwHci0xK
 */
func (_client) SetVehicleColours(vehicle float64, colorPrimary float64, colorSecondary float64) {}

/**
 * Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
 * Doesn't work for planes/helis.
 */
func (_client) SetVehicleControlsInverted(vehicle float64, state bool) {}
/**
 * Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
 * Doesn't work for planes/helis.
 */
func (_client) N_0x5b91b229243351a8(vehicle float64, state bool) {}

/**
 * Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
 * Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
 * @param aircraft The vehicle to set the amount of countermeasures on.
 * @param count The amount of countermeasures to set on this vehicle.
 */
func (_client) SetVehicleCountermeasureCount(aircraft float64, count float64) {}
/**
 * Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
 * Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
 * @param aircraft The vehicle to set the amount of countermeasures on.
 * @param count The amount of countermeasures to set on this vehicle.
 */
func (_client) N_0x9bda23bf666f0855(aircraft float64, count float64) {}
/**
 * Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
 * Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
 * @param aircraft The vehicle to set the amount of countermeasures on.
 * @param count The amount of countermeasures to set on this vehicle.
 */
func (_client) SetAircraftCountermeasureCount(aircraft float64, count float64) {}

func (_client) SetVehicleCurrentRpm(vehicle float64, rpm float64) {}

/**
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
 */
func (_client) SetVehicleCustomPrimaryColour(vehicle float64, r float64, g float64, b float64) {}

/**
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
 */
func (_client) SetVehicleCustomSecondaryColour(vehicle float64, r float64, g float64, b float64) {}

/**
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 * Radius of effect damage applied in a sphere at impact location
 * When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
 * @param radius the size of the damage sphere to apply
 * @param focusOnModel when set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
 */
func (_client) SetVehicleDamage(vehicle float64, xOffset float64, yOffset float64, zOffset float64, damage float64, radius float64, focusOnModel bool) {}

/**
 * SET_VEHICLE_D*
 */
func (_client) SetVehicleDamageModifier(vehicle float64, p1 float64) float64 {
	return 0.0
}
/**
 * SET_VEHICLE_D*
 */
func (_client) N_0x4e20d2a627011e8e(vehicle float64, p1 float64) float64 {
	return 0.0
}

func (_client) SetVehicleDashboardColor(vehicle float64, color float64) {}
func (_client) SetVehicleDashboardColour(vehicle float64, color float64) {}

/**
 * This fixes the deformation of a vehicle but the vehicle health doesn't improve
 */
func (_client) SetVehicleDeformationFixed(vehicle float64) {}

/**
 * **Usage:**
 * *   Use this native inside a looped function.
 * *   Values:
 * *   `0.0` = no vehicles on streets
 * *   `1.0` = normal vehicles on streets
 * `1.0` Seems to be the maximum.
 */
func (_client) SetVehicleDensityMultiplierThisFrame(multiplier float64) {}

/**
 * Sets the dirt level of the passed vehicle.
 * @param vehicle The vehicle to set.
 * @param dirtLevel A number between 0.0 and 15.0 representing the vehicles dirt level.
 */
func (_client) SetVehicleDirtLevel(vehicle float64, dirtLevel float64) {}

func (_client) SetVehicleDisableTowing(vehicle float64, toggle bool) {}
func (_client) N_0x2b6747faa9db9d6b(vehicle float64, toggle bool) {}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) SetVehicleDoorBroken(vehicle float64, doorIndex float64, deleteDoor bool) {}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) SetVehicleDoorCanBreak(vehicle float64, doorIndex float64, isBreakable bool) {}
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) SetVehicleDoorBreakable(vehicle float64, doorIndex float64, isBreakable bool) {}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * @param speed 5 is fast, 1 is slow 3 is medium
 */
func (_client) SetVehicleDoorControl(vehicle float64, doorIndex float64, speed float64, angle float64) {}

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 */
func (_client) SetVehicleDoorLatched(vehicle float64, doorIndex float64, forceClose bool, lock bool, p4 bool) {}

/**
 * Sets the specified door index open on the passed vehicle. See [`IS_VEHICLE_DOOR_FULLY_OPEN`](#\_0x3E933CFF7B111C22).
 * @param vehicle Vehicle.
 * @param doorIndex Index of the door you want to open (0-7)
 * @param loose Whether the door is "loose" (if true the doors have no "spring" and can be closed easily.)
 * @param openInstantly Whether the doors open instantly (if true this native seems to ignore loose)
 */
func (_client) SetVehicleDoorOpen(vehicle float64, doorIndex float64, loose bool, openInstantly bool) {}

/**
 * Sets the specified door index shut on the passed vehicle.
 * ```cpp
 * enum eDoorId
 * {
 * VEH_EXT_DOOR_DSIDE_F = 0,
 * VEH_EXT_DOOR_DSIDE_R = 1,
 * VEH_EXT_DOOR_PSIDE_F = 2,
 * VEH_EXT_DOOR_PSIDE_R = 3,
 * VEH_EXT_BONNET = 4,
 * VEH_EXT_BOOT = 5,
 * // 0x872E72B8 = 0xFFFFFFFF,
 * }
 * ```
 * @param vehicle Vehicle.
 * @param doorIndex Index of the door you want to close.
 * @param closeInstantly Whether the doors close instantly.
 */
func (_client) SetVehicleDoorShut(vehicle float64, doorIndex float64, closeInstantly bool) {}

/**
 * // Source GTA VC miss2 leak, matching constants for 0/2/4, testing
 * // They use 10 in am_mp_property_int, don't know what it does atm.
 * enum eCarLock {
 * CARLOCK_NONE = 0,
 * CARLOCK_UNLOCKED = 1,
 * CARLOCK_LOCKED = 2,
 * CARLOCK_LOCKOUT_PLAYER_ONLY = 3,
 * CARLOCK_LOCKED_PLAYER_INSIDE = 4,
 * CARLOCK_LOCKED_INITIALLY = 5,
 * CARLOCK_FORCE_SHUT_DOORS = 6,
 * CARLOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7
 * };
 */
func (_client) SetVehicleDoorsLocked(vehicle float64, doorLockStatus float64) {}

func (_client) SetVehicleDoorsLockedForAllPlayers(vehicle float64, toggle bool) {}

func (_client) SetVehicleDoorsLockedForNonScriptPlayers(vehicle float64, toggle bool) {}
func (_client) N_0x9737a37136f07e75(vehicle float64, toggle bool) {}

func (_client) SetVehicleDoorsLockedForPlayer(vehicle float64, player float64, toggle bool) {}

func (_client) SetVehicleDoorsLockedForTeam(vehicle float64, team float64, toggle bool) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetVehicleDoorsLockedForUnk(vehicle float64, toggle bool) {}

/**
 * Closes all doors of a vehicle:
 */
func (_client) SetVehicleDoorsShut(vehicle float64, closeInstantly bool) {}

/**
 * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
 * youtu.be/3arlUxzHl5Y
 * i.imgur.com/WrNpYFs.jpg
 */
func (_client) SetVehicleDropsMoneyWhenBlownUp(vehicle float64, toggle bool) {}
/**
 * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
 * youtu.be/3arlUxzHl5Y
 * i.imgur.com/WrNpYFs.jpg
 */
func (_client) N_0x068f64f2470f9656(vehicle float64, toggle bool) {}
/**
 * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
 * youtu.be/3arlUxzHl5Y
 * i.imgur.com/WrNpYFs.jpg
 */
func (_client) SetVehicleCreatesMoneyPickupsWhenExploded(vehicle float64, toggle bool) {}

func (_client) SetVehicleEngineCanDegrade(vehicle float64, toggle bool) {}

/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
 * -------------------------
 * Minimum: -4000
 * Maximum: 1000
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 */
func (_client) SetVehicleEngineHealth(vehicle float64, health float64) {}

/**
 * Starts or stops the engine on the specified vehicle.
 * From what I've tested when I do this to a helicopter the propellers turn off after the engine has started.
 * @param vehicle The vehicle to start or stop the engine on.
 * @param value true to turn the vehicle on; false to turn it off.
 * @param instantly if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
 * @param disableAutoStart If true, the system will prevent the engine from starting when the player got into it.
 */
func (_client) SetVehicleEngineOn(vehicle float64, value bool, instantly bool, disableAutoStart bool) {}

func (_client) SetVehicleEngineTemperature(vehicle float64, temperature float64) {}

/**
 * Examples with a besra:
 * *   [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
 * *   [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
 * *   [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)
 * The parameter fade is a value from 0-1, where 0 is fresh paint.
 * @param vehicle Target vehicle
 * @param fade The paint fade effect strength
 */
func (_client) SetVehicleEnveffScale(vehicle float64, fade float64) {}
/**
 * Examples with a besra:
 * *   [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
 * *   [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
 * *   [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)
 * The parameter fade is a value from 0-1, where 0 is fresh paint.
 * @param vehicle Target vehicle
 * @param fade The paint fade effect strength
 */
func (_client) SetVehiclePaintFade(vehicle float64, fade float64) {}

/**
 * Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.
 * Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).
 * See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#\_0xB5C51B5502E85E83).
 * ```
 * NativeDB Removed Parameter 2: int index
 * ```
 */
func (_client) SetVehicleExclusiveDriver(vehicle float64, toggle bool) {}
/**
 * Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.
 * Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).
 * See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#\_0xB5C51B5502E85E83).
 * ```
 * NativeDB Removed Parameter 2: int index
 * ```
 */
func (_client) N_0x41062318f23ed854(vehicle float64, toggle bool) {}

/**
 * The **actual** [`SET_VEHICLE_EXCLUSIVE_DRIVER`](#\_0x41062318F23ED854) native.
 */
func (_client) SetVehicleExclusiveDriver_2(vehicle float64, ped float64, index float64) {}
/**
 * The **actual** [`SET_VEHICLE_EXCLUSIVE_DRIVER`](#\_0x41062318F23ED854) native.
 */
func (_client) N_0xb5c51b5502e85e83(vehicle float64, ped float64, index float64) {}

/**
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
 */
func (_client) SetVehicleExplodesOnHighExplosionDamage(vehicle float64, toggle bool) {}

/**
 * Max value is 32767
 */
func (_client) SetVehicleExtendedRemovalRange(vehicle float64, _range float64) {}
/**
 * Max value is 32767
 */
func (_client) N_0x79df7e806202ce01(vehicle float64, _range float64) {}

/**
 * Note: only some vehicle have extras
 * extra ids are from 1 - 9 depending on the vehicle
 * -------------------------------------------------
 * ^ not sure if outdated or simply wrong. Max extra ID for b944 is 14
 * -------------------------------------------------
 * p2 is not a on/off toggle. mostly 0 means on and 1 means off.
 * not sure if it really should be a BOOL.
 * -------------------------------------------------
 * Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]
 */
func (_client) SetVehicleExtra(vehicle float64, extraId float64, disable bool) {}

/**
 * They use the same color indexs as SET_VEHICLE_COLOURS.
 */
func (_client) SetVehicleExtraColours(vehicle float64, pearlescentColor float64, wheelColor float64) {}

/**
 * Fix a given vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 * @param vehicle The vehicle that will be fixed
 */
func (_client) SetVehicleFixed(vehicle float64) {}

func (_client) SetVehicleFlightNozzlePosition(vehicle float64, angleRatio float64) {}
func (_client) N_0x30d779de7c4f6dd3(vehicle float64, angleRatio float64) {}
func (_client) SetDesiredVerticalFlightPhase(vehicle float64, angleRatio float64) {}
func (_client) SetPlaneVtolDesiredDirection(vehicle float64, angleRatio float64) {}

func (_client) SetVehicleFlightNozzlePositionImmediate(vehicle float64, angle float64) {}
func (_client) N_0x9aa47fff660cb932(vehicle float64, angle float64) {}
func (_client) SetVerticalFlightPhase(vehicle float64, angle float64) {}
func (_client) SetPlaneVtolDirection(vehicle float64, angle float64) {}

func (_client) SetVehicleForceAfterburner(vehicle float64, toggle bool) {}
func (_client) N_0xb055a34527cb8fd7(vehicle float64, toggle bool) {}

/**
 * SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
 * Speed is in meters per second
 * You can convert meters/s to mph here:
 * http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
 */
func (_client) SetVehicleForwardSpeed(vehicle float64, speed float64) {}

/**
 * Seems to be related to the metal parts, not tyres (like i was expecting lol)
 * Must be called every tick.
 */
func (_client) SetVehicleFrictionOverride(vehicle float64, friction float64) {}

func (_client) SetVehicleFuelLevel(vehicle float64, level float64) {}

/**
 * It switch to highbeam when p1 is set to true.
 */
func (_client) SetVehicleFullbeam(vehicle float64, toggle bool) {}

/**
 * Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
 */
func (_client) SetVehicleGeneratesEngineShockingEvents(vehicle float64, toggle bool) {}
/**
 * Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
 */
func (_client) N_0x279d50de5652d935(vehicle float64, toggle bool) {}

func (_client) SetVehicleGravity(vehicle float64, toggle bool) {}

func (_client) SetVehicleGravityAmount(vehicle float64, gravity float64) {}

func (_client) SetVehicleHandbrake(vehicle float64, toggle bool) {}

/**
 * Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FIELD`, this might require some experimentation.
 * Example: `SetVehicleHandlingField(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
 * @param vehicle The vehicle to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The value to set.
 */
func (_client) SetVehicleHandlingField(vehicle float64, class_ string, fieldName string, value float64) {}

/**
 * Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FLOAT`, this might require some experimentation.
 * Example: `SetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
 * @param vehicle The vehicle to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The floating-point value to set.
 */
func (_client) SetVehicleHandlingFloat(vehicle float64, class_ string, fieldName string, value float64) {}

func (_client) SetVehicleHandlingHashForAi(vehicle float64, hash interface{}) {}
func (_client) N_0x10655fab9915623d(vehicle float64, hash interface{}) {}

/**
 * Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_INT`, this might require some experimentation.
 * @param vehicle The vehicle to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The integer value to set.
 */
func (_client) SetVehicleHandlingInt(vehicle float64, class_ string, fieldName string, value float64) {}

/**
 * Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_VECTOR`, this might require some experimentation.
 * @param vehicle The vehicle to set data for.
 * @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
 * @param fieldName The field name to set. These match the keys in `handling.meta`.
 * @param value The Vector3 value to set.
 */
func (_client) SetVehicleHandlingVector(vehicle float64, class_ string, fieldName string) {}

func (_client) SetVehicleHasBeenDrivenFlag(vehicle float64, toggle bool) {}
func (_client) N_0x02398b627547189c(vehicle float64, toggle bool) {}

func (_client) SetVehicleHasBeenOwnedByPlayer(vehicle float64, owned bool) {}

func (_client) SetVehicleHasMutedSirens(vehicle float64, toggle bool) {}
func (_client) DisableVehicleImpactExplosionActivation(vehicle float64, toggle bool) {}
func (_client) SetDisableVehicleSirenSound(vehicle float64, toggle bool) {}

/**
 * if true, axles won't bend.
 */
func (_client) SetVehicleHasStrongAxles(vehicle float64, toggle bool) {}

func (_client) SetVehicleHasUnbreakableLights(vehicle float64, p1 bool) {}
func (_client) N_0x1aa8a837d2169d94(vehicle float64, p1 bool) {}
func (_client) SetVehicleLightsCanBeVisiblyDamaged(vehicle float64, p1 bool) {}

func (_client) SetVehicleHighGear(vehicle float64, gear float64) {}

/**
 * NativeDB Introduced: v1365
 */
func (_client) SetVehicleHornVariation(vehicle float64, value float64) {}
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0x0350e7e17ba767d0(vehicle float64, value float64) {}
/**
 * NativeDB Introduced: v1365
 */
func (_client) N_0xcda42c4bb9bde779(vehicle float64, value float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) SetVehicleHoverTransformActive(vehicle float64, toggle bool) {}

/**
 * If false, anything related to INPUT_VEH_TRANSFORM are ignored (changing hover state through script natives still possible).
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) SetVehicleHoverTransformEnabled(vehicle float64, toggle bool) {}
/**
 * If false, anything related to INPUT_VEH_TRANSFORM are ignored (changing hover state through script natives still possible).
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) N_0xf1211889df15a763(vehicle float64, toggle bool) {}

/**
 * According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
 * I've only seen this work for `deluxo` though, can't figure out what it's supposed to do on `oppressor2`.
 * For the deluxo:
 * *   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
 * *   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
 * If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
 * This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
 * Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
 * @param vehicle The vehicle (a deluxo or oppressor2).
 * @param state The transform state (value between 0.0 and 1.0).
 */
func (_client) SetVehicleHoverTransformPercentage(vehicle float64, state float64) {}
/**
 * According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
 * I've only seen this work for `deluxo` though, can't figure out what it's supposed to do on `oppressor2`.
 * For the deluxo:
 * *   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
 * *   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
 * If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
 * This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
 * Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
 * @param vehicle The vehicle (a deluxo or oppressor2).
 * @param state The transform state (value between 0.0 and 1.0).
 */
func (_client) N_0x438b3d7ca026fe91(vehicle float64, state float64) {}
/**
 * According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
 * I've only seen this work for `deluxo` though, can't figure out what it's supposed to do on `oppressor2`.
 * For the deluxo:
 * *   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
 * *   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
 * If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
 * This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
 * Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
 * @param vehicle The vehicle (a deluxo or oppressor2).
 * @param state The transform state (value between 0.0 and 1.0).
 */
func (_client) SetVehicleTransformState(vehicle float64, state float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) SetVehicleHoverTransformRatio(vehicle float64, ratio float64) {}

func (_client) SetVehicleInactiveDuringPlayback(vehicle float64, toggle bool) {}
func (_client) N_0x06582aff74894c75(vehicle float64, toggle bool) {}

/**
 * Sets the turn signal enabled for a vehicle.
 * Set turnSignal to 1 for left light, 0 for right light.
 */
func (_client) SetVehicleIndicatorLights(vehicle float64, turnSignal float64, toggle bool) {}

func (_client) SetVehicleIndividualDoorsLocked(vehicle float64, doorIndex float64, doorLockStatus float64) {}
func (_client) SetPedTargettableVehicleDestroy(vehicle float64, doorIndex float64, doorLockStatus float64) {}
func (_client) SetVehicleDoorDestroyType(vehicle float64, doorIndex float64, doorLockStatus float64) {}

func (_client) SetVehicleInteriorColor(vehicle float64, color float64) {}
func (_client) SetVehicleInteriorColour(vehicle float64, color float64) {}

func (_client) SetVehicleInteriorlight(vehicle float64, toggle bool) {}

/**
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
 */
func (_client) SetVehicleIsConsideredByPlayer(vehicle float64, toggle bool) {}

/**
 * p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
 */
func (_client) SetVehicleIsRacing(vehicle float64, toggle bool) {}
/**
 * p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
 */
func (_client) SteerUnlockBias(vehicle float64, toggle bool) {}

func (_client) SetVehicleIsStolen(vehicle float64, isStolen bool) {}

/**
 * Sets the wanted state of this vehicle.
 */
func (_client) SetVehicleIsWanted(vehicle float64, state bool) {}

func (_client) SetVehicleJetEngineOn(vehicle float64, toggle bool) {}
func (_client) N_0xb8fbc8b1330ca9b4(vehicle float64, toggle bool) {}

func (_client) SetVehicleKersAllowed(vehicle float64, toggle bool) {}
func (_client) N_0x99c82f8a139f3e4e(vehicle float64, toggle bool) {}
func (_client) SetVehicleHudSpecialAbilityBarActive(vehicle float64, toggle bool) {}

/**
 * multiplier = brightness of head lights.
 * this value isn't capped afaik.
 * multiplier = 0.0 no lights
 * multiplier = 1.0 default game value
 */
func (_client) SetVehicleLightMultiplier(vehicle float64, multiplier float64) {}

/**
 * set's if the vehicle has lights or not.
 * not an on off toggle.
 * p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
 * p1 = 1 ;vehicle doesn't have lights, always off
 * p1 = 2 ;vehicle has always on lights
 * p1 = 3 ;or even larger like 4,5,... normal lights like =1
 * note1: when using =2 on day it's lowbeam,highbeam
 * but at night it's lowbeam,lowbeam,highbeam
 * note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
 */
func (_client) SetVehicleLights(vehicle float64, state float64) {}

/**
 * p1 can be either 0, 1 or 2.
 * Determines how vehicle lights behave when toggled.
 * 0 = Default (Lights can be toggled between off, normal and high beams)
 * 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
 * 2 = Always On (Lights can be toggled between normal and high beams)
 */
func (_client) SetVehicleLightsMode(vehicle float64, p1 float64) {}
/**
 * p1 can be either 0, 1 or 2.
 * Determines how vehicle lights behave when toggled.
 * 0 = Default (Lights can be toggled between off, normal and high beams)
 * 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
 * 2 = Always On (Lights can be toggled between normal and high beams)
 */
func (_client) N_0x1fd09e7390a74d54(vehicle float64, p1 float64) {}

func (_client) SetVehicleLivery(vehicle float64, livery float64) {}

func (_client) SetVehicleLodMultiplier(vehicle float64, multiplier float64) {}

/**
 * To reset the max speed, set the `speed` value to `0.0` or lower.
 * @param vehicle The vehicle handle.
 * @param speed The speed limit in meters per second.
 */
func (_client) SetVehicleMaxSpeed(vehicle float64, speed float64) {}
/**
 * To reset the max speed, set the `speed` value to `0.0` or lower.
 * @param vehicle The vehicle handle.
 * @param speed The speed limit in meters per second.
 */
func (_client) N_0xbaa045b4e42f3c06(vehicle float64, speed float64) {}

/**
 * cpp
 * // eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).
 * enum eVehicleModType
 * {
 * VMT_SPOILER = 0,
 * VMT_BUMPER_F = 1,
 * VMT_BUMPER_R = 2,
 * VMT_SKIRT = 3,
 * VMT_EXHAUST = 4,
 * VMT_CHASSIS = 5,
 * VMT_GRILL = 6,
 * VMT_BONNET = 7,
 * VMT_WING_L = 8,
 * VMT_WING_R = 9,
 * VMT_ROOF = 10,
 * VMT_ENGINE = 11,
 * VMT_BRAKES = 12,
 * VMT_GEARBOX = 13,
 * VMT_HORN = 14,
 * VMT_SUSPENSION = 15,
 * VMT_ARMOUR = 16,
 * VMT_NITROUS = 17,
 * VMT_TURBO = 18,
 * VMT_SUBWOOFER = 19,
 * VMT_TYRE_SMOKE = 20,
 * VMT_HYDRAULICS = 21,
 * VMT_XENON_LIGHTS = 22,
 * VMT_WHEELS = 23,
 * VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
 * VMT_PLTHOLDER = 25,
 * VMT_PLTVANITY = 26,
 * VMT_INTERIOR1 = 27,
 * VMT_INTERIOR2 = 28,
 * VMT_INTERIOR3 = 29,
 * VMT_INTERIOR4 = 30,
 * VMT_INTERIOR5 = 31,
 * VMT_SEATS = 32,
 * VMT_STEERING = 33,
 * VMT_KNOB = 34,
 * VMT_PLAQUE = 35,
 * VMT_ICE = 36,
 * VMT_TRUNK = 37,
 * VMT_HYDRO = 38,
 * VMT_ENGINEBAY1 = 39,
 * VMT_ENGINEBAY2 = 40,
 * VMT_ENGINEBAY3 = 41,
 * VMT_CHASSIS2 = 42,
 * VMT_CHASSIS3 = 43,
 * VMT_CHASSIS4 = 44,
 * VMT_CHASSIS5 = 45,
 * VMT_DOOR_L = 46,
 * VMT_DOOR_R = 47,
 * VMT_LIVERY_MOD = 48,
 * VMT_LIGHTBAR = 49,
 * };
 */
func (_client) SetVehicleMod(vehicle float64, modType float64, modIndex float64, customTires bool) {}

/**
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * color float64 of the color.
 * p3 seems to always be 0.
 */
func (_client) SetVehicleModColor_1(vehicle float64, paintType float64, color float64, pearlescentColor float64) {}

/**
 * Changes the secondary paint type and color
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * color float64 of the color
 */
func (_client) SetVehicleModColor_2(vehicle float64, paintType float64, color float64) {}

/**
 * Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
 */
func (_client) SetVehicleModKit(vehicle float64, modKit float64) {}

/**
 * seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:
 * VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);
 */
func (_client) SetVehicleModelIsSuppressed(model interface{}, suppressed bool) {}

/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 */
func (_client) SetVehicleNameDebug(vehicle float64, name string) {}

func (_client) SetVehicleNeedsToBeHotwired(vehicle float64, toggle bool) {}

/**
 * Sets the neon lights of the specified vehicle on/off.
 * Indices:
 * 0 = Left
 * 1 = Right
 * 2 = Front
 * 3 = Back
 */
func (_client) SetVehicleNeonLightEnabled(vehicle float64, index float64, toggle bool) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetVehicleNeonLightsColor_2(vehicle float64, color float64) {}

/**
 * Sets the color of the neon lights on the specified vehicle.
 * RGB values and colour names taken from the decompiled scripts:
 * | Colour         |  R  |  G  |  B  |
 * |---------------|:---:|:---:|:---:|
 * | White         | 222 | 222 | 255 |
 * | Blue          | 2   | 21  | 255 |
 * | Electric Blue | 3   | 83  | 255 |
 * | Mint Green    | 0   | 255 | 140 |
 * | Lime Green    | 94  | 255 | 1   |
 * | Yellow        | 255 | 255 | 0   |
 * | Golden Shower | 255 | 150 | 0   |
 * | Orange        | 255 | 62  | 0   |
 * | Red           | 255 | 1   | 1   |
 * | Pony Pink     | 255 | 50  | 100 |
 * | Hot Pink      | 255 | 5   | 190 |
 * | Purple        | 35  | 1   | 255 |
 * | Blacklight    | 15  | 3   | 255 |
 */
func (_client) SetVehicleNeonLightsColour(vehicle float64, r float64, g float64, b float64) {}

/**
 * NativeDB Introduced: v1604
 * NativeDB Added Parameter 2 (2060): float level
 * NativeDB Added Parameter 3 (2060): float power
 * NativeDB Added Parameter 4 (2060): float rechargeTime
 * NativeDB Added Parameter 5 (2060): BOOL disableSound
 */
func (_client) SetVehicleNitroEnabled(vehicle float64, toggle bool) {}

func (_client) SetVehicleNumberPlateText(vehicle float64, plateText string) {}

/**
 * Plates:
 * Blue/White - 0
 * Yellow/black - 1
 * Yellow/Blue - 2
 * Blue/White2 - 3
 * Blue/White3 - 4
 * Yankton - 5
 */
func (_client) SetVehicleNumberPlateTextIndex(vehicle float64, plateIndex float64) {}

func (_client) SetVehicleOilLevel(vehicle float64, level float64) {}

/**
 * Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
 * ```
 * ```
 * NativeDB Added Parameter 2: float p1
 */
func (_client) SetVehicleOnGroundProperly(vehicle float64) bool;

/**
 * Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
 */
func (_client) SetVehicleOutOfControl(vehicle float64, killDriver bool, explodeOnImpact bool) {}

func (_client) SetVehicleParachuteActive(vehicle float64, active bool) {}

/**
 * parachuteModel = 230075693
 */
func (_client) SetVehicleParachuteModel(vehicle float64, modelHash interface{}) {}
/**
 * parachuteModel = 230075693
 */
func (_client) VehicleSetCustomParachuteModel(vehicle float64, modelHash interface{}) {}

/**
 * colorIndex = 0 - 7
 */
func (_client) SetVehicleParachuteTextureVariation(vehicle float64, textureVariation float64) {}
/**
 * colorIndex = 0 - 7
 */
func (_client) VehicleSetCustomParachuteTexture(vehicle float64, textureVariation float64) {}
/**
 * colorIndex = 0 - 7
 */
func (_client) SetVehicleParachuteTextureVariatiion(vehicle float64, textureVariation float64) {}

/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 */
func (_client) SetVehiclePetrolTankHealth(vehicle float64, health float64) {}

func (_client) SetVehiclePopulationBudget(p0 float64) {}

func (_client) SetVehicleProvidesCover(vehicle float64, toggle bool) {}

/**
 * can't seem to enable radio on cop cars etc
 */
func (_client) SetVehicleRadioEnabled(vehicle float64, toggle bool) {}

func (_client) SetVehicleRadioLoud(vehicle float64, toggle bool) {}

func (_client) SetVehicleRampLaunchModifier(vehicle float64, p1 float64) {}
func (_client) N_0xefc13b1ce30d755d(vehicle float64, p1 float64) {}

func (_client) SetVehicleRampSidewaysLaunchMotion(vehicle float64, toggle bool) {}
func (_client) N_0x1bbac99c0bc53656(vehicle float64, toggle bool) {}

func (_client) SetVehicleRampUpwardsLaunchMotion(vehicle float64, toggle bool) {}
func (_client) N_0x756ae6e962168a04(vehicle float64, toggle bool) {}

func (_client) SetVehicleReceivesRampDamage(vehicle float64, toggle bool) {}
func (_client) SetRampVehicleReceivesRampDamage(vehicle float64, toggle bool) {}

/**
 * Reduces grip significantly so it's hard to go anywhere.
 */
func (_client) SetVehicleReduceGrip(vehicle float64, toggle bool) {}

/**
 * Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#\_0x222FF6A823D122E2).
 * ```
 * NativeDB Introduced: v1604
 * ```
 */
func (_client) SetVehicleReduceTraction(vehicle float64, val float64) {}
/**
 * Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#\_0x222FF6A823D122E2).
 * ```
 * NativeDB Introduced: v1604
 * ```
 */
func (_client) N_0x6dee944e1ee90cfb(vehicle float64, val float64) {}

func (_client) SetVehicleRocketBoostActive(vehicle float64, active bool) {}

func (_client) SetVehicleRocketBoostPercentage(vehicle float64, percentage float64) {}

func (_client) SetVehicleRocketBoostRefillTime(vehicle float64, time float64) {}

/**
 * Used to set the tornado custom (convertible) rooftop livery.
 * Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
 * Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
 * @param vehicle The vehicle handle.
 * @param livery Livery index.
 */
func (_client) SetVehicleRoofLivery(vehicle float64, livery float64) {}
/**
 * Used to set the tornado custom (convertible) rooftop livery.
 * Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
 * Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
 * @param vehicle The vehicle handle.
 * @param livery Livery index.
 */
func (_client) N_0xa6d3a8750dc73270(vehicle float64, livery float64) {}

func (_client) SetVehicleRudderBroken(vehicle float64, toggle bool) {}

/**
 * Only works during nighttime.
 */
func (_client) SetVehicleSearchlight(heli float64, toggle bool, canBeUsedByAI bool) {}

/**
 * Adds some kind of shadow to the vehicle.
 * -1 disables the effect.
 * DISABLE_*
 */
func (_client) SetVehicleShadowEffect(vehicle float64, p1 float64, p2 float64) {}
/**
 * Adds some kind of shadow to the vehicle.
 * -1 disables the effect.
 * DISABLE_*
 */
func (_client) N_0xf0e4ba16d1db546c(vehicle float64, p1 float64, p2 float64) {}

/**
 * Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
 * WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);
 */
func (_client) SetVehicleShootAtTarget(driver float64, entity float64, xTarget float64, yTarget float64, zTarget float64) {}

/**
 * If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
 */
func (_client) SetVehicleSilent(vehicle float64, toggle bool) {}
/**
 * If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
 */
func (_client) N_0x9d44fcce98450843(vehicle float64, toggle bool) {}

/**
 * Activate siren on vehicle (Only works if the vehicle has a siren).
 */
func (_client) SetVehicleSiren(vehicle float64, toggle bool) {}

/**
 * Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
 * ============================================
 * May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
 * Btw, func_1333 ends up calling this func which uses this native,
 * void func_1338(int iParam0)//Position
 * {
 * ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);
 * ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);
 * ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
 * VEHICLE::_0xDF594D8D(iParam0, true);
 * }
 */
func (_client) SetVehicleSt(vehicle float64, toggle bool) {}
/**
 * Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
 * ============================================
 * May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
 * Btw, func_1333 ends up calling this func which uses this native,
 * void func_1338(int iParam0)//Position
 * {
 * ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);
 * ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);
 * ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
 * VEHICLE::_0xDF594D8D(iParam0, true);
 * }
 */
func (_client) N_0x1cf38d529d7441d9(vehicle float64, toggle bool) {}

/**
 * Locks the vehicle's steering to the desired angle, explained below.
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
 * Steer bias:
 * -1.0 = full right
 * 0.0 = centered steering
 * 1.0 = full left
 */
func (_client) SetVehicleSteerBias(vehicle float64, value float64) {}

func (_client) SetVehicleSteeringAngle(vehicle float64, angle float64) {}

func (_client) SetVehicleSteeringBiasScalar(vehicle float64, scalar float64) {}
func (_client) N_0x9007a2f21dc108d4(vehicle float64, scalar float64) {}

func (_client) SetVehicleSteeringScale(vehicle float64, scale float64) {}

/**
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
 */
func (_client) SetVehicleStrong(vehicle float64, toggle bool) {}

/**
 * Sets the height of the vehicle's suspension.
 * This changes the same value set by Suspension in the mod shop.
 * Negatives values raise the car. Positive values lower the car.
 * This is change is visual only. The collision of the vehicle will not move.
 */
func (_client) SetVehicleSuspensionHeight(vehicle float64, newHeight float64) {}

func (_client) SetVehicleTankTurretPosition(vehicle float64, position float64, p2 bool) {}
func (_client) N_0x56b94c6d7127dfba(vehicle float64, position float64, p2 bool) {}

func (_client) SetVehicleTimedExplosion(vehicle float64, ped float64, toggle bool) {}

/**
 * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
 */
func (_client) SetVehicleTowTruckArmPosition(vehicle float64, position float64) {}
/**
 * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
 */
func (_client) SetTowTruckCraneRaised(vehicle float64, position float64) {}
/**
 * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
 */
func (_client) SetTowTruckCraneHeight(vehicle float64, position float64) {}

func (_client) SetVehicleTurboPressure(vehicle float64, pressure float64) {}

func (_client) SetVehicleTurretSpeedThisFrame(vehicle float64, speed float64) {}
func (_client) N_0x1093408b4b9d1146(vehicle float64, speed float64) {}

/**
 * Toggles specific flag on turret
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) SetVehicleTurretUnk(vehicle float64, index float64, toggle bool) {}
/**
 * Toggles specific flag on turret
 * ```
 * ```
 * NativeDB Introduced: v1290
 */
func (_client) N_0xc60060eb0d8ac7b1(vehicle float64, index float64, toggle bool) {}

/**
 * "To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)
 * to burst all tyres type it 8 times where p1 = 0 to 7.
 * p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 */
func (_client) SetVehicleTyreBurst(vehicle float64, index float64, onRim bool, p3 float64) {}

/**
 * tyreIndex = 0 to 4 on normal vehicles
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 */
func (_client) SetVehicleTyreFixed(vehicle float64, tyreIndex float64) {}

/**
 * Sets the tire smoke's color of this vehicle.
 * vehicle: The vehicle that is the target of this method.
 * r: The red level in the RGB color code.
 * g: The green level in the RGB color code.
 * b: The blue level in the RGB color code.
 * Note:
 * setting r,g,b to 0 will give the car independance day tyre smoke
 */
func (_client) SetVehicleTyreSmokeColor(vehicle float64, r float64, g float64, b float64) {}

/**
 * Allows you to toggle bulletproof tires.
 */
func (_client) SetVehicleTyresCanBurst(vehicle float64, toggle bool) {}

func (_client) SetVehicleUndriveable(vehicle float64, toggle bool) {}

func (_client) SetVehicleUnkDamageMultiplier(vehicle float64, multiplier float64) {}
func (_client) N_0x45a561a9421ab6ad(vehicle float64, multiplier float64) {}

func (_client) SetVehicleUseAlternateHandling(vehicle float64, toggle bool) {}
func (_client) N_0x1d97d1e3a70a649f(vehicle float64, toggle bool) {}

func (_client) SetVehicleUseCutsceneWheelCompression(p0 float64, p1 bool, p2 bool, p3 bool) float64 {
	return 0.0
}
func (_client) SetAllVehiclesSpawn(p0 float64, p1 bool, p2 bool, p3 bool) float64 {
	return 0.0
}
func (_client) N_0xe023e8ac4ef7c117(p0 float64, p1 bool, p2 bool, p3 bool) float64 {
	return 0.0
}

func (_client) SetVehicleUsePlayerLightSettings(vehicle float64, toggle bool) {}
func (_client) N_0xc45c27ef50f36adc(vehicle float64, toggle bool) {}
func (_client) SetVehicleUsePlayerLightSettings(vehicle float64, toggle bool) {}

/**
 * vehicle must be a plane
 */
func (_client) SetVehicleUsesLargeRearRamp(vehicle float64, toggle bool) {}
/**
 * vehicle must be a plane
 */
func (_client) N_0xcac66558b944da67(vehicle float64, toggle bool) {}

func (_client) SetVehicleWeaponCapacity(vehicle float64, weaponIndex float64, capacity float64) {}
func (_client) N_0x44cd1f493db2a0a6(vehicle float64, weaponIndex float64, capacity float64) {}

func (_client) SetVehicleWeaponsDisabled(vehicle float64, weaponSlot float64) {}
func (_client) N_0x86b4b6212cb8b627(vehicle float64, weaponSlot float64) {}

/**
 * Sets brake pressure of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * Normal values around 1.0f
 */
func (_client) SetVehicleWheelBrakePressure(vehicle float64, wheelIndex float64, pressure float64) {}

/**
 * Sets the flags of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * @param flags bit flags
 */
func (_client) SetVehicleWheelFlags(vehicle float64, wheelIndex float64, flags float64) {}

func (_client) SetVehicleWheelHealth(vehicle float64, wheelIndex float64, health float64) {}

/**
 * Sets whether the wheel is powered.
 * On all wheel drive cars this works to change which wheels receive power, but if a car's fDriveBiasFront doesn't send power to that wheel, it won't get power anyway. This can be fixed by changing the fDriveBiasFront with SET_VEHICLE_HANDLING_FLOAT.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 * This is a shortcut to a flag in SET_VEHICLE_WHEEL_FLAGS.
 */
func (_client) SetVehicleWheelIsPowered(vehicle float64, wheelIndex float64, powered bool) {}

/**
 * Sets power being sent to a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 */
func (_client) SetVehicleWheelPower(vehicle float64, wheelIndex float64, power float64) {}

/**
 * Not sure what this changes, probably determines physical rim size in case the tire is blown.
 * @param vehicle The vehicle to obtain data for.
 * @param wheelIndex Index of wheel, 0-3.
 * @param value Size of rim collider.
 */
func (_client) SetVehicleWheelRimColliderSize(vehicle float64, wheelIndex float64, value float64) {}

/**
 * Sets the rotation speed of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 */
func (_client) SetVehicleWheelRotationSpeed(vehicle float64, wheelIndex float64, speed float64) {}

/**
 * Sets vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
 * Only works on non-default wheels.
 * Returns whether change was successful (can be false if trying to set size for non-default wheels).
 * @param vehicle The vehicle to set data for.
 * @param size Size of the wheels (usually between 0.5 and 1.5 is reasonable).
 * @return Bool - whether change was successful or not
 */
func (_client) SetVehicleWheelSize(vehicle float64, size float64) bool;

/**
 * Use along with SetVehicleWheelSize to resize the wheels (this native sets the collider size affecting physics while SetVehicleWheelSize will change visual size).
 * @param vehicle The vehicle to obtain data for.
 * @param wheelIndex Index of wheel, 0-3.
 * @param value Radius of tire collider.
 */
func (_client) SetVehicleWheelTireColliderSize(vehicle float64, wheelIndex float64, value float64) {}

/**
 * Use along with SetVehicleWheelWidth to resize the wheels (this native sets the collider width affecting physics while SetVehicleWheelWidth will change visual width).
 * @param vehicle The vehicle to obtain data for.
 * @param wheelIndex Index of wheel, 0-3.
 * @param value Width of tire collider.
 */
func (_client) SetVehicleWheelTireColliderWidth(vehicle float64, wheelIndex float64, value float64) {}

/**
 * Sets the traction vector length of a wheel.
 * Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
 */
func (_client) SetVehicleWheelTractionVectorLength(vehicle float64, wheelIndex float64, length float64) {}

/**
 * Refer to [GET_VEHICLE_WHEEL_TYPE](#\_0xB3ED1BFB4BE636DC) for wheel types.
 */
func (_client) SetVehicleWheelType(vehicle float64, wheelType float64) {}

/**
 * Sets vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
 * Only works on non-default wheels.
 * Returns whether change was successful (can be false if trying to set width for non-default wheels).
 * @param vehicle The vehicle to set data for.
 * @param width Width of the wheels (usually between 0.1 and 1.5 is reasonable).
 * @return Bool - whether change was successful or not
 */
func (_client) SetVehicleWheelWidth(vehicle float64, width float64) bool;

/**
 * Adjusts the offset of the specified wheel relative to the wheel's axle center.
 * Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise.
 * This function can be especially useful to set the track width of a vehicle, for example:
 * ```
 * function SetVehicleFrontTrackWidth(vehicle, width)
 * SetVehicleWheelXOffset(vehicle, 0, -width/2)
 * SetVehicleWheelXOffset(vehicle, 1, width/2)
 * end
 * ```
 */
func (_client) SetVehicleWheelXOffset(vehicle float64, wheelIndex float64, offset float64) {}

func (_client) SetVehicleWheelYRotation(vehicle float64, wheelIndex float64, value float64) {}
func (_client) SetVehicleWheelXrot(vehicle float64, wheelIndex float64, value float64) {}

/**
 * Example script: https://pastebin.com/J6XGbkCW
 * List of known states:
 * ```
 * 1: Not wheeling.
 * 65: Vehicle is ready to do wheelie (burnouting).
 * 129: Vehicle is doing wheelie.
 * ```
 * @param vehicle Vehicle
 * @param state Wheelie state
 */
func (_client) SetVehicleWheelieState(vehicle float64, state float64) {}

func (_client) SetVehicleWheelsCanBreak(vehicle float64, enabled bool) {}

func (_client) SetVehicleWheelsCanBreakOffWhenBlowUp(vehicle float64, toggle bool) {}
func (_client) SetVehicleMaxStrTrap(vehicle float64, toggle bool) {}

/**
 * Related to monster trucks in native scripts.
 * ```
 * ```
 * NativeDB Introduced: v1604
 */
func (_client) SetVehicleWheelsDealDamage(vehicle float64, toggle bool) {}
/**
 * Related to monster trucks in native scripts.
 * ```
 * ```
 * NativeDB Introduced: v1604
 */
func (_client) N_0x2970eaa18fd5e42f(vehicle float64, toggle bool) {}

/**
 * enum WindowTints
 * {
 * WINDOWTINT_NONE,
 * WINDOWTINT_PURE_BLACK,
 * WINDOWTINT_DARKSMOKE,
 * WINDOWTINT_LIGHTSMOKE,
 * WINDOWTINT_STOCK,
 * WINDOWTINT_LIMO,
 * WINDOWTINT_GREEN
 * };
 */
func (_client) SetVehicleWindowTint(vehicle float64, tint float64) {}

/**
 * Paint index goes from 0 to 12.
 * You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
 * @param vehicle The vehicle handle.
 * @param color The paint index.
 */
func (_client) SetVehicleXenonLightsColor(vehicle float64, color float64) {}
/**
 * Paint index goes from 0 to 12.
 * You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
 * @param vehicle The vehicle handle.
 * @param color The paint index.
 */
func (_client) N_0xe41033b25d003a07(vehicle float64, color float64) {}
/**
 * Paint index goes from 0 to 12.
 * You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
 * @param vehicle The vehicle handle.
 * @param color The paint index.
 */
func (_client) SetVehicleHeadlightsColour(vehicle float64, color float64) {}
/**
 * Paint index goes from 0 to 12.
 * You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
 * @param vehicle The vehicle handle.
 * @param color The paint index.
 */
func (_client) SetVehicleXenonLightsColour(vehicle float64, color float64) {}

/**
 * Overrides a floating point value from `visualsettings.dat` temporarily.
 * @param name The name of the value to set, such as `pedLight.color.red`.
 * @param value The value to write.
 */
func (_client) SetVisualSettingFloat(name string, value float64) {}

/**
 * Max value is 1.0
 */
func (_client) SetWantedLevelDifficulty(player float64, difficulty float64) {}

/**
 * NativeDB Introduced: v2060
 */
func (_client) SetWantedLevelHiddenEvasionTime(player float64, wantedLevel float64, lossTime float64) {}
/**
 * NativeDB Introduced: v2060
 */
func (_client) N_0x49b856b1360c47c7(player float64, wantedLevel float64, lossTime float64) {}

func (_client) SetWantedLevelMultiplier(multiplier float64) {}

/**
 * **instructionalKey enum list**:
 * ```
 * enum INSTRUCTIONAL_BUTTON_TYPES
 * {
 * NONE = 0,
 * SELECT = 1,
 * OK = 2,
 * YES = 4,
 * BACK = 8,
 * BACK_SELECT = 9,
 * BACK_OK = 10,
 * BACK_YES = 12,
 * CANCEL = 16,
 * CANCEL_SELECT = 17,
 * CANCEL_OK = 18,
 * CANCEL_YES = 20,
 * NO = 32,
 * NO_SELECT = 33,
 * NO_OK = 34,
 * YES_NO = 36,
 * RETRY = 64,
 * RETRY_SELECT = 65,
 * RETRY_OK = 66,
 * RETRY_YES = 68,
 * RETRY_BACK = 72,
 * RETRY_BACK_SELECT = 73,
 * RETRY_BACK_OK = 74,
 * RETRY_BACK_YES = 76,
 * RETRY_CANCEL = 80,
 * RETRY_CANCEL_SELECT = 81,
 * RETRY_CANCEL_OK = 82,
 * RETRY_CANCEL_YES = 84,
 * SKIP = 256,
 * SKIP_SELECT = 257,
 * SKIP_OK = 258,
 * SKIP_YES = 260,
 * SKIP_BACK = 264,
 * SKIP_BACK_SELECT = 265,
 * SKIP_BACK_OK = 266,
 * SKIP_BACK_YES = 268,
 * SKIP_CANCEL = 272,
 * SKIP_CANCEL_SELECT = 273,
 * SKIP_CANCEL_OK = 274,
 * SKIP_CANCEL_YES = 276,
 * CONTINUE = 16384,
 * BACK_CONTINUE = 16392,
 * CANCEL_CONTINUE = 16400,
 * LOADING_SPINNER = 134217728,
 * SELECT_LOADING_SPINNER = 134217729,
 * OK_LOADING_SPINNER = 134217730,
 * YES_LOADING_SPINNER = 134217732,
 * BACK_LOADING_SPINNER = 134217736,
 * BACK_SELECT_LOADING_SPINNER = 134217737,
 * BACK_OK_LOADING_SPINNER = 134217738,
 * BACK_YES_LOADING_SPINNER = 134217740,
 * CANCEL_LOADING_SPINNER = 134217744,
 * CANCEL_SELECT_LOADING_SPINNER = 134217745,
 * CANCEL_OK_LOADING_SPINNER = 134217746,
 * CANCEL_YES_LOADING_SPINNER = 134217748
 * }
 * ```
 * Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.
 * **Result of the example code:**
 * <https://i.imgur.com/imwoimm.png>
 * @param entryLine1 The text label to display as the first line of the warning message.
 * @param instructionalKey This is an enum, check the description for a list.
 * @param entryLine2 The text label to display as the second line of the warning message.
 * @param p3 Purpose unknown.
 * @param p4 Purpose unknown.
 * @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
 * @param p6 Purpose unknown.
 * @param showBg Purpose unknown.
 * @param errorCode When not 0, adds a field displaying the value as 'error code' to the warning message.
 */
func (_client) SetWarningMessage(entryLine1 string, instructionalKey float64, entryLine2 string, p3 bool, p4 float64, background string, p6 string, showBg bool, errorCode float64) {}

/**
 * Param names copied from the corresponding scaleform function "SET_LIST_ROW"
 */
func (_client) SetWarningMessageListRow(index float64, name string, cash float64, rp float64, lvl float64, colour float64) bool;
/**
 * Param names copied from the corresponding scaleform function "SET_LIST_ROW"
 */
func (_client) N_0x0c5a80a9e096d529(index float64, name string, cash float64, rp float64, lvl float64, colour float64) bool;

/**
 * instructionalKey enum list:
 * ```
 * Buttons = {
 * Empty = 0,
 * Select = 1, -- (RETURN)
 * Ok = 2, -- (RETURN)
 * Yes = 4, -- (RETURN)
 * Back = 8, -- (ESC)
 * Cancel = 16, -- (ESC)
 * No = 32, -- (ESC)
 * RetrySpace = 64, -- (SPACE)
 * Restart = 128, -- (SPACE)
 * Skip = 256, -- (SPACE)
 * Quit = 512, -- (ESC)
 * Adjust = 1024, -- (ARROWS)
 * SpaceKey = 2048, -- (SPACE)
 * Share = 4096, -- (SPACE)
 * SignIn = 8192, -- (SPACE)
 * Continue = 16384, -- (RETURN)
 * AdjustLeftRight = 32768, -- (SCROLL L/R)
 * AdjustUpDown = 65536, -- (SCROLL U/D)
 * Overwrite = 131072, -- (SPACE)
 * SocialClubSignup = 262144, -- (RETURN)
 * Confirm = 524288, -- (RETURN)
 * Queue = 1048576, -- (RETURN)
 * RetryReturn = 2097152, -- (RETURN)
 * BackEsc = 4194304, -- (ESC)
 * SocialClub = 8388608, -- (RETURN)
 * Spectate = 16777216, -- (SPACE)
 * OkEsc = 33554432, -- (ESC)
 * CancelTransfer = 67108864, -- (ESC)
 * LoadingSpinner = 134217728,
 * NoReturnToGTA = 268435456, -- (ESC)
 * CancelEsc = 536870912, -- (ESC)
 * }
 * Alt = {
 * Empty = 0,
 * No = 1, -- (SPACE)
 * Host = 2, -- (ESC)
 * SearchForJob = 4, -- (RETURN)
 * ReturnKey = 8, -- (TURN)
 * Freemode = 16, -- (ESC)
 * }
 * ```
 * **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
 * @param labelTitle Label of the alert's title.
 * @param labelMsg Label of the alert's message.
 * @param p2 This is an enum, check the description for a list.
 * @param p3 This is an enum, check the description for a list.
 * @param labelMsg2 Label of another message line
 * @param p5 usually 0
 * @param p6 usually -1
 * @param p7 usually 0
 * @param p8 unknown label
 * @param p9 unknown label
 * @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
 * @param errorCode Error code, shown at the bottom left if set to value other than 0.
 */
func (_client) SetWarningMessageWithAlert(labelTitle string, labelMsg string, p2 float64, p3 float64, labelMsg2 string, p5 bool, p6 float64, p7 float64, p8 string, p9 string, background bool, errorCode float64) {}
/**
 * instructionalKey enum list:
 * ```
 * Buttons = {
 * Empty = 0,
 * Select = 1, -- (RETURN)
 * Ok = 2, -- (RETURN)
 * Yes = 4, -- (RETURN)
 * Back = 8, -- (ESC)
 * Cancel = 16, -- (ESC)
 * No = 32, -- (ESC)
 * RetrySpace = 64, -- (SPACE)
 * Restart = 128, -- (SPACE)
 * Skip = 256, -- (SPACE)
 * Quit = 512, -- (ESC)
 * Adjust = 1024, -- (ARROWS)
 * SpaceKey = 2048, -- (SPACE)
 * Share = 4096, -- (SPACE)
 * SignIn = 8192, -- (SPACE)
 * Continue = 16384, -- (RETURN)
 * AdjustLeftRight = 32768, -- (SCROLL L/R)
 * AdjustUpDown = 65536, -- (SCROLL U/D)
 * Overwrite = 131072, -- (SPACE)
 * SocialClubSignup = 262144, -- (RETURN)
 * Confirm = 524288, -- (RETURN)
 * Queue = 1048576, -- (RETURN)
 * RetryReturn = 2097152, -- (RETURN)
 * BackEsc = 4194304, -- (ESC)
 * SocialClub = 8388608, -- (RETURN)
 * Spectate = 16777216, -- (SPACE)
 * OkEsc = 33554432, -- (ESC)
 * CancelTransfer = 67108864, -- (ESC)
 * LoadingSpinner = 134217728,
 * NoReturnToGTA = 268435456, -- (ESC)
 * CancelEsc = 536870912, -- (ESC)
 * }
 * Alt = {
 * Empty = 0,
 * No = 1, -- (SPACE)
 * Host = 2, -- (ESC)
 * SearchForJob = 4, -- (RETURN)
 * ReturnKey = 8, -- (TURN)
 * Freemode = 16, -- (ESC)
 * }
 * ```
 * **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
 * @param labelTitle Label of the alert's title.
 * @param labelMsg Label of the alert's message.
 * @param p2 This is an enum, check the description for a list.
 * @param p3 This is an enum, check the description for a list.
 * @param labelMsg2 Label of another message line
 * @param p5 usually 0
 * @param p6 usually -1
 * @param p7 usually 0
 * @param p8 unknown label
 * @param p9 unknown label
 * @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
 * @param errorCode Error code, shown at the bottom left if set to value other than 0.
 */
func (_client) N_0x15803fec3b9a872b(labelTitle string, labelMsg string, p2 float64, p3 float64, labelMsg2 string, p5 bool, p6 float64, p7 float64, p8 string, p9 string, background bool, errorCode float64) {}
/**
 * instructionalKey enum list:
 * ```
 * Buttons = {
 * Empty = 0,
 * Select = 1, -- (RETURN)
 * Ok = 2, -- (RETURN)
 * Yes = 4, -- (RETURN)
 * Back = 8, -- (ESC)
 * Cancel = 16, -- (ESC)
 * No = 32, -- (ESC)
 * RetrySpace = 64, -- (SPACE)
 * Restart = 128, -- (SPACE)
 * Skip = 256, -- (SPACE)
 * Quit = 512, -- (ESC)
 * Adjust = 1024, -- (ARROWS)
 * SpaceKey = 2048, -- (SPACE)
 * Share = 4096, -- (SPACE)
 * SignIn = 8192, -- (SPACE)
 * Continue = 16384, -- (RETURN)
 * AdjustLeftRight = 32768, -- (SCROLL L/R)
 * AdjustUpDown = 65536, -- (SCROLL U/D)
 * Overwrite = 131072, -- (SPACE)
 * SocialClubSignup = 262144, -- (RETURN)
 * Confirm = 524288, -- (RETURN)
 * Queue = 1048576, -- (RETURN)
 * RetryReturn = 2097152, -- (RETURN)
 * BackEsc = 4194304, -- (ESC)
 * SocialClub = 8388608, -- (RETURN)
 * Spectate = 16777216, -- (SPACE)
 * OkEsc = 33554432, -- (ESC)
 * CancelTransfer = 67108864, -- (ESC)
 * LoadingSpinner = 134217728,
 * NoReturnToGTA = 268435456, -- (ESC)
 * CancelEsc = 536870912, -- (ESC)
 * }
 * Alt = {
 * Empty = 0,
 * No = 1, -- (SPACE)
 * Host = 2, -- (ESC)
 * SearchForJob = 4, -- (RETURN)
 * ReturnKey = 8, -- (TURN)
 * Freemode = 16, -- (ESC)
 * }
 * ```
 * **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
 * @param labelTitle Label of the alert's title.
 * @param labelMsg Label of the alert's message.
 * @param p2 This is an enum, check the description for a list.
 * @param p3 This is an enum, check the description for a list.
 * @param labelMsg2 Label of another message line
 * @param p5 usually 0
 * @param p6 usually -1
 * @param p7 usually 0
 * @param p8 unknown label
 * @param p9 unknown label
 * @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
 * @param errorCode Error code, shown at the bottom left if set to value other than 0.
 */
func (_client) DrawFrontendAlert(labelTitle string, labelMsg string, p2 float64, p3 float64, labelMsg2 string, p5 bool, p6 float64, p7 float64, p8 string, p9 string, background bool, errorCode float64) {}

/**
 * You can only use text entries. No custom text.
 * C# Example :
 * Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);
 * you can recreate this easily with scaleforms
 * ---------------
 * Fixed native name, from before nativedb restoration.
 * ```
 * ```
 * NativeDB Added Parameter 10: Any p9
 */
func (_client) SetWarningMessageWithHeader(titleMsg string, entryLine1 string, flags float64, promptMsg string, p4 bool, p5 float64, background bool, showBg bool) float64 {
	return 0.0
}
/**
 * You can only use text entries. No custom text.
 * C# Example :
 * Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);
 * you can recreate this easily with scaleforms
 * ---------------
 * Fixed native name, from before nativedb restoration.
 * ```
 * ```
 * NativeDB Added Parameter 10: Any p9
 */
func (_client) SetWarningMessage_2(titleMsg string, entryLine1 string, flags float64, promptMsg string, p4 bool, p5 float64, background bool, showBg bool) float64 {
	return 0.0
}

/**
 * You can only use text entries. No custom text.
 * ```
 * ```
 * NativeDB Added Parameter 11: Any p10
 */
func (_client) SetWarningMessageWithHeaderAndSubstringFlags(entryHeader string, entryLine1 string, instructionalKey float64, entryLine2 string, p4 bool, p5 float64, p6 float64, p9 bool) (float64, float64) { return 0.0, 0.0 };
/**
 * You can only use text entries. No custom text.
 * ```
 * ```
 * NativeDB Added Parameter 11: Any p10
 */
func (_client) SetWarningMessage_3(entryHeader string, entryLine1 string, instructionalKey float64, entryLine2 string, p4 bool, p5 float64, p6 float64, p9 bool) (float64, float64) { return 0.0, 0.0 };

/**
 * NativeDB Introduced: v1493
 */
func (_client) SetWarningMessageWithHeaderUnk(entryHeader string, entryLine1 string, flags float64, entryLine2 string, p4 bool, p5 float64, showBg bool, p9 float64, p10 float64) (float64, float64) { return 0.0, 0.0 };

/**
 * This native removes the current waypoint from the map.
 * Example:
 * C#:
 * Function.Call(Hash.SET_WAYPOINT_OFF);
 * C++:
 * HUD::SET_WAYPOINT_OFF();
 */
func (_client) SetWaypointOff() {}

/**
 * Changes the selected ped aiming animation style.
 * Note : You must use GET_HASH_KEY!
 * Strings to use with GET_HASH_KEY :
 * "Ballistic",
 * "Default",
 * "Fat",
 * "Female",
 * "FirstPerson",
 * "FirstPersonAiming",
 * "FirstPersonFranklin",
 * "FirstPersonFranklinAiming",
 * "FirstPersonFranklinRNG",
 * "FirstPersonFranklinScope",
 * "FirstPersonMPFemale",
 * "FirstPersonMichael",
 * "FirstPersonMichaelAiming",
 * "FirstPersonMichaelRNG",
 * "FirstPersonMichaelScope",
 * "FirstPersonRNG",
 * "FirstPersonScope",
 * "FirstPersonTrevor",
 * "FirstPersonTrevorAiming",
 * "FirstPersonTrevorRNG",
 * "FirstPersonTrevorScope",
 * "Franklin",
 * "Gang",
 * "Gang1H",
 * "GangFemale",
 * "Hillbilly",
 * "MP_F_Freemode",
 * "Michael",
 * "SuperFat",
 * "Trevor"
 */
func (_client) SetWeaponAnimationOverride(ped float64, animStyle interface{}) {}

/**
 * Changes the weapon damage output by the given multiplier value. Must be run every frame.
 * @param weaponHash Hash of the weapon
 * @param damageMultiplier Damage Multiplier
 */
func (_client) SetWeaponDamageModifierThisFrame(weaponHash interface{}, damageMultiplier float64) {}
/**
 * Changes the weapon damage output by the given multiplier value. Must be run every frame.
 * @param weaponHash Hash of the weapon
 * @param damageMultiplier Damage Multiplier
 */
func (_client) N_0x4757f00bc6323cfe(weaponHash interface{}, damageMultiplier float64) {}
/**
 * Changes the weapon damage output by the given multiplier value. Must be run every frame.
 * @param weaponHash Hash of the weapon
 * @param damageMultiplier Damage Multiplier
 */
func (_client) SetWeaponDamageModifier(weaponHash interface{}, damageMultiplier float64) {}

/**
 * NativeDB Introduced: v2372
 */
func (_client) SetWeaponExplosionRadiusMultiplier(weaponHash interface{}, multiplier float64) {}

func (_client) SetWeaponObjectLiveryColor(weaponObject float64, camoComponentHash interface{}, colorIndex float64) {}
func (_client) N_0x5da825a85d0ea6e6(weaponObject float64, camoComponentHash interface{}, colorIndex float64) {}

func (_client) SetWeaponObjectTintIndex(weapon float64, tintIndex float64) {}

/**
 * Disables the game's built-in auto-reloading.
 * @param state On/Off
 */
func (_client) SetWeaponsNoAutoreload(state bool) {}

/**
 * Disables autoswapping to another weapon when the current weapon runs out of ammo.
 * @param state On/Off
 */
func (_client) SetWeaponsNoAutoswap(state bool) {}

/**
 * Sets whether or not the weather should be owned by the network subsystem.
 * To be able to use [\_SET_WEATHER_TYPE_TRANSITION](#\_0x578C752848ECFA0C), this has to be set to false.
 * @param network true to let the network control weather, false to not use network weather behavior.
 */
func (_client) SetWeatherOwnedByNetwork(network bool) {}

/**
 * // timecycle_keyframe_data
 * BLIZZARD = 0x27EA2814
 * CLEAR = 0x36A83D84
 * CLEARING = 0x6DB1A50D
 * CLOUDS = 0x30FDAF5C
 * EXTRASUNNY = 0x97AA0A79
 * FOGGY = 0xAE737644
 * HALLOWEEN = 0xC91A3202
 * NEUTRAL = 0xA4CA1326
 * OVERCAST = 0xBB898D2D
 * RAIN = 0x54A69840
 * SMOG = 0x10DCF4B5
 * SNOW = 0xEFB6EFF6
 * SNOWLIGHT = 0x23FB812B
 * THUNDER = 0xB677829F
 * XMAS = 0xAAC9C895
 */
func (_client) SetWeatherTypeNow(weatherType string) {}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) SetWeatherTypeNowPersist(weatherType string) {}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 * @param weatherType The weather type to override to.
 * @param time A float on how long to take to transition (in seconds).
 */
func (_client) SetWeatherTypeOvertimePersist(weatherType string, time float64) {}
/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 * @param weatherType The weather type to override to.
 * @param time A float on how long to take to transition (in seconds).
 */
func (_client) SetWeatherTypeOverTime(weatherType string, time float64) {}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 */
func (_client) SetWeatherTypePersist(weatherType string) {}

/**
 * Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
 * ```
 * Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
 * execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
 * ```
 */
func (_client) SetWeatherTypeTransition(weatherType1 interface{}, weatherType2 interface{}, percentWeather2 float64) {}

func (_client) SetWidescreenBorders(p0 bool, p1 float64) {}

func (_client) SetWidescreenFormat(p0 float64) {}

/**
 * Sets the the raw wind speed value.
 */
func (_client) SetWind(speed float64) {}

/**
 * Sets the wind direction.
 * @param direction the [wind direction](https://en.wikipedia.org/wiki/Wind_direction) in radians
 */
func (_client) SetWindDirection(direction float64) {}

/**
 * Using this native will clamp the wind speed value to a range of 0.0- 12.0. Using SET_WIND sets the same value but without the restriction.
 */
func (_client) SetWindSpeed(speed float64) {}

func (_client) SetZoneEnabled(zoneId float64, toggle bool) {}

func (_client) Settimera(value float64) {}

func (_client) Settimerb(value float64) {}

func (_client) SetupShopPedApparelQuery(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}
func (_client) N_0x50f457823ce6eb5f(p0 float64, p1 float64, p2 float64, p3 float64) float64 {
	return 0.0
}

/**
 * character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
 * componentId is between 0 and 11 and corresponds to the usual component slots.
 * p1 could be the outfit number; unsure.
 * p2 is usually -1; unknown function.
 * p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
 * p4 is usually -1; unknown function.
 * componentId is -1 when p3 is true in decompiled scripts.
 */
func (_client) SetupShopPedApparelQueryTu(character float64, p1 float64, p2 float64, p3 bool, p4 float64, componentId float64) float64 {
	return 0.0
}
/**
 * character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
 * componentId is between 0 and 11 and corresponds to the usual component slots.
 * p1 could be the outfit number; unsure.
 * p2 is usually -1; unknown function.
 * p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
 * p4 is usually -1; unknown function.
 * componentId is -1 when p3 is true in decompiled scripts.
 */
func (_client) GetNumPropsFromOutfit(character float64, p1 float64, p2 float64, p3 bool, p4 float64, componentId float64) float64 {
	return 0.0
}

/**
 * characters
 * 0: Michael
 * 1: Franklin
 * 2: Trevor
 * 3: MPMale
 * 4: MPFemale
 */
func (_client) SetupShopPedOutfitQuery(character float64, p1 bool) float64 {
	return 0.0
}
/**
 * characters
 * 0: Michael
 * 1: Franklin
 * 2: Trevor
 * 3: MPMale
 * 4: MPFemale
 */
func (_client) N_0xf3fbe2d50a6a8c28(character float64, p1 bool) float64 {
	return 0.0
}

/**
 * Possible shake types (updated b617d):
 * DEATH_FAIL_IN_EFFECT_SHAKE
 * DRUNK_SHAKE
 * FAMILY5_DRUG_TRIP_SHAKE
 * HAND_SHAKE
 * JOLT_SHAKE
 * LARGE_EXPLOSION_SHAKE
 * MEDIUM_EXPLOSION_SHAKE
 * SMALL_EXPLOSION_SHAKE
 * ROAD_VIBRATION_SHAKE
 * SKY_DIVING_SHAKE
 * VIBRATE_SHAKE
 */
func (_client) ShakeCam(cam float64, _type string, amplitude float64) {}

/**
 * p0 argument found in the b617d scripts: "DRUNK_SHAKE"
 */
func (_client) ShakeCinematicCam(p0 string, p1 float64) {}

/**
 * Possible shake types (updated b617d):
 * DEATH_FAIL_IN_EFFECT_SHAKE
 * DRUNK_SHAKE
 * FAMILY5_DRUG_TRIP_SHAKE
 * HAND_SHAKE
 * JOLT_SHAKE
 * LARGE_EXPLOSION_SHAKE
 * MEDIUM_EXPLOSION_SHAKE
 * SMALL_EXPLOSION_SHAKE
 * ROAD_VIBRATION_SHAKE
 * SKY_DIVING_SHAKE
 * VIBRATE_SHAKE
 */
func (_client) ShakeGameplayCam(shakeName string, intensity float64) {}

/**
 * CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);
 */
func (_client) ShakeScriptGlobal(p0 string, p1 float64) {}
/**
 * CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);
 */
func (_client) N_0xf4c8cf9e353afeca(p0 string, p1 float64) {}

func (_client) ShiftLeft(value float64, bitShift float64) float64 {
	return 0.0
}

func (_client) ShiftRight(value float64, bitShift float64) float64 {
	return 0.0
}

func (_client) ShootSingleBulletBetweenCoords(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64) {}

/**
 * entity - entity to ignore
 * ```
 * ```
 * NativeDB Added Parameter 15: Any p14
 */
func (_client) ShootSingleBulletBetweenCoordsIgnoreEntity(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64, entity float64) {}
/**
 * entity - entity to ignore
 * ```
 * ```
 * NativeDB Added Parameter 15: Any p14
 */
func (_client) N_0xe3a7742e0b7a2f8b(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64, entity float64) {}
/**
 * entity - entity to ignore
 * ```
 * ```
 * NativeDB Added Parameter 15: Any p14
 */
func (_client) ShootSingleBulletBetweenCoordsPresetParams(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64, entity float64) {}

/**
 * NativeDB Added Parameter 19: Any p18
 * NativeDB Added Parameter 20: Any p19
 * NativeDB Added Parameter 21: Any p20
 */
func (_client) ShootSingleBulletBetweenCoordsIgnoreEntityNew(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64, entity float64, p14 bool, p15 bool, p16 bool, p17 bool) {}
/**
 * NativeDB Added Parameter 19: Any p18
 * NativeDB Added Parameter 20: Any p19
 * NativeDB Added Parameter 21: Any p20
 */
func (_client) N_0xbfe5756e7407064a(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64, entity float64, p14 bool, p15 bool, p16 bool, p17 bool) {}
/**
 * NativeDB Added Parameter 19: Any p18
 * NativeDB Added Parameter 20: Any p19
 * NativeDB Added Parameter 21: Any p20
 */
func (_client) ShootSingleBulletBetweenCoordsWithExtraParams(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, damage float64, p7 bool, weaponHash interface{}, ownerPed float64, isAudible bool, isInvisible bool, speed float64, entity float64, p14 bool, p15 bool, p16 bool, p17 bool) {}

/**
 * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
 * @return Returns true if the game is using the metric measurement system, false if imperial is used.
 */
func (_client) ShouldUseMetricMeasurements() bool;
/**
 * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
 * @return Returns true if the game is using the metric measurement system, false if imperial is used.
 */
func (_client) N_0xd3d15555431ab793() bool;
/**
 * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
 * @return Returns true if the game is using the metric measurement system, false if imperial is used.
 */
func (_client) IsGameUsingMetricMeasurementSystem() bool;

/**
 * Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).
 * To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).
 * Example code result:
 * ![](https://i.imgur.com/iZ9tNWl.png)
 * @param blip The blip to toggle the half blue circle around the blip on.
 * @param toggle Enables or disables the half blue circle around the blip (on the left side).
 */
func (_client) ShowCrewIndicatorOnBlip(blip float64, toggle bool) {}
/**
 * Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).
 * To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).
 * Example code result:
 * ![](https://i.imgur.com/iZ9tNWl.png)
 * @param blip The blip to toggle the half blue circle around the blip on.
 * @param toggle Enables or disables the half blue circle around the blip (on the left side).
 */
func (_client) N_0xdcfb5d4db8bf367e(blip float64, toggle bool) {}
/**
 * Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).
 * To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).
 * Example code result:
 * ![](https://i.imgur.com/iZ9tNWl.png)
 * @param blip The blip to toggle the half blue circle around the blip on.
 * @param toggle Enables or disables the half blue circle around the blip (on the left side).
 */
func (_client) SetBlipCrew(blip float64, toggle bool) {}

/**
 * Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
 * To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
 * @param blip The blip to toggle the half circle on.
 * @param toggle Enables or disables the half circle around the blip (on the right side of the blip).
 */
func (_client) ShowFriendIndicatorOnBlip(blip float64, toggle bool) {}
/**
 * Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
 * To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
 * @param blip The blip to toggle the half circle on.
 * @param toggle Enables or disables the half circle around the blip (on the right side of the blip).
 */
func (_client) N_0x23c3eb807312f01a(blip float64, toggle bool) {}
/**
 * Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
 * To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
 * @param blip The blip to toggle the half circle on.
 * @param toggle Enables or disables the half circle around the blip (on the right side of the blip).
 */
func (_client) SetBlipFriend(blip float64, toggle bool) {}

/**
 * Adds the GTA: Online player heading indicator to a blip.
 */
func (_client) ShowHeadingIndicatorOnBlip(blip float64, toggle bool) {}
/**
 * Adds the GTA: Online player heading indicator to a blip.
 */
func (_client) N_0x5fbca48327b914df(blip float64, toggle bool) {}

func (_client) ShowHeightOnBlip(blip float64, toggle bool) {}
func (_client) N_0x75a16c3da34f1245(blip float64, toggle bool) {}

/**
 * This function shows various HUD (Heads-up Display) components.
 * Listed below are the integers and the corresponding HUD component.
 * *   1 : WANTED_STARS
 * *   2 : WEAPON_ICON
 * *   3 : CASH
 * *   4 : MP_CASH
 * *   5 : MP_MESSAGE
 * *   6 : VEHICLE_NAME
 * *   7 : AREA_NAME
 * *   8 : VEHICLE_CLASS
 * *   9 : STREET_NAME
 * *   10 : HELP_TEXT
 * *   11 : FLOATING_HELP_TEXT\_1
 * *   12 : FLOATING_HELP_TEXT\_2
 * *   13 : CASH_CHANGE
 * *   14 : RETICLE
 * *   15 : SUBTITLE_TEXT
 * *   16 : RADIO_STATIONS
 * *   17 : SAVING_GAME
 * *   18 : GAME_STREAM
 * *   19 : WEAPON_WHEEL
 * *   20 : WEAPON_WHEEL_STATS
 * *   21 : HUD_COMPONENTS
 * *   22 : HUD_WEAPONS
 * These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#\_0x6806C51AD12B83B8) native, but instead hides the HUD component.
 */
func (_client) ShowHudComponentThisFrame(id float64) {}

func (_client) ShowNumberOnBlip(blip float64, _number float64) {}

/**
 * Toggles a cyan outline around the blip.
 * Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
 * @param blip The blip to toggle the outline on.
 * @param toggle Enables or disables the outline.
 */
func (_client) ShowOutlineIndicatorOnBlip(blip float64, toggle bool) {}
/**
 * Toggles a cyan outline around the blip.
 * Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
 * @param blip The blip to toggle the outline on.
 * @param toggle Enables or disables the outline.
 */
func (_client) N_0xb81656bc81fe24d1(blip float64, toggle bool) {}
/**
 * Toggles a cyan outline around the blip.
 * Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
 * @param blip The blip to toggle the outline on.
 * @param toggle Enables or disables the outline.
 */
func (_client) SetBlipFriendly(blip float64, toggle bool) {}

/**
 * SHOW_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 */
func (_client) ShowScriptedHudComponentThisFrame(id float64) {}

func (_client) ShowSigninUi() {}
func (_client) N_0x60e892ba4f5bdca4() {}

func (_client) ShowStartMissionInstructionalButton(p0 bool) {}
func (_client) N_0xf1a6c18b35bcade6(p0 bool) {}

/**
 * Adds a green checkmark on top of a blip.
 */
func (_client) ShowTickOnBlip(blip float64, toggle bool) {}
/**
 * Adds a green checkmark on top of a blip.
 */
func (_client) N_0x74513ea3e505181e(blip float64, toggle bool) {}
/**
 * Adds a green checkmark on top of a blip.
 */
func (_client) SetBlipChecked(blip float64, toggle bool) {}

/**
 * Starts a new singleplayer game (at the prologue).
 */
func (_client) ShutdownAndLaunchSinglePlayerGame() {}

/**
 * Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
 * If you're already in SP then it'll re-load singleplayer.
 * You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
 * Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
 * @return always seems to be 1
 */
func (_client) ShutdownAndLoadMostRecentSave() bool;
/**
 * Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
 * If you're already in SP then it'll re-load singleplayer.
 * You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
 * Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
 * @return always seems to be 1
 */
func (_client) N_0x9eca15adfe141431() bool;

func (_client) ShutdownCreatorBudget() {}
func (_client) N_0xcce26000e9a6fad7() {}

func (_client) ShutdownLoadingScreen() {}

/**
 * Shuts down the `loadingScreen` NUI frame, similarly to `SHUTDOWN_LOADING_SCREEN`.
 */
func (_client) ShutdownLoadingScreenNui() {}

/**
 * This is to make the player walk without accepting input from INPUT.
 * gaitType is in increments of 100s. 2000, 500, 300, 200, etc.
 * p4 is always 1 and p5 is always 0.
 * C# Example :
 * Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go forward for 100ms
 */
func (_client) SimulatePlayerInputGait(player float64, amount float64, gaitType float64, speed float64, p4 bool, p5 bool) {}

/**
 * Returns the sine of the given number.
 * @param value The number of degrees (in degrees, not radians)
 * @return The sine of the given number
 */
func (_client) Sin(value float64) float64 {
	return 0.0
}

func (_client) SkipRadioForward() {}

/**
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 */
func (_client) SkipTimeInPlaybackRecordedVehicle(vehicle float64, time float64) {}

func (_client) SkipToEndAndStopPlaybackRecordedVehicle(vehicle float64) {}

func (_client) SkipToNextScriptedConversationLine() {}

/**
 * This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
 * @param t acceleration differenzial (am_rollercoaster.c func\_134)
 * @param x rotation parameter (maybe X axys)
 * @param y rotation parameter (maybe X axys)
 * @param z rotation parameter (maybe X axys)
 * @param w rotation parameter (maybe X axys)
 * @param x1 rotation parameter (maybe Y axys)
 * @param y1 rotation parameter (maybe Y axys)
 * @param z1 rotation parameter (maybe Y axys)
 * @param w1 rotation parameter (maybe Y axys)
 * @param outX output value calculated (X)
 * @param outY output value calculated (Y)
 * @param outZ output value calculated (Z)
 * @param outW output value calculated (W)
 */
func (_client) SlerpNearQuaternion(t float64, x float64, y float64, z float64, w float64, x1 float64, y1 float64, z1 float64, w1 float64) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}
/**
 * This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
 * @param t acceleration differenzial (am_rollercoaster.c func\_134)
 * @param x rotation parameter (maybe X axys)
 * @param y rotation parameter (maybe X axys)
 * @param z rotation parameter (maybe X axys)
 * @param w rotation parameter (maybe X axys)
 * @param x1 rotation parameter (maybe Y axys)
 * @param y1 rotation parameter (maybe Y axys)
 * @param z1 rotation parameter (maybe Y axys)
 * @param w1 rotation parameter (maybe Y axys)
 * @param outX output value calculated (X)
 * @param outY output value calculated (Y)
 * @param outZ output value calculated (Z)
 * @param outW output value calculated (W)
 */
func (_client) N_0xf2f6a2fa49278625(t float64, x float64, y float64, z float64, w float64, x1 float64, y1 float64, z1 float64, w1 float64) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

/**
 * Returns true if the object has finished moving.
 * If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
 * See also: https://gtagmodding.com/opcode-database/opcode/034E/
 * Has to be looped until it returns true.
 */
func (_client) SlideObject(object float64, toX float64, toY float64, toZ float64, speedX float64, speedY float64, speedZ float64, collision bool) bool;

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 */
func (_client) SmashVehicleWindow(vehicle float64, windowIndex float64) {}

/**
 * SET_*
 */
func (_client) SoundVehicleHornThisFrame(vehicle float64) {}
/**
 * SET_*
 */
func (_client) N_0x9c11908013ea4715(vehicle float64) {}

func (_client) SpawnpointsCancelSearch() {}
func (_client) N_0xfee4a5459472a9f8() {}

func (_client) SpawnpointsGetNumSearchResults() float64 {
	return 0.0
}
func (_client) N_0xa635c11b8c44afc2() float64 {
	return 0.0
}

func (_client) SpawnpointsGetSearchResult(randomInt float64) (float64,float64,float64) { return 0.0,0.0,0.0}
func (_client) N_0x280c7e3ac7f56e90(randomInt float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) SpawnpointsGetSearchResultFlags(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0xb782f8238512bad5(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) SpawnpointsIsSearchActive() bool;
func (_client) N_0x3c67506996001f5e() bool;

func (_client) SpawnpointsIsSearchComplete() bool;
func (_client) N_0xa586fbeb32a53dbb() bool;

func (_client) SpawnpointsIsSearchFailed() bool;
func (_client) N_0xf445de8da80a1792() bool;

func (_client) SpawnpointsStartSearch(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, interiorFlags float64, scale float64, duration float64) {}
func (_client) N_0x2df9038c90ad5264(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, interiorFlags float64, scale float64, duration float64) {}

func (_client) SpawnpointsStartSearchInAngledArea(x float64, y float64, z float64, p3 float64, p4 float64, p5 float64, p6 float64, interiorFlags float64, scale float64, duration float64) {}
func (_client) N_0xb2aff10216defa2f(x float64, y float64, z float64, p3 float64, p4 float64, p5 float64, p6 float64, interiorFlags float64, scale float64, duration float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityActivate(player float64) {}
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x821fdc827d6f4090(player float64) {}

/**
 * p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SpecialAbilityChargeAbsolute(player float64, p1 float64, p2 bool) {}

/**
 * p1 appears to always be 1 (only comes up twice)
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SpecialAbilityChargeContinuous(player float64, p2 float64) {}

/**
 * 2 matches. p1 was always true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SpecialAbilityChargeLarge(player float64, p1 bool, p2 bool) {}

/**
 * Only 1 match. Both p1 & p2 were true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SpecialAbilityChargeMedium(player float64, p1 bool, p2 bool) {}

/**
 * normalizedValue is from 0.0 - 1.0
 * p2 is always 1
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SpecialAbilityChargeNormalized(player float64, normalizedValue float64, p2 bool) {}
/**
 * normalizedValue is from 0.0 - 1.0
 * p2 is always 1
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) ResetSpecialAbilityControlsCinematic(player float64, normalizedValue float64, p2 bool) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityChargeOnMissionFailed(player float64) {}
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0xc9a763d8fe87436a(player float64) {}

/**
 * Every occurrence of p1 & p2 were both true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) SpecialAbilityChargeSmall(player float64, p1 bool, p2 bool) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityDeactivate(player float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityDeactivateFast(player float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityDeplete(p0 float64) {}
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) N_0x17f7471eaca78290(p0 float64) {}

/**
 * p1 was always true.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SpecialAbilityDepleteMeter(player float64, p1 bool) {}

/**
 * Also known as _RECHARGE_SPECIAL_ABILITY
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) SpecialAbilityFillMeter(player float64, p1 bool) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityLock(playerModel interface{}) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityReset(player float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) SpecialAbilityUnlock(playerModel interface{}) {}

func (_client) Sqrt(value float64) float64 {
	return 0.0
}

func (_client) StabiliseEntityAttachedToHeli(vehicle float64, entity float64, p2 float64) {}
func (_client) N_0x374706271354cb18(vehicle float64, entity float64, p2 float64) {}

/**
 * Example:
 * This will start the alarm at Fort Zancudo.
 * AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
 * First parameter (char) is the name of the alarm.
 * Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.
 * ----------
 * It DOES make a difference but it has to do with the duration or something I dunno yet
 * ----------
 * Found in the b617d scripts:
 * AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS", 0);
 * AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER", 1);
 * AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B", 0);
 * AUDIO::START_ALARM("BIG_SCORE_HEIST_VAULT_ALARMS", a_0);
 * AUDIO::START_ALARM("FBI_01_MORGUE_ALARMS", 1);
 * AUDIO::START_ALARM("FIB_05_BIOTECH_LAB_ALARMS", 0);
 * AUDIO::START_ALARM("JEWEL_STORE_HEIST_ALARMS", 0);
 * AUDIO::START_ALARM("PALETO_BAY_SCORE_ALARM", 1);
 * AUDIO::START_ALARM("PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM", 0);
 * AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
 * AUDIO::START_ALARM("PORT_OF_LS_HEIST_SHIP_ALARMS", 0);
 * AUDIO::START_ALARM("PRISON_ALARMS", 0);
 * AUDIO::START_ALARM("PROLOGUE_VAULT_ALARMS", 0);
 */
func (_client) StartAlarm(alarmName string, p2 bool) {}

/**
 * Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
 * List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC
 */
func (_client) StartAudioScene(scene string) bool;

/**
 * Begins with START_*. Next character in the name is either D or E.
 */
func (_client) StartBenchmarkRecording() {}
/**
 * Begins with START_*. Next character in the name is either D or E.
 */
func (_client) N_0x92790862e36c2ada() {}

/**
 * flags: Usually 0.
 */
func (_client) StartCutscene(flags float64) {}

/**
 * flags: Usually 0.
 */
func (_client) StartCutsceneAtCoords(x float64, y float64, z float64, flags float64) {}

func (_client) StartEntityFire(entity float64) float64 {
	return 0.0
}

/**
 * Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
 * Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
 * ```
 * This function casts a ray from Point1 to Point2 and returns it's ray handle.  A simple ray cast will 'shoot' a line from point A to point B, and return whether or not the ray reached it's destination or if it hit anything and if it did hit anything, will return the handle of what it hit (entity handle) and coordinates of where the ray reached.
 * You can use _GET_RAYCAST_RESULT to get the result of the raycast
 * Entity is an entity to ignore, such as the player.
 * Flags are intersection bit flags.  They tell the ray what to care about and what not to care about when casting. Passing -1 will intersect with everything, presumably.
 * Flags:
 * 1: Intersect with map
 * 2: Intersect with vehicles (used to be mission entities?) (includes train)
 * 4: Intersect with peds (same as 8)
 * 8: Intersect with peds (same as 4)
 * 16: Intersect with objects
 * 32: Water?
 * 64: Unknown
 * 128: Unknown
 * 256: Intersect with vegetation (plants, coral. trees not included)
 * NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
 * ```
 * @param x1 Starting X coordinate.
 * @param y1 Starting Y coordinate.
 * @param z1 Starting Z coordinate.
 * @param x2 Ending X coordinate.
 * @param y2 Ending Y coordinate.
 * @param z2 Ending Z coordinate.
 * @param flags Flags.
 * @param entity An entity to ignore, or 0.
 * @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
 * @return A shape test handle.
 */
func (_client) StartExpensiveSynchronousShapeTestLosProbe(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, flags float64, entity float64, p8 float64) float64 {
	return 0.0
}
/**
 * Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
 * Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
 * ```
 * This function casts a ray from Point1 to Point2 and returns it's ray handle.  A simple ray cast will 'shoot' a line from point A to point B, and return whether or not the ray reached it's destination or if it hit anything and if it did hit anything, will return the handle of what it hit (entity handle) and coordinates of where the ray reached.
 * You can use _GET_RAYCAST_RESULT to get the result of the raycast
 * Entity is an entity to ignore, such as the player.
 * Flags are intersection bit flags.  They tell the ray what to care about and what not to care about when casting. Passing -1 will intersect with everything, presumably.
 * Flags:
 * 1: Intersect with map
 * 2: Intersect with vehicles (used to be mission entities?) (includes train)
 * 4: Intersect with peds (same as 8)
 * 8: Intersect with peds (same as 4)
 * 16: Intersect with objects
 * 32: Water?
 * 64: Unknown
 * 128: Unknown
 * 256: Intersect with vegetation (plants, coral. trees not included)
 * NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
 * ```
 * @param x1 Starting X coordinate.
 * @param y1 Starting Y coordinate.
 * @param z1 Starting Z coordinate.
 * @param x2 Ending X coordinate.
 * @param y2 Ending Y coordinate.
 * @param z2 Ending Z coordinate.
 * @param flags Flags.
 * @param entity An entity to ignore, or 0.
 * @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
 * @return A shape test handle.
 */
func (_client) CastRayPointToPoint(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, flags float64, entity float64, p8 float64) float64 {
	return 0.0
}
/**
 * Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
 * Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
 * ```
 * This function casts a ray from Point1 to Point2 and returns it's ray handle.  A simple ray cast will 'shoot' a line from point A to point B, and return whether or not the ray reached it's destination or if it hit anything and if it did hit anything, will return the handle of what it hit (entity handle) and coordinates of where the ray reached.
 * You can use _GET_RAYCAST_RESULT to get the result of the raycast
 * Entity is an entity to ignore, such as the player.
 * Flags are intersection bit flags.  They tell the ray what to care about and what not to care about when casting. Passing -1 will intersect with everything, presumably.
 * Flags:
 * 1: Intersect with map
 * 2: Intersect with vehicles (used to be mission entities?) (includes train)
 * 4: Intersect with peds (same as 8)
 * 8: Intersect with peds (same as 4)
 * 16: Intersect with objects
 * 32: Water?
 * 64: Unknown
 * 128: Unknown
 * 256: Intersect with vegetation (plants, coral. trees not included)
 * NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
 * ```
 * @param x1 Starting X coordinate.
 * @param y1 Starting Y coordinate.
 * @param z1 Starting Z coordinate.
 * @param x2 Ending X coordinate.
 * @param y2 Ending Y coordinate.
 * @param z2 Ending Z coordinate.
 * @param flags Flags.
 * @param entity An entity to ignore, or 0.
 * @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
 * @return A shape test handle.
 */
func (_client) StartShapeTestRay(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, flags float64, entity float64, p8 float64) float64 {
	return 0.0
}

/**
 * Equivalent of [START_FIND_KVP](#\_0xDD379006), but for another resource than the current one.
 * @param resourceName The resource to try finding the key/values for
 * @param prefix A prefix match
 * @return A KVP find handle to use with [FIND_KVP](#\_0xBD7BEBC5) and close with [END_FIND_KVP](#\_0xB3210203)
 */
func (_client) StartFindExternalKvp(resourceName string, prefix string) float64 {
	return 0.0
}

func (_client) StartFindKvp(prefix string) float64 {
	return 0.0
}

func (_client) StartFiringAmnesty(duration float64) {}

/**
 * Starts a new GPS custom-route, allowing you to plot lines on the map.
 * Lines are drawn directly between points.
 * The GPS custom route works like the GPS multi route, except it does not follow roads.
 * **Example result:**
 * ![](https://i.imgur.com/BDm5pzt.png)
 * @param hudColor The HUD color of the GPS path.
 * @param displayOnFoot Draws the path regardless if the player is in a vehicle or not.
 * @param followPlayer Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
 */
func (_client) StartGpsCustomRoute(hudColor float64, displayOnFoot bool, followPlayer bool) {}
/**
 * Starts a new GPS custom-route, allowing you to plot lines on the map.
 * Lines are drawn directly between points.
 * The GPS custom route works like the GPS multi route, except it does not follow roads.
 * **Example result:**
 * ![](https://i.imgur.com/BDm5pzt.png)
 * @param hudColor The HUD color of the GPS path.
 * @param displayOnFoot Draws the path regardless if the player is in a vehicle or not.
 * @param followPlayer Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
 */
func (_client) N_0xdb34e8d56fc13b08(hudColor float64, displayOnFoot bool, followPlayer bool) {}

/**
 * Starts a new GPS multi-route, allowing you to create custom GPS paths.
 * GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
 * Once the player has passed a point, the GPS will no longer force its path through it.
 * Works independently from the player-placed waypoint and blip routes.
 * **Example result:**
 * ![](https://i.imgur.com/ZZHQatX.png)
 * @param hudColor The HUD color of the GPS path.
 * @param routeFromPlayer Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
 * @param displayOnFoot Draws the GPS path regardless if the player is in a vehicle or not.
 */
func (_client) StartGpsMultiRoute(hudColor float64, routeFromPlayer bool, displayOnFoot bool) {}
/**
 * Starts a new GPS multi-route, allowing you to create custom GPS paths.
 * GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
 * Once the player has passed a point, the GPS will no longer force its path through it.
 * Works independently from the player-placed waypoint and blip routes.
 * **Example result:**
 * ![](https://i.imgur.com/ZZHQatX.png)
 * @param hudColor The HUD color of the GPS path.
 * @param routeFromPlayer Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
 * @param displayOnFoot Draws the GPS path regardless if the player is in a vehicle or not.
 */
func (_client) N_0x3d3d15af7bcaaf83(hudColor float64, routeFromPlayer bool, displayOnFoot bool) {}

/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 13: Any p12
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 */
func (_client) StartNetworkedParticleFxLoopedOnEntity(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}
/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 13: Any p12
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 */
func (_client) N_0x6f60e89a7b64ee1d(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}
/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 13: Any p12
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 */
func (_client) StartParticleFxLoopedOnEntity_2(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}

/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * NativeDB Added Parameter 17: Any p16
 */
func (_client) StartNetworkedParticleFxLoopedOnEntityBone(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, boneIndex float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}
/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * NativeDB Added Parameter 17: Any p16
 */
func (_client) N_0xdde23f30cc5a0f03(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, boneIndex float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}
/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * NativeDB Added Parameter 17: Any p16
 */
func (_client) StartParticleFxLoopedOnEntityBone_2(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, boneIndex float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}

/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 */
func (_client) StartNetworkedParticleFxNonLoopedAtCoord(effectName string, xPos float64, yPos float64, zPos float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) bool;
/**
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 */
func (_client) StartParticleFxNonLoopedAtCoord_2(effectName string, xPos float64, yPos float64, zPos float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) bool;

func (_client) StartNetworkedParticleFxNonLoopedOnEntity(effectName string, entity float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;
func (_client) StartParticleFxNonLoopedOnEntity_2(effectName string, entity float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;

/**
 * NativeDB Introduced: v2189
 */
func (_client) StartNetworkedParticleFxNonLoopedOnEntityBone(effectName string, entity float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, boneIndex float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;

func (_client) StartNetworkedParticleFxNonLoopedOnPedBone(effectName string, ped float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, boneIndex float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;
func (_client) StartParticleFxNonLoopedOnPedBone_2(effectName string, ped float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, boneIndex float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;

/**
 * Examples:
 * g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
 * l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
 * SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
 * SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 * SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 * SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
 * SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
 * SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
 * SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);
 * Decompiled examples of usage when starting a script:
 * SCRIPT::REQUEST_SCRIPT(a_0);
 * if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
 * SYSTEM::START_NEW_SCRIPT(a_0, v_3);
 * SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
 * return 1;
 * }
 * or:
 * v_2 = "MrsPhilips2";
 * SCRIPT::REQUEST_SCRIPT(v_2);
 * while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
 * SCRIPT::REQUEST_SCRIPT(v_2);
 * SYSTEM::WAIT(0);
 * }
 * sub_8792(36);
 * SYSTEM::START_NEW_SCRIPT(v_2, 17000);
 * SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
 * All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
 */
func (_client) StartNewScript(scriptName string, stackSize float64) float64 {
	return 0.0
}

/**
 * return : script thread id, 0 if failed
 * Pass pointer to struct of args in p1, size of struct goes into p2
 */
func (_client) StartNewScriptWithArgs(scriptName string, argCount float64, stackSize float64) (float64, float64) { return 0.0, 0.0 };

func (_client) StartNewScriptWithNameHash(scriptHash interface{}, stackSize float64) float64 {
	return 0.0
}
func (_client) StartNewStreamedScript(scriptHash interface{}, stackSize float64) float64 {
	return 0.0
}

func (_client) StartNewScriptWithNameHashAndArgs(scriptHash interface{}, argCount float64, stackSize float64) (float64, float64) { return 0.0, 0.0 };
func (_client) StartNewStreamedScriptWithArgs(scriptHash interface{}, argCount float64, stackSize float64) (float64, float64) { return 0.0, 0.0 };

/**
 * GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)
 * p11 seems to be always 0
 */
func (_client) StartParticleFxLoopedAtCoord(effectName string, x float64, y float64, z float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool, p11 bool) float64 {
	return 0.0
}

func (_client) StartParticleFxLoopedOnEntity(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}

func (_client) StartParticleFxLoopedOnEntityBone(effectName string, entity float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, boneIndex float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}

func (_client) StartParticleFxLoopedOnPedBone(effectName string, ped float64, xOffset float64, yOffset float64, zOffset float64, xRot float64, yRot float64, zRot float64, boneIndex float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}

/**
 * GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);
 * Axis - Invert Axis Flags
 * list: pastebin.com/N9unUFWY
 * -------------------------------------------------------------------
 * C#
 * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
 * char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
 * float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
 * float xrot, yrot, zrot = Again simple just mention the value in case if you want the effect to rotate.
 * float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
 * bool xaxis, yaxis, zaxis = To bool the axis values.
 * example:
 * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
 */
func (_client) StartParticleFxNonLoopedAtCoord(effectName string, xPos float64, yPos float64, zPos float64, xRot float64, yRot float64, zRot float64, scale float64, xAxis bool, yAxis bool, zAxis bool) float64 {
	return 0.0
}

/**
 * Starts a particle effect on an entity for example your player.
 * List: pastebin.com/N9unUFWY
 * Example:
 * C#:
 * Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
 * Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
 * however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
 */
func (_client) StartParticleFxNonLoopedOnEntity(effectName string, entity float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;

/**
 * GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);
 * Axis - Invert Axis Flags
 * list: pastebin.com/N9unUFWY
 */
func (_client) StartParticleFxNonLoopedOnPedBone(effectName string, ped float64, offsetX float64, offsetY float64, offsetZ float64, rotX float64, rotY float64, rotZ float64, boneIndex float64, scale float64, axisX bool, axisY bool, axisZ bool) bool;

func (_client) StartPetrolTrailDecals(p0 float64) {}
func (_client) N_0x99ac7f0d8b9c893d(p0 float64) {}

/**
 * p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
 * See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
 */
func (_client) StartPlaybackRecordedVehicle(vehicle float64, recording float64, script string, p3 bool) {}

/**
 * AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
 * 0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings.
 */
func (_client) StartPlaybackRecordedVehicleUsingAi(vehicle float64, recording float64, script string, speed float64, drivingStyle float64) {}

/**
 * flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
 * time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
 */
func (_client) StartPlaybackRecordedVehicleWithFlags(vehicle float64, recording float64, script string, flags float64, time float64, drivingStyle float64) {}

/**
 * // this enum comes directly from R* so don't edit this
 * enum ePlayerSwitchType
 * {
 * SWITCH_TYPE_AUTO,
 * SWITCH_TYPE_LONG,
 * SWITCH_TYPE_MEDIUM,
 * SWITCH_TYPE_SHORT
 * };
 * Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type. Or just auto, because it calls the same function in executable.
 * ----------------------------------------------------
 * Examples from the decompiled scripts:
 * STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);
 * STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);
 * STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);
 * STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);
 * Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.
 * Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
 * Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
 */
func (_client) StartPlayerSwitch(_from float64, to float64, flags float64, switchType float64) {}

func (_client) StartPlayerTeleport(player float64, x float64, y float64, z float64, heading float64, teleportWithVehicle bool, findCollisionLand bool, p7 bool) {}

func (_client) StartPreloadedConversation() {}

/**
 * Starts recording a replay.
 * If mode is 0, turns on action replay.
 * If mode is 1, starts recording.
 * If already recording a replay, does nothing.
 */
func (_client) StartRecording(mode float64) {}
/**
 * Starts recording a replay.
 * If mode is 0, turns on action replay.
 * If mode is 1, starts recording.
 * If already recording a replay, does nothing.
 */
func (_client) N_0xc3ac2fff9612ac81(mode float64) {}

func (_client) StartRopeUnwindingFront(ropeId float64) {}

func (_client) StartRopeWinding(ropeId float64) {}

func (_client) StartSaveArrayWithSize(size float64, arrayName string) float64 {
	return 0.0
}
func (_client) StartSaveArray(size float64, arrayName string) float64 {
	return 0.0
}

func (_client) StartSaveData(p1 float64, p2 bool) float64 {
	return 0.0
}

func (_client) StartSaveStructWithSize(size float64, structName string) float64 {
	return 0.0
}
func (_client) StartSaveStruct(size float64, structName string) float64 {
	return 0.0
}

func (_client) StartScriptConversation(p0 bool, p1 bool, p2 bool, p3 bool) {}

/**
 * Starts a fire:
 * xyz: Location of fire
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
 * isGasFire: Whether or not the fire is powered by gasoline.
 */
func (_client) StartScriptFire(X float64, Y float64, Z float64, maxChildren float64, isGasFire bool) float64 {
	return 0.0
}

func (_client) StartScriptPhoneConversation(p0 bool, p1 bool) {}

func (_client) StartShapeTestBound(entity float64, flags1 float64, flags2 float64) float64 {
	return 0.0
}
func (_client) N_0x37181417ce7c8900(entity float64, flags1 float64, flags2 float64) float64 {
	return 0.0
}

func (_client) StartShapeTestBoundingBox(entity float64, flags1 float64, flags2 float64) float64 {
	return 0.0
}
func (_client) N_0x052837721a854ec7(entity float64, flags1 float64, flags2 float64) float64 {
	return 0.0
}

/**
 * For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#\_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E).
 */
func (_client) StartShapeTestBox(x float64, y float64, z float64, x1 float64, y2 float64, z2 float64, rotX float64, rotY float64, rotZ float64, p9 float64, flags float64, entity float64, p12 float64) float64 {
	return 0.0
}
/**
 * For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#\_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E).
 */
func (_client) N_0xfe466162c4401d18(x float64, y float64, z float64, x1 float64, y2 float64, z2 float64, rotX float64, rotY float64, rotZ float64, p9 float64, flags float64, entity float64, p12 float64) float64 {
	return 0.0
}

/**
 * Raycast from point to point, where the ray has a radius.
 * flags:
 * vehicles=10
 * peds =12
 * Iterating through flags yields many ped / vehicle/ object combinations
 * p9 = 7, but no idea what it does
 * Entity is an entity to ignore
 */
func (_client) StartShapeTestCapsule(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64, flags float64, entity float64, p9 float64) float64 {
	return 0.0
}
/**
 * Raycast from point to point, where the ray has a radius.
 * flags:
 * vehicles=10
 * peds =12
 * Iterating through flags yields many ped / vehicle/ object combinations
 * p9 = 7, but no idea what it does
 * Entity is an entity to ignore
 */
func (_client) Cast_3dRayPointToPoint(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64, flags float64, entity float64, p9 float64) float64 {
	return 0.0
}

/**
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 * Use the handle with [GET_SHAPE_TEST_RESULT](#\_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#\_0x65287525D951F6BE) until it returns 0 or 2.
 * @param x1 Starting X coordinate.
 * @param y1 Starting Y coordinate.
 * @param z1 Starting Z coordinate.
 * @param x2 Ending X coordinate.
 * @param y2 Ending Y coordinate.
 * @param z2 Ending Z coordinate.
 * @param flags Flags.
 * @param entity An entity to ignore, or 0.
 * @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
 * @return A shape test handle.
 */
func (_client) StartShapeTestLosProbe(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, flags float64, entity float64, p8 float64) float64 {
	return 0.0
}
/**
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 * Use the handle with [GET_SHAPE_TEST_RESULT](#\_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#\_0x65287525D951F6BE) until it returns 0 or 2.
 * @param x1 Starting X coordinate.
 * @param y1 Starting Y coordinate.
 * @param z1 Starting Z coordinate.
 * @param x2 Ending X coordinate.
 * @param y2 Ending Y coordinate.
 * @param z2 Ending Z coordinate.
 * @param flags Flags.
 * @param entity An entity to ignore, or 0.
 * @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
 * @return A shape test handle.
 */
func (_client) N_0x7ee9f5d83dd4f90e(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, flags float64, entity float64, p8 float64) float64 {
	return 0.0
}

/**
 * Since it is only used in the PC version, likely some mouse-friendly shape test. Uses **in** vector arguments.
 * Asynchronous.
 * ```
 * it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
 * In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
 * ```
 */
func (_client) StartShapeTestSurroundingCoords(flag float64, entity float64, flag2 float64) (float64,interface{},interface{}) { return 0.0,nil,nil}
/**
 * Since it is only used in the PC version, likely some mouse-friendly shape test. Uses **in** vector arguments.
 * Asynchronous.
 * ```
 * it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
 * In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
 * ```
 */
func (_client) N_0xff6be494c7987f34(flag float64, entity float64, flag2 float64) (float64,interface{},interface{}) { return 0.0,nil,nil}

/**
 * Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
 */
func (_client) StartShapeTestSweptSphere(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64, flags float64, entity float64, p9 float64) float64 {
	return 0.0
}
/**
 * Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
 */
func (_client) N_0xe6ac6c45fbe83004(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64, flags float64, entity float64, p9 float64) float64 {
	return 0.0
}
/**
 * Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
 */
func (_client) StartShapeTestCapsule_2(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, radius float64, flags float64, entity float64, p9 float64) float64 {
	return 0.0
}

func (_client) StartVehicleAlarm(vehicle float64) {}

/**
 * Sounds the horn for the specified vehicle.
 * vehicle: The vehicle to activate the horn for.
 * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
 * duration: The duration to sound the horn, in milliseconds.
 * Note: If a player is in the vehicle, it will only sound briefly.
 */
func (_client) StartVehicleHorn(vehicle float64, duration float64, mode interface{}, forever bool) {}

/**
 * Example:
 * for (v_2 = 0; v_2 <= 4; v_2 += 1) {
 * STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
 * }
 */
func (_client) StatClearSlotForReload(statSlot float64) float64 {
	return 0.0
}

func (_client) StatDeleteSlot(p0 float64) float64 {
	return 0.0
}

func (_client) StatGetBool(statHash interface{}, p2 float64)  (bool,interface{}){
	return false,nil
}

/**
 * p2 - Default value Seems to be -1 most of the time.
 */
func (_client) StatGetBoolMasked(statName interface{}, mask float64, p2 float64) bool;

func (_client) StatGetCancelSaveMigrationStatus() float64 {
	return 0.0
}
func (_client) N_0x567384dfa67029e6() float64 {
	return 0.0
}

func (_client) StatGetDate(statHash interface{}, p2 float64, p3 float64)  (bool, float64){
	return false,0.0
}

func (_client) StatGetFloat(statHash interface{}, p2 float64)  (bool, float64){
	return false,0.0
}

/**
 * p2 appears to always be -1
 */
func (_client) StatGetInt(statHash interface{}, p2 float64)  (bool, float64){
	return false,0.0
}

func (_client) StatGetLicensePlate(statName interface{}) string;

func (_client) StatGetMaskedInt(p0 float64, p2 float64, p3 float64, p4 float64)  (bool, float64){
	return false,0.0
}

func (_client) StatGetNumberOfDays(statName interface{}) float64 {
	return 0.0
}
func (_client) N_0xe0e854f5280fb769(statName interface{}) float64 {
	return 0.0
}

func (_client) StatGetNumberOfHours(statName interface{}) float64 {
	return 0.0
}
func (_client) N_0xf2d4b2fe415aafc3(statName interface{}) float64 {
	return 0.0
}

func (_client) StatGetNumberOfMinutes(statName interface{}) float64 {
	return 0.0
}
func (_client) N_0x7583b4be4c5a41b5(statName interface{}) float64 {
	return 0.0
}

func (_client) StatGetNumberOfSeconds(statName interface{}) float64 {
	return 0.0
}
func (_client) N_0x2ce056ff3723f00b(statName interface{}) float64 {
	return 0.0
}

/**
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?
 */
func (_client) StatGetPackedBoolMask(p0 float64) float64 {
	return 0.0
}
/**
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?
 */
func (_client) N_0xf4d8e7ac2a27758c(p0 float64) float64 {
	return 0.0
}

/**
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
 */
func (_client) StatGetPackedIntMask(p0 float64) float64 {
	return 0.0
}
/**
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
 */
func (_client) N_0x94f12abf9c79e339(p0 float64) float64 {
	return 0.0
}

func (_client) StatGetPos(p0 float64, p4 float64): [boolean, number, number, number];

func (_client) StatGetSaveMigrationConsumeContentUnlockStatus(p0 float64) (float64, float64) { return 0.0, 0.0 };
func (_client) N_0xce5aa445aba8dee0(p0 float64) (float64, float64) { return 0.0, 0.0 };

func (_client) StatGetSaveMigrationStatus(data float64) (float64, float64) { return 0.0, 0.0 };
func (_client) N_0x886913bbeaca68c1(data float64) (float64, float64) { return 0.0, 0.0 };

/**
 * p1 is always -1 in the script files
 */
func (_client) StatGetString(statHash interface{}, p1 float64) string;

/**
 * Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.
 */
func (_client) StatGetUserId(p0 float64) string;

func (_client) StatIncrement(statName interface{}, value float64) {}

func (_client) StatLoad(p0 float64) bool;

func (_client) StatLoadPending(p0 float64) bool;

/**
 * platformName must be one of the following: ps3, xbox360, ps4, xboxone
 */
func (_client) StatMigrateSave(platformName string) bool;
/**
 * platformName must be one of the following: ps3, xbox360, ps4, xboxone
 */
func (_client) N_0xa5c80d8e768a9e66(platformName string) bool;

/**
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) StatSave(p0 float64, p1 bool, p2 float64) bool;

func (_client) StatSaveMigrationCancel() bool;
func (_client) N_0x4fef53183c3c6414() bool;

func (_client) StatSaveMigrationConsumeContentUnlock(contentId interface{}, srcPlatform string, srcGamerHandle string) bool;
func (_client) N_0x3270f67eed31fbc1(contentId interface{}, srcPlatform string, srcGamerHandle string) bool;

func (_client) StatSaveMigrationStatusStart() bool;
func (_client) N_0xc70ddce56d0d3a99() bool;

func (_client) StatSavePending() bool;

func (_client) StatSavePendingOrRequested() bool;

func (_client) StatSetBlockSaves(toggle bool) {}
func (_client) N_0xf434a10ba01c37d0(toggle bool) {}

/**
 * Example:
 * STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);
 */
func (_client) StatSetBool(statName interface{}, value bool, save bool) bool;

func (_client) StatSetBoolMasked(statName interface{}, value bool, mask float64, save bool) bool;

func (_client) StatSetCheatIsActive() {}
func (_client) N_0x047cbed6f6f8b63c() {}

/**
 * p1 always true.
 */
func (_client) StatSetCurrentPosixTime(statName interface{}, p1 bool) bool;

/**
 * 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
 * The structure looks like this:
 * int year
 * int month
 * int day
 * int hour
 * int minute
 * int second
 * int millisecond
 * The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.
 */
func (_client) StatSetDate(statName interface{}, numFields float64, save bool)  (bool, float64){
	return false,0.0
}

/**
 * Example:
 * STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);
 */
func (_client) StatSetFloat(statName interface{}, value float64, save bool) bool;

/**
 * The following values have been found in the decompiled scripts:
 * "RC_ABI1"
 * "RC_ABI2"
 * "RC_BA1"
 * "RC_BA2"
 * "RC_BA3"
 * "RC_BA3A"
 * "RC_BA3C"
 * "RC_BA4"
 * "RC_DRE1"
 * "RC_EPS1"
 * "RC_EPS2"
 * "RC_EPS3"
 * "RC_EPS4"
 * "RC_EPS5"
 * "RC_EPS6"
 * "RC_EPS7"
 * "RC_EPS8"
 * "RC_EXT1"
 * "RC_EXT2"
 * "RC_EXT3"
 * "RC_EXT4"
 * "RC_FAN1"
 * "RC_FAN2"
 * "RC_FAN3"
 * "RC_HAO1"
 * "RC_HUN1"
 * "RC_HUN2"
 * "RC_JOS1"
 * "RC_JOS2"
 * "RC_JOS3"
 * "RC_JOS4"
 * "RC_MAU1"
 * "RC_MIN1"
 * "RC_MIN2"
 * "RC_MIN3"
 * "RC_MRS1"
 * "RC_MRS2"
 * "RC_NI1"
 * "RC_NI1A"
 * "RC_NI1B"
 * "RC_NI1C"
 * "RC_NI1D"
 * "RC_NI2"
 * "RC_NI3"
 * "RC_OME1"
 * "RC_OME2"
 * "RC_PA1"
 * "RC_PA2"
 * "RC_PA3"
 * "RC_PA3A"
 * "RC_PA3B"
 * "RC_PA4"
 * "RC_RAM1"
 * "RC_RAM2"
 * "RC_RAM3"
 * "RC_RAM4"
 * "RC_RAM5"
 * "RC_SAS1"
 * "RC_TON1"
 * "RC_TON2"
 * "RC_TON3"
 * "RC_TON4"
 * "RC_TON5"
 */
func (_client) StatSetGxtLabel(statName interface{}, value string, save bool) bool;

/**
 * Example:
 * STATS::STAT_SET_INT(MISC::GET_HASH_KEY("MPPLY_KILLS_PLAYERS"), 1337, true);
 */
func (_client) StatSetInt(statName interface{}, value float64, save bool) bool;

func (_client) StatSetLicensePlate(statName interface{}, str string) bool;

func (_client) StatSetMaskedInt(statName interface{}, p1 float64, p2 float64, p3 float64, save bool) bool;

func (_client) StatSetPos(statName interface{}, x float64, y float64, z float64, save bool) bool;

/**
 * Does not take effect immediately, unfortunately.
 * profileSetting seems to only be 936, 937 and 938 in scripts
 */
func (_client) StatSetProfileSettingValue(profileSetting float64, value float64) {}
/**
 * Does not take effect immediately, unfortunately.
 * profileSetting seems to only be 936, 937 and 938 in scripts
 */
func (_client) N_0x68f01422be1d838f(profileSetting float64, value float64) {}
/**
 * Does not take effect immediately, unfortunately.
 * profileSetting seems to only be 936, 937 and 938 in scripts
 */
func (_client) StatSetProfileSetting(profileSetting float64, value float64) {}

func (_client) StatSetString(statName interface{}, value string, save bool) bool;

func (_client) StatSetUserId(statName interface{}, value string, save bool) bool;

func (_client) StatSlotIsLoaded(p0 float64) bool;

/**
 * Example:
 * This will stop the alarm at Fort Zancudo.
 * AUDIO::STOP_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
 * First parameter (char) is the name of the alarm.
 * Second parameter (bool) has to be true (1) to have any effect.
 */
func (_client) StopAlarm(alarmName string, toggle bool) {}

func (_client) StopAllAlarms(stop bool) {}

func (_client) StopAllGarageActivity() {}

/**
 * Looks like p1 may be a flag, still need to do some research, though.
 */
func (_client) StopAnimPlayback(ped float64, p1 float64, p2 bool) {}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 */
func (_client) StopAnimTask(ped float64, animDictionary string, animationName string, p3 float64) {}

func (_client) StopAnyPedModelBeingSuppressed() {}

func (_client) StopAudioScene(scene string) {}

/**
 * ??
 */
func (_client) StopAudioScenes() {}

/**
 * Begins with STOP_*. Next character in the name is either D or E.
 */
func (_client) StopBenchmarkRecording() {}
/**
 * Begins with STOP_*. Next character in the name is either D or E.
 */
func (_client) N_0xc7db36c24634f52b() {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) StopBinkMovie(binkMovie float64) {}

/**
 * Stops CTaskBringVehicleToHalt
 */
func (_client) StopBringVehicleToHalt(vehicle float64) {}
/**
 * Stops CTaskBringVehicleToHalt
 */
func (_client) N_0x7c06330bfdda182e(vehicle float64) {}

func (_client) StopCamPointing(cam float64) {}

func (_client) StopCamShaking(cam float64, p1 bool) {}

func (_client) StopCinematicCamShaking(p0 bool) {}

func (_client) StopCinematicShot(p0 interface{}) {}

func (_client) StopCurrentPlayingAmbientSpeech(ped float64) {}

func (_client) StopCurrentPlayingSpeech(ped float64) {}
func (_client) N_0x7a73d05a607734c7(ped float64) {}
func (_client) SetPedMute(ped float64) {}

func (_client) StopCutscene(p0 bool) {}

func (_client) StopCutsceneAudio() {}
func (_client) N_0x806058bbdc136e06() {}

func (_client) StopCutsceneCamShaking() {}

func (_client) StopCutsceneImmediately() {}

/**
 * RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
 */
func (_client) StopEntityAnim(entity float64, animation string, animGroup string, p3 float64) float64 {
	return 0.0
}

func (_client) StopEntityFire(entity float64) {}

func (_client) StopFireInRange(x float64, y float64, z float64, radius float64) {}

func (_client) StopGameplayCamShaking(p0 bool) {}

func (_client) StopGameplayHint(p0 bool) {}

func (_client) StopPadShake(padIndex float64) {}

/**
 * p1 is always 0 in the native scripts
 */
func (_client) StopParticleFxLooped(ptfxHandle float64, p1 bool) {}

func (_client) StopPedRingtone(ped float64) {}

func (_client) StopPedSpeaking(ped float64, shaking bool) {}

func (_client) StopPedWeaponFiringWhenDropped(ped float64) {}

func (_client) StopPlaybackRecordedVehicle(vehicle float64) {}

func (_client) StopPlayerSwitch() {}

/**
 * Disables the player's teleportation
 */
func (_client) StopPlayerTeleport() {}

/**
 * Stops recording and discards the recorded clip.
 */
func (_client) StopRecordingAndDiscardClip() {}
/**
 * Stops recording and discards the recorded clip.
 */
func (_client) N_0x88bb3507ed41a240() {}

/**
 * Stops recording and saves the recorded clip.
 */
func (_client) StopRecordingAndSaveClip() {}
/**
 * Stops recording and saves the recorded clip.
 */
func (_client) StopRecording() {}

/**
 * This disable the recording feature and has to be called every frame.
 */
func (_client) StopRecordingThisFrame() {}
/**
 * This disable the recording feature and has to be called every frame.
 */
func (_client) N_0xeb2d525b57f42b40() {}

/**
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) StopRenderingScriptCamsUsingCatchUp(render bool, p1 float64, p2 float64) {}
/**
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) N_0xc819f3cbb62bf692(render bool, p1 float64, p2 float64) {}
/**
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) RenderFirstPersonCam(render bool, p1 float64, p2 float64) {}

func (_client) StopRopeUnwindingFront(ropeId float64) {}

func (_client) StopRopeWinding(ropeId float64) {}

func (_client) StopSaveArray() {}

func (_client) StopSaveData() {}

func (_client) StopSaveStruct() {}

/**
 * In drunk_controller.c4, sub_309
 * if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
 * CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
 * }
 */
func (_client) StopScriptGlobalShaking(p0 bool) {}
/**
 * In drunk_controller.c4, sub_309
 * if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
 * CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
 * }
 */
func (_client) N_0x1c9d7949fa533490(p0 bool) {}

func (_client) StopScriptedConversation(p0 bool) float64 {
	return 0.0
}

func (_client) StopSound(soundId float64) {}

func (_client) StopStream() {}

func (_client) StopSynchronizedAudioEvent(p0 float64) bool;

/**
 * p1 sync task id?
 */
func (_client) StopSynchronizedEntityAnim(entity float64, p1 float64, p2 bool) bool;

func (_client) StopSynchronizedMapEntityAnim(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) bool;

/**
 * Always returns zero.
 */
func (_client) StreamvolCreateFrustum(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) float64 {
	return 0.0
}
/**
 * Always returns zero.
 */
func (_client) N_0x1f3f018bc3afa77c(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) float64 {
	return 0.0
}

/**
 * Always returns zero.
 */
func (_client) StreamvolCreateLine(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}
/**
 * Always returns zero.
 */
func (_client) N_0x0ad9710cee2f590f(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) float64 {
	return 0.0
}

/**
 * Always returns zero.
 */
func (_client) StreamvolCreateSphere(x float64, y float64, z float64, rad float64, p4 float64, p5 float64) float64 {
	return 0.0
}
/**
 * Always returns zero.
 */
func (_client) N_0x219c7b8d53e429fd(x float64, y float64, z float64, rad float64, p4 float64, p5 float64) float64 {
	return 0.0
}
/**
 * Always returns zero.
 */
func (_client) FormatFocusHeading(x float64, y float64, z float64, rad float64, p4 float64, p5 float64) float64 {
	return 0.0
}

func (_client) StreamvolDelete(unused float64) {}
func (_client) N_0x1ee7d8df4425f053(unused float64) {}

func (_client) StreamvolHasLoaded(unused float64) bool;
func (_client) N_0x7d41e9d2d17c5b2d(unused float64) bool;

func (_client) StreamvolIsValid(unused float64) bool;
func (_client) N_0x07c313f94746702c(unused float64) bool;

/**
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
 * If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
 */
func (_client) StringToInt(_string string, outInteger float64)  (bool, float64){
	return false,0.0
}

func (_client) SuppressAgitationEventsNextFrame() {}

func (_client) SuppressFrontendRenderingThisFrame() {}
func (_client) N_0xba751764f0821256() {}

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 */
func (_client) SuppressShockingEventTypeNextFrame(eventType float64) {}

func (_client) SuppressShockingEventsNextFrame() {}

/**
 * This was previously named as "RESERVE_ENTITY_EXPLODES_ON_HIGH_EXPLOSION_COMBO"
 * which is obviously incorrect.
 * Seems to only appear in scripts used in Singleplayer. p1 ranges from 2 - 46.
 * I assume this switches the crime type
 */
func (_client) SwitchCrimeType(player float64, p1 float64) {}
/**
 * This was previously named as "RESERVE_ENTITY_EXPLODES_ON_HIGH_EXPLOSION_COMBO"
 * which is obviously incorrect.
 * Seems to only appear in scripts used in Singleplayer. p1 ranges from 2 - 46.
 * I assume this switches the crime type
 */
func (_client) N_0x9a987297ed8bd838(player float64, p1 float64) {}

/**
 * Use after using \_SWITCH_OUT_PLAYER to swoop the camera back down to the player's ped.
 */
func (_client) SwitchInPlayer(ped float64) {}
/**
 * Use after using \_SWITCH_OUT_PLAYER to swoop the camera back down to the player's ped.
 */
func (_client) N_0xd8295af639fd9cb8(ped float64) {}

/**
 * doesn't act normally when used on mount chilliad
 * flags:
 * 0: normal
 * 1: no transition
 * 255: switch IN
 * switchType: 0 - 3
 * 0: 1 step towards ped
 * 1: 3 steps out from ped
 * 2: 1 step out from ped
 * 3: 1 step towards ped
 */
func (_client) SwitchOutPlayer(ped float64, flags float64, switchType float64) {}
/**
 * doesn't act normally when used on mount chilliad
 * flags:
 * 0: normal
 * 1: no transition
 * 255: switch IN
 * switchType: 0 - 3
 * 0: 1 step towards ped
 * 1: 3 steps out from ped
 * 2: 1 step out from ped
 * 3: 1 step towards ped
 */
func (_client) N_0xaab3200ed59016bc(ped float64, flags float64, switchType float64) {}

/**
 * Used in carsteal3 script with p0 = "Carsteal4_spycar".
 * S*
 */
func (_client) SwitchToInputMappingScheme(name string) bool;
/**
 * Used in carsteal3 script with p0 = "Carsteal4_spycar".
 * S*
 */
func (_client) N_0x3d42b92563939375(name string) bool;

/**
 * Same as 0x3D42B92563939375
 * S*
 */
func (_client) SwitchToInputMappingScheme_2(name string) bool;
/**
 * Same as 0x3D42B92563939375
 * S*
 */
func (_client) N_0x4683149ed1dde7a1(name string) bool;

/**
 * Toggles whether ambient trains can spawn on the specified track or not.
 * | trackId | File | Description |
 * | --- | --- | --- |
 * | 0 | `trains1.dat` | Main track around SA |
 * | 1 | `trains2.dat` | Davis Quartz Quarry branch |
 * | 2 | `trains3.dat` | Second track alongside live track along Roy Lewenstein Blv. |
 * | 3 | `trains4.dat` | Metro track circuit |
 * | 4 | `trains5.dat` | Branch in Mirror Park Railyard |
 * | 5 | `trains6.dat` | Branch in Mirror Park Railyard |
 * | 6 | `trains7.dat` | LS branch to Mirror Park Railyard |
 * | 7 | `trains8.dat` | Overground part of metro track along Forum Dr. |
 * | 8 | `trains9.dat` | Branch to Mirror Park Railyard |
 * | 9 | `trains10.dat` | Yankton train |
 * | 10 | `trains11.dat` | Part of metro track near mission row |
 * | 11 | `trains12.dat` | Yankton prologue mission train |
 * Tracks IDs `0` and `3` are the main tracks you find trains on during normal gameplay, all the others are used during missions and are not complete tracks.
 * @param trackId The internal id of the train track to switch
 * @param state Whether ambient trains can spawn or not
 * @return None. The original return type is `void`, but ABI compatibility makes this impossible.
 */
func (_client) SwitchTrainTrack(trackId float64, state bool) {}

/**
 * Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
 * To enable the keys again, use [`0x14621BB1DF14E2B2`](#\_0x14621BB1DF14E2B2).
 */
func (_client) TakeControlOfFrontend() {}
/**
 * Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
 * To enable the keys again, use [`0x14621BB1DF14E2B2`](#\_0x14621BB1DF14E2B2).
 */
func (_client) N_0xec9264727eec0f28() {}

func (_client) Tan(p0 float64) float64 {
	return 0.0
}

/**
 * Makes the specified ped achieve the specified heading.
 * pedHandle: The handle of the ped to assign the task to.
 * heading: The desired heading.
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
 */
func (_client) TaskAchieveHeading(ped float64, heading float64, timeout float64) {}

func (_client) TaskAgitatedAction(ped float64, ped2 float64) {}
func (_client) N_0x19d1b791cb3670fe(ped float64, ped2 float64) {}

func (_client) TaskAimGunAtCoord(ped float64, x float64, y float64, z float64, time float64, p5 bool, p6 bool) {}

/**
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 */
func (_client) TaskAimGunAtEntity(ped float64, entity float64, duration float64, p3 bool) {}

func (_client) TaskAimGunScripted(ped float64, scriptTask interface{}, p2 bool, p3 bool) {}

func (_client) TaskAimGunScriptedWithTarget(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 bool) {}

/**
 * Example from "me_amanda1.ysc.c4":
 * TASK::TASK_ARREST_PED(l_19F  -- [[ This is a Ped ]]  , PLAYER::PLAYER_PED_ID());
 * Example from "armenian1.ysc.c4":
 * if (!PED::IS_PED_INJURED(l_B18[0 -- [[1]] ])) {
 * TASK::TASK_ARREST_PED(l_B18[0 -- [[1]] ], PLAYER::PLAYER_PED_ID());
 * }
 * I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
 * Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
 */
func (_client) TaskArrestPed(ped float64, target float64) {}

/**
 * You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.
 * Working example
 * float vehicleMaxSpeed = VEHICLE::_GET_VEHICLE_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));
 * TASK::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);
 * PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);
 * P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
 */
func (_client) TaskBoatMission(pedDriver float64, boat float64, p2 float64, p3 float64, x float64, y float64, z float64, p7 float64, maxSpeed float64, drivingStyle float64, p10 float64, p11 float64) {}

/**
 * p2 tend to be 16, 17 or 1
 * p3 to p7 tend to be 0.0
 */
func (_client) TaskChatToPed(ped float64, target float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64) {}

func (_client) TaskClearDefensiveArea(p0 float64) {}

/**
 * Not clear what it actually does, but here's how script uses it -
 * if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)
 * {
 * if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
 * {
 * TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
 * }
 * ...
 * }
 * Another one where it doesn't "look" at current player -
 * TASK::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
 * PED::_2208438012482A1A(l_3ED, 0, 0);
 * TASK::TASK_CLEAR_LOOK_AT(l_3ED);
 */
func (_client) TaskClearLookAt(ped float64) {}

/**
 * Climbs or vaults the nearest thing.
 */
func (_client) TaskClimb(ped float64, unused bool) {}

func (_client) TaskClimbLadder(ped float64, p1 float64) {}

/**
 * Despite its name, it only attacks ONE hated target. The one closest hated target.
 * p2 seems to be always 0
 */
func (_client) TaskCombatHatedTargetsAroundPed(ped float64, radius float64, p2 float64) {}

func (_client) TaskCombatHatedTargetsAroundPedTimed(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
 */
func (_client) TaskCombatHatedTargetsInArea(ped float64, x float64, y float64, z float64, radius float64, p5 float64) {}

/**
 * Makes the specified ped attack the target ped.
 * p2 should be 0
 * p3 should be 16
 */
func (_client) TaskCombatPed(ped float64, targetPed float64, p2 float64, p3 float64) {}

func (_client) TaskCombatPedTimed(p0 float64, ped float64, p2 float64, p3 float64) {}

func (_client) TaskCower(ped float64, duration float64) {}

/**
 * Example:
 * TASK::TASK_DRIVE_BY(l_467[1 -- [[22]] ], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
 * Needs working example. Doesn't seem to do anything.
 * I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
 * I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
 * I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
 */
func (_client) TaskDriveBy(driverPed float64, targetPed float64, targetVehicle float64, targetX float64, targetY float64, targetZ float64, distanceToShoot float64, pedAccuracy float64, p8 bool, firingPattern interface{}) {}

/**
 * speed 1.0 = walk, 2.0 = run
 * p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle
 * p6 is always 0
 * @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
 */
func (_client) TaskEnterVehicle(ped float64, vehicle float64, timeout float64, seatIndex float64, speed float64, flag float64, p6 float64) {}

func (_client) TaskEveryoneLeaveVehicle(vehicle float64) {}

func (_client) TaskExitCover(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * Adds a new point to the current point route; a maximum of 8 points can be added.
 * Call [TASK_FLUSH_ROUTE](#\_0x841142A1376E9006) before the first call to this. Call [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E) to make the Ped go the route.
 */
func (_client) TaskExtendRoute(x float64, y float64, z float64) {}

/**
 * Clears the current point route. Call this before [TASK_EXTEND_ROUTE](#\_0x1E7889778264843A) and [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E).
 */
func (_client) TaskFlushRoute() {}

/**
 * If no timeout, set timeout to -1.
 */
func (_client) TaskFollowNavMeshToCoord(ped float64, x float64, y float64, z float64, speed float64, timeout float64, stoppingRange float64, persistFollowing bool, unk float64) {}

func (_client) TaskFollowNavMeshToCoordAdvanced(ped float64, x float64, y float64, z float64, speed float64, timeout float64, unkFloat float64, unkInt float64, unkX float64, unkY float64, unkZ float64, unk_40000f float64) {}

/**
 * MulleKD19: Makes the ped go on the created point route.
 * ped: The ped to give the task to.
 * speed: The speed to move at in m/s.
 * int: Unknown. Can be 0, 1, 2 or 3.
 * Example:
 * TASK_FLUSH_ROUTE();
 * TASK_EXTEND_ROUTE(0f, 0f, 70f);
 * TASK_EXTEND_ROUTE(10f, 0f, 70f);
 * TASK_EXTEND_ROUTE(10f, 10f, 70f);
 * TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
 * @param ped The ped to give the task to.
 * @param speed The speed to move at in m/s.
 * @param unknown Unknown. Can be 0, 1, 2 or 3.
 */
func (_client) TaskFollowPointRoute(ped float64, speed float64, unknown float64) {}

/**
 * p6 always -1
 * p7 always 10.0
 * p8 always 1
 */
func (_client) TaskFollowToOffsetOfEntity(ped float64, entity float64, offsetX float64, offsetY float64, offsetZ float64, movementSpeed float64, timeout float64, stoppingRange float64, persistFollowing bool) {}

func (_client) TaskFollowWaypointRecording(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

/**
 * See [`FORCE_PED_MOTION_STATE`](#\_0xF28965D04F570DCA)
 */
func (_client) TaskForceMotionState(ped float64, state interface{}, p2 bool) {}

func (_client) TaskGetOffBoat(ped float64, boat float64) {}
func (_client) TaskGetOffBoat(ped float64, boat float64) {}

func (_client) TaskGoStraightToCoord(ped float64, x float64, y float64, z float64, speed float64, timeout float64, targetHeading float64, distanceToSlide float64) {}

func (_client) TaskGoStraightToCoordRelativeToEntity(entity1 float64, entity2 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

/**
 * The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
 * If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
 * If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
 * The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
 * I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
 * I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
 * Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
 * The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
 * Example:
 * enum AimFlag
 * {
 * AimAtFocusLocation,
 * AimAtGoToLocation
 * };
 * Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
 * Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
 * Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
 * // 1st example
 * TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f  -- [[run]] , true  -- [[shoot]] , 3.0f  -- [[stop at]] , 0.0f  -- [[noRoadsDistance]] , true  -- [[always true]] , 0  -- [[possible flag]] , AimFlag::AimAtGoToLocation, -957453492  -- [[FullAuto pattern]] );
 * // 2nd example
 * TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f  -- [[walk]] , false  -- [[don't shoot]] , 3.0f  -- [[stop at]] , 0.0f  -- [[noRoadsDistance]] , true  -- [[always true]] , 0  -- [[possible flag]] , AimFlag::AimAtFocusLocation, -957453492  -- [[FullAuto pattern]] );
 * 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
 * 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
 */
func (_client) TaskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle float64, goToLocationX float64, goToLocationY float64, goToLocationZ float64, focusLocationX float64, focusLocationY float64, focusLocationZ float64, speed float64, shootAtEnemies bool, distanceToStopAt float64, noRoadsDistance float64, unkTrue bool, unkFlag float64, aimingFlag float64, firingPattern interface{}) {}

/**
 * example from fm_mission_controller
 * TASK::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);
 */
func (_client) TaskGoToCoordAnyMeans(ped float64, x float64, y float64, z float64, speed float64, p5 float64, p6 bool, walkingStyle float64, p8 float64) {}

/**
 * NativeDB Added Parameter 13: Any p12
 */
func (_client) TaskGoToCoordAnyMeansExtraParams(ped float64, x float64, y float64, z float64, speed float64, p5 float64, p6 bool, walkingStyle float64, p8 float64, p9 float64, p10 float64, p11 float64) {}

/**
 * NativeDB Added Parameter 14: Any p13
 */
func (_client) TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped float64, x float64, y float64, z float64, speed float64, p5 float64, p6 bool, walkingStyle float64, p8 float64, p9 float64, p10 float64, p11 float64, p12 float64) {}

/**
 * Will make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates.
 * @param ped Ped to task
 * @param x Destination X position
 * @param y Destination Y position
 * @param z Destination Z position
 * @param aimAtX Aim at target x position
 * @param aimAtY Aim at target Y position
 * @param aimAtZ Aim at target Z position
 * @param moveSpeed mostly 2f, but also 1/1.2f, etc.
 * @param shoot If true ped will shoot; false - will not
 * @param p9 Usually 2.0f
 * @param p10 Usually 0.5f
 * @param p11 If true ped will stay still; false - will not
 * @param flags 0 / 512 / 513, etc
 * @param firingPattern ${firing_pattern_full_auto}, 0xC6EE6B4C
 */
func (_client) TaskGoToCoordWhileAimingAtCoord(ped float64, x float64, y float64, z float64, aimAtX float64, aimAtY float64, aimAtZ float64, moveSpeed float64, shoot bool, p9 float64, p10 float64, p11 bool, flags float64, p13 bool, firingPattern interface{}) {}

func (_client) TaskGoToCoordWhileAimingAtEntity(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 float64, p8 float64, p9 bool, p10 float64, p11 bool, p12 float64, p13 float64) {}

/**
 * The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
 * Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
 * Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
 * Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
 */
func (_client) TaskGoToEntity(entity float64, target float64, duration float64, distance float64, speed float64, p5 float64, p6 float64) {}

func (_client) TaskGoToEntityWhileAimingAtCoord(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool, p7 float64, p8 float64, p9 bool, p10 bool, p11 float64) {}

/**
 * shootatEntity:
 * If true, peds will shoot at Entity till it is dead.
 * If false, peds will just walk till they reach the entity and will cease shooting.
 */
func (_client) TaskGoToEntityWhileAimingAtEntity(ped float64, entityToWalkTo float64, entityToAimAt float64, speed float64, shootatEntity bool, p5 float64, p6 float64, p7 bool, p8 bool, firingPattern interface{}) {}

/**
 * eg
 * TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 */
func (_client) TaskGotoEntityAiming(ped float64, target float64, distanceToStopAt float64, StartAimingDist float64) {}

func (_client) TaskGotoEntityOffset(ped float64, p1 float64, p2 float64, x float64, y float64, z float64, duration float64) {}

func (_client) TaskGotoEntityOffsetXy(ped float64, entity float64, duration float64, xOffset float64, yOffset float64, zOffset float64, moveBlendRatio float64, useNavmesh bool) {}

func (_client) TaskGuardAssignedDefensiveArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

/**
 * From re_prisonvanbreak:
 * TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
 */
func (_client) TaskGuardCurrentPosition(p0 float64, p1 float64, p2 float64, p3 bool) {}

/**
 * p0 - Guessing PedID
 * p1, p2, p3 - XYZ?
 * p4 - ???
 * p5 - Maybe the size of sphere from XYZ?
 * p6 - ???
 * p7, p8, p9 - XYZ again?
 * p10 - Maybe the size of sphere from second XYZ?
 */
func (_client) TaskGuardSphereDefensiveArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64) {}

/**
 * In the scripts, p3 was always -1.
 * p3 seems to be duration or timeout of turn animation.
 * Also facingPed can be 0 or -1 so ped will just raise hands up.
 */
func (_client) TaskHandsUp(ped float64, duration float64, facingPed float64, p3 float64, p4 bool) {}

/**
 * Ped pilot should be in a heli.
 * EntityToFollow can be a vehicle or Ped.
 * x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
 * NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
 */
func (_client) TaskHeliChase(pilot float64, entityToFollow float64, x float64, y float64, z float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) TaskHeliEscortHeli(pilot float64, heli1 float64, heli2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * Needs more research.
 * Default value of p13 is -1.0 or 0xBF800000.
 * Default value of p14 is 0.
 * Modified examples from "fm_mission_controller.ysc", line ~203551:
 * TASK::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 10, 10, 5.0, 0);
 * TASK::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 0, ?, 5.0, 4096);
 * int mode seams to set mission type 4 = coords target, 23 = ped target.
 * int 14 set to 32 = ped will land at destination.
 * My findings:
 * mode 4 or 7 forces heli to snap to the heading set
 * 8 makes the heli flee from the ped.
 * 9 circles around ped with angle set
 * 10, 11 normal + imitate ped heading
 * 20 makes the heli land when he's near the ped. It won't resume chasing.
 * 21 emulates an helicopter crash
 * 23 makes the heli circle erratically around ped
 * I change p2 to 'vehicleToFollow' as it seems to work like the task natives to set targets. In the heli_taxi script where as the merryweather heli takes you to your waypoint it has no need to follow a vehicle or a ped, so of course both have 0 set.
 */
func (_client) TaskHeliMission(pilot float64, aircraft float64, targetVehicle float64, targetPed float64, destinationX float64, destinationY float64, destinationZ float64, missionFlag float64, maxSpeed float64, landingRadius float64, targetHeading float64, unk1 float64, unk2 float64, unk3 float64, landingFlags float64) {}

/**
 * Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
 * v350: Ped ped, bool unused
 * v678: Ped ped, bool unused, bool flag1, bool flag2
 * flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) TaskJump(ped float64, unused bool) {}

/**
 * Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#\_0xD3DBCE61A490BE02)
 */
func (_client) TaskLeaveAnyVehicle(ped float64, p1 float64, flags float64) {}

/**
 * Flags from decompiled scripts:
 * 0 = normal exit and closes door.
 * 1 = normal exit and closes door.
 * 16 = teleports outside, door kept closed.
 * 64 = normal exit and closes door, maybe a bit slower animation than 0.
 * 256 = normal exit but does not close the door.
 * 4160 = ped is throwing himself out, even when the vehicle is still.
 * 262144 = ped moves to passenger seat first, then exits normally
 * Others to be tried out: 320, 512, 131072.
 */
func (_client) TaskLeaveVehicle(ped float64, vehicle float64, flags float64) {}

func (_client) TaskLookAtCoord(entity float64, x float64, y float64, z float64, duration float64, p5 float64, p6 float64) {}

/**
 * param3: duration in ms, use -1 to look forever
 * param4: using 2048 is fine
 * param5: using 3 is fine
 */
func (_client) TaskLookAtEntity(ped float64, lookAt float64, duration float64, unknown1 float64, unknown2 float64) {}

/**
 * Example:
 * TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
 */
func (_client) TaskMoveNetworkAdvancedByName(ped float64, p1 string, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 bool, animDict string, flags float64) {}
/**
 * Example:
 * TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
 */
func (_client) N_0xd5b35bea41919acb(ped float64, p1 string, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 bool, animDict string, flags float64) {}
/**
 * Example:
 * TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
 */
func (_client) TaskMoveNetworkAdvanced(ped float64, p1 string, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 bool, animDict string, flags float64) {}

/**
 * Example:
 * TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
 */
func (_client) TaskMoveNetworkByName(ped float64, task string, multiplier float64, p3 bool, animDict string, flags float64) {}
/**
 * Example:
 * TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
 */
func (_client) N_0x2d537ba194896636(ped float64, task string, multiplier float64, p3 bool, animDict string, flags float64) {}
/**
 * Example:
 * TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
 */
func (_client) TaskMoveNetwork(ped float64, task string, multiplier float64, p3 bool, animDict string, flags float64) {}

/**
 * Used only once in the scripts (am_mp_nightclub)
 * ```
 * ```
 * Used only once in the scripts (am_mp_nightclub)
 * NativeDB Introduced: v1493
 */
func (_client) TaskMoveNetworkByNameWithInitParams(ped float64, p1 string, p3 float64, p4 bool, animDict string, flags float64) float64 {
	return 0.0
}
/**
 * Used only once in the scripts (am_mp_nightclub)
 * ```
 * ```
 * Used only once in the scripts (am_mp_nightclub)
 * NativeDB Introduced: v1493
 */
func (_client) TaskMoveNetworkScripted(ped float64, p1 string, p3 float64, p4 bool, animDict string, flags float64) float64 {
	return 0.0
}

/**
 * The given ped will try to open the nearest door to 'seat'.
 * Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
 * @param ped The ped to do the task
 * @param vehicle The vehicle whose doors the ped shoud open
 * @param timeOut Sets a timeout to the task; doesn't work for 0
 * @param seat The seat index - the ped will attempt to open doors to get to the specified seat
 */
func (_client) TaskOpenVehicleDoor(ped float64, vehicle float64, timeOut float64, seat float64, speed float64) {}

/**
 * This function has a third parameter as well (bool).
 * Second parameter is unused.
 * seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed
 * ```
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 */
func (_client) TaskParachute(ped float64, p1 bool) {}

/**
 * makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED
 */
func (_client) TaskParachuteToTarget(ped float64, x float64, y float64, z float64) {}

/**
 * After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
 * "miss_Tower_01" (this went from 01 - 10)
 * "miss_Ass0" (0, 4, 6, 3)
 * "MISS_PATROL_8"
 * I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
 * As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
 * From the scripts
 * TASK::OPEN_PATROL_ROUTE("miss_Ass0");
 * TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0 -- [[3]] ], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
 * TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1 -- [[3]] ], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
 * TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2 -- [[3]] ], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
 * TASK::ADD_PATROL_ROUTE_LINK(0, 1);
 * TASK::ADD_PATROL_ROUTE_LINK(1, 2);
 * TASK::ADD_PATROL_ROUTE_LINK(2, 0);
 * TASK::CLOSE_PATROL_ROUTE();
 * TASK::CREATE_PATROL_ROUTE();
 */
func (_client) TaskPatrol(ped float64, p1 string, p2 float64, p3 bool, p4 bool) {}

/**
 * This tasks the ped to do nothing for the specified amount of miliseconds.
 * This is useful if you want to add a delay between tasks when using a sequence task.
 * @param ped The ped to pause. Set to this 0 when using task sequences.
 * @param ms The amount of miliseconds to wait.
 */
func (_client) TaskPause(ped float64, ms float64) {}

func (_client) TaskPedSlideToCoord(ped float64, x float64, y float64, z float64, heading float64, duration float64) {}

func (_client) TaskPedSlideToCoordHdgRate(ped float64, x float64, y float64, z float64, heading float64, p5 float64, p6 float64) {}

func (_client) TaskPerformSequence(ped float64, taskSequenceId float64) {}

func (_client) TaskPerformSequenceFromProgress(p0 float64, p1 float64, p2 float64, p3 float64) {}

func (_client) TaskPerformSequenceLocally(ped float64, taskSequenceId float64) {}
func (_client) N_0x8c33220c8d78ca0d(ped float64, taskSequenceId float64) {}

func (_client) TaskPlaneChase(pilot float64, entityToFollow float64, x float64, y float64, z float64) {}

/**
 * NativeDB Introduced: v1290
 */
func (_client) TaskPlaneGotoPreciseVtol(ped float64, vehicle float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64) {}

func (_client) TaskPlaneLand(pilot float64, plane float64, runwayStartX float64, runwayStartY float64, runwayStartZ float64, runwayEndX float64, runwayEndY float64, runwayEndZ float64) {}

/**
 * EDITED (7/13/2017)
 * NOTE: If you want air combat, AI::TASK_COMBAT_PED (while your pilot is in an aircraft) also does the same thing as this native.
 * DESCRIPTION:
 * Ever wish your buddy could shoot down one of your enemies for you Ever wanted an auto-pilot Well look no further! This is the native for you! (Ped intelligence may vary)
 * USAGE:
 * -- REQUIRED --
 * • pilot = The ped flying the aircraft.
 * • aircraft = The aircraft the pilot is flying
 * -- OPTIONAL -- [atleast 1 must be assigned]
 * • targetVehicle = The vehicle the pilot will target.
 * • targetPed = The ped the pilot will target.
 * • destinationX, destinationY, destinationZ = The location the pilot will target.
 * -- LOGIC --
 * • missionFlag = The type of mission. pastebin.com/R8x73dbv
 * • angularDrag = The higher the value, the slower the plane will rotate. Value ranges from 0 - Infinity.
 * • unk = Set to 0, and you'll be fine.
 * • targetHeading = The target angle (from world space north) that the pilot will try to acheive before executing an attack/landing.
 * • maxZ = Maximum Z coordinate height for flying.
 * • minZ = Minimum Z coordinate height for flying.
 * Z: 2,700 is the default max height a pilot will be able to fly. Anything greater and he will fly downward until reaching 2,700 again.
 * Mission Types (incase you don't like links..):
 * 0 = None
 * 1 = Unk
 * 2 = CTaskVehicleRam
 * 3 = CTaskVehicleBlock
 * 4 = CTaskVehicleGoToPlane
 * 5 = CTaskVehicleStop
 * 6 = CTaskVehicleAttack
 * 7 = CTaskVehicleFollow
 * 8 = CTaskVehicleFleeAirborne
 * 9 = CTaskVehicleCircle
 * 10 = CTaskVehicleEscort
 * 15 = CTaskVehicleFollowRecording
 * 16 = CTaskVehiclePoliceBehaviour
 * 17 = CTaskVehicleCrash
 * Example C#:
 * Function.Call(Hash.TASK_PLANE_MISSION, pilot, vehicle, 0, Game.Player.Character, 0, 0, 0, 6, 0f, 0f, 0f, 2500.0f, -1500f);
 * Example C++
 * AI::TASK_PLANE_MISSION(pilot, vehicle, 0, PLAYER::GET_PLAYER_PED(PLAYER::GET_PLAYER_INDEX()), 0, 0, 0, 6, 0.0, 0.0, 0.0, 2500.0, -1500.0);
 * [DEPRECATED] EXAMPLE USAGE:
 * pastebin.com/gx7Finsk
 * ```
 * ```
 * NativeDB Added Parameter 14: Any p13
 */
func (_client) TaskPlaneMission(pilot float64, aircraft float64, targetVehicle float64, targetPed float64, destinationX float64, destinationY float64, destinationZ float64, missionFlag float64, angularDrag float64, unk float64, targetHeading float64, maxZ float64, minZ float64) {}

func (_client) TaskPlaneTaxi(pilot float64, aircraft float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}
func (_client) N_0x92c360b5f15d2302(pilot float64, aircraft float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64) {}

func (_client) TaskPlantBomb(ped float64, x float64, y float64, z float64, heading float64) {}

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * ```
 * float blendInSpeed > normal speed is 8.0f
 * ----------------------
 * float blendOutSpeed > normal speed is 8.0f
 * ----------------------
 * int duration: time in millisecond
 * ----------------------
 * -1 _ _ _ _ _ _ _> Default (see flag)
 * 0 _ _ _ _ _ _ _ > Not play at all
 * Small value _ _ > Slow down animation speed
 * Other _ _ _ _ _ > freeze player control until specific time (ms) has
 * _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
 * _ _ _ _ _ _ _ _ _ controllable.)
 * int flag:
 * ----------------------
 * enum eAnimationFlags
 * {
 * ANIM_FLAG_NORMAL = 0,
 * ANIM_FLAG_REPEAT = 1,
 * ANIM_FLAG_STOP_LAST_FRAME = 2,
 * ANIM_FLAG_UPPERBODY = 16,
 * ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
 * ANIM_FLAG_CANCELABLE = 120,
 * };
 * Odd number : loop infinitely
 * Even number : Freeze at last frame
 * Multiple of 4: Freeze at last frame but controllable
 * 01 to 15 > Full body
 * 10 to 31 > Upper body
 * 32 to 47 > Full body > Controllable
 * 48 to 63 > Upper body > Controllable
 * ...
 * 001 to 255 > Normal
 * 256 to 511 > Garbled
 * ...
 * playbackRate:
 * values are between 0.0 and 1.0
 * lockX:
 * 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
 * > 1 for mini@sprunk
 * lockY:
 * 0 in most cases
 * 1 for missfam5_yoga, missfra1mcs_2_crew_react
 * lockZ:
 * 0 for single player
 * Can be 1 but only for MP
 * ```
 */
func (_client) TaskPlayAnim(ped float64, animDictionary string, animationName string, blendInSpeed float64, blendOutSpeed float64, duration float64, flag float64, playbackRate float64, lockX bool, lockY bool, lockZ bool) {}

/**
 * It's similar to the one above, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped The target ped
 * @param animDict Name of the animation dictionary
 * @param animName Name of the animation
 * @param posX Initial X position of the task
 * @param posY Initial Y position of the task
 * @param posZ Initial Z position of the task
 * @param rotX Initial X rotation of the task, doesn't seem to have any effect
 * @param rotY Initial Y rotation of the task, doesn't seem to have any effect
 * @param rotZ Initial Z rotation of the task
 * @param animEnterSpeed Adjust character speed to fully enter animation
 * @param animExitSpeed Adjust character speed to fully exit animation (useless `ClearPedTasksImmediately()` is called)
 * @param duration Time in milliseconds
 * @param animTime Value between 0.0 and 1.0, lets you start an animation from the given point
 */
func (_client) TaskPlayAnimAdvanced(ped float64, animDict string, animName string, posX float64, posY float64, posZ float64, rotX float64, rotY float64, rotZ float64, animEnterSpeed float64, animExitSpeed float64, duration float64, flag float64, animTime float64, p14 float64, p15 float64) {}

/**
 * Example from the scripts:
 * TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
 * =========================================================
 * ^^ No offense, but Idk how that would really help anyone.
 * As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
 * Known boneMaskTypes'
 * "BONEMASK_HEADONLY"
 * "BONEMASK_HEAD_NECK_AND_ARMS"
 * "BONEMASK_HEAD_NECK_AND_L_ARM"
 * "BONEMASK_HEAD_NECK_AND_R_ARM"
 * p4 known args - 0.0f, 0.5f, 0.25f
 * p5 known args - 0.0f, 0.25f
 * p6 known args - 1 if a global if check is passed.
 * p7 known args - 1 if a global if check is passed.
 * The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
 * =========================================================
 */
func (_client) TaskPlayPhoneGestureAnimation(ped float64, animDict string, animation string, boneMaskType string, p4 float64, p5 float64, p6 bool, p7 bool) {}

func (_client) TaskPutPedDirectlyIntoCover(ped float64, x float64, y float64, z float64, timeout float64, p5 bool, p6 float64, p7 bool, p8 bool, p9 float64, p10 bool) {}

/**
 * from armenian3.c4
 * TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
 */
func (_client) TaskPutPedDirectlyIntoMelee(ped float64, meleeTarget float64, p2 float64, p3 float64, p4 float64, p5 bool) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) TaskRappelDownWall(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64) {}

/**
 * Only appears twice in the scripts.
 * TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
 * TASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
 */
func (_client) TaskRappelFromHeli(ped float64, unused float64) {}

func (_client) TaskReactAndFleePed(ped float64, fleeTarget float64) {}

/**
 * The 2nd param (unused) is not implemented.
 * -----------------------------------------------------------------------
 * The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
 * if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {
 * TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
 * }
 */
func (_client) TaskReloadWeapon(ped float64, unused bool) {}

/**
 * From fm_mission_controller.c:
 * reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
 * vVar28 = {0.094f, 0.02f, -0.005f};
 * vVar29 = {-92.24f, 63.64f, 150.24f};
 * func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
 * set_entity_lod_dist(net_to_ent(uVar30), 500);
 * attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
 * Var31.imm_4 = 1065353216;
 * Var31.imm_5 = 1065353216;
 * Var31.imm_9 = 1065353216;
 * Var31.imm_10 = 1065353216;
 * Var31.imm_14 = 1065353216;
 * Var31.imm_15 = 1065353216;
 * Var31.imm_17 = 1040187392;
 * Var31.imm_18 = 1040187392;
 * Var31.imm_19 = -1;
 * Var32.imm_4 = 1065353216;
 * Var32.imm_5 = 1065353216;
 * Var32.imm_9 = 1065353216;
 * Var32.imm_10 = 1065353216;
 * Var32.imm_14 = 1065353216;
 * Var32.imm_15 = 1065353216;
 * Var32.imm_17 = 1040187392;
 * Var32.imm_18 = 1040187392;
 * Var32.imm_19 = -1;
 * Var31 = 1;
 * Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
 * Var31.imm_2 = "idle";
 * Var31.imm_20 = 1048633;
 * Var31.imm_4 = 0.5f;
 * Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
 * task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
 * set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
 * remove_anim_dict("anim@heists@biolab@");
 */
func (_client) TaskScriptedAnimation(ped float64, p4 float64, p5 float64) (float64,float64,float64) { return 0.0,0.0,0.0}

func (_client) TaskSeekCoverFromPed(ped float64, target float64, duration float64, p3 bool) {}

func (_client) TaskSeekCoverFromPos(ped float64, x float64, y float64, z float64, duration float64, p5 bool) {}

/**
 * from michael2:
 * TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
 * appears to be shorter variation
 * from michael3:
 * TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
 */
func (_client) TaskSeekCoverToCoords(ped float64, x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64, p7 float64, p8 bool) {}

func (_client) TaskSeekCoverToCoverPoint(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 bool) {}

/**
 * I cant believe I have to define this, this is one of the best natives.
 * It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
 * Since it is a task, every time the native is called the ped will stop for a moment.
 */
func (_client) TaskSetBlockingOfNonTemporaryEvents(ped float64, toggle bool) {}

/**
 * p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
 */
func (_client) TaskSetDecisionMaker(ped float64, p1 interface{}) {}

func (_client) TaskSetSphereDefensiveArea(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) TaskShockingEventReact(ped float64, eventHandle float64) {}

/**
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 */
func (_client) TaskShootAtCoord(ped float64, x float64, y float64, z float64, duration float64, firingPattern interface{}) {}

/**
 * //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
 * Entity aimedentity;
 * Player player = PLAYER::PLAYER_ID();
 * PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);
 * //bg is an array of peds
 * TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
 * in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 */
func (_client) TaskShootAtEntity(entity float64, target float64, duration float64, firingPattern interface{}) {}

/**
 * Makes the specified ped shuffle to the next vehicle seat.
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) TaskShuffleToNextVehicleSeat(ped float64, vehicle float64) {}

/**
 * NativeDB Added Parameter 2: BOOL p1
 */
func (_client) TaskSkyDive(ped float64) {}

/**
 * Makes the specified ped flee the specified distance from the specified position.
 */
func (_client) TaskSmartFleeCoord(ped float64, x float64, y float64, z float64, distance float64, time float64, p6 bool, p7 bool) {}

/**
 * Makes a ped run away from another ped (fleeTarget).
 * distance = ped will flee this distance.
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
 */
func (_client) TaskSmartFleePed(ped float64, fleeTarget float64, distance float64, fleeTime float64, p4 bool, p5 bool) {}

/**
 * scenarioName example: "WORLD_HUMAN_GUARD_STAND"
 */
func (_client) TaskStandGuard(ped float64, x float64, y float64, z float64, heading float64, scenarioName string) {}

/**
 * Makes the specified ped stand still for (time) milliseconds.
 */
func (_client) TaskStandStill(ped float64, time float64) {}

/**
 * Also a few more listed at TASK::TASK_START_SCENARIO_IN_PLACE just above.
 * ---------------
 * The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario.
 * The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
 * I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.
 * I have no idea what the last 3 parameters are, but I'll try to find out.
 * -going on the last 3 parameters, they appear to always be "0, 0, 1"
 * p6 -1 also used in scrips
 * p7 used for sitting scenarios
 * p8 teleports ped to position
 */
func (_client) TaskStartScenarioAtPosition(ped float64, scenarioName string, x float64, y float64, z float64, heading float64, duration float64, sittingScenario bool, teleport bool) {}

/**
 * Plays a scenario on a Ped at their current location.
 * unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
 * playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.
 * List of scenarioNames: pastebin.com/6mrYTdQv
 * Also these:
 * WORLD_FISH_FLEE
 * DRIVE
 * WORLD_HUMAN_HIKER
 * WORLD_VEHICLE_ATTRACTOR
 * WORLD_VEHICLE_BICYCLE_MOUNTAIN
 * WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
 * WORLD_VEHICLE_BIKER
 * WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
 * WORLD_VEHICLE_CONSTRUCTION_SOLO
 * WORLD_VEHICLE_DRIVE_PASSENGERS
 * WORLD_VEHICLE_DRIVE_SOLO
 * WORLD_VEHICLE_EMPTY
 * WORLD_VEHICLE_PARK_PARALLEL
 * WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
 * WORLD_VEHICLE_POLICE_BIKE
 * WORLD_VEHICLE_POLICE_CAR
 * WORLD_VEHICLE_POLICE_NEXT_TO_CAR
 * WORLD_VEHICLE_SALTON_DIRT_BIKE
 * WORLD_VEHICLE_TRUCK_LOGS
 */
func (_client) TaskStartScenarioInPlace(ped float64, scenarioName string, unkDelay float64, playEnterAnim bool) {}

/**
 * Makes the ped run to take cover
 */
func (_client) TaskStayInCover(ped float64) {}

/**
 * Stealth kill action name hashes:
 * stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta
 * ...
 * {
 * "ACT_stealth_kill_a",
 * "ACT_stealth_kill_weapon",
 * "ACT_stealth_kill_b",
 * "ACT_stealth_kill_c",
 * "ACT_stealth_kill_d",
 * "ACT_stealth_kill_a_gardener"
 * }
 * Only known script using this native: fbi4_prep2
 * EXAMPLE:
 * ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);
 * Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target
 */
func (_client) TaskStealthKill(killer float64, target float64, actionType interface{}, p3 float64, p4 float64) {}

/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) TaskStopPhoneGestureAnimation(ped float64) {}
/**
 * NativeDB Added Parameter 2: Any p1
 */
func (_client) TaskStopPhoneGestureAnimation(ped float64) {}

/**
 * Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
 * p0 is always 0, p5 is always 1
 * p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
 * Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
 * ```
 * NativeDB Introduced: v2189
 * ```
 */
func (_client) TaskSubmarineGotoAndStop(p0 float64, submarine float64, x float64, y float64, z float64, p5 float64) {}

func (_client) TaskSwapWeapon(ped float64, p1 bool) {}

/**
 * This function is called on peds in vehicles.
 * anim: animation name
 * p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
 * p5: no idea what it does but is usually -1
 */
func (_client) TaskSweepAimEntity(ped float64, anim string, p2 string, p3 string, p4 string, p5 float64, vehicle float64, p7 float64, p8 float64) {}

func (_client) TaskSweepAimPosition(p0 float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, p10 float64) (float64,float64,float64,float64) { return 0.0,0.0,0.0,0.0}

/**
 * TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);
 */
func (_client) TaskSynchronizedScene(ped float64, scene float64, animDictionary string, animationName string, speed float64, speedMultiplier float64, duration float64, flag float64, playbackRate float64, p9 float64) {}

/**
 * In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
 * The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
 * ---
 * It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
 * It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
 * ----------------------------------------------------
 * The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
 * ```
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) TaskThrowProjectile(ped float64, x float64, y float64, z float64) {}

/**
 * used in sequence task
 * both parameters seems to be always 0
 */
func (_client) TaskToggleDuck(p0 bool, p1 bool) {}

/**
 * duration in milliseconds
 */
func (_client) TaskTurnPedToFaceCoord(ped float64, x float64, y float64, z float64, duration float64) {}

/**
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 */
func (_client) TaskTurnPedToFaceEntity(ped float64, entity float64, duration float64) {}

/**
 * Actually has 3 params, not 2.
 * p0: Ped
 * p1: int (or bool?)
 * p2: int
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 */
func (_client) TaskUseMobilePhone(ped float64, p1 float64) {}

func (_client) TaskUseMobilePhoneTimed(ped float64, duration float64) {}

func (_client) TaskUseNearestScenarioChainToCoord(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

func (_client) TaskUseNearestScenarioChainToCoordWarp(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64) {}

/**
 * Updated variables
 * An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
 */
func (_client) TaskUseNearestScenarioToCoord(ped float64, x float64, y float64, z float64, distance float64, duration float64) {}

func (_client) TaskUseNearestScenarioToCoordWarp(ped float64, x float64, y float64, z float64, radius float64, p5 float64) {}

func (_client) TaskVehicleAimAtCoord(ped float64, x float64, y float64, z float64) {}

func (_client) TaskVehicleAimAtPed(ped float64, target float64) {}

/**
 * chases targetEnt fast and aggressively
 * --
 * Makes ped (needs to be in vehicle) chase targetEnt.
 */
func (_client) TaskVehicleChase(driver float64, targetEnt float64) {}

/**
 * info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
 * ---------------------------------------------------------------
 * Passing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.
 * P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.
 * Here the e.g. code I used
 * Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);
 */
func (_client) TaskVehicleDriveToCoord(ped float64, vehicle float64, x float64, y float64, z float64, speed float64, p6 float64, vehicleModel interface{}, drivingMode float64, stopRange float64, p10 float64) {}

func (_client) TaskVehicleDriveToCoordLongrange(ped float64, vehicle float64, x float64, y float64, z float64, speed float64, driveMode float64, stopRange float64) {}

func (_client) TaskVehicleDriveWander(ped float64, vehicle float64, speed float64, drivingStyle float64) {}

/**
 * Makes a ped follow the targetVehicle with <minDistance> in between.
 * note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
 * Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
 * -1 = behind
 * 0 = ahead
 * 1 = left
 * 2 = right
 * 3 = back left
 * 4 = back right
 * if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
 * Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
 */
func (_client) TaskVehicleEscort(ped float64, vehicle float64, targetVehicle float64, mode float64, speed float64, drivingStyle float64, minDistance float64, p7 float64, noRoadsDistance float64) {}

/**
 * Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
 * drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
 */
func (_client) TaskVehicleFollow(driver float64, vehicle float64, targetEntity float64, speed float64, drivingStyle float64, minDistance float64) {}
/**
 * Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
 * drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
 */
func (_client) TaskVehicleFollow(driver float64, vehicle float64, targetEntity float64, speed float64, drivingStyle float64, minDistance float64) {}

/**
 * task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
 * p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
 * p3 = 786468
 * p4 = 0
 * p5 = 16
 * p6 = -1 (angle?)
 * p7/8/9 = usually v3.zero
 * p10 = bool (repeat?)
 * p11 = 1073741824
 * -khorio
 */
func (_client) TaskVehicleFollowWaypointRecording(ped float64, vehicle float64, WPRecording string, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 bool, p9 float64) {}

/**
 * Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
 * WARNING:
 * A behaviorFlag value of 0 will result in a clunky, stupid driver!
 * Recommended settings:
 * speed = 30.0f,
 * behaviorFlag = 156,
 * stoppingRange = 5.0f;
 * If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
 * If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
 * EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
 */
func (_client) TaskVehicleGotoNavmesh(ped float64, vehicle float64, x float64, y float64, z float64, speed float64, behaviorFlag float64, stoppingRange float64) {}

/**
 * pilot, vehicle and altitude are rather self-explanatory.
 * p4: is unused variable in the function.
 * entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
 * 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
 * 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
 * NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
 * NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
 */
func (_client) TaskVehicleHeliProtect(pilot float64, vehicle float64, entityToFollow float64, targetSpeed float64, p4 float64, radius float64, altitude float64, p7 float64) {}

/**
 * missionType: https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
 */
func (_client) TaskVehicleMission(driver float64, vehicle float64, vehicleTarget float64, missionType float64, p4 float64, p5 float64, p6 float64, p7 float64, DriveAgainstTraffic bool) {}

/**
 * See [`TASK_VEHICLE_MISSION`](#\_0x659427E0EF36BCDE).
 */
func (_client) TaskVehicleMissionCoorsTarget(ped float64, vehicle float64, x float64, y float64, z float64, p5 float64, p6 float64, p7 float64, p8 float64, p9 float64, DriveAgainstTraffic bool) {}

/**
 * See [`TASK_VEHICLE_MISSION`](#\_0x659427E0EF36BCDE).
 */
func (_client) TaskVehicleMissionPedTarget(ped float64, vehicle float64, pedTarget float64, missionType float64, maxSpeed float64, drivingStyle float64, minDistance float64, p7 float64, DriveAgainstTraffic bool) {}

/**
 * Modes:
 * 0 - ignore heading
 * 1 - park forward
 * 2 - park backwards
 * Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
 * Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
 */
func (_client) TaskVehiclePark(ped float64, vehicle float64, x float64, y float64, z float64, heading float64, mode float64, radius float64, keepEngineOn bool) {}

/**
 * Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
 * Here's how its used -
 * TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");
 * TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0 -- [[1]] ], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");
 * FYI : Speedo is the name of van in which chop was put in the mission.
 */
func (_client) TaskVehiclePlayAnim(vehicle float64, animationSet string, animationName string) {}

func (_client) TaskVehicleShootAtCoord(ped float64, x float64, y float64, z float64, p4 float64) {}

func (_client) TaskVehicleShootAtPed(ped float64, target float64, p2 float64) {}

/**
 * '1 - brake
 * '3 - brake + reverse
 * '4 - turn left 90 + braking
 * '5 - turn right 90 + braking
 * '6 - brake strong (handbrake?) until time ends
 * '7 - turn left + accelerate
 * '7 - turn right + accelerate
 * '9 - weak acceleration
 * '10 - turn left + restore wheel pos to center in the end
 * '11 - turn right + restore wheel pos to center in the end
 * '13 - turn left + go reverse
 * '14 - turn left + go reverse
 * '16 - crash the game after like 2 seconds :)
 * '17 - keep actual state, game crashed after few tries
 * '18 - game crash
 * '19 - strong brake + turn left/right
 * '20 - weak brake + turn left then turn right
 * '21 - weak brake + turn right then turn left
 * '22 - brake + reverse
 * '23 - accelerate fast
 * '24 - brake
 * '25 - brake turning left then when almost stopping it turns left more
 * '26 - brake turning right then when almost stopping it turns right more
 * '27 - brake until car stop or until time ends
 * '28 - brake + strong reverse acceleration
 * '30 - performs a burnout (brake until stop + brake and accelerate)
 * '31 - accelerate + handbrake
 * '32 - accelerate very strong
 * Seems to be this:
 * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
 */
func (_client) TaskVehicleTempAction(driver float64, vehicle float64, action float64, time float64) {}

func (_client) TaskWanderInArea(ped float64, x float64, y float64, z float64, radius float64, minimalLength float64, timeBetweenWalks float64) {}

/**
 * NativeDB Introduced: v1868
 */
func (_client) TaskWanderSpecific(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * Makes ped walk around the area.
 * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
 */
func (_client) TaskWanderStandard(ped float64, p1 float64, p2 float64) {}

func (_client) TaskWarpPedIntoVehicle(ped float64, vehicle float64, seatIndex float64) {}

/**
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) TaskWrithe(ped float64, target float64, time float64, p3 float64) {}

/**
 * For a full list, see here: pastebin.com/yLNWicUi
 */
func (_client) TerminateAllScriptsWithThisName(scriptName string) {}

func (_client) TerminateThisThread() {}

func (_client) TerminateThread(threadId float64) {}

/**
 * This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
 * This requires these two natives to be called as well to configure the grid: [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#\_0x1C4FC5752BCD8E48) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#\_0x5CE62918F8D703C7).
 * @param toggle Enables or disables the golf putting grid display.
 */
func (_client) TerraingridActivate(toggle bool) {}
/**
 * This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
 * This requires these two natives to be called as well to configure the grid: [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#\_0x1C4FC5752BCD8E48) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#\_0x5CE62918F8D703C7).
 * @param toggle Enables or disables the golf putting grid display.
 */
func (_client) N_0xa356990e161c9e65(toggle bool) {}

/**
 * This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#\_0xA356990E161C9E65) and [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#\_0x1C4FC5752BCD8E48).
 * This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * Old description:
 * Only called in golf and golf_mp\
 * parameters used are\
 * GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
 * @param lowR red value for the lower level
 * @param lowG green value for the lower level
 * @param lowB blue value for the lower level
 * @param lowAlpha alpha value for the lower level
 * @param R red value for the normal level
 * @param G green value for the normal level
 * @param B blue value for the normal level
 * @param Alpha alpha value for the normal level
 * @param highR red value for the upper level
 * @param highG green value for the upper level
 * @param highB blue value for the upper level
 * @param highAlpha alpha value for the upper level
 */
func (_client) TerraingridSetColours(lowR float64, lowG float64, lowB float64, lowAlpha float64, R float64, G float64, B float64, Alpha float64, highR float64, highG float64, highB float64, highAlpha float64) {}
/**
 * This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#\_0xA356990E161C9E65) and [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#\_0x1C4FC5752BCD8E48).
 * This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * Old description:
 * Only called in golf and golf_mp\
 * parameters used are\
 * GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
 * @param lowR red value for the lower level
 * @param lowG green value for the lower level
 * @param lowB blue value for the lower level
 * @param lowAlpha alpha value for the lower level
 * @param R red value for the normal level
 * @param G green value for the normal level
 * @param B blue value for the normal level
 * @param Alpha alpha value for the normal level
 * @param highR red value for the upper level
 * @param highG green value for the upper level
 * @param highB blue value for the upper level
 * @param highAlpha alpha value for the upper level
 */
func (_client) N_0x5ce62918f8d703c7(lowR float64, lowG float64, lowB float64, lowAlpha float64, R float64, G float64, B float64, Alpha float64, highR float64, highG float64, highB float64, highAlpha float64) {}

/**
 * This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#\_0xA356990E161C9E65) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#\_0x5CE62918F8D703C7).
 * This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * @param x Grid center x coord.
 * @param y Grid center y coord.
 * @param z Grid center z coord.
 * @param p3 Not sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.
 * @param rotation Grid rotation (keep between 0.0 and 1.0).
 * @param p5 Offset top/bottom ( not sure about this one, seems weird).
 * @param width Grid width (usually 15.0).
 * @param height Grid height (usually 15.0).
 * @param p8 Not sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.
 * @param scale Zoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).
 * @param glowIntensity glow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).
 * @param normalHeight The z coord for 'normal' height (white grid lines level).
 * @param heightDiff This is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).
 */
func (_client) TerraingridSetParams(x float64, y float64, z float64, p3 float64, rotation float64, p5 float64, width float64, height float64, p8 float64, scale float64, glowIntensity float64, normalHeight float64, heightDiff float64) {}
/**
 * This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#\_0xA356990E161C9E65) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#\_0x5CE62918F8D703C7).
 * This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * @param x Grid center x coord.
 * @param y Grid center y coord.
 * @param z Grid center z coord.
 * @param p3 Not sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.
 * @param rotation Grid rotation (keep between 0.0 and 1.0).
 * @param p5 Offset top/bottom ( not sure about this one, seems weird).
 * @param width Grid width (usually 15.0).
 * @param height Grid height (usually 15.0).
 * @param p8 Not sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.
 * @param scale Zoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).
 * @param glowIntensity glow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).
 * @param normalHeight The z coord for 'normal' height (white grid lines level).
 * @param heightDiff This is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).
 */
func (_client) N_0x1c4fc5752bcd8e48(x float64, y float64, z float64, p3 float64, rotation float64, p5 float64, width float64, height float64, p8 float64, scale float64, glowIntensity float64, normalHeight float64, heightDiff float64) {}

func (_client) TestProbeAgainstAllWater(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64) bool;

func (_client) TestProbeAgainstWater(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) (bool,interface{}) { return false,nil }

func (_client) TestVerticalProbeAgainstAllWater(x float64, y float64, z float64, p3 float64, height float64)  (bool, float64){
	return false,0.0
}

func (_client) TextureDownloadGetName(p0 float64) string;

func (_client) TextureDownloadHasFailed(p0 float64) bool;
func (_client) N_0x5776ed562c134687(p0 float64) bool;

func (_client) TextureDownloadRelease(p0 float64) {}

func (_client) TextureDownloadRequest(FilePath string, Name string, p3 bool) (float64, float64) { return 0.0, 0.0 };

/**
 * Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
 * NativeDB Introduced: v323
 */
func (_client) ThefeedAddTxdRef(txdString1 string, txnString1 string, txdString2 string, txnString2 string) {}
/**
 * Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
 * NativeDB Introduced: v323
 */
func (_client) N_0x317eba71d7543f52(txdString1 string, txnString1 string, txdString2 string, txnString2 string) {}

func (_client) ThefeedClearFrozenPost() {}
func (_client) N_0x80fe4f3ab4e1b62a() {}
func (_client) ThefeedFlushPersistent() {}

/**
 * Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 */
func (_client) ThefeedCommentTeleportPoolOff() {}
/**
 * Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 */
func (_client) N_0xaded7f5748acafe6() {}
/**
 * Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 */
func (_client) ThefeedShowGtaoTooltips() {}

/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 */
func (_client) ThefeedCommentTeleportPoolOn() {}
/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 */
func (_client) N_0x56c8b608cfd49854() {}

/**
 * Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
 */
func (_client) ThefeedDisableLoadingScreenTips() {}
/**
 * Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
 */
func (_client) N_0x32888337579a5970() {}
/**
 * Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
 */
func (_client) ThefeedDisable() {}

/**
 * Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
 */
func (_client) ThefeedDisplayLoadingScreenTips() {}
/**
 * Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
 */
func (_client) N_0x15cfa549788d35ef() {}
/**
 * Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
 */
func (_client) ThefeedEnable() {}

func (_client) ThefeedFlushQueue() {}
func (_client) N_0xa8fdb297a8d25fba() {}

/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 */
func (_client) ThefeedForceRenderOff() {}
/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 */
func (_client) N_0x583049884a2eee3c() {}
/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 */
func (_client) ThefeedHideGtaoTooltips() {}

func (_client) ThefeedForceRenderOn() {}
func (_client) N_0xa13c11e1b5c06bfc() {}

/**
 * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
 */
func (_client) ThefeedFreezeNextPost() {}
/**
 * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
 */
func (_client) N_0xfdec055ab549e328() {}
/**
 * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
 */
func (_client) ThefeedSetNextPostPersistent() {}

/**
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 */
func (_client) ThefeedGetFirstVisibleDeleteRemaining() float64 {
	return 0.0
}
/**
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 */
func (_client) N_0x82352748437638ca() float64 {
	return 0.0
}
/**
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 */
func (_client) GetCurrentNotification() float64 {
	return 0.0
}
/**
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 */
func (_client) ThefeedGetCurrentNotification() float64 {
	return 0.0
}

/**
 * Once called each frame hides all above radar notifications.
 */
func (_client) ThefeedHideThisFrame() {}
/**
 * Once called each frame hides all above radar notifications.
 */
func (_client) N_0x25f87b30c382fca7() {}
/**
 * Once called each frame hides all above radar notifications.
 */
func (_client) HideHudNotificationsThisFrame() {}

func (_client) ThefeedIsPaused() bool;
func (_client) N_0xa9cbfd40b3fa3010() bool;

func (_client) ThefeedOnlyShowTooltips(toggle bool) {}
func (_client) N_0x6f1554b0cc2089fa(toggle bool) {}

func (_client) ThefeedPause() {}
func (_client) N_0xfdb423997fa30340() {}

/**
 * Removes a notification instantly instead of waiting for it to disappear
 */
func (_client) ThefeedRemoveItem(notificationId float64) {}
/**
 * Removes a notification instantly instead of waiting for it to disappear
 */
func (_client) RemoveNotification(notificationId float64) {}

func (_client) ThefeedResetAllParameters() {}
func (_client) N_0xfdd85225b2dea55e() {}
func (_client) ThefeedClearAnimpostfx() {}

func (_client) ThefeedResume() {}
func (_client) N_0xe1cd1e48e025e661() {}

func (_client) ThefeedSetAnimpostfxColor(red float64, green float64, blue float64, alpha float64) {}
func (_client) N_0x17430b918701c342(red float64, green float64, blue float64, alpha float64) {}
func (_client) SetNotificationFlashColor(red float64, green float64, blue float64, alpha float64) {}

/**
 * Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
 */
func (_client) ThefeedSetAnimpostfxCount(count float64) {}
/**
 * Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
 */
func (_client) N_0x17ad8c9706bdd88a(count float64) {}

/**
 * Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
 */
func (_client) ThefeedSetAnimpostfxSound(toggle bool) {}
/**
 * Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
 */
func (_client) N_0x4a0c7c9bb10abb36(toggle bool) {}

/**
 * If true, remove all feed components instantly. Otherwise tween/animate close each component
 */
func (_client) ThefeedSetFlushAnimpostfx(toggle bool) {}
/**
 * If true, remove all feed components instantly. Otherwise tween/animate close each component
 */
func (_client) N_0xbae4f9b97cd43b30(toggle bool) {}

/**
 * From the decompiled scripts:
 * HUD::_92F0DA1E27DB96DC(6);
 * HUD::_92F0DA1E27DB96DC(184);
 * HUD::_92F0DA1E27DB96DC(190);
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 * Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
 */
func (_client) ThefeedSetNextPostBackgroundColor(hudColorIndex float64) {}
/**
 * From the decompiled scripts:
 * HUD::_92F0DA1E27DB96DC(6);
 * HUD::_92F0DA1E27DB96DC(184);
 * HUD::_92F0DA1E27DB96DC(190);
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 * Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
 */
func (_client) N_0x92f0da1e27db96dc(hudColorIndex float64) {}
/**
 * From the decompiled scripts:
 * HUD::_92F0DA1E27DB96DC(6);
 * HUD::_92F0DA1E27DB96DC(184);
 * HUD::_92F0DA1E27DB96DC(190);
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 * Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
 */
func (_client) SetNotificationBackgroundColor(hudColorIndex float64) {}
/**
 * From the decompiled scripts:
 * HUD::_92F0DA1E27DB96DC(6);
 * HUD::_92F0DA1E27DB96DC(184);
 * HUD::_92F0DA1E27DB96DC(190);
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 * Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
 */
func (_client) ThefeedNextPostBackgroundColor(hudColorIndex float64) {}

func (_client) ThefeedSetScriptedMenuHeight(pos float64) {}
func (_client) N_0x55598d21339cb998(pos float64) {}
func (_client) ClearNotificationsPos(pos float64) {}

func (_client) ThefeedSpsExtendWidescreenOff() {}
func (_client) N_0xb695e2cd0a2da9ee() {}
func (_client) ThefeedDisableBaselineOffset() {}

func (_client) ThefeedSpsExtendWidescreenOn() {}
func (_client) N_0xd4438c0564490e63() {}
func (_client) ThefeedEnableBaselineOffset() {}

/**
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
 */
func (_client) Timera() float64 {
	return 0.0
}

func (_client) Timerb() float64 {
	return 0.0
}

/**
 * Gets the current frame time.
 */
func (_client) Timestep() float64 {
	return 0.0
}

func (_client) TitleTextureDownloadRequest(FilePath string, Name string, p2 bool) float64 {
	return 0.0
}
func (_client) N_0x0b203b4afde53a4f(FilePath string, Name string, p2 bool) float64 {
	return 0.0
}

func (_client) ToFloat(value float64) float64 {
	return 0.0
}

func (_client) TogglePausedRenderphases(toggle bool) {}
func (_client) EnableGameplayCam(toggle bool) {}
func (_client) SetFrozenRenderingDisabled(toggle bool) {}

func (_client) ToggleStealthRadar(toggle bool) {}

/**
 * Disabling/enabling a player from getting pickups. From the scripts:
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
 * SET_PLAYER_*
 */
func (_client) ToggleUsePickupsForPlayer(player float64, pickupHash interface{}, toggle bool) {}
/**
 * Disabling/enabling a player from getting pickups. From the scripts:
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
 * SET_PLAYER_*
 */
func (_client) N_0x616093ec6b139dd9(player float64, pickupHash interface{}, toggle bool) {}

func (_client) ToggleVehicleMod(vehicle float64, modType float64, toggle bool) {}

func (_client) TrackObjectVisibility(object float64) {}

/**
 * in script hook .net
 * Vehicle v = ...;
 * Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
 */
func (_client) TrackVehicleVisibility(vehicle float64) {}

/**
 * Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle A vehicle handle.
 * @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
 */
func (_client) TransformSubmarineToVehicle(vehicle float64, instantly bool) {}
/**
 * Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle A vehicle handle.
 * @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
 */
func (_client) N_0x2a69ffd1b42bff9e(vehicle float64, instantly bool) {}
/**
 * Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle A vehicle handle.
 * @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
 */
func (_client) TransformStormbergToRoadVehicle(vehicle float64, instantly bool) {}

/**
 * Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle A vehicle handle.
 * @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
 */
func (_client) TransformVehicleToSubmarine(vehicle float64, instantly bool) {}
/**
 * Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle A vehicle handle.
 * @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
 */
func (_client) N_0xbe4c854ffdb6eebe(vehicle float64, instantly bool) {}
/**
 * Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle A vehicle handle.
 * @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
 */
func (_client) TransformStormbergToWaterVehicle(vehicle float64, instantly bool) {}

/**
 * The backing function for TriggerEvent.
 */
func (_client) TriggerEventInternal(eventName string, eventPayload string, payloadLength float64) {}

/**
 * The backing function for TriggerLatentServerEvent.
 */
func (_client) TriggerLatentServerEventInternal(eventName string, eventPayload string, payloadLength float64, bps float64) {}

/**
 * List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
 */
func (_client) TriggerMusicEvent(eventName string) bool;

func (_client) TriggerScreenblurFadeIn(transitionTime float64) bool;
func (_client) TransitionToBlurred(transitionTime float64) bool;

func (_client) TriggerScreenblurFadeOut(transitionTime float64) bool;
func (_client) TransitionFromBlurred(transitionTime float64) bool;

/**
 * p1 = 6
 */
func (_client) TriggerScriptCrcCheckOnPlayer(player float64, p1 float64, scriptHash interface{}) bool;
/**
 * p1 = 6
 */
func (_client) N_0x46fb3ed415c7641c(player float64, p1 float64, scriptHash interface{}) bool;
/**
 * p1 = 6
 */
func (_client) NetworkIsPlayerInScript(player float64, p1 float64, scriptHash interface{}) bool;

/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 */
func (_client) TriggerScriptEvent(eventGroup float64, eventDataSize float64, playerBits float64) float64 {
	return 0.0
}

/**
 * See TRIGGER_SCRIPT_EVENT
 */
func (_client) TriggerScriptEvent_2(eventGroup float64, eventDataSize float64, playerBits float64) float64 {
	return 0.0
}
/**
 * See TRIGGER_SCRIPT_EVENT
 */
func (_client) N_0xa40cc53df8e50837(eventGroup float64, eventDataSize float64, playerBits float64) float64 {
	return 0.0
}

/**
 * The backing function for TriggerServerEvent.
 */
func (_client) TriggerServerEventInternal(eventName string, eventPayload string, payloadLength float64) {}

/**
 * ... When not in a vehicle
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) TriggerSiren(vehicle float64) {}
/**
 * ... When not in a vehicle
 * ```
 * NativeDB Introduced: v1290
 * ```
 */
func (_client) N_0x66c3fb05206041ba(vehicle float64) {}

func (_client) TriggerSonarBlip(posX float64, posY float64, posZ float64, radius float64, p4 float64) {}
func (_client) N_0x72dd432f3cdfc0ee(posX float64, posY float64, posZ float64, radius float64, p4 float64) {}

func (_client) UgcCancelQuery() {}
func (_client) N_0xe9b99b6853181409() {}

func (_client) UgcClearCreateResult() {}
func (_client) N_0x17440aa15d1d3739() {}

func (_client) UgcClearModifyResult() {}
func (_client) N_0xa1e5e0204a6fcc70() {}

func (_client) UgcClearOfflineQuery() {}
func (_client) N_0x61a885d3f7cfee9a() {}

func (_client) UgcClearQueryResults() {}
func (_client) N_0xba96394a0eecfa65() {}

func (_client) UgcCopyContent() (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x152d90e4c1b4738a() (bool , float64,float64) { return false,0.0,0.0 }

/**
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) UgcCreateContent(data string, dataCount float64, contentName string, description string, tagsCsv string, contentTypeName string, publish bool) bool;
/**
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) N_0xc84527e235fca219(data string, dataCount float64, contentName string, description string, tagsCsv string, contentTypeName string, publish bool) bool;

/**
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) UgcCreateMission(contentName string, description string, tagsCsv string, contentTypeName string, publish bool) bool;
/**
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) N_0xa5efc3e847d60507(contentName string, description string, tagsCsv string, contentTypeName string, publish bool) bool;

func (_client) UgcDidGetSucceed() float64 {
	return 0.0
}
func (_client) N_0x941e5306bcd7c2c7() float64 {
	return 0.0
}

func (_client) UgcGetBookmarkedContent(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xd5a4b59980401588(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) UgcGetCachedDescription(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x40f7e66472df3e5c(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentCategory(p0 float64) float64 {
	return 0.0
}
func (_client) N_0xa7bab11e7c9c6c5a(p0 float64) float64 {
	return 0.0
}
func (_client) GetContentCategory(p0 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentDescriptionHash(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x7cf0448787b23758(p0 float64) float64 {
	return 0.0
}
func (_client) GetContentDescriptionHash(p0 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentFileVersion(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x37025b27d9b658b1(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) GetContentFileVersion(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentHasPlayerBookmarked(p0 float64) bool;
func (_client) N_0x993cbe59d350d225(p0 float64) bool;

func (_client) UgcGetContentHasPlayerRecord(p0 float64) bool;
func (_client) N_0x70ea8da57840f9be(p0 float64) bool;

func (_client) UgcGetContentHash() float64 {
	return 0.0
}
func (_client) N_0x3a17a27d75c74887() float64 {
	return 0.0
}

/**
 * Return the mission id of a job.
 */
func (_client) UgcGetContentId(p0 float64) string;
/**
 * Return the mission id of a job.
 */
func (_client) N_0x55aa95f481d694d2(p0 float64) string;
/**
 * Return the mission id of a job.
 */
func (_client) GetContentId(p0 float64) string;

func (_client) UgcGetContentIsPublished(p0 float64) bool;
func (_client) N_0x3054f114121c21ea(p0 float64) bool;

func (_client) UgcGetContentIsVerified(p0 float64) bool;
func (_client) N_0xa9240a96c74cca13(p0 float64) bool;

func (_client) UgcGetContentLanguage(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x32dd916f3f7c9672(p0 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentName(p0 float64) float64 {
	return 0.0
}
func (_client) N_0xbf09786a7fcab582(p0 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentNum() float64 {
	return 0.0
}
func (_client) N_0xe0a6138401bcb837() float64 {
	return 0.0
}

func (_client) UgcGetContentPath(p0 float64, p1 float64) string;
func (_client) N_0xbaf6babf9e7ccc13(p0 float64, p1 float64) string;
func (_client) UgcGetCloudPath(p0 float64, p1 float64) string;

func (_client) UgcGetContentRating(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x1accfba3d8dab2ee(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentRatingCount(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x759299c5bb31d2a9(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentRatingNegativeCount(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x4e548c0d7ae39ff9(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentRatingPositiveCount(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x87e5c46c187fe0ae(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentTotal() float64 {
	return 0.0
}
func (_client) N_0x769951e2455e2eb5() float64 {
	return 0.0
}

func (_client) UgcGetContentUpdatedDate(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0xcfd115b373c0df63(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcGetContentUserId(p0 float64) string;
func (_client) N_0xcd67ad041a394c9c(p0 float64) string;
func (_client) GetContentUserId(p0 float64) string;
func (_client) GetPlayerAdvancedModifierPrivileges(p0 float64) string;

func (_client) UgcGetContentUserName(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x703f12425eca8bf5(p0 float64) float64 {
	return 0.0
}

func (_client) UgcGetCreateContentId() float64 {
	return 0.0
}
func (_client) N_0xc55a0b40ffb1ed23() float64 {
	return 0.0
}

func (_client) UgcGetCreateResult() float64 {
	return 0.0
}
func (_client) N_0xfbc5e768c7a77a6a() float64 {
	return 0.0
}

func (_client) UgcGetCreatorNum() float64 {
	return 0.0
}
func (_client) N_0x597f8dba9b206fc7() float64 {
	return 0.0
}

func (_client) UgcGetCrewContent(p0 float64, p1 float64, p2 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x9f6e2821885caee2(p0 float64, p1 float64, p2 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) UgcGetFriendContent(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xf9e1ccae8ba4c281(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) UgcGetGetByCategory(p0 float64, p1 float64, p2 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x678bb03c1a3bd51e(p0 float64, p1 float64, p2 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) UgcGetModifyResult() float64 {
	return 0.0
}
func (_client) N_0x5a0a3d1a186a5508() float64 {
	return 0.0
}

func (_client) UgcGetMyContent(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0x3195f8dd0d531052(p0 float64, p1 float64) (bool , float64,float64) { return false,0.0,0.0 }

func (_client) UgcGetQueryResult() float64 {
	return 0.0
}
func (_client) N_0xedf7f927136c224b() float64 {
	return 0.0
}

/**
 * Return the root content id of a job.
 */
func (_client) UgcGetRootContentId(p0 float64) string;
/**
 * Return the root content id of a job.
 */
func (_client) N_0xc0173d6bff4e0348(p0 float64) string;
/**
 * Return the root content id of a job.
 */
func (_client) GetRootContentId(p0 float64) string;

func (_client) UgcHasCreateFinished() bool;
func (_client) N_0x5e24341a7f92a74b() bool;

func (_client) UgcHasGetFinished() bool;
func (_client) N_0x02ada21ea2f6918f() bool;

func (_client) UgcHasModifyFinished() bool;
func (_client) N_0x299ef3c576773506() bool;

func (_client) UgcIsGetting() bool;
func (_client) N_0xd53acdbef24a46e8() bool;

func (_client) UgcIsLanguageSupported(p0 float64) bool;
func (_client) N_0xf53e48461b71eecb(p0 float64) bool;

func (_client) UgcPoliciesMakePrivate(p0 float64) bool;
func (_client) N_0x5cae833b0ee0c500(p0 float64) bool;

func (_client) UgcPublish(contentId string, baseContentId string, contentTypeName string) bool;
func (_client) N_0x1de0f5f50d723caa(contentId string, baseContentId string, contentTypeName string) bool;

func (_client) UgcQueryByContentId(contentId string, latestVersion bool, contentTypeName string) bool;
func (_client) N_0x158ec424f35ec469(contentId string, latestVersion bool, contentTypeName string) bool;

func (_client) UgcQueryByContentIds(count float64, latestVersion bool, contentTypeName string)  (bool, float64){
	return false,0.0
}
func (_client) N_0xc7397a83f7a2a462(count float64, latestVersion bool, contentTypeName string)  (bool, float64){
	return false,0.0
}

func (_client) UgcQueryMyContent(p0 float64, p1 float64, p3 float64, p4 float64, p5 float64)  (bool, float64){
	return false,0.0
}
func (_client) N_0x9bf438815f5d96ea(p0 float64, p1 float64, p3 float64, p4 float64, p5 float64)  (bool, float64){
	return false,0.0
}

func (_client) UgcQueryRecentlyCreatedContent(offset float64, count float64, contentTypeName string, p3 float64) bool;
func (_client) N_0x6d4cb481fac835e8(offset float64, count float64, contentTypeName string, p3 float64) bool;

func (_client) UgcRequestCachedDescription(p0 float64) float64 {
	return 0.0
}
func (_client) N_0x5e0165278f6339ee(p0 float64) float64 {
	return 0.0
}

func (_client) UgcRequestContentDataFromIndex(p0 float64, p1 float64) float64 {
	return 0.0
}
func (_client) N_0x171df6a0c07fb3dc(p0 float64, p1 float64) float64 {
	return 0.0
}

func (_client) UgcRequestContentDataFromParams(contentTypeName string, contentId string, p2 float64, p3 float64, p4 float64) float64 {
	return 0.0
}
func (_client) N_0x7fd2990af016795e(contentTypeName string, contentId string, p2 float64, p3 float64, p4 float64) float64 {
	return 0.0
}

func (_client) UgcSetBookmarked(contentId string, bookmarked bool, contentTypeName string) bool;
func (_client) N_0x274a1519dfc1094f(contentId string, bookmarked bool, contentTypeName string) bool;

func (_client) UgcSetDeleted(p1 bool) (bool , float64,float64) { return false,0.0,0.0 }
func (_client) N_0xd05d1a6c74da3498(p1 bool) (bool , float64,float64) { return false,0.0,0.0 }

/**
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) UgcSetPlayerData(contentId string, rating float64, contentTypeName string) bool;
/**
 * NativeDB Added Parameter 4: Any p3
 */
func (_client) N_0x692d808c34a82143(contentId string, rating float64, contentTypeName string) bool;

func (_client) UgcSetQueryDataFromOffline(p0 bool) {}
func (_client) N_0xf98dde0a8ed09323(p0 bool) {}

func (_client) UgcTextureDownloadRequest(p1 float64, p2 float64, p3 float64, p5 bool) (float64,float64,float64) { return 0.0,0.0,0.0}
func (_client) N_0x308f96458b7087cc(p1 float64, p2 float64, p3 float64, p5 bool) (float64,float64,float64) { return 0.0,0.0,0.0}

/**
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) UgcUpdateContent(contentId string, dataCount float64, contentName string, description string, tagsCsv string, contentTypeName string)  (bool, float64){
	return false,0.0
}
/**
 * NativeDB Added Parameter 8: Any p7
 */
func (_client) N_0x648e7a5434af7969(contentId string, dataCount float64, contentName string, description string, tagsCsv string, contentTypeName string)  (bool, float64){
	return false,0.0
}

/**
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) UgcUpdateMission(contentId string, contentName string, description string, tagsCsv string, contentTypeName string) bool;
/**
 * NativeDB Added Parameter 6: Any p5
 */
func (_client) N_0x4645de9980999e93(contentId string, contentName string, description string, tagsCsv string, contentTypeName string) bool;

func (_client) Ui3dsceneIsAvailable() bool;
func (_client) N_0xd3a10fc7fd8d98cd() bool;

/**
 * All presets can be found in common\data\ui\uiscenes.meta
 */
func (_client) Ui3dscenePushPreset(presetName string) bool;
/**
 * All presets can be found in common\data\ui\uiscenes.meta
 */
func (_client) N_0xf1cea8a4198d8e9a(presetName string) bool;

/**
 * Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
 * U*
 */
func (_client) UiIsSingleplayerPauseMenuActive() bool;
/**
 * Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
 * U*
 */
func (_client) N_0xea2f2061875eed90() bool;

/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 */
func (_client) UnblockDecisionMakerEvent(name interface{}, eventType float64) {}

func (_client) UncuffPed(ped float64) {}

func (_client) UnfreezeRadioStation(radioStation string) {}

/**
 * Called 4 times in the b617d scripts:
 * MISC::_A74802FB8D0B7814("CONTRAILS", 0);
 */
func (_client) UnloadCloudHat(name string, p1 float64) {}
/**
 * Called 4 times in the b617d scripts:
 * MISC::_A74802FB8D0B7814("CONTRAILS", 0);
 */
func (_client) N_0xa74802fb8d0b7814(name string, p1 float64) {}

/**
 * From fm_deathmatch_creator and fm_race_creator:
 * FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
 * FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
 * NativeDB Introduced: v1604
 */
func (_client) UnloadContentChangeSetGroup(hash interface{}) {}

func (_client) UnlockMinimapAngle() {}

func (_client) UnlockMinimapPosition() {}

func (_client) UnlockMissionNewsStory(newsStory float64) {}

/**
 * AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
 */
func (_client) UnlockRadioStationTrackList(radioStation string, trackListName string) {}
/**
 * AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
 */
func (_client) N_0x031acb6aba18c729(radioStation string, trackListName string) {}

/**
 * GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);
 * GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");
 */
func (_client) UnpatchDecalDiffuseMap(decalType float64) {}
/**
 * GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);
 * GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");
 */
func (_client) N_0xb7ed70c49521a61d(decalType float64) {}
/**
 * GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);
 * GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");
 */
func (_client) UndoDecalTextureOverride(decalType float64) {}

func (_client) UnpausePlaybackRecordedVehicle(vehicle float64) {}

/**
 * Does something similar to INTERIOR::DISABLE_INTERIOR.
 * You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.
 */
func (_client) UnpinInterior(interior float64) {}

func (_client) UnpinRopeVertex(ropeId float64, vertex float64) {}

/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 */
func (_client) UnregisterPedheadshot(id float64) {}

/**
 * **This native does absolutely nothing, just a nullsub**
 * ```
 * On last-gen this just runs blr and this func is called by several other functions other then the native's table.
 * ```
 */
func (_client) UnregisterScriptWithAudio() {}

func (_client) UpdateLightsOnEntity(entity float64) {}
func (_client) N_0xdeadc0dedeadc0de(entity float64) {}
func (_client) EntityDescriptionText(entity float64) {}

/**
 * NativeDB Introduced: v1493
 */
func (_client) UpdateLsur(enableMixes bool) {}

/**
 * Transiently updates the entity with the specified mapdata index and entity index.
 * This function supports SDK infrastructure and is not intended to be used directly from your code.
 * @param mapdata A fwMapData index from GET_MAPDATA_FROM_HASH_KEY.
 * @param entity An entity index from GET_ENTITY_INDEX_FROM_MAPDATA.
 * @param entityDef The new entity definition in fwEntityDef format.
 */
func (_client) UpdateMapdataEntity(mapdata float64, entity float64, entityDef: any) {}

func (_client) UpdateNavmeshBlockingObject(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 float64, p6 float64, p7 float64, p8 float64) {}

/**
 * Returns the current status of the onscreen keyboard, and updates the output.
 * Status Codes:
 * -1: Keyboard isn't active
 * 0: User still editing
 * 1: User has finished editing
 * 2: User has canceled editing
 */
func (_client) UpdateOnscreenKeyboard() float64 {
	return 0.0
}

/**
 * See [`SET_PED_HEAD_BLEND_DATA`](#\_0x9414E18B9434C2FE)
 */
func (_client) UpdatePedHeadBlendData(ped float64, shapeMix float64, skinMix float64, thirdMix float64) {}

func (_client) UpdatePlayerTeleport(player float64) bool;
func (_client) N_0xe23d5873c2394c61(player float64) bool;
func (_client) HasPlayerTeleportFinished(player float64) bool;

func (_client) UpdateStatFloat(statHash interface{}, value float64, p2 float64) {}
func (_client) N_0x30a6614c1f7799b8(statHash interface{}, value float64, p2 float64) {}

func (_client) UpdateStatInt(statHash interface{}, value float64, p2 float64) {}
func (_client) N_0x11ff1c80276097ed(statHash interface{}, value float64, p2 float64) {}

func (_client) UpdateTaskAimGunScriptedTarget(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64, p5 bool) {}

func (_client) UpdateTaskHandsUpDuration(ped float64, duration float64) {}

func (_client) UpdateTaskSweepAimEntity(ped float64, entity float64) {}

func (_client) UpdateTaskSweepAimPosition(p0 float64, p1 float64, p2 float64, p3 float64) {}

/**
 * From the b678d decompiled scripts:
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
 */
func (_client) UseParticleFxAsset(name string) {}
/**
 * From the b678d decompiled scripts:
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
 */
func (_client) SetPtfxAssetNextCall(name string) {}
/**
 * From the b678d decompiled scripts:
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
 * GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
 */
func (_client) UseParticleFxAssetNextCall(name string) {}

func (_client) UsePlayerColourInsteadOfTeamColour(toggle bool) {}

func (_client) UseSirenAsHorn(vehicle float64, toggle bool) {}

func (_client) UseStuntCameraThisFrame() {}
func (_client) N_0x6493cf69859b116a() {}

func (_client) UseWaypointRecordingAsAssistedMovementRoute(name string, p1 bool, p2 float64, p3 float64) {}

func (_client) UsingMissionCreator(toggle bool) {}

/**
 * Calculates distance between vectors.
 */
func (_client) Vdist(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) float64 {
	return 0.0
}

/**
 * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
 */
func (_client) Vdist2(x1 float64, y1 float64, z1 float64, x2 float64, y2 float64, z2 float64) float64 {
	return 0.0
}

/**
 * calls from vehicle to net.
 */
func (_client) VehToNet(vehicle float64) float64 {
	return 0.0
}

func (_client) VehicleWaypointPlaybackOverrideSpeed(vehicle float64, speed float64) {}

func (_client) VehicleWaypointPlaybackPause(vehicle float64) {}

func (_client) VehicleWaypointPlaybackResume(vehicle float64) {}

func (_client) VehicleWaypointPlaybackUseDefaultSpeed(vehicle float64) {}

/**
 * Calculates the magnitude of a vector.
 */
func (_client) Vmag(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
 */
func (_client) Vmag2(x float64, y float64, z float64) float64 {
	return 0.0
}

/**
 * Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
 */
func (_client) Wait(ms float64) {}

func (_client) WasCutsceneSkipped() bool;

/**
 * Returns whether or not the currently executing event was canceled.
 * @return A boolean.
 */
func (_client) WasEventCanceled() bool;

func (_client) WasPedKilledByStealth(ped float64) bool;

func (_client) WasPedKilledByTakedown(ped float64) bool;

func (_client) WasPedKnockedOut(ped float64) bool;
func (_client) N_0x61767f73eaceed21(ped float64) bool;

/**
 * Despite this function's name, it simply returns whether the specified handle is a Ped.
 */
func (_client) WasPedSkeletonUpdated(ped float64) bool;

func (_client) WashDecalsFromVehicle(vehicle float64, p1 float64) {}

func (_client) WashDecalsInRange(p0 float64, p1 float64, p2 float64, p3 float64, p4 float64) {}

func (_client) WaterOverrideFadeIn(p0 float64) {}
func (_client) N_0xa8434f1dff41d6e7(p0 float64) {}

func (_client) WaterOverrideFadeOut(p0 float64) {}
func (_client) N_0xc3c221addde31a11(p0 float64) {}

func (_client) WaterOverrideSetOceannoiseminamplitude(minAmplitude float64) {}
func (_client) N_0x31727907b2c43c55(minAmplitude float64) {}

func (_client) WaterOverrideSetOceanwaveamplitude(amplitude float64) {}
func (_client) N_0x405591ec8fd9096d(amplitude float64) {}

func (_client) WaterOverrideSetOceanwavemaxamplitude(maxAmplitude float64) {}
func (_client) N_0xb3e6360dde733e82(maxAmplitude float64) {}

func (_client) WaterOverrideSetOceanwaveminamplitude(minAmplitude float64) {}
func (_client) N_0xf751b16fb32abc1d(minAmplitude float64) {}

func (_client) WaterOverrideSetRipplebumpiness(bumpiness float64) {}
func (_client) N_0x7c9c0b1eeb1f9072(bumpiness float64) {}

func (_client) WaterOverrideSetRippledisturb(disturb float64) {}
func (_client) N_0xb9854dfde0d833d6(disturb float64) {}

func (_client) WaterOverrideSetRipplemaxbumpiness(maxBumpiness float64) {}
func (_client) N_0x9f5e6bb6b34540da(maxBumpiness float64) {}

func (_client) WaterOverrideSetRippleminbumpiness(minBumpiness float64) {}
func (_client) N_0x6216b116083a7cb4(minBumpiness float64) {}

func (_client) WaterOverrideSetShorewaveamplitude(amplitude float64) {}
func (_client) N_0xb8f87ead7533b176(amplitude float64) {}

func (_client) WaterOverrideSetShorewavemaxamplitude(maxAmplitude float64) {}
func (_client) N_0xa7a1127490312c36(maxAmplitude float64) {}

func (_client) WaterOverrideSetShorewaveminamplitude(minAmplitude float64) {}
func (_client) N_0xc3ead29ab273ece8(minAmplitude float64) {}

/**
 * This seems to edit the water wave, intensity around your current location.
 * 0.0f = Normal
 * 1.0f = So Calm and Smooth, a boat will stay still.
 * 3.0f = Really Intense.
 */
func (_client) WaterOverrideSetStrength(strength float64) {}
/**
 * This seems to edit the water wave, intensity around your current location.
 * 0.0f = Normal
 * 1.0f = So Calm and Smooth, a boat will stay still.
 * 3.0f = Really Intense.
 */
func (_client) N_0xc54a08c85ae4d410(strength float64) {}

func (_client) WaypointPlaybackGetIsPaused(p0 float64) bool;

func (_client) WaypointPlaybackOverrideSpeed(p0 float64, p1 float64, p2 bool) {}

func (_client) WaypointPlaybackPause(p0 float64, p1 bool, p2 bool) {}

func (_client) WaypointPlaybackResume(p0 float64, p1 bool, p2 float64, p3 float64) {}

func (_client) WaypointPlaybackStartAimingAtCoord(p0 float64, p1 float64, p2 float64, p3 float64, p4 bool) {}

func (_client) WaypointPlaybackStartAimingAtPed(p0 float64, p1 float64, p2 bool) {}

func (_client) WaypointPlaybackStartShootingAtCoord(p0 float64, p1 float64, p2 float64, p3 float64, p4 bool, p5 float64) {}

func (_client) WaypointPlaybackStartShootingAtPed(p0 float64, p1 float64, p2 bool, p3 float64) {}
func (_client) N_0xe70ba7b90f8390dc(p0 float64, p1 float64, p2 bool, p3 float64) {}

func (_client) WaypointPlaybackStopAimingOrShooting(p0 float64) {}

func (_client) WaypointPlaybackUseDefaultSpeed(p0 float64) {}

/**
 * For a full list of the points, see here: goo.gl/wIH0vn
 */
func (_client) WaypointRecordingGetClosestWaypoint(name string, x float64, y float64, z float64, point float64)  (bool, float64){
	return false,0.0
}

/**
 * For a full list of the points, see here: goo.gl/wIH0vn
 */
func (_client) WaypointRecordingGetCoord(name string, point float64) (bool,interface{}) { return false,nil }

/**
 * For a full list of the points, see here: goo.gl/wIH0vn
 */
func (_client) WaypointRecordingGetNumPoints(name string, points float64)  (bool, float64){
	return false,0.0
}

func (_client) WaypointRecordingGetSpeedAtPoint(name string, point float64) float64 {
	return 0.0
}

/**
 * Does nothing and always returns 0.
 */
func (_client) WithdrawVc(amount float64) float64 {
	return 0.0
}
/**
 * Does nothing and always returns 0.
 */
func (_client) N_0xf70efa14fe091429(amount float64) float64 {
	return 0.0
}

func (_client) WouldEntityBeOccluded(entityModelHash interface{}, x float64, y float64, z float64, p4 bool) bool;

